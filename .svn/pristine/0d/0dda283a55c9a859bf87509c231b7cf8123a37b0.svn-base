Imports System.Data.SqlClient
Imports Microsoft.Office.Interop
Imports System.Environment
Imports NCalc
Imports System.Net.Mail
Imports System.Net.Mime
Imports System.Web

Imports System.Security.Cryptography
Imports System.Text

Public Class fmEstOrd2
    Inherits WineCellar.fmStarter

    Public onCust As String
    Public daItems As New SqlDataAdapter
    Public dsItems As New DataSet
    Public daGen As New SqlDataAdapter
    Public dsGen As New DataSet
    Public DVGen As DataView
    Public daAltShip As New SqlDataAdapter
    Public dsAltShip As New DataSet
    Public DVAltShip As DataView
    Public daRepReq As New SqlDataAdapter
    Public dsRepReq As New DataSet
    Public DVRepReq As DataView
    Public daOrdProd As New SqlDataAdapter
    Public dsOrdProd As New DataSet
    Public dsOrdProdHist As New DataSet
    Public DVOrdProd As DataView
    Public daOrdProdISC As New SqlDataAdapter
    Public dsOrdProdISC As New DataSet
    Public DVOrdProdISC As DataView
    Public DVItems As DataView
    Public dsReps As New DataSet
    Public dsCont As New DataSet
    Public dvCont As DataView
    Public dsDiag As New DataSet
    Public DVDiag As New DataView
    Public daDiag As New SqlDataAdapter
    '****MPF
    'Public dsMat As New DataSet
    Public dsColor As New DataSet
    Public dsFin As New DataSet
    Public dsDefFin As New DataSet
    Public dsPay As New DataSet
    Dim dsStatus As New DataSet
    Dim onZip, onGenZip, onGenCity, onGenState, onGenCountry, onGenCounty As String
    Dim dsZip As New DataSet
    Dim dsship_Zip As New DataSet
    Dim dsRefZip As New DataSet
    Dim dsCountry As New DataSet
    Dim dsShipCountry As New DataSet
    Dim dsStat As New DataSet
    Dim dsContacts As New DataSet
    Dim dsSalesCat As New DataSet
    Dim dsShip As New DataSet
    Dim dsNote As New DataSet
    Dim dsConsult As New DataSet
    Dim dsProdType As New DataSet
    '***Old Dim PDFPath As String = "\\10.0.0.245\pdf\"
    Dim onSalesCat As String = ""
    Dim CustSalesCat As String = ""
    Dim dsforecast As New DataSet
    Dim dsforecastOveride As New DataSet
    Dim dsLostReason As New DataSet
    Dim dsInside As New DataSet
    'Dim dsOutside As New DataSet
    Dim dsTerr As New DataSet
    Dim dsDesigner As New DataSet
    Dim dsSource As New DataSet
    Dim dsParts As New DataSet
    Dim dsDesignType As New DataSet
    Dim cmGen As CurrencyManager
    Dim CheckPic As Boolean = True
    Dim onStatus As String
    Dim JumpedTo As String
    Dim EditTime As Date
    Dim onProd, onMatl, onRef As String
    Dim dsRefPerc As New DataSet
    Dim dsReferral As New DataSet
    Dim onGridRow As Long
    Dim UpChargeForSpeed As Double
    Dim UpChargeForNonSpeed As Double
    Dim onShipExtra As Double
    Public onOrd, onMat, onOrdSource, onStain, onFinish As String
    Dim dsStain As New DataSet
    Dim dsFinish As New DataSet
    Dim UpdatingStain As Boolean = False
    Dim UpdatingFinish As Boolean = False
    Dim UpdatingLacq As Boolean = False
    Dim onLine As String
    Dim onLineSerial As Infragistics.Win.UltraWinGrid.UltraGridRow
    Dim OverNiteOverRide As Double
    Dim UpSellDirty As Boolean = True
    Dim UpSellCheckboxesDirty As Boolean = False
    Dim onItem, onSource As String
    Dim onTaxExempt As Boolean
    Dim UpChargeTableTopOnlyLacq As Double
    Dim lstShipHolds As New ArrayList
    Dim onControl As String
    Dim onDesignerLockDown As Byte = CheckSecurity("Designer Lock Down")
    Dim onDesStatus As String
    'Dim fmContact As fmContactList
    Public ShowContactsOnAdd As Boolean = True

    Friend WithEvents Panel1 As System.Windows.Forms.Panel
    Friend WithEvents Panel2 As System.Windows.Forms.Panel
    Friend WithEvents MenuItem19 As System.Windows.Forms.MenuItem
    Friend WithEvents gEmails As Infragistics.Win.UltraWinGrid.UltraGrid
    Friend WithEvents tabNotes As Infragistics.Win.UltraWinTabControl.UltraTabControl
    Friend WithEvents UltraTabSharedControlsPage5 As Infragistics.Win.UltraWinTabControl.UltraTabSharedControlsPage
    Friend WithEvents UltraTabPageControl20 As Infragistics.Win.UltraWinTabControl.UltraTabPageControl
    Friend WithEvents UltraTabPageControl21 As Infragistics.Win.UltraWinTabControl.UltraTabPageControl
    Friend WithEvents GridNotes As Infragistics.Win.UltraWinGrid.UltraGrid
    Friend WithEvents tEmailBody As System.Windows.Forms.WebBrowser
    Friend WithEvents bResendEmail As Infragistics.Win.Misc.UltraButton
    Friend WithEvents Label3 As System.Windows.Forms.Label
    Friend WithEvents cbEmailOSRShipments As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents tpSignOffSent_Note As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpSignOffSent_By As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpSignOffSent_Date As Infragistics.Win.UltraWinEditors.UltraDateTimeEditor
    Friend WithEvents tpSignOffSent As System.Windows.Forms.CheckBox
    Friend WithEvents UltraLabel154 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents lProdUser As System.Windows.Forms.Label
    Friend WithEvents bProdUserPast As System.Windows.Forms.Button
    Friend WithEvents bProdUserFuture As System.Windows.Forms.Button
    Friend WithEvents tpRoomNotReady_Note As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpRoomNotReady_By As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpRoomNotReady_Date As Infragistics.Win.UltraWinEditors.UltraDateTimeEditor
    Friend WithEvents tpRoomNotReady As System.Windows.Forms.CheckBox
    Friend WithEvents UltraLabel155 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tpWaitingSignoff_Note As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpWaitingSignoff_By As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpWaitingSignoff_Date As Infragistics.Win.UltraWinEditors.UltraDateTimeEditor
    Friend WithEvents tpWaitingSignoff As System.Windows.Forms.CheckBox
    Friend WithEvents lWaitingSignoff As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tpRoomRevision_Note As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpRoomRevision_By As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpRoomRevision_Date As Infragistics.Win.UltraWinEditors.UltraDateTimeEditor
    Friend WithEvents tpRoomRevision As System.Windows.Forms.CheckBox
    Friend WithEvents UltraLabel156 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tpToFactory_Note As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpToFactory_By As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpToFactory_Date As Infragistics.Win.UltraWinEditors.UltraDateTimeEditor
    Friend WithEvents tpToFactory As System.Windows.Forms.CheckBox
    Friend WithEvents UltraLabel161 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tpDesignComplete_Note As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpDesignComplete_By As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpDesignComplete_Date As Infragistics.Win.UltraWinEditors.UltraDateTimeEditor
    Friend WithEvents tpDesignComplete As System.Windows.Forms.CheckBox
    Friend WithEvents UltraLabel160 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tpDesignStart_Note As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpDesignStart_By As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpDesignStart_Date As Infragistics.Win.UltraWinEditors.UltraDateTimeEditor
    Friend WithEvents tpDesignStart As System.Windows.Forms.CheckBox
    Friend WithEvents UltraLabel159 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tpAllClear_Note As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpAllClear_By As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpAllClear_Date As Infragistics.Win.UltraWinEditors.UltraDateTimeEditor
    Friend WithEvents tpAllClear As System.Windows.Forms.CheckBox
    Friend WithEvents UltraLabel158 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tpSignoffRec_Note As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpSignoffRec_By As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpSignoffRec_Date As Infragistics.Win.UltraWinEditors.UltraDateTimeEditor
    Friend WithEvents tpSignoffRec As System.Windows.Forms.CheckBox
    Friend WithEvents UltraLabel157 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tpStatus As System.Windows.Forms.TextBox
    Friend WithEvents UltraLabel162 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tStatus2 As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tInstallerDate As Infragistics.Win.UltraWinEditors.UltraDateTimeEditor
    Friend WithEvents tpMustship_By As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpCommitted_By As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpArt_By As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpEstComp_By As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpSignedStain_By As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents gbPropCommit As System.Windows.Forms.GroupBox
    Friend WithEvents pcDays As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel128 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents pcNotes As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel163 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents pcDate As Infragistics.Win.UltraWinSchedule.UltraCalendarCombo
    Friend WithEvents tEstCompleteCalc As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpAddedClosedWeek As System.Windows.Forms.CheckBox
    Friend WithEvents tpProdNoteFlag As System.Windows.Forms.CheckBox
    Friend WithEvents tpOKBillEarly As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents UltraLabel164 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tpProdNote As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents cbPCASignOffSent As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents tPCASignOffRecDate As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tPCASignOffRecBy As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents cbPCAsignOffRec As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents tPCASignOffSentDate As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tPCASignOffSentBy As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents pcReport As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents UltraTabPageControl22 As Infragistics.Win.UltraWinTabControl.UltraTabPageControl
    Friend WithEvents pDiag As System.Windows.Forms.Panel
    Friend WithEvents pDiag0 As System.Windows.Forms.Panel
    Friend WithEvents UltraLabel104 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tDiagSent As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tDiagEmail As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel166 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tDiagRecDate As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tDiagRecBy As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tDiagRec As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents tDiagDenDate As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tDiagDenBy As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tDiagAccDate As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tDiagAccBy As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tDiagDen As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents tDiagAcc As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents tDiagAccNote As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tDiagNextSend As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel165 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tDiagDenNote As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tDiagNote As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel167 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tDiagEOSR As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents tDiagEShipTo As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents tDiagESoldTo As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents tCCSource As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents UltraLabel168 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tDiagEISR As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents UltraLabel169 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tOrdContSerial As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents pContacts As System.Windows.Forms.PictureBox
    Friend WithEvents tDefLacq As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents pContRefresh As System.Windows.Forms.PictureBox
    Friend WithEvents pContJump As System.Windows.Forms.PictureBox
    Friend WithEvents tpCDRDown_note As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpCDRDown_by As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpCDRDown_date As Infragistics.Win.UltraWinEditors.UltraDateTimeEditor
    Friend WithEvents tpCDRDown As System.Windows.Forms.CheckBox
    Friend WithEvents UltraLabel171 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tpKitDown_note As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpKitDown_by As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpKitDown_date As Infragistics.Win.UltraWinEditors.UltraDateTimeEditor
    Friend WithEvents tpKitDown As System.Windows.Forms.CheckBox
    Friend WithEvents UltraLabel170 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents MenuItem20 As System.Windows.Forms.MenuItem
    Friend WithEvents MenuItem21 As System.Windows.Forms.MenuItem
    Friend WithEvents tpFactComp_Note As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpFactComp_By As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpFactComp_Date As Infragistics.Win.UltraWinEditors.UltraDateTimeEditor
    Friend WithEvents tpFactComp As System.Windows.Forms.CheckBox
    Friend WithEvents UltraLabel172 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents MenuItem22 As System.Windows.Forms.MenuItem
    Friend WithEvents lDesReq As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents Button2 As System.Windows.Forms.Button
    Friend WithEvents tDiagStatus As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents lEstShipEmail As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents chEstEmailShip As System.Windows.Forms.CheckBox
    Friend WithEvents UltraLabel173 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents MenuItem23 As System.Windows.Forms.MenuItem
    Friend WithEvents tFieldConsultant As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents UltraLabel175 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents pShipHold As System.Windows.Forms.Panel
    Friend WithEvents Label2 As System.Windows.Forms.Label
    Friend WithEvents lShipHold As System.Windows.Forms.Label
    Friend WithEvents MenuItem24 As System.Windows.Forms.MenuItem
    Friend WithEvents UltraLabel174 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tConsultType As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents UltraDataSource2 As Infragistics.Win.UltraWinDataSource.UltraDataSource
    Friend WithEvents tpCellarComp_note As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpCellarComp_by As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpCellarComp_date As Infragistics.Win.UltraWinEditors.UltraDateTimeEditor
    Friend WithEvents tpCellarComp As System.Windows.Forms.CheckBox
    Friend WithEvents UltraLabel176 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraTabPageControl23 As Infragistics.Win.UltraWinTabControl.UltraTabPageControl
    Friend WithEvents ugDesignNotes As Infragistics.Win.UltraWinGrid.UltraGrid
    Friend WithEvents Button3 As System.Windows.Forms.Button
    Friend WithEvents Label8 As System.Windows.Forms.Label
    Friend WithEvents ToolTip1 As System.Windows.Forms.ToolTip
    Dim onRepReq As Integer

#Region " Windows Form Designer generated code "

    Public Sub New()
        MyBase.New()

        'This call is required by the Windows Form Designer.
        InitializeComponent()

        'Add any initialization after the InitializeComponent() call

    End Sub

    'Form overrides dispose to clean up the component list.
    Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)
        If disposing Then
            If Not (components Is Nothing) Then
                components.Dispose()
            End If
        End If
        MyBase.Dispose(disposing)
    End Sub

    'Required by the Windows Form Designer
    Private components As System.ComponentModel.IContainer

    'NOTE: The following procedure is required by the Windows Form Designer
    'It can be modified using the Windows Form Designer.  
    'Do not modify it using the code editor.
    Friend WithEvents UltraCalcManager1 As Infragistics.Win.UltraWinCalcManager.UltraCalcManager
    Friend WithEvents UltraTextEditor1 As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents MenuItem1 As System.Windows.Forms.MenuItem
    Friend WithEvents MainMenu1 As System.Windows.Forms.MainMenu
    Friend WithEvents bReplacement As Infragistics.Win.Misc.UltraButton
    Friend WithEvents DScust As System.Data.DataSet
    Friend WithEvents UltraLabel4 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tord_for As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents bAddQuote As Infragistics.Win.Misc.UltraButton
    Friend WithEvents bAddOrder As Infragistics.Win.Misc.UltraButton
    Friend WithEvents Tab1 As Infragistics.Win.UltraWinTabControl.UltraTabControl
    Friend WithEvents UltraTabSharedControlsPage1 As Infragistics.Win.UltraWinTabControl.UltraTabSharedControlsPage
    Friend WithEvents TabControl As Infragistics.Win.UltraWinTabControl.UltraTabPageControl
    Friend WithEvents cb5Perc As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents tSoldCustId As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tSoldCounty As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tSold_Name As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents bPhoneFind As Infragistics.Win.Misc.UltraButton
    Friend WithEvents tsold_cell As Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit
    Friend WithEvents tsold_fax As Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit
    Friend WithEvents tsold_phone2 As Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit
    Friend WithEvents tsold_phone1 As Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit
    Friend WithEvents tsold_addr3 As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents lsold_addr3 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tProvince As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents lProvince As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tCountry As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents tSold_City As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents UltraLabel16 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tCustId As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents tsold_email As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel18 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel19 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents lsold_fax As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents lsold_phone2 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tsold_zip As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents lsold_zip As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents Label1 As System.Windows.Forms.Label
    Friend WithEvents tsold_state As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents lsold_state As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents lsold_city As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tsold_addr2 As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents lsold_addr2 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tsold_addr1 As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents lSold_addr1 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel8 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tsold_company As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel9 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel6 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel5 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraTabPageControl2 As Infragistics.Win.UltraWinTabControl.UltraTabPageControl
    Friend WithEvents TabItems As Infragistics.Win.UltraWinTabControl.UltraTabControl
    Friend WithEvents UltraTabSharedControlsPage2 As Infragistics.Win.UltraWinTabControl.UltraTabSharedControlsPage
    Friend WithEvents tTotal As Infragistics.Win.UltraWinTabControl.UltraTabPageControl
    Friend WithEvents UltraButton3 As Infragistics.Win.Misc.UltraButton
    Friend WithEvents tTotal2 As Infragistics.Win.UltraWinEditors.UltraCurrencyEditor
    Friend WithEvents tShipTotal As Infragistics.Win.UltraWinEditors.UltraCurrencyEditor
    Friend WithEvents tTaxTotal As Infragistics.Win.UltraWinEditors.UltraCurrencyEditor
    Friend WithEvents tGrandTotal As Infragistics.Win.UltraWinEditors.UltraCurrencyEditor
    Friend WithEvents UltraLabel55 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel53 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel52 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel51 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tForecastOveride As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents tRet As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tCon As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tMF As Infragistics.Win.UltraWinEditors.UltraNumericEditor
    Friend WithEvents tPicture As Infragistics.Win.UltraWinEditors.UltraPictureBox
    Friend WithEvents tLineNotes As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel39 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel33 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents Grid1 As Infragistics.Win.UltraWinGrid.UltraGrid
    Friend WithEvents UltraTabPageControl4 As Infragistics.Win.UltraWinTabControl.UltraTabPageControl
    Friend WithEvents UltraLabel66 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tStageDate As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel65 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tShipDate As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel61 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tBilledDate As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tSource As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents UltraLabel25 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel49 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tGenFinish As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel7 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel24 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tPO As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tDesigner As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents UltraLabel15 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents GroupBox1 As System.Windows.Forms.GroupBox
    Friend WithEvents tShipDiscount As Infragistics.Win.UltraWinEditors.UltraCurrencyEditor
    Friend WithEvents UltraLabel59 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tThirdPartyName As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel14 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents cbThirdParty As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents tCallPhone As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tCallName As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel13 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel12 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents cbCall As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents tTurns As Infragistics.Win.UltraWinEditors.UltraNumericEditor
    Friend WithEvents tSteps As Infragistics.Win.UltraWinEditors.UltraNumericEditor
    Friend WithEvents cbSteps As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents cbTurns As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents cbLiftGate As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents cbAlert As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents cbSmallTruck As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents cbTwoMan As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents cbInside As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents cbGated As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents tShipExtra As Infragistics.Win.UltraWinEditors.UltraCurrencyEditor
    Friend WithEvents UltraLabel22 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel44 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tUpBy As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel43 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tUpOn As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel42 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tCreate As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel41 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tDispDate As Infragistics.Win.UltraWinEditors.UltraDateTimeEditor
    Friend WithEvents tOutside As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents UltraLabel37 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tInside As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents UltraLabel36 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraTabPageControl5 As Infragistics.Win.UltraWinTabControl.UltraTabPageControl
    Friend WithEvents bAddPayment As Infragistics.Win.Misc.UltraButton
    Friend WithEvents UltraLabel64 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tPayOrdTot As Infragistics.Win.UltraWinEditors.UltraCurrencyEditor
    Friend WithEvents UltraLabel63 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tPayTot As Infragistics.Win.UltraWinEditors.UltraCurrencyEditor
    Friend WithEvents UltraLabel60 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tBalance As Infragistics.Win.UltraWinEditors.UltraCurrencyEditor
    Friend WithEvents PayGrid As Infragistics.Win.UltraWinGrid.UltraGrid
    Friend WithEvents UltraTabPageControl6 As Infragistics.Win.UltraWinTabControl.UltraTabPageControl
    Friend WithEvents bAddShipment As Infragistics.Win.Misc.UltraButton
    Friend WithEvents UltraLabel62 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tShipTot As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents ShipGrid As Infragistics.Win.UltraWinGrid.UltraGrid
    Friend WithEvents UltraTabPageControl7 As Infragistics.Win.UltraWinTabControl.UltraTabPageControl
    Friend WithEvents bAddNote As Infragistics.Win.Misc.UltraButton
    Friend WithEvents tNote As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraTabPageControl8 As Infragistics.Win.UltraWinTabControl.UltraTabPageControl
    Friend WithEvents UltraButton2 As Infragistics.Win.Misc.UltraButton
    Friend WithEvents ListPDF As System.Windows.Forms.ListBox
    Friend WithEvents UltraTabPageControl1 As Infragistics.Win.UltraWinTabControl.UltraTabPageControl
    Friend WithEvents tForecastDate As Infragistics.Win.UltraWinEditors.UltraDateTimeEditor
    Friend WithEvents UltraLabel67 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents lLostReason As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tLostReason As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents UltraLabel50 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tForecast As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents tOrd As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel1 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents File1 As System.Windows.Forms.OpenFileDialog
    Friend WithEvents UltraLabel46 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents DefaultPage As Infragistics.Win.UltraWinEditors.UltraOptionSet
    Friend WithEvents UltraLabel40 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents MenuItem3 As System.Windows.Forms.MenuItem
    Friend WithEvents bPrintOrder As Infragistics.Win.Misc.UltraButton
    Friend WithEvents tForecastNote As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel68 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel69 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents cbResponsible As Infragistics.Win.UltraWinEditors.UltraOptionSet
    Friend WithEvents UltraMonthViewMulti1 As Infragistics.Win.UltraWinSchedule.UltraMonthViewMulti
    Friend WithEvents UltraButton4 As Infragistics.Win.Misc.UltraButton
    Friend WithEvents GridStatus As Infragistics.Win.UltraWinGrid.UltraGrid
    Friend WithEvents lSoldcounty As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents MenuItem6 As System.Windows.Forms.MenuItem
    Friend WithEvents oHistory As Infragistics.Win.UltraWinEditors.UltraOptionSet
    Friend WithEvents gbCheckOff As System.Windows.Forms.GroupBox
    Friend WithEvents cbISR As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents tISRUser As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tISRDate As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents cbDesReq As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents cbDesigner As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents tDesDate As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tDesUser As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents cbPriority As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents cbToArt As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents tCADate As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tCAUser As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents cbCellarArt As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents tAcctOpen As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents cbDefThirdParty As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents tDefThirdPartyName As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents bOpenPdf As Infragistics.Win.Misc.UltraButton
    Friend WithEvents ImageList1 As System.Windows.Forms.ImageList
    Friend WithEvents UltraButton5 As Infragistics.Win.Misc.UltraButton
    Friend WithEvents bDocList As Infragistics.Win.Misc.UltraButton
    Friend WithEvents pDiscount As System.Windows.Forms.Panel
    Friend WithEvents tdiscProdType As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents UltraLabel56 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tDiscMatl As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents UltraLabel70 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel71 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents lDiscSymbol As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents oDiscountType As Infragistics.Win.UltraWinEditors.UltraOptionSet
    Friend WithEvents tDiscVal As Infragistics.Win.UltraWinEditors.UltraNumericEditor
    Friend WithEvents tDesType As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents UltraLabel47 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel72 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tCreateBy As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tRefName As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents tRefAddr3 As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel73 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tRefCity As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents tRefZip As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel74 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tRefState As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel75 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel76 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tRefAddr2 As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel77 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tRefAddr1 As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel78 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tRefCompany As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel80 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel81 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tRefPerc As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents UltraLabel79 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel82 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tRefFee As Infragistics.Win.UltraWinEditors.UltraCurrencyEditor
    Friend WithEvents UltraTextEditor2 As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel83 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraTabControl1 As Infragistics.Win.UltraWinTabControl.UltraTabControl
    Friend WithEvents UltraTabSharedControlsPage3 As Infragistics.Win.UltraWinTabControl.UltraTabSharedControlsPage
    Friend WithEvents UltraTabPageControl9 As Infragistics.Win.UltraWinTabControl.UltraTabPageControl
    Friend WithEvents UltraTabPageControl10 As Infragistics.Win.UltraWinTabControl.UltraTabPageControl
    Friend WithEvents tSpecialNotes As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents GridRef As Infragistics.Win.UltraWinGrid.UltraGrid
    Friend WithEvents UltraTabPageControl11 As Infragistics.Win.UltraWinTabControl.UltraTabPageControl
    Friend WithEvents Label4 As System.Windows.Forms.Label
    Friend WithEvents pAltShip As System.Windows.Forms.Panel
    Friend WithEvents tAltShipCounty As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tAltShipCell As Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit
    Friend WithEvents tAltShipFax As Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit
    Friend WithEvents tAltShipPhone2 As Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit
    Friend WithEvents tAltShipPhone1 As Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit
    Friend WithEvents tAltShipCountry As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents tAltShipAddr3 As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tAltShipProvince As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tAltShipCity As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents tAltShipCustId As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents tAltShipEmail As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tAltShipZip As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tAltShipState As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tAltShipAddr2 As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tAltShipAddr1 As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tAltShipCompany As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tAltShipName As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents lAltShipCounty As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents lAltShipAddr3 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents lAltShipProvince As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents lAltShipEmail As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents lAltShipCell As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents lAltShipFax As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents lAltShipPhone2 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents lAltShipPhone1 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents lAltShipZip As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents lAltShipState As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents lAltShipCity As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents lAltShipAddr2 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents lAltShipAddr1 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents lAltShipCountry As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents lAltShipCompany As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents lAltShipName As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents lAltShipCustId As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents chUseAltShip As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents MenuItem10 As System.Windows.Forms.MenuItem
    Friend WithEvents lTax As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents mnFunctions As System.Windows.Forms.MenuItem
    Friend WithEvents cbOvernite As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents cbIntlShip As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents tSkids As Infragistics.Win.UltraWinEditors.UltraNumericEditor
    Friend WithEvents UltraLabel58 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents lMarginBelow0 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraButton6 As Infragistics.Win.Misc.UltraButton
    Friend WithEvents UltraLabel84 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tDesignAuto As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents bGridStatusSize As System.Windows.Forms.Button
    Friend WithEvents cbCollect As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents MenuItem9 As System.Windows.Forms.MenuItem
    Friend WithEvents tStatus As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraTabPageControl3 As Infragistics.Win.UltraWinTabControl.UltraTabPageControl
    Friend WithEvents lDiscApproved As System.Windows.Forms.Label
    Friend WithEvents MenuItem11 As System.Windows.Forms.MenuItem
    Friend WithEvents lBOMImport As System.Windows.Forms.Label
    Friend WithEvents tGenMaterial As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents UltraLabel48 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents Label5 As System.Windows.Forms.Label
    Friend WithEvents pItem As System.Windows.Forms.Panel
    Friend WithEvents tTaxable As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents UltraLabel26 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tProdType As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents tShipUnit As Infragistics.Win.UltraWinEditors.UltraCurrencyEditor
    Friend WithEvents lShipUnit As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tMaterial As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents lMaterial As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tMPF As Infragistics.Win.UltraWinEditors.UltraNumericEditor
    Friend WithEvents tDisc As Infragistics.Win.UltraWinEditors.UltraCurrencyEditor
    Friend WithEvents tUnitBase As Infragistics.Win.UltraWinEditors.UltraCurrencyEditor
    Friend WithEvents tBase As Infragistics.Win.UltraWinEditors.UltraCurrencyEditor
    Friend WithEvents tFixture As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents tPriceCalc As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel38 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel35 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel32 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel31 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tSalesCat As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents UltraLabel34 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tShipFlat As Infragistics.Win.UltraWinEditors.UltraCurrencyEditor
    Friend WithEvents UltraLabel23 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tTerr As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents cbShipCustPickup As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents bDoPrice As Infragistics.Win.Misc.UltraButton
    Friend WithEvents cbShipWhiteGlove As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents MenuItem13 As System.Windows.Forms.MenuItem
    Friend WithEvents mnCreateDate As System.Windows.Forms.MenuItem
    Friend WithEvents mnCreateUser As System.Windows.Forms.MenuItem
    Friend WithEvents MenuItem14 As System.Windows.Forms.MenuItem
    Friend WithEvents UltraButton8 As Infragistics.Win.Misc.UltraButton
    Friend WithEvents MenuItem8 As System.Windows.Forms.MenuItem
    Friend WithEvents Label6 As System.Windows.Forms.Label
    Friend WithEvents lMaterialSummary As System.Windows.Forms.Label
    Friend WithEvents UltraButton9 As Infragistics.Win.Misc.UltraButton
    Friend WithEvents Button1 As System.Windows.Forms.Button
    Friend WithEvents tDefStain As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents UltraLabel86 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents lLine As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents lBase As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel87 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tFloating As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents UltraLabel88 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents MenuItem16 As System.Windows.Forms.MenuItem
    Friend WithEvents UltraLabel89 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents gbOrder As System.Windows.Forms.GroupBox
    Friend WithEvents cbCustWTerms As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents oCustWTerms As Infragistics.Win.UltraWinEditors.UltraOptionSet
    Friend WithEvents UltraLabel90 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel91 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tStainAdd As Infragistics.Win.UltraWinEditors.UltraNumericEditor
    Friend WithEvents tLacqAdd As Infragistics.Win.UltraWinEditors.UltraNumericEditor
    Friend WithEvents tRefSpecialNote As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents lShipVal As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tShipVal As Infragistics.Win.UltraWinEditors.UltraCurrencyEditor
    Friend WithEvents cbIsSplit As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents UltraLabel45 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents cbShipActive As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents UltraLabel92 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tCustOrd As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tTabTitle As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel93 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraTabPageControl12 As Infragistics.Win.UltraWinTabControl.UltraTabPageControl
    Friend WithEvents UpTree As Infragistics.Win.UltraWinTree.UltraTree
    Friend WithEvents UpType As Infragistics.Win.UltraWinTree.UltraTree
    Friend WithEvents tWidth As Infragistics.Win.UltraWinEditors.UltraNumericEditor
    Friend WithEvents tHeight As Infragistics.Win.UltraWinEditors.UltraNumericEditor
    Friend WithEvents tDepth As Infragistics.Win.UltraWinEditors.UltraNumericEditor
    Friend WithEvents UltraLabel94 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel95 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel96 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents bUpsellSendToQuote As Infragistics.Win.Misc.UltraButton
    Friend WithEvents UltraLabel97 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents bNotesShowAll As Infragistics.Win.Misc.UltraButton
    Friend WithEvents MenuItem2 As System.Windows.Forms.MenuItem
    Friend WithEvents UltraLabel98 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tLostDate As Infragistics.Win.UltraWinEditors.UltraDateTimeEditor
    Friend WithEvents cbFactoryInstall As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents bDocPrint As Infragistics.Win.Misc.UltraButton
    Friend WithEvents tUpSellSqFt As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel99 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraTabPageControl13 As Infragistics.Win.UltraWinTabControl.UltraTabPageControl
    Friend WithEvents gsEmailSend As Infragistics.Win.Misc.UltraButton
    Friend WithEvents gsCopy As Infragistics.Win.Misc.UltraButton
    Friend WithEvents gsCounty As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents gsCell As Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit
    Friend WithEvents gsFax As Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit
    Friend WithEvents gsPhone2 As Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit
    Friend WithEvents gsPhone1 As Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit
    Friend WithEvents gsCountry As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents gsAddr3 As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents gsProvince As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents gsCity As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents gsCustId As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents gsEmail As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents gsZip As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents Label7 As System.Windows.Forms.Label
    Friend WithEvents gsState As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents gsAddr2 As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents gsAddr1 As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents gsCompany As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents gsName As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents gsTaxInstalls As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents UltraLabel118 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents gsTaxExempt As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents gsExemptNo As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents gsTaxRate As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel119 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents gsShipTaxPerc As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel120 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents gslPhone As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents gslCounty As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents gslAddr3 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents gslProvince As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents gslEmail As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents gslCell As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents gslFax As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents gslPhone2 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents gslZip As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents gslState As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents gslCity As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents gslAddr2 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents gslAddr1 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents gslCountry As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents gslCompany As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents gslName As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents gslCustID As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents bUpsellUncheck As Infragistics.Win.Misc.UltraButton
    Friend WithEvents gsExemptAddr As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents pTotal As System.Windows.Forms.Panel
    Friend WithEvents gsShipHold As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents pShipping As System.Windows.Forms.Panel
    Friend WithEvents cbFactoryInstallReq As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents tInstallDate As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tInstallUser As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents lOldAltTax As System.Windows.Forms.Label
    Friend WithEvents lOldTaxRate As System.Windows.Forms.Label
    Friend WithEvents bWizard As Infragistics.Win.Misc.UltraButton
    Friend WithEvents tForecastPerc As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel2 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraDataSource1 As Infragistics.Win.UltraWinDataSource.UltraDataSource
    Friend WithEvents tShipPromo As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents UltraLabel3 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents bShipPromoAdd As Infragistics.Win.Misc.UltraButton
    Friend WithEvents tBottles As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel10 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents MenuItem4 As System.Windows.Forms.MenuItem
    Friend WithEvents lReferral As System.Windows.Forms.Label
    Friend WithEvents UltraLabel11 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tContNote As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel17 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tContAddr3 As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel20 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tContCity As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents tContZip As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel21 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tContState As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel27 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel28 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tContAddr2 As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel29 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel30 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tContCompany As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel54 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel57 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents pContact As System.Windows.Forms.Panel
    Friend WithEvents tContName As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tContPayee As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents tContType As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel85 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents gContacts As Infragistics.Win.UltraWinGrid.UltraGrid
    Friend WithEvents bAddArch As Infragistics.Win.Misc.UltraButton
    Friend WithEvents bAddHVAC As Infragistics.Win.Misc.UltraButton
    Friend WithEvents bAddInst As Infragistics.Win.Misc.UltraButton
    Friend WithEvents bAddBuilder As Infragistics.Win.Misc.UltraButton
    Friend WithEvents bAddOther As Infragistics.Win.Misc.UltraButton
    Friend WithEvents tContAddr1 As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents bContFind As Infragistics.Win.Misc.UltraButton
    Friend WithEvents tContPhone1 As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tContEmail As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel100 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tContFax As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel101 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tContCell As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel102 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tContPhone2 As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel103 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents bUpSave As Infragistics.Win.Misc.UltraButton
    Friend WithEvents cbAddon As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents oShipToType As Infragistics.Win.UltraWinEditors.UltraOptionSet
    Friend WithEvents cbEmailShipment As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents gsShipNotify As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents bDocDDP As Infragistics.Win.Misc.UltraButton
    Friend WithEvents tPriorityNote As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel106 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents ddDesignStatus As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents bCopyItems As Infragistics.Win.Misc.UltraButton
    Friend WithEvents MenuItem5 As System.Windows.Forms.MenuItem
    Friend WithEvents tRackHeight As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents bAddOrdMod As Infragistics.Win.Misc.UltraButton
    Friend WithEvents pOrdMod As System.Windows.Forms.Panel
    Friend WithEvents tOrdMod As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents bShipNotify As Infragistics.Win.Misc.UltraButton
    Friend WithEvents cbAddOnNoEmail As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    Friend WithEvents MenuItem7 As System.Windows.Forms.MenuItem
    Friend WithEvents tTrackBoxes As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents MenuItem12 As System.Windows.Forms.MenuItem
    Friend WithEvents UltraLabel108 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel109 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tThirdPartyAcct As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tThirdPartyShipVia As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents ddThirdPartyFill As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents UltraTabPageControl14 As Infragistics.Win.UltraWinTabControl.UltraTabPageControl
    Friend WithEvents UltraTabSharedControlsPage4 As Infragistics.Win.UltraWinTabControl.UltraTabSharedControlsPage
    Friend WithEvents UltraTabPageControl15 As Infragistics.Win.UltraWinTabControl.UltraTabPageControl
    Friend WithEvents UltraTabPageControl16 As Infragistics.Win.UltraWinTabControl.UltraTabPageControl
    Friend WithEvents UltraTabPageControl17 As Infragistics.Win.UltraWinTabControl.UltraTabPageControl
    Friend WithEvents UltraTabPageControl18 As Infragistics.Win.UltraWinTabControl.UltraTabPageControl
    Friend WithEvents pRepReq As System.Windows.Forms.Panel
    Friend WithEvents UltraButton1 As Infragistics.Win.Misc.UltraButton
    Friend WithEvents UltraLabel110 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents rrName As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents UltraLabel111 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel112 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents rrCountry As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents UltraLabel113 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel114 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel115 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel116 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel117 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel121 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel122 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel123 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel124 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel125 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents rrCompany As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel126 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel127 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents rrCounty As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents rrCell As Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit
    Friend WithEvents rrFax As Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit
    Friend WithEvents rrPhone2 As Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit
    Friend WithEvents rrAddr3 As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents rrProvince As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents rrCity As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents rrEmail As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents rrZip As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents rrState As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents rrAddr2 As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents rrAddr1 As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents rrAddRepReq As System.Windows.Forms.LinkLabel
    Friend WithEvents lRepReq As System.Windows.Forms.Label
    Friend WithEvents pRR1 As System.Windows.Forms.Panel
    Friend WithEvents UltraGrid1 As Infragistics.Win.UltraWinGrid.UltraGrid
    Friend WithEvents UltraLabel129 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel130 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel131 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel132 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel133 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel134 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel135 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel136 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel137 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel138 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel139 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel140 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tRFRestocking As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tRFShipping As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents rbRFSendImmediately As Infragistics.Win.UltraWinEditors.UltraOptionSet
    Friend WithEvents rbRFSendingReplacement As Infragistics.Win.UltraWinEditors.UltraOptionSet
    Friend WithEvents rbRFRestocking As Infragistics.Win.UltraWinEditors.UltraOptionSet
    Friend WithEvents rbRFShipping As Infragistics.Win.UltraWinEditors.UltraOptionSet
    Friend WithEvents rbRFCreditCard As Infragistics.Win.UltraWinEditors.UltraOptionSet
    Friend WithEvents rbRFQC As Infragistics.Win.UltraWinEditors.UltraOptionSet
    Friend WithEvents rbRFClaim As Infragistics.Win.UltraWinEditors.UltraOptionSet
    Friend WithEvents tRFCarrier As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tRFTracking As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraTabPageControl19 As Infragistics.Win.UltraWinTabControl.UltraTabPageControl
    Friend WithEvents pProduction As System.Windows.Forms.Panel
    Friend WithEvents tInstallNotes As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tInstaller As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents UltraLabel107 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel105 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel141 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tpMustShipNote As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tpCommittedNote As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel142 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tpEstCompNote As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel143 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tpArtNote As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel144 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents grInstallServiceCalls As Infragistics.Win.UltraWinGrid.UltraGrid
    Friend WithEvents tpMustShip As Infragistics.Win.UltraWinEditors.UltraDateTimeEditor
    Friend WithEvents tpCommitted As Infragistics.Win.UltraWinEditors.UltraDateTimeEditor
    Friend WithEvents tpEstComp As Infragistics.Win.UltraWinEditors.UltraDateTimeEditor
    Friend WithEvents tpArt As Infragistics.Win.UltraWinEditors.UltraDateTimeEditor
    Friend WithEvents bEmailInstallNote As Infragistics.Win.Misc.UltraButton
    Friend WithEvents MenuItem15 As System.Windows.Forms.MenuItem
    Friend WithEvents MenuItem17 As System.Windows.Forms.MenuItem
    Friend WithEvents UltraLabel145 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tpSignStain As System.Windows.Forms.ComboBox
    Friend WithEvents tpSignStainDt As Infragistics.Win.UltraWinEditors.UltraDateTimeEditor
    Friend WithEvents bCopyInstall As Infragistics.Win.Misc.UltraButton
    Friend WithEvents tabRepReq As Infragistics.Win.UltraWinTabControl.UltraTabControl
    Friend WithEvents UltraLabel146 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents rbRFCredit As Infragistics.Win.UltraWinEditors.UltraOptionSet
    Friend WithEvents UltraLabel147 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel148 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel149 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel150 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents UltraLabel151 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents dtRFReturnedDate As Infragistics.Win.UltraWinEditors.UltraDateTimeEditor
    Friend WithEvents tRFNameOnReturn As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tRFItemsReturned As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents tRFCondition As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraButton7 As Infragistics.Win.Misc.UltraButton
    Friend WithEvents UltraButton10 As Infragistics.Win.Misc.UltraButton
    Friend WithEvents UltraButton11 As Infragistics.Win.Misc.UltraButton
    Friend WithEvents UltraButton12 As Infragistics.Win.Misc.UltraButton
    Friend WithEvents UltraLabel152 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents tDefFinish As Infragistics.Win.UltraWinGrid.UltraCombo
    Friend WithEvents MenuItem18 As System.Windows.Forms.MenuItem
    Friend WithEvents UltraButton13 As Infragistics.Win.Misc.UltraButton
    Friend WithEvents tPropStage As Infragistics.Win.UltraWinEditors.UltraTextEditor
    Friend WithEvents UltraLabel153 As Infragistics.Win.Misc.UltraLabel
    Friend WithEvents bImportBOMLookup As Infragistics.Win.Misc.UltraButton
    <System.Diagnostics.DebuggerStepThrough()> Private Sub InitializeComponent()
        Me.components = New System.ComponentModel.Container()
        Dim UltraGridBand16 As Infragistics.Win.UltraWinGrid.UltraGridBand = New Infragistics.Win.UltraWinGrid.UltraGridBand("Band 0", -1)
        Dim UltraGridColumn182 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("User")
        Dim UltraGridColumn183 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("Created", -1, Nothing, 0, Infragistics.Win.UltraWinGrid.SortIndicator.Ascending, false)
        Dim UltraGridColumn184 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("Status")
        Dim UltraGridColumn185 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("Note")
        Dim UltraGridColumn186 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("Amount")
        Dim Appearance1 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraGridBand9 As Infragistics.Win.UltraWinGrid.UltraGridBand = New Infragistics.Win.UltraWinGrid.UltraGridBand("Band 0", -1)
        Dim UltraGridColumn123 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_note_serial")
        Dim UltraGridColumn124 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_note_ord_gen_serial")
        Dim UltraGridColumn125 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_note_rev")
        Dim UltraGridColumn126 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_note_type")
        Dim UltraGridColumn127 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_note_user")
        Dim UltraGridColumn128 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_note_date")
        Dim UltraGridColumn129 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_note")
        Dim UltraGridColumn130 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_note_ship_release")
        Dim UltraGridColumn131 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_note_pay_method")
        Dim UltraGridColumn132 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_note_ship_change")
        Dim UltraGridColumn133 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_note_admin")
        Dim UltraGridColumn134 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_note_ship_hold")
        Dim UltraGridColumn135 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_note_to_do_serial")
        Dim Appearance6 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraGridBand10 As Infragistics.Win.UltraWinGrid.UltraGridBand = New Infragistics.Win.UltraWinGrid.UltraGridBand("Band 0", -1)
        Dim UltraGridColumn136 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("es_serial")
        Dim UltraGridColumn137 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("es_date")
        Dim UltraGridColumn138 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("es_to")
        Dim UltraGridColumn139 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("es_from")
        Dim UltraGridColumn140 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("es_type")
        Dim UltraGridColumn141 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("es_email")
        Dim UltraGridColumn142 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("es_ord_serial")
        Dim UltraGridColumn143 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("es_ord_rev")
        Dim UltraGridColumn144 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("es_ord_type")
        Dim Appearance7 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance8 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance9 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance10 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance11 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance12 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance35 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance38 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance41 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance44 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance50 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraGridBand11 As Infragistics.Win.UltraWinGrid.UltraGridBand = New Infragistics.Win.UltraWinGrid.UltraGridBand("Band 0", -1)
        Dim UltraGridColumn145 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_note_serial")
        Dim UltraGridColumn146 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_note_ord_gen_serial")
        Dim UltraGridColumn147 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_note_rev")
        Dim UltraGridColumn148 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_note_type")
        Dim UltraGridColumn149 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_note_user")
        Dim UltraGridColumn150 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_note_date")
        Dim UltraGridColumn151 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_note")
        Dim UltraGridColumn152 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_note_ship_release")
        Dim UltraGridColumn153 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_note_pay_method")
        Dim UltraGridColumn154 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_note_ship_change")
        Dim UltraGridColumn155 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_note_admin")
        Dim UltraGridColumn156 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_note_ship_hold")
        Dim UltraGridColumn157 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_note_to_do_serial")
        Dim Appearance2 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance3 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance4 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim ValueListItem1 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim ValueListItem2 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim ValueListItem3 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim ValueListItem4 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim ValueListItem5 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim ValueListItem6 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim ValueListItem7 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim ValueListItem8 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim ValueListItem9 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim ValueListItem10 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim ValueListItem11 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim ValueListItem12 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim ValueListItem13 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim ValueListItem14 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim ValueListItem15 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim ValueListItem16 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim UltraGridBand14 As Infragistics.Win.UltraWinGrid.UltraGridBand = New Infragistics.Win.UltraWinGrid.UltraGridBand("Band 0", -1)
        Dim UltraGridColumn164 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("orri_serial")
        Dim UltraGridColumn165 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("orri_orr_serial")
        Dim UltraGridColumn166 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("orri_qty")
        Dim UltraGridColumn167 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("orri_itm")
        Dim UltraGridColumn168 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("orri_itm_code")
        Dim UltraGridColumn169 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("orri_reason")
        Dim UltraGridColumn170 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("orri_stock")
        Dim UltraGridColumn171 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("orri_reshipped")
        Dim UltraGridColumn172 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("orri_replaced")
        Dim UltraGridColumn173 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("orri_inspect")
        Dim Appearance34 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim ValueListItem17 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim ValueListItem18 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim ValueListItem19 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim Appearance36 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance13 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance204 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraGridBand3 As Infragistics.Win.UltraWinGrid.UltraGridBand = New Infragistics.Win.UltraWinGrid.UltraGridBand("ord_itm", -1)
        Dim UltraGridColumn6 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_serial")
        Dim UltraGridColumn7 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_ord_serial")
        Dim UltraGridColumn8 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_type")
        Dim UltraGridColumn9 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_rev")
        Dim UltraGridColumn10 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_line")
        Dim UltraGridColumn11 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_group")
        Dim UltraGridColumn12 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_qty")
        Dim Appearance205 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraGridColumn13 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_item_code")
        Dim UltraGridColumn14 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_desc", -1, Nothing, 0, Infragistics.Win.UltraWinGrid.SortIndicator.Descending, false)
        Dim UltraGridColumn15 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_unt_sell")
        Dim Appearance206 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraGridColumn16 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_unt_ship")
        Dim UltraGridColumn17 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_unt_base")
        Dim UltraGridColumn18 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_mpf")
        Dim UltraGridColumn19 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_markup")
        Dim UltraGridColumn20 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_disc")
        Dim UltraGridColumn21 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_disc_perc")
        Dim UltraGridColumn22 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_base_price")
        Dim UltraGridColumn23 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_taxable")
        Dim UltraGridColumn24 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_fixture")
        Dim UltraGridColumn25 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_sel_material")
        Dim UltraGridColumn26 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("itm_img")
        Dim UltraGridColumn27 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_mat_code")
        Dim UltraGridColumn28 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_fin_code")
        Dim UltraGridColumn29 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_price_method")
        Dim UltraGridColumn30 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_ship")
        Dim UltraGridColumn31 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_shipped")
        Dim UltraGridColumn32 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_prod_type")
        Dim UltraGridColumn33 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_from_ord_itm_serial")
        Dim UltraGridColumn34 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_forecast_overide")
        Dim UltraGridColumn35 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_order_id")
        Dim UltraGridColumn36 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_note")
        Dim UltraGridColumn37 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_mat_color")
        Dim UltraGridColumn38 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_up_color")
        Dim UltraGridColumn39 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_disc_type")
        Dim UltraGridColumn40 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_disc_val")
        Dim UltraGridColumn41 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_disc_amt")
        Dim Appearance207 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraGridColumn42 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_is_disc")
        Dim UltraGridColumn43 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_is_up")
        Dim UltraGridColumn44 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_disc_prod")
        Dim UltraGridColumn45 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_disc_matl")
        Dim UltraGridColumn46 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_user")
        Dim UltraGridColumn47 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_updated")
        Dim UltraGridColumn48 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_is_perc_price")
        Dim UltraGridColumn49 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_perc_price")
        Dim UltraGridColumn50 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_perc_prodtypes")
        Dim UltraGridColumn51 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_perc_itemcodes")
        Dim UltraGridColumn52 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_margin_factor")
        Dim UltraGridColumn53 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_change_base")
        Dim UltraGridColumn54 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_bottle_type")
        Dim UltraGridColumn55 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_stain_bottles")
        Dim UltraGridColumn56 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_lacq_bottles")
        Dim UltraGridColumn57 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_bottle_search")
        Dim UltraGridColumn58 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_wood_factor")
        Dim UltraGridColumn59 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_ship_flat")
        Dim UltraGridColumn60 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_bom_import")
        Dim UltraGridColumn61 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_created")
        Dim UltraGridColumn62 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_created_by")
        Dim UltraGridColumn63 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_acct_lock")
        Dim UltraGridColumn64 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_acct_total")
        Dim UltraGridColumn65 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_stain_serial")
        Dim UltraGridColumn66 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_finish_serial")
        Dim UltraGridColumn67 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_lacquer")
        Dim UltraGridColumn68 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_lacq3")
        Dim UltraGridColumn69 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_stain_bottles_add")
        Dim UltraGridColumn70 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_lacq_bottles_add")
        Dim UltraGridColumn71 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_ship_value")
        Dim UltraGridColumn72 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_group_do")
        Dim UltraGridColumn73 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_width")
        Dim UltraGridColumn74 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_height")
        Dim UltraGridColumn75 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_depth")
        Dim UltraGridColumn76 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_width_req")
        Dim UltraGridColumn77 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_height_req")
        Dim UltraGridColumn78 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_depth_req")
        Dim UltraGridColumn79 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("itm_prod_tool_tip")
        Dim UltraGridColumn80 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_wizard_serial")
        Dim UltraGridColumn81 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_install_min")
        Dim UltraGridColumn82 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_install_use")
        Dim UltraGridColumn83 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_class")
        Dim UltraGridColumn84 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_price_track_inches")
        Dim UltraGridColumn85 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_lacquer_old")
        Dim UltraGridColumn86 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_itm_retail")
        Dim UltraGridColumn87 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("Total", 0)
        Dim Appearance208 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance209 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance210 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance211 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance212 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance14 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance15 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance16 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance17 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance18 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance19 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance20 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance21 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance22 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance23 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance33 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraGridBand4 As Infragistics.Win.UltraWinGrid.UltraGridBand = New Infragistics.Win.UltraWinGrid.UltraGridBand("Band 0", -1)
        Dim UltraGridColumn88 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("Column 0")
        Dim UltraDataColumn1 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("Column 0")
        Dim Appearance39 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraGridBand5 As Infragistics.Win.UltraWinGrid.UltraGridBand = New Infragistics.Win.UltraWinGrid.UltraGridBand("Band 0", -1)
        Dim UltraGridColumn89 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_stat_date")
        Dim UltraGridColumn90 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_stat_user")
        Dim UltraGridColumn91 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_stat_stat")
        Dim UltraGridColumn92 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_stat_source")
        Dim Appearance173 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance175 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance176 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance37 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim DateButton1 As Infragistics.Win.UltraWinSchedule.CalendarCombo.DateButton = New Infragistics.Win.UltraWinSchedule.CalendarCombo.DateButton()
        Dim Appearance191 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance190 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance188 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim ValueListItem33 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim ValueListItem34 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim Appearance189 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance151 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance166 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance40 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance170 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance169 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance168 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance167 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance165 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance164 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim ValueListItem22 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim ValueListItem23 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim ValueListItem24 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim Appearance42 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance43 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim ValueListItem25 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim ValueListItem26 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim ValueListItem27 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim Appearance177 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance46 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance47 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraTab1 As Infragistics.Win.UltraWinTabControl.UltraTab = New Infragistics.Win.UltraWinTabControl.UltraTab()
        Dim UltraTab2 As Infragistics.Win.UltraWinTabControl.UltraTab = New Infragistics.Win.UltraWinTabControl.UltraTab()
        Dim UltraTab3 As Infragistics.Win.UltraWinTabControl.UltraTab = New Infragistics.Win.UltraWinTabControl.UltraTab()
        Dim Appearance172 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance174 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance48 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance49 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim ValueListItem28 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim ValueListItem29 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim Appearance51 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance52 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance202 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance203 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraGridBand12 As Infragistics.Win.UltraWinGrid.UltraGridBand = New Infragistics.Win.UltraWinGrid.UltraGridBand("Band 0", -1)
        Dim UltraGridColumn158 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("cust_ship_name")
        Dim UltraGridColumn159 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("cust_ship_via")
        Dim UltraGridColumn160 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("cust_ship_acct")
        Dim UltraGridColumn161 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("cust_ship_default")
        Dim Appearance55 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance56 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance57 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraGridBand13 As Infragistics.Win.UltraWinGrid.UltraGridBand = New Infragistics.Win.UltraWinGrid.UltraGridBand("Band 0", -1)
        Dim UltraGridColumn162 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ship_promo_serial")
        Dim UltraGridColumn163 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ship_promo")
        Dim Appearance58 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance59 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance60 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance61 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance62 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance63 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance64 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraGridBand6 As Infragistics.Win.UltraWinGrid.UltraGridBand = New Infragistics.Win.UltraWinGrid.UltraGridBand("Band 0", -1)
        Dim UltraGridColumn93 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("pay_serial")
        Dim UltraGridColumn94 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("pay_ord_serial")
        Dim UltraGridColumn95 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("pay_date")
        Dim UltraGridColumn96 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("pay_applied")
        Dim UltraGridColumn97 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("pay_method")
        Dim UltraGridColumn98 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("pay_itm_amt")
        Dim Appearance65 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance66 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraGridColumn99 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("pay_num")
        Dim UltraGridColumn100 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("pay_sec_code")
        Dim UltraGridColumn101 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("pay_exp_date")
        Dim UltraGridColumn102 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("pay_auth_code")
        Dim Appearance67 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance68 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance69 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance70 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance71 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance72 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance73 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance25 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraGridBand7 As Infragistics.Win.UltraWinGrid.UltraGridBand = New Infragistics.Win.UltraWinGrid.UltraGridBand("Band 0", -1)
        Dim UltraGridColumn103 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ship_date")
        Dim UltraGridColumn104 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ship_via")
        Dim UltraGridColumn105 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ship_track")
        Dim UltraGridColumn106 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ship_status")
        Dim UltraGridColumn107 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ship_status_date")
        Dim UltraGridColumn108 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ship_status_signature")
        Dim UltraGridColumn109 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ship_boxes")
        Dim UltraGridColumn110 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ship_note")
        Dim UltraGridColumn111 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ship_cost")
        Dim UltraGridColumn112 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ship_declared")
        Dim UltraGridColumn113 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("Band 1")
        Dim UltraGridColumn114 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("Jump", 0)
        Dim UltraGridBand8 As Infragistics.Win.UltraWinGrid.UltraGridBand = New Infragistics.Win.UltraWinGrid.UltraGridBand("Band 1", -1)
        Dim UltraGridColumn115 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ship_itm_serial")
        Dim UltraGridColumn116 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ship_itm_ship_serial")
        Dim UltraGridColumn117 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ship_itm_ord_serial")
        Dim UltraGridColumn118 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ship_itm_ord_rev")
        Dim UltraGridColumn119 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ship_itm_ord_itm_serial")
        Dim UltraGridColumn120 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ship_itm_code")
        Dim UltraGridColumn121 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ship_itm_desc")
        Dim UltraGridColumn122 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ship_itm_qty")
        Dim Appearance26 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance27 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance28 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance29 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance30 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance31 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance32 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance113 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraTab22 As Infragistics.Win.UltraWinTabControl.UltraTab = New Infragistics.Win.UltraWinTabControl.UltraTab()
        Dim UltraTab23 As Infragistics.Win.UltraWinTabControl.UltraTab = New Infragistics.Win.UltraWinTabControl.UltraTab()
        Dim UltraTab25 As Infragistics.Win.UltraWinTabControl.UltraTab = New Infragistics.Win.UltraWinTabControl.UltraTab()
        Dim Appearance82 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance83 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance5 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance84 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance85 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance86 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance154 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance88 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Override1 As Infragistics.Win.UltraWinTree.Override = New Infragistics.Win.UltraWinTree.Override()
        Dim Override2 As Infragistics.Win.UltraWinTree.Override = New Infragistics.Win.UltraWinTree.Override()
        Dim Override3 As Infragistics.Win.UltraWinTree.Override = New Infragistics.Win.UltraWinTree.Override()
        Dim UltraTab4 As Infragistics.Win.UltraWinTabControl.UltraTab = New Infragistics.Win.UltraWinTabControl.UltraTab()
        Dim Appearance89 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance90 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraTab5 As Infragistics.Win.UltraWinTabControl.UltraTab = New Infragistics.Win.UltraWinTabControl.UltraTab()
        Dim Appearance91 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance92 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraTab6 As Infragistics.Win.UltraWinTabControl.UltraTab = New Infragistics.Win.UltraWinTabControl.UltraTab()
        Dim Appearance93 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance94 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraTab7 As Infragistics.Win.UltraWinTabControl.UltraTab = New Infragistics.Win.UltraWinTabControl.UltraTab()
        Dim Appearance95 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance96 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance162 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance186 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance163 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance187 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance160 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance185 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance161 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance184 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance53 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance74 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance152 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance153 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance150 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance87 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance183 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance171 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance45 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance54 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance78 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance80 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance81 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance159 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance75 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance76 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance77 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance192 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraGridBand15 As Infragistics.Win.UltraWinGrid.UltraGridBand = New Infragistics.Win.UltraWinGrid.UltraGridBand("Band 0", -1)
        Dim UltraGridColumn174 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_prod_isc_serial")
        Dim UltraGridColumn175 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_prod_isc_ord_serial")
        Dim UltraGridColumn176 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_prod_isc_rev")
        Dim UltraGridColumn177 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_prod_isc_type")
        Dim UltraGridColumn178 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_prod_isc_date")
        Dim UltraGridColumn179 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_prod_isc_who")
        Dim UltraGridColumn180 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_prod_isc_dt")
        Dim UltraGridColumn181 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_prod_isc_note")
        Dim Appearance178 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance179 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance180 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance181 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance182 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance97 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance79 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance197 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance201 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance199 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance198 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim EditorButton1 As Infragistics.Win.UltraWinEditors.EditorButton = New Infragistics.Win.UltraWinEditors.EditorButton()
        Dim Appearance195 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance196 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance200 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(fmEstOrd2))
        Dim Appearance98 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance24 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance99 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance100 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance101 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance102 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance103 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance104 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance105 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance106 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance107 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance108 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance109 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance110 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraGridBand1 As Infragistics.Win.UltraWinGrid.UltraGridBand = New Infragistics.Win.UltraWinGrid.UltraGridBand("Band 0", -1)
        Dim UltraGridColumn1 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("cont_type")
        Dim UltraGridColumn2 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("ord_cont_payee")
        Dim Appearance111 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance112 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraGridBand2 As Infragistics.Win.UltraWinGrid.UltraGridBand = New Infragistics.Win.UltraWinGrid.UltraGridBand("Band 0", -1)
        Dim UltraGridColumn3 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("cust_serial")
        Dim UltraGridColumn4 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("cust_id")
        Dim UltraGridColumn5 As Infragistics.Win.UltraWinGrid.UltraGridColumn = New Infragistics.Win.UltraWinGrid.UltraGridColumn("cust_name")
        Dim ValueListItem30 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim ValueListItem31 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim ValueListItem32 As Infragistics.Win.ValueListItem = New Infragistics.Win.ValueListItem()
        Dim Appearance114 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance115 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance116 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraTab8 As Infragistics.Win.UltraWinTabControl.UltraTab = New Infragistics.Win.UltraWinTabControl.UltraTab()
        Dim Appearance117 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance118 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraTab9 As Infragistics.Win.UltraWinTabControl.UltraTab = New Infragistics.Win.UltraWinTabControl.UltraTab()
        Dim Appearance119 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance120 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraTab10 As Infragistics.Win.UltraWinTabControl.UltraTab = New Infragistics.Win.UltraWinTabControl.UltraTab()
        Dim Appearance121 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance122 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraTab11 As Infragistics.Win.UltraWinTabControl.UltraTab = New Infragistics.Win.UltraWinTabControl.UltraTab()
        Dim Appearance123 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance124 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraTab12 As Infragistics.Win.UltraWinTabControl.UltraTab = New Infragistics.Win.UltraWinTabControl.UltraTab()
        Dim Appearance125 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance126 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraTab13 As Infragistics.Win.UltraWinTabControl.UltraTab = New Infragistics.Win.UltraWinTabControl.UltraTab()
        Dim Appearance127 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance128 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraTab14 As Infragistics.Win.UltraWinTabControl.UltraTab = New Infragistics.Win.UltraWinTabControl.UltraTab()
        Dim Appearance129 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance130 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraTab15 As Infragistics.Win.UltraWinTabControl.UltraTab = New Infragistics.Win.UltraWinTabControl.UltraTab()
        Dim Appearance131 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance132 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraTab16 As Infragistics.Win.UltraWinTabControl.UltraTab = New Infragistics.Win.UltraWinTabControl.UltraTab()
        Dim Appearance133 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance134 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraTab17 As Infragistics.Win.UltraWinTabControl.UltraTab = New Infragistics.Win.UltraWinTabControl.UltraTab()
        Dim Appearance135 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance136 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraTab18 As Infragistics.Win.UltraWinTabControl.UltraTab = New Infragistics.Win.UltraWinTabControl.UltraTab()
        Dim Appearance137 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance138 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance139 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraTab19 As Infragistics.Win.UltraWinTabControl.UltraTab = New Infragistics.Win.UltraWinTabControl.UltraTab()
        Dim Appearance140 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance141 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraTab24 As Infragistics.Win.UltraWinTabControl.UltraTab = New Infragistics.Win.UltraWinTabControl.UltraTab()
        Dim Appearance193 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance194 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraDataColumn2 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_serial")
        Dim UltraDataColumn3 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_ord_serial")
        Dim UltraDataColumn4 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_type")
        Dim UltraDataColumn5 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_rev")
        Dim UltraDataColumn6 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_line")
        Dim UltraDataColumn7 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_group")
        Dim UltraDataColumn8 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_qty")
        Dim UltraDataColumn9 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_item_code")
        Dim UltraDataColumn10 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_desc")
        Dim UltraDataColumn11 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_unt_sell")
        Dim UltraDataColumn12 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_unt_ship")
        Dim UltraDataColumn13 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_unt_base")
        Dim UltraDataColumn14 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_mpf")
        Dim UltraDataColumn15 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_markup")
        Dim UltraDataColumn16 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_disc")
        Dim UltraDataColumn17 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_disc_perc")
        Dim UltraDataColumn18 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_base_price")
        Dim UltraDataColumn19 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_taxable")
        Dim UltraDataColumn20 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_fixture")
        Dim UltraDataColumn21 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_sel_material")
        Dim UltraDataColumn22 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("itm_img")
        Dim UltraDataColumn23 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_mat_code")
        Dim UltraDataColumn24 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_fin_code")
        Dim UltraDataColumn25 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_price_method")
        Dim UltraDataColumn26 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_ship")
        Dim UltraDataColumn27 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_shipped")
        Dim UltraDataColumn28 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_prod_type")
        Dim UltraDataColumn29 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_from_ord_itm_serial")
        Dim UltraDataColumn30 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_forecast_overide")
        Dim UltraDataColumn31 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_order_id")
        Dim UltraDataColumn32 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_note")
        Dim UltraDataColumn33 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_mat_color")
        Dim UltraDataColumn34 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_up_color")
        Dim UltraDataColumn35 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_disc_type")
        Dim UltraDataColumn36 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_disc_val")
        Dim UltraDataColumn37 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_disc_amt")
        Dim UltraDataColumn38 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_is_disc")
        Dim UltraDataColumn39 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_is_up")
        Dim UltraDataColumn40 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_disc_prod")
        Dim UltraDataColumn41 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_disc_matl")
        Dim UltraDataColumn42 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_user")
        Dim UltraDataColumn43 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_updated")
        Dim UltraDataColumn44 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_is_perc_price")
        Dim UltraDataColumn45 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_perc_price")
        Dim UltraDataColumn46 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_perc_prodtypes")
        Dim UltraDataColumn47 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_perc_itemcodes")
        Dim UltraDataColumn48 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_margin_factor")
        Dim UltraDataColumn49 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_change_base")
        Dim UltraDataColumn50 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_bottle_type")
        Dim UltraDataColumn51 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_stain_bottles")
        Dim UltraDataColumn52 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_lacq_bottles")
        Dim UltraDataColumn53 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_bottle_search")
        Dim UltraDataColumn54 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_wood_factor")
        Dim UltraDataColumn55 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_ship_flat")
        Dim UltraDataColumn56 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_bom_import")
        Dim UltraDataColumn57 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_created")
        Dim UltraDataColumn58 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_created_by")
        Dim UltraDataColumn59 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_acct_lock")
        Dim UltraDataColumn60 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_acct_total")
        Dim UltraDataColumn61 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_stain_serial")
        Dim UltraDataColumn62 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_lacquer")
        Dim UltraDataColumn63 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_stain_bottles_add")
        Dim UltraDataColumn64 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_lacq_bottles_add")
        Dim UltraDataColumn65 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_ship_value")
        Dim UltraDataColumn66 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_group_do")
        Dim UltraDataColumn67 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_width")
        Dim UltraDataColumn68 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_height")
        Dim UltraDataColumn69 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_depth")
        Dim UltraDataColumn70 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_width_req")
        Dim UltraDataColumn71 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_height_req")
        Dim UltraDataColumn72 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_depth_req")
        Dim UltraDataColumn73 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("itm_prod_tool_tip")
        Dim UltraDataColumn74 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_wizard_serial")
        Dim UltraDataColumn75 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_install_min")
        Dim UltraDataColumn76 As Infragistics.Win.UltraWinDataSource.UltraDataColumn = New Infragistics.Win.UltraWinDataSource.UltraDataColumn("ord_itm_install_use")
        Dim Appearance142 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance143 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance144 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance145 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance146 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraTab20 As Infragistics.Win.UltraWinTabControl.UltraTab = New Infragistics.Win.UltraWinTabControl.UltraTab()
        Dim Appearance147 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim UltraTab21 As Infragistics.Win.UltraWinTabControl.UltraTab = New Infragistics.Win.UltraWinTabControl.UltraTab()
        Dim Appearance148 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Dim Appearance149 As Infragistics.Win.Appearance = New Infragistics.Win.Appearance()
        Me.UltraTabPageControl9 = New Infragistics.Win.UltraWinTabControl.UltraTabPageControl()
        Me.Label3 = New System.Windows.Forms.Label()
        Me.tSpecialNotes = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraTabPageControl10 = New Infragistics.Win.UltraWinTabControl.UltraTabPageControl()
        Me.GridRef = New Infragistics.Win.UltraWinGrid.UltraGrid()
        Me.UltraCalcManager1 = New Infragistics.Win.UltraWinCalcManager.UltraCalcManager(Me.components)
        Me.UltraTabPageControl3 = New Infragistics.Win.UltraWinTabControl.UltraTabPageControl()
        Me.lBOMImport = New System.Windows.Forms.Label()
        Me.lDiscApproved = New System.Windows.Forms.Label()
        Me.UltraTabPageControl20 = New Infragistics.Win.UltraWinTabControl.UltraTabPageControl()
        Me.GridNotes = New Infragistics.Win.UltraWinGrid.UltraGrid()
        Me.UltraTabPageControl21 = New Infragistics.Win.UltraWinTabControl.UltraTabPageControl()
        Me.bResendEmail = New Infragistics.Win.Misc.UltraButton()
        Me.tEmailBody = New System.Windows.Forms.WebBrowser()
        Me.gEmails = New Infragistics.Win.UltraWinGrid.UltraGrid()
        Me.UltraTabPageControl23 = New Infragistics.Win.UltraWinTabControl.UltraTabPageControl()
        Me.ugDesignNotes = New Infragistics.Win.UltraWinGrid.UltraGrid()
        Me.UltraTabPageControl15 = New Infragistics.Win.UltraWinTabControl.UltraTabPageControl()
        Me.pRR1 = New System.Windows.Forms.Panel()
        Me.rrProvince = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.rrCountry = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.rrCity = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.rrEmail = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.rrZip = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.rrState = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.rrAddr2 = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.rrAddr1 = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.rrCompany = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraButton1 = New Infragistics.Win.Misc.UltraButton()
        Me.rrCounty = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.rrName = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.rrCell = New Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit()
        Me.rrFax = New Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit()
        Me.rrPhone2 = New Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit()
        Me.rrAddr3 = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel111 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel112 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel113 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel114 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel115 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel116 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel117 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel121 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel122 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel123 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel124 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel125 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel126 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel127 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel110 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraTabPageControl18 = New Infragistics.Win.UltraWinTabControl.UltraTabPageControl()
        Me.UltraTabPageControl16 = New Infragistics.Win.UltraWinTabControl.UltraTabPageControl()
        Me.tRFCondition = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tRFItemsReturned = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tRFNameOnReturn = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel151 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel150 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel149 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel148 = New Infragistics.Win.Misc.UltraLabel()
        Me.dtRFReturnedDate = New Infragistics.Win.UltraWinEditors.UltraDateTimeEditor()
        Me.UltraLabel147 = New Infragistics.Win.Misc.UltraLabel()
        Me.rbRFCredit = New Infragistics.Win.UltraWinEditors.UltraOptionSet()
        Me.UltraLabel146 = New Infragistics.Win.Misc.UltraLabel()
        Me.tRFTracking = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tRFCarrier = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel140 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel139 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel138 = New Infragistics.Win.Misc.UltraLabel()
        Me.rbRFClaim = New Infragistics.Win.UltraWinEditors.UltraOptionSet()
        Me.UltraLabel137 = New Infragistics.Win.Misc.UltraLabel()
        Me.rbRFQC = New Infragistics.Win.UltraWinEditors.UltraOptionSet()
        Me.UltraLabel136 = New Infragistics.Win.Misc.UltraLabel()
        Me.rbRFCreditCard = New Infragistics.Win.UltraWinEditors.UltraOptionSet()
        Me.UltraLabel135 = New Infragistics.Win.Misc.UltraLabel()
        Me.rbRFShipping = New Infragistics.Win.UltraWinEditors.UltraOptionSet()
        Me.rbRFRestocking = New Infragistics.Win.UltraWinEditors.UltraOptionSet()
        Me.rbRFSendingReplacement = New Infragistics.Win.UltraWinEditors.UltraOptionSet()
        Me.rbRFSendImmediately = New Infragistics.Win.UltraWinEditors.UltraOptionSet()
        Me.tRFShipping = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel133 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel134 = New Infragistics.Win.Misc.UltraLabel()
        Me.tRFRestocking = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel132 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel131 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel130 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel129 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraGrid1 = New Infragistics.Win.UltraWinGrid.UltraGrid()
        Me.UltraTabPageControl17 = New Infragistics.Win.UltraWinTabControl.UltraTabPageControl()
        Me.tTotal = New Infragistics.Win.UltraWinTabControl.UltraTabPageControl()
        Me.pDiscount = New System.Windows.Forms.Panel()
        Me.lDiscSymbol = New Infragistics.Win.Misc.UltraLabel()
        Me.oDiscountType = New Infragistics.Win.UltraWinEditors.UltraOptionSet()
        Me.tDiscMatl = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.UltraLabel56 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel70 = New Infragistics.Win.Misc.UltraLabel()
        Me.tdiscProdType = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.UltraLabel71 = New Infragistics.Win.Misc.UltraLabel()
        Me.tDiscVal = New Infragistics.Win.UltraWinEditors.UltraNumericEditor()
        Me.tDefLacq = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.Panel2 = New System.Windows.Forms.Panel()
        Me.lLine = New Infragistics.Win.Misc.UltraLabel()
        Me.tOrdMod = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.Grid1 = New Infragistics.Win.UltraWinGrid.UltraGrid()
        Me.pTotal = New System.Windows.Forms.Panel()
        Me.UltraLabel55 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel53 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel52 = New Infragistics.Win.Misc.UltraLabel()
        Me.lTax = New Infragistics.Win.Misc.UltraLabel()
        Me.tTotal2 = New Infragistics.Win.UltraWinEditors.UltraCurrencyEditor()
        Me.tShipTotal = New Infragistics.Win.UltraWinEditors.UltraCurrencyEditor()
        Me.tTaxTotal = New Infragistics.Win.UltraWinEditors.UltraCurrencyEditor()
        Me.tGrandTotal = New Infragistics.Win.UltraWinEditors.UltraCurrencyEditor()
        Me.bImportBOMLookup = New Infragistics.Win.Misc.UltraButton()
        Me.tDefFinish = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.UltraLabel152 = New Infragistics.Win.Misc.UltraLabel()
        Me.bWizard = New Infragistics.Win.Misc.UltraButton()
        Me.UltraLabel87 = New Infragistics.Win.Misc.UltraLabel()
        Me.tDefStain = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.UltraLabel86 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraButton9 = New Infragistics.Win.Misc.UltraButton()
        Me.lMaterialSummary = New System.Windows.Forms.Label()
        Me.UltraButton8 = New Infragistics.Win.Misc.UltraButton()
        Me.bDoPrice = New Infragistics.Win.Misc.UltraButton()
        Me.pItem = New System.Windows.Forms.Panel()
        Me.tShipVal = New Infragistics.Win.UltraWinEditors.UltraCurrencyEditor()
        Me.UltraLabel96 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel95 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel94 = New Infragistics.Win.Misc.UltraLabel()
        Me.tDepth = New Infragistics.Win.UltraWinEditors.UltraNumericEditor()
        Me.tHeight = New Infragistics.Win.UltraWinEditors.UltraNumericEditor()
        Me.tWidth = New Infragistics.Win.UltraWinEditors.UltraNumericEditor()
        Me.lShipVal = New Infragistics.Win.Misc.UltraLabel()
        Me.tLacqAdd = New Infragistics.Win.UltraWinEditors.UltraNumericEditor()
        Me.tStainAdd = New Infragistics.Win.UltraWinEditors.UltraNumericEditor()
        Me.UltraLabel91 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel90 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel26 = New Infragistics.Win.Misc.UltraLabel()
        Me.tProdType = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.tShipUnit = New Infragistics.Win.UltraWinEditors.UltraCurrencyEditor()
        Me.lShipUnit = New Infragistics.Win.Misc.UltraLabel()
        Me.tMaterial = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.lMaterial = New Infragistics.Win.Misc.UltraLabel()
        Me.tMPF = New Infragistics.Win.UltraWinEditors.UltraNumericEditor()
        Me.tDisc = New Infragistics.Win.UltraWinEditors.UltraCurrencyEditor()
        Me.tUnitBase = New Infragistics.Win.UltraWinEditors.UltraCurrencyEditor()
        Me.tBase = New Infragistics.Win.UltraWinEditors.UltraCurrencyEditor()
        Me.tFixture = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.tPriceCalc = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel38 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel35 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel32 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel31 = New Infragistics.Win.Misc.UltraLabel()
        Me.tSalesCat = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.UltraLabel34 = New Infragistics.Win.Misc.UltraLabel()
        Me.tShipFlat = New Infragistics.Win.UltraWinEditors.UltraCurrencyEditor()
        Me.tTaxable = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.Label5 = New System.Windows.Forms.Label()
        Me.tGenMaterial = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.UltraLabel48 = New Infragistics.Win.Misc.UltraLabel()
        Me.lMarginBelow0 = New Infragistics.Win.Misc.UltraLabel()
        Me.tPicture = New Infragistics.Win.UltraWinEditors.UltraPictureBox()
        Me.UltraButton3 = New Infragistics.Win.Misc.UltraButton()
        Me.tForecastOveride = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.tRet = New Infragistics.Win.Misc.UltraLabel()
        Me.tCon = New Infragistics.Win.Misc.UltraLabel()
        Me.lBase = New Infragistics.Win.Misc.UltraLabel()
        Me.tMF = New Infragistics.Win.UltraWinEditors.UltraNumericEditor()
        Me.tLineNotes = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel39 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel33 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel51 = New Infragistics.Win.Misc.UltraLabel()
        Me.Label6 = New System.Windows.Forms.Label()
        Me.UltraTabPageControl4 = New Infragistics.Win.UltraWinTabControl.UltraTabPageControl()
        Me.Label8 = New System.Windows.Forms.Label()
        Me.UltraLabel174 = New Infragistics.Win.Misc.UltraLabel()
        Me.tConsultType = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.UltraDataSource2 = New Infragistics.Win.UltraWinDataSource.UltraDataSource(Me.components)
        Me.UltraLabel175 = New Infragistics.Win.Misc.UltraLabel()
        Me.tFieldConsultant = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.bGridStatusSize = New System.Windows.Forms.Button()
        Me.tCCSource = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.UltraLabel168 = New Infragistics.Win.Misc.UltraLabel()
        Me.GridStatus = New Infragistics.Win.UltraWinGrid.UltraGrid()
        Me.tPCASignOffRecDate = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tPCASignOffRecBy = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.cbPCAsignOffRec = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.tPCASignOffSentDate = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tPCASignOffSentBy = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.cbPCASignOffSent = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.gbPropCommit = New System.Windows.Forms.GroupBox()
        Me.pcReport = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.pcDate = New Infragistics.Win.UltraWinSchedule.UltraCalendarCombo()
        Me.pcNotes = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel128 = New Infragistics.Win.Misc.UltraLabel()
        Me.pcDays = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel163 = New Infragistics.Win.Misc.UltraLabel()
        Me.gbOrder = New System.Windows.Forms.GroupBox()
        Me.oCustWTerms = New Infragistics.Win.UltraWinEditors.UltraOptionSet()
        Me.cbCustWTerms = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.UltraLabel153 = New Infragistics.Win.Misc.UltraLabel()
        Me.tPropStage = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tRackHeight = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tPriorityNote = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel10 = New Infragistics.Win.Misc.UltraLabel()
        Me.tBottles = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel92 = New Infragistics.Win.Misc.UltraLabel()
        Me.tCustOrd = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tFloating = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.UltraLabel88 = New Infragistics.Win.Misc.UltraLabel()
        Me.tTerr = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.UltraLabel23 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel84 = New Infragistics.Win.Misc.UltraLabel()
        Me.tDesignAuto = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel82 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel72 = New Infragistics.Win.Misc.UltraLabel()
        Me.tCreateBy = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tDesType = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.UltraLabel47 = New Infragistics.Win.Misc.UltraLabel()
        Me.gbCheckOff = New System.Windows.Forms.GroupBox()
        Me.Button3 = New System.Windows.Forms.Button()
        Me.lDesReq = New Infragistics.Win.Misc.UltraLabel()
        Me.cbDesigner = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.ddDesignStatus = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.UltraLabel106 = New Infragistics.Win.Misc.UltraLabel()
        Me.tInstallDate = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tInstallUser = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.cbFactoryInstallReq = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.cbFactoryInstall = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.tCADate = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tCAUser = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.cbCellarArt = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.cbToArt = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.tDesDate = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tDesUser = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.cbDesReq = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.tISRDate = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tISRUser = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.cbISR = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.oHistory = New Infragistics.Win.UltraWinEditors.UltraOptionSet()
        Me.UltraLabel69 = New Infragistics.Win.Misc.UltraLabel()
        Me.cbResponsible = New Infragistics.Win.UltraWinEditors.UltraOptionSet()
        Me.UltraLabel66 = New Infragistics.Win.Misc.UltraLabel()
        Me.tStageDate = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel65 = New Infragistics.Win.Misc.UltraLabel()
        Me.tShipDate = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel61 = New Infragistics.Win.Misc.UltraLabel()
        Me.tBilledDate = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tSource = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.UltraLabel25 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel49 = New Infragistics.Win.Misc.UltraLabel()
        Me.tGenFinish = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel7 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel24 = New Infragistics.Win.Misc.UltraLabel()
        Me.tPO = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tDesigner = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.UltraLabel15 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel44 = New Infragistics.Win.Misc.UltraLabel()
        Me.tUpBy = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel43 = New Infragistics.Win.Misc.UltraLabel()
        Me.tUpOn = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel42 = New Infragistics.Win.Misc.UltraLabel()
        Me.tCreate = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel41 = New Infragistics.Win.Misc.UltraLabel()
        Me.tDispDate = New Infragistics.Win.UltraWinEditors.UltraDateTimeEditor()
        Me.tOutside = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.UltraLabel37 = New Infragistics.Win.Misc.UltraLabel()
        Me.tInside = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.UltraLabel36 = New Infragistics.Win.Misc.UltraLabel()
        Me.tRefFee = New Infragistics.Win.UltraWinEditors.UltraCurrencyEditor()
        Me.UltraTabControl1 = New Infragistics.Win.UltraWinTabControl.UltraTabControl()
        Me.UltraTabSharedControlsPage3 = New Infragistics.Win.UltraWinTabControl.UltraTabSharedControlsPage()
        Me.tStatus = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tTabTitle = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel93 = New Infragistics.Win.Misc.UltraLabel()
        Me.cbPriority = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.cbAddon = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.cbAddOnNoEmail = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.UltraTabPageControl13 = New Infragistics.Win.UltraWinTabControl.UltraTabPageControl()
        Me.bShipNotify = New Infragistics.Win.Misc.UltraButton()
        Me.oShipToType = New Infragistics.Win.UltraWinEditors.UltraOptionSet()
        Me.lOldTaxRate = New System.Windows.Forms.Label()
        Me.gsShipHold = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.pShipping = New System.Windows.Forms.Panel()
        Me.gsShipNotify = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.pShipHold = New System.Windows.Forms.Panel()
        Me.Label2 = New System.Windows.Forms.Label()
        Me.lShipHold = New System.Windows.Forms.Label()
        Me.gsCopy = New Infragistics.Win.Misc.UltraButton()
        Me.Label7 = New System.Windows.Forms.Label()
        Me.gsState = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.gslState = New Infragistics.Win.Misc.UltraLabel()
        Me.gsAddr2 = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.gslAddr2 = New Infragistics.Win.Misc.UltraLabel()
        Me.gsAddr1 = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.gslAddr1 = New Infragistics.Win.Misc.UltraLabel()
        Me.gsCompany = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.gslCompany = New Infragistics.Win.Misc.UltraLabel()
        Me.gsName = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.gslName = New Infragistics.Win.Misc.UltraLabel()
        Me.gsEmailSend = New Infragistics.Win.Misc.UltraButton()
        Me.gsCounty = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.gslCounty = New Infragistics.Win.Misc.UltraLabel()
        Me.gsCell = New Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit()
        Me.gsFax = New Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit()
        Me.gsPhone2 = New Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit()
        Me.gsPhone1 = New Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit()
        Me.gsCountry = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.gsAddr3 = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.gslAddr3 = New Infragistics.Win.Misc.UltraLabel()
        Me.gsProvince = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.gslProvince = New Infragistics.Win.Misc.UltraLabel()
        Me.gsCity = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.gsCustId = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.gsEmail = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.gslEmail = New Infragistics.Win.Misc.UltraLabel()
        Me.gslCell = New Infragistics.Win.Misc.UltraLabel()
        Me.gslFax = New Infragistics.Win.Misc.UltraLabel()
        Me.gslPhone2 = New Infragistics.Win.Misc.UltraLabel()
        Me.gslPhone = New Infragistics.Win.Misc.UltraLabel()
        Me.gsZip = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.gslZip = New Infragistics.Win.Misc.UltraLabel()
        Me.gslCustID = New Infragistics.Win.Misc.UltraLabel()
        Me.gslCountry = New Infragistics.Win.Misc.UltraLabel()
        Me.gslCity = New Infragistics.Win.Misc.UltraLabel()
        Me.gsExemptAddr = New Infragistics.Win.Misc.UltraLabel()
        Me.gsShipTaxPerc = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel120 = New Infragistics.Win.Misc.UltraLabel()
        Me.gsTaxInstalls = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.UltraLabel118 = New Infragistics.Win.Misc.UltraLabel()
        Me.gsTaxExempt = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.gsExemptNo = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.gsTaxRate = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel119 = New Infragistics.Win.Misc.UltraLabel()
        Me.GroupBox1 = New System.Windows.Forms.GroupBox()
        Me.ddThirdPartyFill = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.tThirdPartyShipVia = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.tThirdPartyAcct = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel109 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel108 = New Infragistics.Win.Misc.UltraLabel()
        Me.bShipPromoAdd = New Infragistics.Win.Misc.UltraButton()
        Me.tShipPromo = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.cbShipActive = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.cbShipWhiteGlove = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.cbShipCustPickup = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.cbCollect = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.UltraLabel58 = New Infragistics.Win.Misc.UltraLabel()
        Me.tSkids = New Infragistics.Win.UltraWinEditors.UltraNumericEditor()
        Me.cbIntlShip = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.cbOvernite = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.tShipDiscount = New Infragistics.Win.UltraWinEditors.UltraCurrencyEditor()
        Me.UltraLabel59 = New Infragistics.Win.Misc.UltraLabel()
        Me.tThirdPartyName = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel14 = New Infragistics.Win.Misc.UltraLabel()
        Me.cbThirdParty = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.tCallPhone = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tCallName = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel13 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel12 = New Infragistics.Win.Misc.UltraLabel()
        Me.cbCall = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.tTurns = New Infragistics.Win.UltraWinEditors.UltraNumericEditor()
        Me.tSteps = New Infragistics.Win.UltraWinEditors.UltraNumericEditor()
        Me.cbSteps = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.cbTurns = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.cbLiftGate = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.cbAlert = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.cbSmallTruck = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.cbTwoMan = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.cbInside = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.cbGated = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.tShipExtra = New Infragistics.Win.UltraWinEditors.UltraCurrencyEditor()
        Me.UltraLabel22 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel45 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel3 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraTabPageControl11 = New Infragistics.Win.UltraWinTabControl.UltraTabPageControl()
        Me.lOldAltTax = New System.Windows.Forms.Label()
        Me.pAltShip = New System.Windows.Forms.Panel()
        Me.tAltShipCounty = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.lAltShipCounty = New Infragistics.Win.Misc.UltraLabel()
        Me.tAltShipCell = New Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit()
        Me.tAltShipFax = New Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit()
        Me.tAltShipPhone2 = New Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit()
        Me.tAltShipPhone1 = New Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit()
        Me.tAltShipCountry = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.tAltShipAddr3 = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.lAltShipAddr3 = New Infragistics.Win.Misc.UltraLabel()
        Me.tAltShipProvince = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.lAltShipProvince = New Infragistics.Win.Misc.UltraLabel()
        Me.tAltShipCity = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.tAltShipCustId = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.tAltShipEmail = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.lAltShipEmail = New Infragistics.Win.Misc.UltraLabel()
        Me.lAltShipCell = New Infragistics.Win.Misc.UltraLabel()
        Me.lAltShipFax = New Infragistics.Win.Misc.UltraLabel()
        Me.lAltShipPhone2 = New Infragistics.Win.Misc.UltraLabel()
        Me.lAltShipPhone1 = New Infragistics.Win.Misc.UltraLabel()
        Me.tAltShipZip = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.lAltShipZip = New Infragistics.Win.Misc.UltraLabel()
        Me.tAltShipState = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.lAltShipState = New Infragistics.Win.Misc.UltraLabel()
        Me.lAltShipCity = New Infragistics.Win.Misc.UltraLabel()
        Me.tAltShipAddr2 = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.lAltShipAddr2 = New Infragistics.Win.Misc.UltraLabel()
        Me.tAltShipAddr1 = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.lAltShipAddr1 = New Infragistics.Win.Misc.UltraLabel()
        Me.lAltShipCountry = New Infragistics.Win.Misc.UltraLabel()
        Me.tAltShipCompany = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.lAltShipCompany = New Infragistics.Win.Misc.UltraLabel()
        Me.tAltShipName = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.lAltShipName = New Infragistics.Win.Misc.UltraLabel()
        Me.lAltShipCustId = New Infragistics.Win.Misc.UltraLabel()
        Me.chUseAltShip = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.Label4 = New System.Windows.Forms.Label()
        Me.UltraTabPageControl5 = New Infragistics.Win.UltraWinTabControl.UltraTabPageControl()
        Me.bPrintOrder = New Infragistics.Win.Misc.UltraButton()
        Me.bAddPayment = New Infragistics.Win.Misc.UltraButton()
        Me.UltraLabel64 = New Infragistics.Win.Misc.UltraLabel()
        Me.tPayOrdTot = New Infragistics.Win.UltraWinEditors.UltraCurrencyEditor()
        Me.UltraLabel63 = New Infragistics.Win.Misc.UltraLabel()
        Me.tPayTot = New Infragistics.Win.UltraWinEditors.UltraCurrencyEditor()
        Me.UltraLabel60 = New Infragistics.Win.Misc.UltraLabel()
        Me.tBalance = New Infragistics.Win.UltraWinEditors.UltraCurrencyEditor()
        Me.PayGrid = New Infragistics.Win.UltraWinGrid.UltraGrid()
        Me.UltraTabPageControl6 = New Infragistics.Win.UltraWinTabControl.UltraTabPageControl()
        Me.UltraButton13 = New Infragistics.Win.Misc.UltraButton()
        Me.tTrackBoxes = New Infragistics.Win.Misc.UltraLabel()
        Me.bAddShipment = New Infragistics.Win.Misc.UltraButton()
        Me.UltraLabel62 = New Infragistics.Win.Misc.UltraLabel()
        Me.tShipTot = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.ShipGrid = New Infragistics.Win.UltraWinGrid.UltraGrid()
        Me.UltraTabPageControl7 = New Infragistics.Win.UltraWinTabControl.UltraTabPageControl()
        Me.tabNotes = New Infragistics.Win.UltraWinTabControl.UltraTabControl()
        Me.UltraTabSharedControlsPage5 = New Infragistics.Win.UltraWinTabControl.UltraTabSharedControlsPage()
        Me.pOrdMod = New System.Windows.Forms.Panel()
        Me.bAddOrdMod = New Infragistics.Win.Misc.UltraButton()
        Me.bNotesShowAll = New Infragistics.Win.Misc.UltraButton()
        Me.bAddNote = New Infragistics.Win.Misc.UltraButton()
        Me.tNote = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraTabPageControl8 = New Infragistics.Win.UltraWinTabControl.UltraTabPageControl()
        Me.bDocDDP = New Infragistics.Win.Misc.UltraButton()
        Me.bDocPrint = New Infragistics.Win.Misc.UltraButton()
        Me.Button1 = New System.Windows.Forms.Button()
        Me.bDocList = New Infragistics.Win.Misc.UltraButton()
        Me.UltraButton5 = New Infragistics.Win.Misc.UltraButton()
        Me.bOpenPdf = New Infragistics.Win.Misc.UltraButton()
        Me.UltraButton2 = New Infragistics.Win.Misc.UltraButton()
        Me.ListPDF = New System.Windows.Forms.ListBox()
        Me.UltraTabPageControl1 = New Infragistics.Win.UltraWinTabControl.UltraTabPageControl()
        Me.tForecastNote = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tForecastPerc = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tForecastDate = New Infragistics.Win.UltraWinEditors.UltraDateTimeEditor()
        Me.tLostDate = New Infragistics.Win.UltraWinEditors.UltraDateTimeEditor()
        Me.tLostReason = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.tForecast = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.UltraLabel2 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel98 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraMonthViewMulti1 = New Infragistics.Win.UltraWinSchedule.UltraMonthViewMulti()
        Me.UltraLabel68 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel67 = New Infragistics.Win.Misc.UltraLabel()
        Me.lLostReason = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel50 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraTabPageControl12 = New Infragistics.Win.UltraWinTabControl.UltraTabPageControl()
        Me.bUpSave = New Infragistics.Win.Misc.UltraButton()
        Me.bUpsellUncheck = New Infragistics.Win.Misc.UltraButton()
        Me.UltraLabel99 = New Infragistics.Win.Misc.UltraLabel()
        Me.tUpSellSqFt = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.bUpsellSendToQuote = New Infragistics.Win.Misc.UltraButton()
        Me.UpType = New Infragistics.Win.UltraWinTree.UltraTree()
        Me.UpTree = New Infragistics.Win.UltraWinTree.UltraTree()
        Me.UltraLabel97 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraTabPageControl14 = New Infragistics.Win.UltraWinTabControl.UltraTabPageControl()
        Me.pRepReq = New System.Windows.Forms.Panel()
        Me.lRepReq = New System.Windows.Forms.Label()
        Me.rrAddRepReq = New System.Windows.Forms.LinkLabel()
        Me.tabRepReq = New Infragistics.Win.UltraWinTabControl.UltraTabControl()
        Me.UltraTabSharedControlsPage4 = New Infragistics.Win.UltraWinTabControl.UltraTabSharedControlsPage()
        Me.UltraTabPageControl19 = New Infragistics.Win.UltraWinTabControl.UltraTabPageControl()
        Me.UltraButton11 = New Infragistics.Win.Misc.UltraButton()
        Me.UltraButton10 = New Infragistics.Win.Misc.UltraButton()
        Me.UltraButton7 = New Infragistics.Win.Misc.UltraButton()
        Me.bProdUserFuture = New System.Windows.Forms.Button()
        Me.bProdUserPast = New System.Windows.Forms.Button()
        Me.lProdUser = New System.Windows.Forms.Label()
        Me.UltraButton12 = New Infragistics.Win.Misc.UltraButton()
        Me.pProduction = New System.Windows.Forms.Panel()
        Me.tpCellarComp_note = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpCellarComp_by = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpCellarComp_date = New Infragistics.Win.UltraWinEditors.UltraDateTimeEditor()
        Me.tpCellarComp = New System.Windows.Forms.CheckBox()
        Me.UltraLabel176 = New Infragistics.Win.Misc.UltraLabel()
        Me.lEstShipEmail = New Infragistics.Win.Misc.UltraLabel()
        Me.chEstEmailShip = New System.Windows.Forms.CheckBox()
        Me.UltraLabel173 = New Infragistics.Win.Misc.UltraLabel()
        Me.tpFactComp_Note = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpFactComp_By = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpFactComp_Date = New Infragistics.Win.UltraWinEditors.UltraDateTimeEditor()
        Me.tpFactComp = New System.Windows.Forms.CheckBox()
        Me.UltraLabel172 = New Infragistics.Win.Misc.UltraLabel()
        Me.tpCDRDown_note = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpCDRDown_by = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpCDRDown_date = New Infragistics.Win.UltraWinEditors.UltraDateTimeEditor()
        Me.tpCDRDown = New System.Windows.Forms.CheckBox()
        Me.UltraLabel171 = New Infragistics.Win.Misc.UltraLabel()
        Me.tpKitDown_note = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpKitDown_by = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpKitDown_date = New Infragistics.Win.UltraWinEditors.UltraDateTimeEditor()
        Me.tpKitDown = New System.Windows.Forms.CheckBox()
        Me.UltraLabel170 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel164 = New Infragistics.Win.Misc.UltraLabel()
        Me.tpProdNote = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpOKBillEarly = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.tpAddedClosedWeek = New System.Windows.Forms.CheckBox()
        Me.tpProdNoteFlag = New System.Windows.Forms.CheckBox()
        Me.tEstCompleteCalc = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpSignedStain_By = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpMustship_By = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpCommitted_By = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpArt_By = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpEstComp_By = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tInstallerDate = New Infragistics.Win.UltraWinEditors.UltraDateTimeEditor()
        Me.UltraLabel162 = New Infragistics.Win.Misc.UltraLabel()
        Me.tStatus2 = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpStatus = New System.Windows.Forms.TextBox()
        Me.tpToFactory_Note = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpToFactory_By = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpToFactory_Date = New Infragistics.Win.UltraWinEditors.UltraDateTimeEditor()
        Me.tpToFactory = New System.Windows.Forms.CheckBox()
        Me.UltraLabel161 = New Infragistics.Win.Misc.UltraLabel()
        Me.tpDesignComplete_Note = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpDesignComplete_By = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpDesignComplete_Date = New Infragistics.Win.UltraWinEditors.UltraDateTimeEditor()
        Me.tpDesignComplete = New System.Windows.Forms.CheckBox()
        Me.tpDesignStart_Note = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpDesignStart_By = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpDesignStart_Date = New Infragistics.Win.UltraWinEditors.UltraDateTimeEditor()
        Me.tpDesignStart = New System.Windows.Forms.CheckBox()
        Me.UltraLabel159 = New Infragistics.Win.Misc.UltraLabel()
        Me.tpAllClear_Note = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpAllClear_By = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpAllClear_Date = New Infragistics.Win.UltraWinEditors.UltraDateTimeEditor()
        Me.tpAllClear = New System.Windows.Forms.CheckBox()
        Me.UltraLabel158 = New Infragistics.Win.Misc.UltraLabel()
        Me.tpSignoffRec_Note = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpSignoffRec_By = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpSignoffRec_Date = New Infragistics.Win.UltraWinEditors.UltraDateTimeEditor()
        Me.tpSignoffRec = New System.Windows.Forms.CheckBox()
        Me.UltraLabel157 = New Infragistics.Win.Misc.UltraLabel()
        Me.tpWaitingSignoff_Note = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpWaitingSignoff_By = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpWaitingSignoff_Date = New Infragistics.Win.UltraWinEditors.UltraDateTimeEditor()
        Me.tpWaitingSignoff = New System.Windows.Forms.CheckBox()
        Me.lWaitingSignoff = New Infragistics.Win.Misc.UltraLabel()
        Me.tpRoomRevision_Note = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpRoomRevision_By = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpRoomRevision_Date = New Infragistics.Win.UltraWinEditors.UltraDateTimeEditor()
        Me.tpRoomRevision = New System.Windows.Forms.CheckBox()
        Me.UltraLabel156 = New Infragistics.Win.Misc.UltraLabel()
        Me.tpRoomNotReady_Note = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpRoomNotReady_By = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpRoomNotReady_Date = New Infragistics.Win.UltraWinEditors.UltraDateTimeEditor()
        Me.tpRoomNotReady = New System.Windows.Forms.CheckBox()
        Me.UltraLabel155 = New Infragistics.Win.Misc.UltraLabel()
        Me.tpSignOffSent_Note = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpSignOffSent_By = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpSignOffSent_Date = New Infragistics.Win.UltraWinEditors.UltraDateTimeEditor()
        Me.tpSignOffSent = New System.Windows.Forms.CheckBox()
        Me.UltraLabel154 = New Infragistics.Win.Misc.UltraLabel()
        Me.bCopyInstall = New Infragistics.Win.Misc.UltraButton()
        Me.tpSignStainDt = New Infragistics.Win.UltraWinEditors.UltraDateTimeEditor()
        Me.tpSignStain = New System.Windows.Forms.ComboBox()
        Me.UltraLabel145 = New Infragistics.Win.Misc.UltraLabel()
        Me.tInstallNotes = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tpArt = New Infragistics.Win.UltraWinEditors.UltraDateTimeEditor()
        Me.tpEstComp = New Infragistics.Win.UltraWinEditors.UltraDateTimeEditor()
        Me.tpCommitted = New Infragistics.Win.UltraWinEditors.UltraDateTimeEditor()
        Me.tpMustShip = New Infragistics.Win.UltraWinEditors.UltraDateTimeEditor()
        Me.grInstallServiceCalls = New Infragistics.Win.UltraWinGrid.UltraGrid()
        Me.tpArtNote = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel144 = New Infragistics.Win.Misc.UltraLabel()
        Me.tpEstCompNote = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel143 = New Infragistics.Win.Misc.UltraLabel()
        Me.tpCommittedNote = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel142 = New Infragistics.Win.Misc.UltraLabel()
        Me.tpMustShipNote = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel141 = New Infragistics.Win.Misc.UltraLabel()
        Me.tInstaller = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.UltraLabel107 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel105 = New Infragistics.Win.Misc.UltraLabel()
        Me.bEmailInstallNote = New Infragistics.Win.Misc.UltraButton()
        Me.UltraLabel160 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraTabPageControl22 = New Infragistics.Win.UltraWinTabControl.UltraTabPageControl()
        Me.tDiagNote = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel167 = New Infragistics.Win.Misc.UltraLabel()
        Me.pDiag = New System.Windows.Forms.Panel()
        Me.pDiag0 = New System.Windows.Forms.Panel()
        Me.tDiagStatus = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.Button2 = New System.Windows.Forms.Button()
        Me.tDiagEISR = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.tDiagEOSR = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.tDiagEShipTo = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.tDiagESoldTo = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.tDiagDenNote = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tDiagAccNote = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tDiagNextSend = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel165 = New Infragistics.Win.Misc.UltraLabel()
        Me.tDiagDenDate = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tDiagDenBy = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tDiagAccDate = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tDiagAccBy = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tDiagDen = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.tDiagAcc = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.tDiagRec = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.tDiagEmail = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel166 = New Infragistics.Win.Misc.UltraLabel()
        Me.tDiagRecDate = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tDiagRecBy = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel104 = New Infragistics.Win.Misc.UltraLabel()
        Me.tDiagSent = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.TabControl = New Infragistics.Win.UltraWinTabControl.UltraTabPageControl()
        Me.pContJump = New System.Windows.Forms.PictureBox()
        Me.pContRefresh = New System.Windows.Forms.PictureBox()
        Me.UltraButton6 = New Infragistics.Win.Misc.UltraButton()
        Me.tSoldCounty = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.pContacts = New System.Windows.Forms.PictureBox()
        Me.tsold_cell = New Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit()
        Me.tOrdContSerial = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tsold_fax = New Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit()
        Me.UltraLabel169 = New Infragistics.Win.Misc.UltraLabel()
        Me.tsold_phone2 = New Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit()
        Me.cbEmailOSRShipments = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.tsold_addr3 = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.cbEmailShipment = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.tProvince = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.bContFind = New Infragistics.Win.Misc.UltraButton()
        Me.tCountry = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.bAddOther = New Infragistics.Win.Misc.UltraButton()
        Me.tSold_City = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.bAddHVAC = New Infragistics.Win.Misc.UltraButton()
        Me.tsold_email = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.bAddInst = New Infragistics.Win.Misc.UltraButton()
        Me.tsold_zip = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.bAddBuilder = New Infragistics.Win.Misc.UltraButton()
        Me.tsold_state = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.bAddArch = New Infragistics.Win.Misc.UltraButton()
        Me.tsold_addr2 = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.gContacts = New Infragistics.Win.UltraWinGrid.UltraGrid()
        Me.tsold_addr1 = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.pContact = New System.Windows.Forms.Panel()
        Me.tContEmail = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel100 = New Infragistics.Win.Misc.UltraLabel()
        Me.tContFax = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel101 = New Infragistics.Win.Misc.UltraLabel()
        Me.tContCell = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel102 = New Infragistics.Win.Misc.UltraLabel()
        Me.tContPhone2 = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel103 = New Infragistics.Win.Misc.UltraLabel()
        Me.tContAddr1 = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tContType = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel85 = New Infragistics.Win.Misc.UltraLabel()
        Me.tContPayee = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.tContName = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tContAddr3 = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel20 = New Infragistics.Win.Misc.UltraLabel()
        Me.tContCity = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.tContPhone1 = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel17 = New Infragistics.Win.Misc.UltraLabel()
        Me.tContState = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel27 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel28 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel57 = New Infragistics.Win.Misc.UltraLabel()
        Me.tContCompany = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tContAddr2 = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel11 = New Infragistics.Win.Misc.UltraLabel()
        Me.tContNote = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.tContZip = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel54 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel30 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel29 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel21 = New Infragistics.Win.Misc.UltraLabel()
        Me.tsold_company = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.cbIsSplit = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.UltraLabel89 = New Infragistics.Win.Misc.UltraLabel()
        Me.tRefSpecialNote = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraTextEditor2 = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel83 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel79 = New Infragistics.Win.Misc.UltraLabel()
        Me.tRefPerc = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.tRefName = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.tRefAddr3 = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel73 = New Infragistics.Win.Misc.UltraLabel()
        Me.tRefCity = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.tRefZip = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel74 = New Infragistics.Win.Misc.UltraLabel()
        Me.tRefState = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel75 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel76 = New Infragistics.Win.Misc.UltraLabel()
        Me.tRefAddr2 = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel77 = New Infragistics.Win.Misc.UltraLabel()
        Me.tRefAddr1 = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel78 = New Infragistics.Win.Misc.UltraLabel()
        Me.tRefCompany = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel80 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel81 = New Infragistics.Win.Misc.UltraLabel()
        Me.tDefThirdPartyName = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.cbDefThirdParty = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.tAcctOpen = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.cb5Perc = New Infragistics.Win.UltraWinEditors.UltraCheckEditor()
        Me.tSoldCustId = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.lSoldcounty = New Infragistics.Win.Misc.UltraLabel()
        Me.tSold_Name = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.bPhoneFind = New Infragistics.Win.Misc.UltraButton()
        Me.tsold_phone1 = New Infragistics.Win.UltraWinMaskedEdit.UltraMaskedEdit()
        Me.lsold_addr3 = New Infragistics.Win.Misc.UltraLabel()
        Me.lProvince = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel16 = New Infragistics.Win.Misc.UltraLabel()
        Me.tCustId = New Infragistics.Win.UltraWinGrid.UltraCombo()
        Me.UltraLabel18 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel19 = New Infragistics.Win.Misc.UltraLabel()
        Me.lsold_fax = New Infragistics.Win.Misc.UltraLabel()
        Me.lsold_phone2 = New Infragistics.Win.Misc.UltraLabel()
        Me.lsold_zip = New Infragistics.Win.Misc.UltraLabel()
        Me.Label1 = New System.Windows.Forms.Label()
        Me.lsold_state = New Infragistics.Win.Misc.UltraLabel()
        Me.lsold_city = New Infragistics.Win.Misc.UltraLabel()
        Me.lsold_addr2 = New Infragistics.Win.Misc.UltraLabel()
        Me.lSold_addr1 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel8 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel9 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel6 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraLabel5 = New Infragistics.Win.Misc.UltraLabel()
        Me.lReferral = New System.Windows.Forms.Label()
        Me.UltraLabel40 = New Infragistics.Win.Misc.UltraLabel()
        Me.DefaultPage = New Infragistics.Win.UltraWinEditors.UltraOptionSet()
        Me.UltraTabPageControl2 = New Infragistics.Win.UltraWinTabControl.UltraTabPageControl()
        Me.TabItems = New Infragistics.Win.UltraWinTabControl.UltraTabControl()
        Me.UltraTabSharedControlsPage2 = New Infragistics.Win.UltraWinTabControl.UltraTabSharedControlsPage()
        Me.ImageList1 = New System.Windows.Forms.ImageList(Me.components)
        Me.UltraDataSource1 = New Infragistics.Win.UltraWinDataSource.UltraDataSource(Me.components)
        Me.UltraTextEditor1 = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.MenuItem1 = New System.Windows.Forms.MenuItem()
        Me.MenuItem2 = New System.Windows.Forms.MenuItem()
        Me.MenuItem3 = New System.Windows.Forms.MenuItem()
        Me.MenuItem7 = New System.Windows.Forms.MenuItem()
        Me.MenuItem6 = New System.Windows.Forms.MenuItem()
        Me.MenuItem23 = New System.Windows.Forms.MenuItem()
        Me.MenuItem4 = New System.Windows.Forms.MenuItem()
        Me.MenuItem5 = New System.Windows.Forms.MenuItem()
        Me.MenuItem21 = New System.Windows.Forms.MenuItem()
        Me.MenuItem8 = New System.Windows.Forms.MenuItem()
        Me.MenuItem11 = New System.Windows.Forms.MenuItem()
        Me.MenuItem18 = New System.Windows.Forms.MenuItem()
        Me.MenuItem22 = New System.Windows.Forms.MenuItem()
        Me.MainMenu1 = New System.Windows.Forms.MainMenu(Me.components)
        Me.mnFunctions = New System.Windows.Forms.MenuItem()
        Me.MenuItem9 = New System.Windows.Forms.MenuItem()
        Me.MenuItem24 = New System.Windows.Forms.MenuItem()
        Me.MenuItem19 = New System.Windows.Forms.MenuItem()
        Me.MenuItem10 = New System.Windows.Forms.MenuItem()
        Me.MenuItem13 = New System.Windows.Forms.MenuItem()
        Me.mnCreateDate = New System.Windows.Forms.MenuItem()
        Me.mnCreateUser = New System.Windows.Forms.MenuItem()
        Me.MenuItem14 = New System.Windows.Forms.MenuItem()
        Me.MenuItem12 = New System.Windows.Forms.MenuItem()
        Me.MenuItem16 = New System.Windows.Forms.MenuItem()
        Me.MenuItem20 = New System.Windows.Forms.MenuItem()
        Me.MenuItem17 = New System.Windows.Forms.MenuItem()
        Me.MenuItem15 = New System.Windows.Forms.MenuItem()
        Me.bReplacement = New Infragistics.Win.Misc.UltraButton()
        Me.UltraLabel4 = New Infragistics.Win.Misc.UltraLabel()
        Me.tord_for = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.bAddQuote = New Infragistics.Win.Misc.UltraButton()
        Me.bAddOrder = New Infragistics.Win.Misc.UltraButton()
        Me.Tab1 = New Infragistics.Win.UltraWinTabControl.UltraTabControl()
        Me.UltraTabSharedControlsPage1 = New Infragistics.Win.UltraWinTabControl.UltraTabSharedControlsPage()
        Me.tOrd = New Infragistics.Win.UltraWinEditors.UltraTextEditor()
        Me.UltraLabel1 = New Infragistics.Win.Misc.UltraLabel()
        Me.File1 = New System.Windows.Forms.OpenFileDialog()
        Me.UltraLabel46 = New Infragistics.Win.Misc.UltraLabel()
        Me.UltraButton4 = New Infragistics.Win.Misc.UltraButton()
        Me.bCopyItems = New Infragistics.Win.Misc.UltraButton()
        Me.Panel1 = New System.Windows.Forms.Panel()
        Me.ToolTip1 = New System.Windows.Forms.ToolTip(Me.components)
        Me.UltraTabPageControl9.SuspendLayout
        CType(Me.tSpecialNotes,System.ComponentModel.ISupportInitialize).BeginInit
        Me.UltraTabPageControl10.SuspendLayout
        CType(Me.GridRef,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.UltraCalcManager1,System.ComponentModel.ISupportInitialize).BeginInit
        Me.UltraTabPageControl3.SuspendLayout
        Me.UltraTabPageControl20.SuspendLayout
        CType(Me.GridNotes,System.ComponentModel.ISupportInitialize).BeginInit
        Me.UltraTabPageControl21.SuspendLayout
        CType(Me.gEmails,System.ComponentModel.ISupportInitialize).BeginInit
        Me.UltraTabPageControl23.SuspendLayout
        CType(Me.ugDesignNotes,System.ComponentModel.ISupportInitialize).BeginInit
        Me.UltraTabPageControl15.SuspendLayout
        Me.pRR1.SuspendLayout
        CType(Me.rrProvince,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.rrCountry,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.rrCity,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.rrEmail,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.rrZip,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.rrState,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.rrAddr2,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.rrAddr1,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.rrCompany,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.rrCounty,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.rrName,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.rrAddr3,System.ComponentModel.ISupportInitialize).BeginInit
        Me.UltraTabPageControl16.SuspendLayout
        CType(Me.tRFCondition,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tRFItemsReturned,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tRFNameOnReturn,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.dtRFReturnedDate,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.rbRFCredit,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tRFTracking,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tRFCarrier,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.rbRFClaim,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.rbRFQC,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.rbRFCreditCard,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.rbRFShipping,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.rbRFRestocking,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.rbRFSendingReplacement,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.rbRFSendImmediately,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tRFShipping,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tRFRestocking,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.UltraGrid1,System.ComponentModel.ISupportInitialize).BeginInit
        Me.tTotal.SuspendLayout
        Me.pDiscount.SuspendLayout
        CType(Me.oDiscountType,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDiscMatl,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tdiscProdType,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDiscVal,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDefLacq,System.ComponentModel.ISupportInitialize).BeginInit
        Me.Panel2.SuspendLayout
        CType(Me.tOrdMod,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.Grid1,System.ComponentModel.ISupportInitialize).BeginInit
        Me.pTotal.SuspendLayout
        CType(Me.tTotal2,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tShipTotal,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tTaxTotal,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tGrandTotal,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDefFinish,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDefStain,System.ComponentModel.ISupportInitialize).BeginInit
        Me.pItem.SuspendLayout
        CType(Me.tShipVal,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDepth,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tHeight,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tWidth,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tLacqAdd,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tStainAdd,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tProdType,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tShipUnit,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tMaterial,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tMPF,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDisc,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tUnitBase,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tBase,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tFixture,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tSalesCat,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tShipFlat,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tTaxable,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tGenMaterial,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tForecastOveride,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tMF,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tLineNotes,System.ComponentModel.ISupportInitialize).BeginInit
        Me.UltraTabPageControl4.SuspendLayout
        CType(Me.tConsultType,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.UltraDataSource2,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tFieldConsultant,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tCCSource,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.GridStatus,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tPCASignOffRecDate,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tPCASignOffRecBy,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbPCAsignOffRec,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tPCASignOffSentDate,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tPCASignOffSentBy,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbPCASignOffSent,System.ComponentModel.ISupportInitialize).BeginInit
        Me.gbPropCommit.SuspendLayout
        CType(Me.pcReport,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.pcDate,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.pcNotes,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.pcDays,System.ComponentModel.ISupportInitialize).BeginInit
        Me.gbOrder.SuspendLayout
        CType(Me.oCustWTerms,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbCustWTerms,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tPropStage,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tRackHeight,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tPriorityNote,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tBottles,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tCustOrd,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tFloating,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tTerr,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDesignAuto,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tCreateBy,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDesType,System.ComponentModel.ISupportInitialize).BeginInit
        Me.gbCheckOff.SuspendLayout
        CType(Me.cbDesigner,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.ddDesignStatus,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tInstallDate,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tInstallUser,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbFactoryInstallReq,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbFactoryInstall,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tCADate,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tCAUser,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbCellarArt,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbToArt,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDesDate,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDesUser,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbDesReq,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tISRDate,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tISRUser,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbISR,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.oHistory,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbResponsible,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tStageDate,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tShipDate,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tBilledDate,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tSource,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tGenFinish,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tPO,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDesigner,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tUpBy,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tUpOn,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tCreate,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDispDate,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tOutside,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tInside,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tRefFee,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.UltraTabControl1,System.ComponentModel.ISupportInitialize).BeginInit
        Me.UltraTabControl1.SuspendLayout
        CType(Me.tStatus,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tTabTitle,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbPriority,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbAddon,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbAddOnNoEmail,System.ComponentModel.ISupportInitialize).BeginInit
        Me.UltraTabPageControl13.SuspendLayout
        CType(Me.oShipToType,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.gsShipHold,System.ComponentModel.ISupportInitialize).BeginInit
        Me.pShipping.SuspendLayout
        CType(Me.gsShipNotify,System.ComponentModel.ISupportInitialize).BeginInit
        Me.pShipHold.SuspendLayout
        CType(Me.gsState,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.gsAddr2,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.gsAddr1,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.gsCompany,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.gsName,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.gsCounty,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.gsCountry,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.gsAddr3,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.gsProvince,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.gsCity,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.gsCustId,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.gsEmail,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.gsZip,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.gsShipTaxPerc,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.gsTaxInstalls,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.gsTaxExempt,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.gsExemptNo,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.gsTaxRate,System.ComponentModel.ISupportInitialize).BeginInit
        Me.GroupBox1.SuspendLayout
        CType(Me.ddThirdPartyFill,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tThirdPartyShipVia,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tThirdPartyAcct,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tShipPromo,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbShipActive,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbShipWhiteGlove,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbShipCustPickup,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbCollect,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tSkids,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbIntlShip,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbOvernite,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tShipDiscount,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tThirdPartyName,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbThirdParty,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tCallPhone,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tCallName,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbCall,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tTurns,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tSteps,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbSteps,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbTurns,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbLiftGate,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbAlert,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbSmallTruck,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbTwoMan,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbInside,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbGated,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tShipExtra,System.ComponentModel.ISupportInitialize).BeginInit
        Me.UltraTabPageControl11.SuspendLayout
        Me.pAltShip.SuspendLayout
        CType(Me.tAltShipCounty,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tAltShipCountry,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tAltShipAddr3,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tAltShipProvince,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tAltShipCity,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tAltShipCustId,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tAltShipEmail,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tAltShipZip,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tAltShipState,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tAltShipAddr2,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tAltShipAddr1,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tAltShipCompany,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tAltShipName,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.chUseAltShip,System.ComponentModel.ISupportInitialize).BeginInit
        Me.UltraTabPageControl5.SuspendLayout
        CType(Me.tPayOrdTot,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tPayTot,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tBalance,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.PayGrid,System.ComponentModel.ISupportInitialize).BeginInit
        Me.UltraTabPageControl6.SuspendLayout
        CType(Me.tShipTot,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.ShipGrid,System.ComponentModel.ISupportInitialize).BeginInit
        Me.UltraTabPageControl7.SuspendLayout
        CType(Me.tabNotes,System.ComponentModel.ISupportInitialize).BeginInit
        Me.tabNotes.SuspendLayout
        Me.pOrdMod.SuspendLayout
        CType(Me.tNote,System.ComponentModel.ISupportInitialize).BeginInit
        Me.UltraTabPageControl8.SuspendLayout
        Me.UltraTabPageControl1.SuspendLayout
        CType(Me.tForecastNote,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tForecastPerc,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tForecastDate,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tLostDate,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tLostReason,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tForecast,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.UltraMonthViewMulti1,System.ComponentModel.ISupportInitialize).BeginInit
        Me.UltraTabPageControl12.SuspendLayout
        CType(Me.tUpSellSqFt,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.UpType,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.UpTree,System.ComponentModel.ISupportInitialize).BeginInit
        Me.UltraTabPageControl14.SuspendLayout
        CType(Me.tabRepReq,System.ComponentModel.ISupportInitialize).BeginInit
        Me.tabRepReq.SuspendLayout
        Me.UltraTabPageControl19.SuspendLayout
        Me.pProduction.SuspendLayout
        CType(Me.tpCellarComp_note,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpCellarComp_by,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpCellarComp_date,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpFactComp_Note,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpFactComp_By,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpFactComp_Date,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpCDRDown_note,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpCDRDown_by,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpCDRDown_date,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpKitDown_note,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpKitDown_by,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpKitDown_date,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpProdNote,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpOKBillEarly,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tEstCompleteCalc,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpSignedStain_By,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpMustship_By,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpCommitted_By,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpArt_By,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpEstComp_By,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tInstallerDate,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tStatus2,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpToFactory_Note,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpToFactory_By,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpToFactory_Date,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpDesignComplete_Note,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpDesignComplete_By,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpDesignComplete_Date,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpDesignStart_Note,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpDesignStart_By,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpDesignStart_Date,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpAllClear_Note,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpAllClear_By,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpAllClear_Date,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpSignoffRec_Note,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpSignoffRec_By,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpSignoffRec_Date,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpWaitingSignoff_Note,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpWaitingSignoff_By,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpWaitingSignoff_Date,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpRoomRevision_Note,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpRoomRevision_By,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpRoomRevision_Date,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpRoomNotReady_Note,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpRoomNotReady_By,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpRoomNotReady_Date,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpSignOffSent_Note,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpSignOffSent_By,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpSignOffSent_Date,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpSignStainDt,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tInstallNotes,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpArt,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpEstComp,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpCommitted,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpMustShip,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.grInstallServiceCalls,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpArtNote,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpEstCompNote,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpCommittedNote,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tpMustShipNote,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tInstaller,System.ComponentModel.ISupportInitialize).BeginInit
        Me.UltraTabPageControl22.SuspendLayout
        CType(Me.tDiagNote,System.ComponentModel.ISupportInitialize).BeginInit
        Me.pDiag.SuspendLayout
        Me.pDiag0.SuspendLayout
        CType(Me.tDiagStatus,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDiagEISR,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDiagEOSR,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDiagEShipTo,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDiagESoldTo,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDiagDenNote,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDiagAccNote,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDiagNextSend,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDiagDenDate,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDiagDenBy,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDiagAccDate,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDiagAccBy,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDiagDen,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDiagAcc,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDiagRec,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDiagEmail,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDiagRecDate,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDiagRecBy,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDiagSent,System.ComponentModel.ISupportInitialize).BeginInit
        Me.TabControl.SuspendLayout
        CType(Me.pContJump,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.pContRefresh,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tSoldCounty,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.pContacts,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tOrdContSerial,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbEmailOSRShipments,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tsold_addr3,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbEmailShipment,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tProvince,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tCountry,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tSold_City,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tsold_email,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tsold_zip,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tsold_state,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tsold_addr2,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.gContacts,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tsold_addr1,System.ComponentModel.ISupportInitialize).BeginInit
        Me.pContact.SuspendLayout
        CType(Me.tContEmail,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tContFax,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tContCell,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tContPhone2,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tContAddr1,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tContType,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tContPayee,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tContName,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tContAddr3,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tContCity,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tContPhone1,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tContState,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tContCompany,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tContAddr2,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tContNote,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tContZip,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tsold_company,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbIsSplit,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tRefSpecialNote,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.UltraTextEditor2,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tRefPerc,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tRefName,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tRefAddr3,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tRefCity,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tRefZip,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tRefState,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tRefAddr2,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tRefAddr1,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tRefCompany,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tDefThirdPartyName,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cbDefThirdParty,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tAcctOpen,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.cb5Perc,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tSoldCustId,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tSold_Name,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tCustId,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.DefaultPage,System.ComponentModel.ISupportInitialize).BeginInit
        Me.UltraTabPageControl2.SuspendLayout
        CType(Me.TabItems,System.ComponentModel.ISupportInitialize).BeginInit
        Me.TabItems.SuspendLayout
        CType(Me.UltraDataSource1,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.UltraTextEditor1,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.tord_for,System.ComponentModel.ISupportInitialize).BeginInit
        CType(Me.Tab1,System.ComponentModel.ISupportInitialize).BeginInit
        Me.Tab1.SuspendLayout
        CType(Me.tOrd,System.ComponentModel.ISupportInitialize).BeginInit
        Me.Panel1.SuspendLayout
        Me.SuspendLayout
        '
        'UltraTabPageControl9
        '
        Me.UltraTabPageControl9.Controls.Add(Me.Label3)
        Me.UltraTabPageControl9.Controls.Add(Me.tSpecialNotes)
        Me.UltraTabPageControl9.Location = New System.Drawing.Point(2, 29)
        Me.UltraTabPageControl9.Name = "UltraTabPageControl9"
        Me.UltraTabPageControl9.Size = New System.Drawing.Size(1203, 109)
        '
        'Label3
        '
        Me.Label3.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left),System.Windows.Forms.AnchorStyles)
        Me.Label3.AutoSize = true
        Me.Label3.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.Label3.Location = New System.Drawing.Point(5, 88)
        Me.Label3.Name = "Label3"
        Me.Label3.Size = New System.Drawing.Size(317, 17)
        Me.Label3.TabIndex = 95
        Me.Label3.Tag = ""
        Me.Label3.Text = "Click here to get special notes from customer file."
        '
        'tSpecialNotes
        '
        Me.tSpecialNotes.AcceptsReturn = true
        Me.tSpecialNotes.Anchor = CType((((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom)  _
            Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tSpecialNotes.Enabled = false
        Me.tSpecialNotes.Location = New System.Drawing.Point(0, 0)
        Me.tSpecialNotes.Multiline = true
        Me.tSpecialNotes.Name = "tSpecialNotes"
        Me.tSpecialNotes.Scrollbars = System.Windows.Forms.ScrollBars.Vertical
        Me.tSpecialNotes.Size = New System.Drawing.Size(1209, 99)
        Me.tSpecialNotes.TabIndex = 94
        Me.tSpecialNotes.Tag = "edit"
        '
        'UltraTabPageControl10
        '
        Me.UltraTabPageControl10.Controls.Add(Me.GridRef)
        Me.UltraTabPageControl10.Location = New System.Drawing.Point(-10000, -10000)
        Me.UltraTabPageControl10.Name = "UltraTabPageControl10"
        Me.UltraTabPageControl10.Size = New System.Drawing.Size(1203, 109)
        '
        'GridRef
        '
        Me.GridRef.Anchor = CType((((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom)  _
            Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.GridRef.CalcManager = Me.UltraCalcManager1
        Me.GridRef.DisplayLayout.AutoFitStyle = Infragistics.Win.UltraWinGrid.AutoFitStyle.ResizeAllColumns
        UltraGridColumn182.Header.VisiblePosition = 0
        UltraGridColumn182.Width = 205
        UltraGridColumn183.Header.VisiblePosition = 1
        UltraGridColumn183.Width = 186
        UltraGridColumn184.Header.VisiblePosition = 2
        UltraGridColumn184.Width = 191
        UltraGridColumn185.Header.VisiblePosition = 3
        UltraGridColumn185.Width = 191
        Appearance1.TextHAlignAsString = "Right"
        UltraGridColumn186.CellAppearance = Appearance1
        UltraGridColumn186.Format = "$###,###,##0.00"
        UltraGridColumn186.Header.VisiblePosition = 4
        UltraGridColumn186.Width = 191
        UltraGridBand16.Columns.AddRange(New Object() {UltraGridColumn182, UltraGridColumn183, UltraGridColumn184, UltraGridColumn185, UltraGridColumn186})
        UltraGridBand16.SummaryFooterCaption = ""
        Me.GridRef.DisplayLayout.BandsSerializer.Add(UltraGridBand16)
        Me.GridRef.DisplayLayout.Override.AllowAddNew = Infragistics.Win.UltraWinGrid.AllowAddNew.No
        Me.GridRef.DisplayLayout.Override.AllowDelete = Infragistics.Win.DefaultableBoolean.[False]
        Me.GridRef.DisplayLayout.Override.AllowUpdate = Infragistics.Win.DefaultableBoolean.[False]
        Me.GridRef.DisplayLayout.Override.HeaderClickAction = Infragistics.Win.UltraWinGrid.HeaderClickAction.SortMulti
        Me.GridRef.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.GridRef.Location = New System.Drawing.Point(0, 0)
        Me.GridRef.Name = "GridRef"
        Me.GridRef.Size = New System.Drawing.Size(1006, 66)
        Me.GridRef.TabIndex = 1
        '
        'UltraCalcManager1
        '
        Me.UltraCalcManager1.CalcFrequency = Infragistics.Win.UltraWinCalcManager.CalcFrequency.Synchronous
        Me.UltraCalcManager1.ContainingControl = Me
        '
        'UltraTabPageControl3
        '
        Me.UltraTabPageControl3.Controls.Add(Me.lBOMImport)
        Me.UltraTabPageControl3.Controls.Add(Me.lDiscApproved)
        Me.UltraTabPageControl3.Location = New System.Drawing.Point(-10000, -10000)
        Me.UltraTabPageControl3.Name = "UltraTabPageControl3"
        Me.UltraTabPageControl3.Size = New System.Drawing.Size(1203, 109)
        '
        'lBOMImport
        '
        Me.lBOMImport.BackColor = System.Drawing.Color.WhiteSmoke
        Me.lBOMImport.Location = New System.Drawing.Point(10, 37)
        Me.lBOMImport.Name = "lBOMImport"
        Me.lBOMImport.Size = New System.Drawing.Size(892, 26)
        Me.lBOMImport.TabIndex = 1
        Me.lBOMImport.Text = "BOM has not been imported"
        '
        'lDiscApproved
        '
        Me.lDiscApproved.BackColor = System.Drawing.Color.WhiteSmoke
        Me.lDiscApproved.Location = New System.Drawing.Point(10, 9)
        Me.lDiscApproved.Name = "lDiscApproved"
        Me.lDiscApproved.Size = New System.Drawing.Size(892, 27)
        Me.lDiscApproved.TabIndex = 0
        Me.lDiscApproved.Text = "Discounts are not approved to go below base."
        '
        'UltraTabPageControl20
        '
        Me.UltraTabPageControl20.Controls.Add(Me.GridNotes)
        Me.UltraTabPageControl20.Location = New System.Drawing.Point(2, 29)
        Me.UltraTabPageControl20.Name = "UltraTabPageControl20"
        Me.UltraTabPageControl20.Size = New System.Drawing.Size(1469, 530)
        '
        'GridNotes
        '
        Me.GridNotes.CalcManager = Me.UltraCalcManager1
        Me.GridNotes.DisplayLayout.AutoFitStyle = Infragistics.Win.UltraWinGrid.AutoFitStyle.ResizeAllColumns
        UltraGridColumn123.Header.VisiblePosition = 0
        UltraGridColumn123.Hidden = true
        UltraGridColumn123.MaxWidth = 60
        UltraGridColumn124.Header.VisiblePosition = 1
        UltraGridColumn124.Hidden = true
        UltraGridColumn124.Width = 122
        UltraGridColumn125.Header.Caption = "Rev"
        UltraGridColumn125.Header.VisiblePosition = 2
        UltraGridColumn125.MaxWidth = 80
        UltraGridColumn125.Width = 34
        UltraGridColumn126.Header.VisiblePosition = 3
        UltraGridColumn126.Hidden = True
        UltraGridColumn127.Header.Caption = "User"
        UltraGridColumn127.Header.VisiblePosition = 5
        UltraGridColumn127.MaxWidth = 100
        UltraGridColumn127.MinWidth = 100
        UltraGridColumn127.Width = 100
        UltraGridColumn128.Format = "MM/dd/yyyy hh:mm"
        UltraGridColumn128.Header.Caption = "Date"
        UltraGridColumn128.Header.VisiblePosition = 4
        UltraGridColumn128.MaxWidth = 100
        UltraGridColumn128.MinWidth = 100
        UltraGridColumn128.Width = 100
        UltraGridColumn129.CellMultiLine = Infragistics.Win.DefaultableBoolean.[True]
        UltraGridColumn129.Header.Caption = "Note"
        UltraGridColumn129.Header.VisiblePosition = 6
        UltraGridColumn129.Width = 1089
        UltraGridColumn130.Header.Caption = "SR"
        UltraGridColumn130.Header.VisiblePosition = 7
        UltraGridColumn130.MaxWidth = 30
        UltraGridColumn130.MinWidth = 30
        UltraGridColumn130.Width = 30
        UltraGridColumn131.Header.Caption = "Pay Method"
        UltraGridColumn131.Header.VisiblePosition = 8
        UltraGridColumn131.MaxWidth = 100
        UltraGridColumn131.Width = 65
        UltraGridColumn132.Header.Caption = "SC"
        UltraGridColumn132.Header.VisiblePosition = 9
        UltraGridColumn132.MaxWidth = 30
        UltraGridColumn132.MinWidth = 30
        UltraGridColumn132.Width = 30
        UltraGridColumn133.Header.VisiblePosition = 10
        UltraGridColumn133.Hidden = True
        UltraGridColumn133.Width = 88
        UltraGridColumn134.Header.VisiblePosition = 11
        UltraGridColumn134.Hidden = True
        UltraGridColumn134.Width = 103
        UltraGridColumn135.Header.VisiblePosition = 12
        UltraGridColumn135.Hidden = True
        UltraGridColumn135.Width = 130
        UltraGridBand9.Columns.AddRange(New Object() {UltraGridColumn123, UltraGridColumn124, UltraGridColumn125, UltraGridColumn126, UltraGridColumn127, UltraGridColumn128, UltraGridColumn129, UltraGridColumn130, UltraGridColumn131, UltraGridColumn132, UltraGridColumn133, UltraGridColumn134, UltraGridColumn135})
        Me.GridNotes.DisplayLayout.BandsSerializer.Add(UltraGridBand9)
        Me.GridNotes.DisplayLayout.MaxRowScrollRegions = 1
        Me.GridNotes.DisplayLayout.Override.AllowAddNew = Infragistics.Win.UltraWinGrid.AllowAddNew.No
        Me.GridNotes.DisplayLayout.Override.AllowDelete = Infragistics.Win.DefaultableBoolean.[False]
        Me.GridNotes.DisplayLayout.Override.AllowUpdate = Infragistics.Win.DefaultableBoolean.[False]
        Me.GridNotes.DisplayLayout.Override.RowSizing = Infragistics.Win.UltraWinGrid.RowSizing.AutoFixed
        Me.GridNotes.DisplayLayout.ScrollBounds = Infragistics.Win.UltraWinGrid.ScrollBounds.ScrollToFill
        Me.GridNotes.DisplayLayout.ScrollStyle = Infragistics.Win.UltraWinGrid.ScrollStyle.Immediate
        Me.GridNotes.Dock = System.Windows.Forms.DockStyle.Fill
        Me.GridNotes.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.GridNotes.Location = New System.Drawing.Point(0, 0)
        Me.GridNotes.Margin = New System.Windows.Forms.Padding(0)
        Me.GridNotes.Name = "GridNotes"
        Me.GridNotes.Size = New System.Drawing.Size(1469, 530)
        Me.GridNotes.TabIndex = 1
        '
        'UltraTabPageControl21
        '
        Me.UltraTabPageControl21.Controls.Add(Me.bResendEmail)
        Me.UltraTabPageControl21.Controls.Add(Me.tEmailBody)
        Me.UltraTabPageControl21.Controls.Add(Me.gEmails)
        Me.UltraTabPageControl21.Location = New System.Drawing.Point(-10000, -10000)
        Me.UltraTabPageControl21.Name = "UltraTabPageControl21"
        Me.UltraTabPageControl21.Size = New System.Drawing.Size(1469, 530)
        '
        'bResendEmail
        '
        Me.bResendEmail.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
        Me.bResendEmail.Location = New System.Drawing.Point(6, 496)
        Me.bResendEmail.Name = "bResendEmail"
        Me.bResendEmail.Size = New System.Drawing.Size(161, 26)
        Me.bResendEmail.TabIndex = 2
        Me.bResendEmail.Text = "Resend Email"
        '
        'tEmailBody
        '
        Me.tEmailBody.Anchor = CType((((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom) _
            Or System.Windows.Forms.AnchorStyles.Left) _
            Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tEmailBody.Location = New System.Drawing.Point(433, 3)
        Me.tEmailBody.MinimumSize = New System.Drawing.Size(20, 20)
        Me.tEmailBody.Name = "tEmailBody"
        Me.tEmailBody.Size = New System.Drawing.Size(1034, 519)
        Me.tEmailBody.TabIndex = 1
        '
        'gEmails
        '
        Me.gEmails.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom) _
            Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
        Me.gEmails.CalcManager = Me.UltraCalcManager1
        Appearance6.BackColor = System.Drawing.SystemColors.Window
        Appearance6.BorderColor = System.Drawing.SystemColors.InactiveCaption
        Me.gEmails.DisplayLayout.Appearance = Appearance6
        UltraGridColumn136.Header.VisiblePosition = 0
        UltraGridColumn136.Hidden = True
        UltraGridColumn137.Header.Caption = "Date"
        UltraGridColumn137.Header.VisiblePosition = 1
        UltraGridColumn138.Header.Caption = "To"
        UltraGridColumn138.Header.VisiblePosition = 2
        UltraGridColumn139.Header.Caption = "From"
        UltraGridColumn139.Header.VisiblePosition = 3
        UltraGridColumn140.Header.VisiblePosition = 4
        UltraGridColumn140.Hidden = True
        UltraGridColumn141.Header.VisiblePosition = 5
        UltraGridColumn141.Hidden = True
        UltraGridColumn142.Header.VisiblePosition = 6
        UltraGridColumn142.Hidden = True
        UltraGridColumn143.Header.VisiblePosition = 7
        UltraGridColumn143.Hidden = True
        UltraGridColumn144.Header.VisiblePosition = 8
        UltraGridColumn144.Hidden = True
        UltraGridBand10.Columns.AddRange(New Object() {UltraGridColumn136, UltraGridColumn137, UltraGridColumn138, UltraGridColumn139, UltraGridColumn140, UltraGridColumn141, UltraGridColumn142, UltraGridColumn143, UltraGridColumn144})
        Me.gEmails.DisplayLayout.BandsSerializer.Add(UltraGridBand10)
        Me.gEmails.DisplayLayout.BorderStyle = Infragistics.Win.UIElementBorderStyle.Solid
        Me.gEmails.DisplayLayout.CaptionVisible = Infragistics.Win.DefaultableBoolean.[False]
        Appearance7.BackColor = System.Drawing.SystemColors.ActiveBorder
        Appearance7.BackColor2 = System.Drawing.SystemColors.ControlDark
        Appearance7.BackGradientStyle = Infragistics.Win.GradientStyle.Vertical
        Appearance7.BorderColor = System.Drawing.SystemColors.Window
        Me.gEmails.DisplayLayout.GroupByBox.Appearance = Appearance7
        Appearance8.ForeColor = System.Drawing.SystemColors.GrayText
        Me.gEmails.DisplayLayout.GroupByBox.BandLabelAppearance = Appearance8
        Me.gEmails.DisplayLayout.GroupByBox.BorderStyle = Infragistics.Win.UIElementBorderStyle.Solid
        Appearance9.BackColor = System.Drawing.SystemColors.ControlLightLight
        Appearance9.BackColor2 = System.Drawing.SystemColors.Control
        Appearance9.BackGradientStyle = Infragistics.Win.GradientStyle.Horizontal
        Appearance9.ForeColor = System.Drawing.SystemColors.GrayText
        Me.gEmails.DisplayLayout.GroupByBox.PromptAppearance = Appearance9
        Me.gEmails.DisplayLayout.MaxColScrollRegions = 1
        Me.gEmails.DisplayLayout.MaxRowScrollRegions = 1
        Appearance10.BackColor = System.Drawing.SystemColors.Window
        Appearance10.ForeColor = System.Drawing.SystemColors.ControlText
        Me.gEmails.DisplayLayout.Override.ActiveCellAppearance = Appearance10
        Appearance11.BackColor = System.Drawing.SystemColors.Highlight
        Appearance11.ForeColor = System.Drawing.SystemColors.HighlightText
        Me.gEmails.DisplayLayout.Override.ActiveRowAppearance = Appearance11
        Me.gEmails.DisplayLayout.Override.BorderStyleCell = Infragistics.Win.UIElementBorderStyle.Dotted
        Me.gEmails.DisplayLayout.Override.BorderStyleRow = Infragistics.Win.UIElementBorderStyle.Dotted
        Appearance12.BackColor = System.Drawing.SystemColors.Window
        Me.gEmails.DisplayLayout.Override.CardAreaAppearance = Appearance12
        Appearance35.BorderColor = System.Drawing.Color.Silver
        Appearance35.TextTrimming = Infragistics.Win.TextTrimming.EllipsisCharacter
        Me.gEmails.DisplayLayout.Override.CellAppearance = Appearance35
        Me.gEmails.DisplayLayout.Override.CellClickAction = Infragistics.Win.UltraWinGrid.CellClickAction.EditAndSelectText
        Me.gEmails.DisplayLayout.Override.CellPadding = 0
        Appearance38.BackColor = System.Drawing.SystemColors.Control
        Appearance38.BackColor2 = System.Drawing.SystemColors.ControlDark
        Appearance38.BackGradientAlignment = Infragistics.Win.GradientAlignment.Element
        Appearance38.BackGradientStyle = Infragistics.Win.GradientStyle.Horizontal
        Appearance38.BorderColor = System.Drawing.SystemColors.Window
        Me.gEmails.DisplayLayout.Override.GroupByRowAppearance = Appearance38
        Appearance41.TextHAlignAsString = "Left"
        Me.gEmails.DisplayLayout.Override.HeaderAppearance = Appearance41
        Me.gEmails.DisplayLayout.Override.HeaderClickAction = Infragistics.Win.UltraWinGrid.HeaderClickAction.SortMulti
        Me.gEmails.DisplayLayout.Override.HeaderStyle = Infragistics.Win.HeaderStyle.WindowsXPCommand
        Appearance44.BackColor = System.Drawing.SystemColors.Window
        Appearance44.BorderColor = System.Drawing.Color.Silver
        Me.gEmails.DisplayLayout.Override.RowAppearance = Appearance44
        Me.gEmails.DisplayLayout.Override.RowSelectors = Infragistics.Win.DefaultableBoolean.[False]
        Appearance50.BackColor = System.Drawing.SystemColors.ControlLight
        Me.gEmails.DisplayLayout.Override.TemplateAddRowAppearance = Appearance50
        Me.gEmails.DisplayLayout.ScrollBounds = Infragistics.Win.UltraWinGrid.ScrollBounds.ScrollToFill
        Me.gEmails.DisplayLayout.ScrollStyle = Infragistics.Win.UltraWinGrid.ScrollStyle.Immediate
        Me.gEmails.DisplayLayout.ViewStyleBand = Infragistics.Win.UltraWinGrid.ViewStyleBand.OutlookGroupBy
        Me.gEmails.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.gEmails.Location = New System.Drawing.Point(6, 3)
        Me.gEmails.Name = "gEmails"
        Me.gEmails.Size = New System.Drawing.Size(421, 471)
        Me.gEmails.TabIndex = 0
        '
        'UltraTabPageControl23
        '
        Me.UltraTabPageControl23.Controls.Add(Me.ugDesignNotes)
        Me.UltraTabPageControl23.Location = New System.Drawing.Point(-10000, -10000)
        Me.UltraTabPageControl23.Name = "UltraTabPageControl23"
        Me.UltraTabPageControl23.Size = New System.Drawing.Size(1469, 530)
        '
        'ugDesignNotes
        '
        Me.ugDesignNotes.CalcManager = Me.UltraCalcManager1
        Me.ugDesignNotes.DisplayLayout.AutoFitStyle = Infragistics.Win.UltraWinGrid.AutoFitStyle.ResizeAllColumns
        UltraGridColumn145.Header.VisiblePosition = 0
        UltraGridColumn145.Hidden = True
        UltraGridColumn145.MaxWidth = 60
        UltraGridColumn146.Header.VisiblePosition = 1
        UltraGridColumn146.Hidden = True
        UltraGridColumn146.Width = 122
        UltraGridColumn147.Header.Caption = "Rev"
        UltraGridColumn147.Header.VisiblePosition = 2
        UltraGridColumn147.MaxWidth = 80
        UltraGridColumn147.Width = 31
        UltraGridColumn148.Header.VisiblePosition = 3
        UltraGridColumn148.Hidden = True
        UltraGridColumn149.Header.Caption = "User"
        UltraGridColumn149.Header.VisiblePosition = 5
        UltraGridColumn149.MaxWidth = 100
        UltraGridColumn149.MinWidth = 100
        UltraGridColumn149.Width = 100
        UltraGridColumn150.Format = "MM/dd/yyyy hh:mm"
        UltraGridColumn150.Header.Caption = "Date"
        UltraGridColumn150.Header.VisiblePosition = 4
        UltraGridColumn150.MaxWidth = 100
        UltraGridColumn150.MinWidth = 100
        UltraGridColumn150.Width = 100
        UltraGridColumn151.CellMultiLine = Infragistics.Win.DefaultableBoolean.[True]
        UltraGridColumn151.Header.Caption = "Note"
        UltraGridColumn151.Header.VisiblePosition = 6
        UltraGridColumn151.Width = 1089
        UltraGridColumn152.Header.Caption = "SR"
        UltraGridColumn152.Header.VisiblePosition = 7
        UltraGridColumn152.MaxWidth = 30
        UltraGridColumn152.MinWidth = 30
        UltraGridColumn152.Width = 30
        UltraGridColumn153.Header.Caption = "Pay Method"
        UltraGridColumn153.Header.VisiblePosition = 8
        UltraGridColumn153.MaxWidth = 100
        UltraGridColumn153.Width = 68
        UltraGridColumn154.Header.Caption = "SC"
        UltraGridColumn154.Header.VisiblePosition = 9
        UltraGridColumn154.MaxWidth = 30
        UltraGridColumn154.MinWidth = 30
        UltraGridColumn154.Width = 30
        UltraGridColumn155.Header.VisiblePosition = 10
        UltraGridColumn155.Hidden = True
        UltraGridColumn155.Width = 88
        UltraGridColumn156.Header.VisiblePosition = 11
        UltraGridColumn156.Hidden = True
        UltraGridColumn156.Width = 103
        UltraGridColumn157.Header.VisiblePosition = 12
        UltraGridColumn157.Hidden = True
        UltraGridColumn157.Width = 130
        UltraGridBand11.Columns.AddRange(New Object() {UltraGridColumn145, UltraGridColumn146, UltraGridColumn147, UltraGridColumn148, UltraGridColumn149, UltraGridColumn150, UltraGridColumn151, UltraGridColumn152, UltraGridColumn153, UltraGridColumn154, UltraGridColumn155, UltraGridColumn156, UltraGridColumn157})
        Me.ugDesignNotes.DisplayLayout.BandsSerializer.Add(UltraGridBand11)
        Me.ugDesignNotes.DisplayLayout.MaxRowScrollRegions = 1
        Me.ugDesignNotes.DisplayLayout.Override.AllowAddNew = Infragistics.Win.UltraWinGrid.AllowAddNew.No
        Me.ugDesignNotes.DisplayLayout.Override.AllowDelete = Infragistics.Win.DefaultableBoolean.[False]
        Me.ugDesignNotes.DisplayLayout.Override.AllowUpdate = Infragistics.Win.DefaultableBoolean.[False]
        Me.ugDesignNotes.DisplayLayout.Override.RowSizing = Infragistics.Win.UltraWinGrid.RowSizing.AutoFixed
        Me.ugDesignNotes.DisplayLayout.ScrollBounds = Infragistics.Win.UltraWinGrid.ScrollBounds.ScrollToFill
        Me.ugDesignNotes.DisplayLayout.ScrollStyle = Infragistics.Win.UltraWinGrid.ScrollStyle.Immediate
        Me.ugDesignNotes.Dock = System.Windows.Forms.DockStyle.Fill
        Me.ugDesignNotes.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.ugDesignNotes.Location = New System.Drawing.Point(0, 0)
        Me.ugDesignNotes.Margin = New System.Windows.Forms.Padding(0)
        Me.ugDesignNotes.Name = "ugDesignNotes"
        Me.ugDesignNotes.Size = New System.Drawing.Size(1469, 530)
        Me.ugDesignNotes.TabIndex = 2
        '
        'UltraTabPageControl15
        '
        Me.UltraTabPageControl15.AutoScroll = True
        Me.UltraTabPageControl15.Controls.Add(Me.pRR1)
        Me.UltraTabPageControl15.Location = New System.Drawing.Point(2, 29)
        Me.UltraTabPageControl15.Name = "UltraTabPageControl15"
        Me.UltraTabPageControl15.Size = New System.Drawing.Size(1476, 604)
        '
        'pRR1
        '
        Me.pRR1.Anchor = CType((((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom) _
            Or System.Windows.Forms.AnchorStyles.Left) _
            Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.pRR1.BackColor = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.pRR1.Controls.Add(Me.rrProvince)
        Me.pRR1.Controls.Add(Me.rrCountry)
        Me.pRR1.Controls.Add(Me.rrCity)
        Me.pRR1.Controls.Add(Me.rrEmail)
        Me.pRR1.Controls.Add(Me.rrZip)
        Me.pRR1.Controls.Add(Me.rrState)
        Me.pRR1.Controls.Add(Me.rrAddr2)
        Me.pRR1.Controls.Add(Me.rrAddr1)
        Me.pRR1.Controls.Add(Me.rrCompany)
        Me.pRR1.Controls.Add(Me.UltraButton1)
        Me.pRR1.Controls.Add(Me.rrCounty)
        Me.pRR1.Controls.Add(Me.rrName)
        Me.pRR1.Controls.Add(Me.rrCell)
        Me.pRR1.Controls.Add(Me.rrFax)
        Me.pRR1.Controls.Add(Me.rrPhone2)
        Me.pRR1.Controls.Add(Me.rrAddr3)
        Me.pRR1.Controls.Add(Me.UltraLabel111)
        Me.pRR1.Controls.Add(Me.UltraLabel112)
        Me.pRR1.Controls.Add(Me.UltraLabel113)
        Me.pRR1.Controls.Add(Me.UltraLabel114)
        Me.pRR1.Controls.Add(Me.UltraLabel115)
        Me.pRR1.Controls.Add(Me.UltraLabel116)
        Me.pRR1.Controls.Add(Me.UltraLabel117)
        Me.pRR1.Controls.Add(Me.UltraLabel121)
        Me.pRR1.Controls.Add(Me.UltraLabel122)
        Me.pRR1.Controls.Add(Me.UltraLabel123)
        Me.pRR1.Controls.Add(Me.UltraLabel124)
        Me.pRR1.Controls.Add(Me.UltraLabel125)
        Me.pRR1.Controls.Add(Me.UltraLabel126)
        Me.pRR1.Controls.Add(Me.UltraLabel127)
        Me.pRR1.Controls.Add(Me.UltraLabel110)
        Me.pRR1.Enabled = False
        Me.pRR1.Location = New System.Drawing.Point(0, 1)
        Me.pRR1.Name = "pRR1"
        Me.pRR1.Size = New System.Drawing.Size(1472, 597)
        Me.pRR1.TabIndex = 166
        Me.pRR1.Tag = "edit"
        '
        'rrProvince
        '
        Me.rrProvince.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.rrProvince.Location = New System.Drawing.Point(94, 284)
        Me.rrProvince.Name = "rrProvince"
        Me.rrProvince.Size = New System.Drawing.Size(192, 28)
        Me.rrProvince.TabIndex = 148
        Me.rrProvince.Tag = ""
        '
        'rrCountry
        '
        Me.rrCountry.CalcManager = Me.UltraCalcManager1
        Me.rrCountry.CheckedListSettings.CheckStateMember = ""
        Me.rrCountry.DropDownStyle = Infragistics.Win.UltraWinGrid.UltraComboStyle.DropDownList
        Me.rrCountry.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.rrCountry.Location = New System.Drawing.Point(94, 62)
        Me.rrCountry.Name = "rrCountry"
        Me.rrCountry.Size = New System.Drawing.Size(192, 29)
        Me.rrCountry.TabIndex = 137
        Me.rrCountry.Tag = ""
        '
        'rrCity
        '
        Me.rrCity.CalcManager = Me.UltraCalcManager1
        Me.rrCity.CheckedListSettings.CheckStateMember = ""
        Me.rrCity.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.rrCity.Location = New System.Drawing.Point(94, 201)
        Me.rrCity.Name = "rrCity"
        Me.rrCity.Size = New System.Drawing.Size(192, 29)
        Me.rrCity.TabIndex = 145
        Me.rrCity.Tag = ""
        '
        'rrEmail
        '
        Me.rrEmail.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.rrEmail.Location = New System.Drawing.Point(94, 404)
        Me.rrEmail.Name = "rrEmail"
        Me.rrEmail.Size = New System.Drawing.Size(163, 28)
        Me.rrEmail.TabIndex = 154
        Me.rrEmail.Tag = ""
        '
        'rrZip
        '
        Me.rrZip.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.rrZip.Location = New System.Drawing.Point(94, 173)
        Me.rrZip.Name = "rrZip"
        Me.rrZip.Size = New System.Drawing.Size(192, 28)
        Me.rrZip.TabIndex = 143
        Me.rrZip.Tag = ""
        '
        'rrState
        '
        Me.rrState.CharacterCasing = System.Windows.Forms.CharacterCasing.Upper
        Me.rrState.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.rrState.Location = New System.Drawing.Point(94, 228)
        Me.rrState.Name = "rrState"
        Me.rrState.Size = New System.Drawing.Size(192, 28)
        Me.rrState.TabIndex = 146
        Me.rrState.Tag = ""
        '
        'rrAddr2
        '
        Me.rrAddr2.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.rrAddr2.Location = New System.Drawing.Point(94, 118)
        Me.rrAddr2.Name = "rrAddr2"
        Me.rrAddr2.Size = New System.Drawing.Size(192, 28)
        Me.rrAddr2.TabIndex = 140
        Me.rrAddr2.Tag = ""
        '
        'rrAddr1
        '
        Me.rrAddr1.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.rrAddr1.Location = New System.Drawing.Point(94, 90)
        Me.rrAddr1.Name = "rrAddr1"
        Me.rrAddr1.Size = New System.Drawing.Size(192, 28)
        Me.rrAddr1.TabIndex = 139
        Me.rrAddr1.Tag = ""
        '
        'rrCompany
        '
        Me.rrCompany.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.rrCompany.Location = New System.Drawing.Point(94, 35)
        Me.rrCompany.Name = "rrCompany"
        Me.rrCompany.Size = New System.Drawing.Size(192, 28)
        Me.rrCompany.TabIndex = 136
        Me.rrCompany.Tag = ""
        '
        'UltraButton1
        '
        Me.UltraButton1.ButtonStyle = Infragistics.Win.UIElementButtonStyle.FlatBorderless
        Me.UltraButton1.Location = New System.Drawing.Point(257, 404)
        Me.UltraButton1.Name = "UltraButton1"
        Me.UltraButton1.Size = New System.Drawing.Size(38, 28)
        Me.UltraButton1.TabIndex = 165
        '
        'rrCounty
        '
        Me.rrCounty.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.rrCounty.Location = New System.Drawing.Point(94, 256)
        Me.rrCounty.Name = "rrCounty"
        Me.rrCounty.Size = New System.Drawing.Size(192, 28)
        Me.rrCounty.TabIndex = 163
        Me.rrCounty.Tag = ""
        '
        'rrName
        '
        Me.rrName.CalcManager = Me.UltraCalcManager1
        Me.rrName.CheckedListSettings.CheckStateMember = ""
        Me.rrName.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.rrName.Location = New System.Drawing.Point(94, 7)
        Me.rrName.Name = "rrName"
        Me.rrName.Size = New System.Drawing.Size(192, 29)
        Me.rrName.TabIndex = 135
        Me.rrName.Tag = ""
        '
        'rrCell
        '
        Appearance2.FontData.SizeInPoints = 10.0!
        Me.rrCell.Appearance = Appearance2
        Me.rrCell.Location = New System.Drawing.Point(94, 376)
        Me.rrCell.Name = "rrCell"
        Me.rrCell.Size = New System.Drawing.Size(192, 26)
        Me.rrCell.TabIndex = 152
        Me.rrCell.Tag = ""
        '
        'rrFax
        '
        Appearance3.FontData.SizeInPoints = 10.0!
        Me.rrFax.Appearance = Appearance3
        Me.rrFax.Location = New System.Drawing.Point(94, 348)
        Me.rrFax.Name = "rrFax"
        Me.rrFax.Size = New System.Drawing.Size(192, 26)
        Me.rrFax.TabIndex = 151
        Me.rrFax.Tag = ""
        '
        'rrPhone2
        '
        Appearance4.FontData.SizeInPoints = 10.0!
        Me.rrPhone2.Appearance = Appearance4
        Me.rrPhone2.Location = New System.Drawing.Point(94, 321)
        Me.rrPhone2.Name = "rrPhone2"
        Me.rrPhone2.Size = New System.Drawing.Size(192, 26)
        Me.rrPhone2.TabIndex = 150
        Me.rrPhone2.Tag = ""
        '
        'rrAddr3
        '
        Me.rrAddr3.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.rrAddr3.Location = New System.Drawing.Point(94, 145)
        Me.rrAddr3.Name = "rrAddr3"
        Me.rrAddr3.Size = New System.Drawing.Size(192, 28)
        Me.rrAddr3.TabIndex = 142
        Me.rrAddr3.Tag = ""
        '
        'UltraLabel111
        '
        Me.UltraLabel111.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel111.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel111.Location = New System.Drawing.Point(7, 145)
        Me.UltraLabel111.Name = "UltraLabel111"
        Me.UltraLabel111.Size = New System.Drawing.Size(125, 19)
        Me.UltraLabel111.TabIndex = 162
        Me.UltraLabel111.Text = "Addr3"
        '
        'UltraLabel112
        '
        Me.UltraLabel112.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel112.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel112.Location = New System.Drawing.Point(7, 284)
        Me.UltraLabel112.Name = "UltraLabel112"
        Me.UltraLabel112.Size = New System.Drawing.Size(125, 18)
        Me.UltraLabel112.TabIndex = 161
        Me.UltraLabel112.Text = "Province"
        '
        'UltraLabel113
        '
        Me.UltraLabel113.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel113.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel113.Location = New System.Drawing.Point(7, 404)
        Me.UltraLabel113.Name = "UltraLabel113"
        Me.UltraLabel113.Size = New System.Drawing.Size(125, 18)
        Me.UltraLabel113.TabIndex = 160
        Me.UltraLabel113.Text = "Email"
        '
        'UltraLabel114
        '
        Me.UltraLabel114.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel114.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel114.Location = New System.Drawing.Point(7, 376)
        Me.UltraLabel114.Name = "UltraLabel114"
        Me.UltraLabel114.Size = New System.Drawing.Size(125, 19)
        Me.UltraLabel114.TabIndex = 159
        Me.UltraLabel114.Text = "Cell Phone"
        '
        'UltraLabel115
        '
        Me.UltraLabel115.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel115.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel115.Location = New System.Drawing.Point(7, 348)
        Me.UltraLabel115.Name = "UltraLabel115"
        Me.UltraLabel115.Size = New System.Drawing.Size(125, 19)
        Me.UltraLabel115.TabIndex = 158
        Me.UltraLabel115.Text = "Fax"
        '
        'UltraLabel116
        '
        Me.UltraLabel116.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel116.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel116.Location = New System.Drawing.Point(7, 321)
        Me.UltraLabel116.Name = "UltraLabel116"
        Me.UltraLabel116.Size = New System.Drawing.Size(125, 18)
        Me.UltraLabel116.TabIndex = 157
        Me.UltraLabel116.Text = "Phone2"
        '
        'UltraLabel117
        '
        Me.UltraLabel117.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel117.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel117.Location = New System.Drawing.Point(7, 173)
        Me.UltraLabel117.Name = "UltraLabel117"
        Me.UltraLabel117.Size = New System.Drawing.Size(125, 19)
        Me.UltraLabel117.TabIndex = 156
        Me.UltraLabel117.Text = "Zip"
        '
        'UltraLabel121
        '
        Me.UltraLabel121.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel121.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel121.Location = New System.Drawing.Point(7, 228)
        Me.UltraLabel121.Name = "UltraLabel121"
        Me.UltraLabel121.Size = New System.Drawing.Size(125, 19)
        Me.UltraLabel121.TabIndex = 155
        Me.UltraLabel121.Text = "State"
        '
        'UltraLabel122
        '
        Me.UltraLabel122.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel122.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel122.Location = New System.Drawing.Point(7, 201)
        Me.UltraLabel122.Name = "UltraLabel122"
        Me.UltraLabel122.Size = New System.Drawing.Size(125, 18)
        Me.UltraLabel122.TabIndex = 153
        Me.UltraLabel122.Text = "City"
        '
        'UltraLabel123
        '
        Me.UltraLabel123.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel123.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel123.Location = New System.Drawing.Point(7, 118)
        Me.UltraLabel123.Name = "UltraLabel123"
        Me.UltraLabel123.Size = New System.Drawing.Size(125, 18)
        Me.UltraLabel123.TabIndex = 149
        Me.UltraLabel123.Text = "Addr2"
        '
        'UltraLabel124
        '
        Me.UltraLabel124.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel124.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel124.Location = New System.Drawing.Point(7, 90)
        Me.UltraLabel124.Name = "UltraLabel124"
        Me.UltraLabel124.Size = New System.Drawing.Size(125, 18)
        Me.UltraLabel124.TabIndex = 147
        Me.UltraLabel124.Text = "Addr1"
        '
        'UltraLabel125
        '
        Me.UltraLabel125.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel125.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel125.Location = New System.Drawing.Point(7, 62)
        Me.UltraLabel125.Name = "UltraLabel125"
        Me.UltraLabel125.Size = New System.Drawing.Size(125, 19)
        Me.UltraLabel125.TabIndex = 144
        Me.UltraLabel125.Text = "Country"
        '
        'UltraLabel126
        '
        Me.UltraLabel126.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel126.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel126.Location = New System.Drawing.Point(7, 35)
        Me.UltraLabel126.Name = "UltraLabel126"
        Me.UltraLabel126.Size = New System.Drawing.Size(125, 18)
        Me.UltraLabel126.TabIndex = 141
        Me.UltraLabel126.Text = "Company"
        '
        'UltraLabel127
        '
        Me.UltraLabel127.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel127.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel127.Location = New System.Drawing.Point(7, 7)
        Me.UltraLabel127.Name = "UltraLabel127"
        Me.UltraLabel127.Size = New System.Drawing.Size(125, 18)
        Me.UltraLabel127.TabIndex = 138
        Me.UltraLabel127.Text = "Name"
        '
        'UltraLabel110
        '
        Me.UltraLabel110.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel110.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel110.Location = New System.Drawing.Point(7, 256)
        Me.UltraLabel110.Name = "UltraLabel110"
        Me.UltraLabel110.Size = New System.Drawing.Size(125, 19)
        Me.UltraLabel110.TabIndex = 164
        Me.UltraLabel110.Text = "County"
        '
        'UltraTabPageControl18
        '
        Me.UltraTabPageControl18.Location = New System.Drawing.Point(-10000, -10000)
        Me.UltraTabPageControl18.Name = "UltraTabPageControl18"
        Me.UltraTabPageControl18.Size = New System.Drawing.Size(1476, 604)
        '
        'UltraTabPageControl16
        '
        Me.UltraTabPageControl16.Controls.Add(Me.tRFCondition)
        Me.UltraTabPageControl16.Controls.Add(Me.tRFItemsReturned)
        Me.UltraTabPageControl16.Controls.Add(Me.tRFNameOnReturn)
        Me.UltraTabPageControl16.Controls.Add(Me.UltraLabel151)
        Me.UltraTabPageControl16.Controls.Add(Me.UltraLabel150)
        Me.UltraTabPageControl16.Controls.Add(Me.UltraLabel149)
        Me.UltraTabPageControl16.Controls.Add(Me.UltraLabel148)
        Me.UltraTabPageControl16.Controls.Add(Me.dtRFReturnedDate)
        Me.UltraTabPageControl16.Controls.Add(Me.UltraLabel147)
        Me.UltraTabPageControl16.Controls.Add(Me.rbRFCredit)
        Me.UltraTabPageControl16.Controls.Add(Me.UltraLabel146)
        Me.UltraTabPageControl16.Controls.Add(Me.tRFTracking)
        Me.UltraTabPageControl16.Controls.Add(Me.tRFCarrier)
        Me.UltraTabPageControl16.Controls.Add(Me.UltraLabel140)
        Me.UltraTabPageControl16.Controls.Add(Me.UltraLabel139)
        Me.UltraTabPageControl16.Controls.Add(Me.UltraLabel138)
        Me.UltraTabPageControl16.Controls.Add(Me.rbRFClaim)
        Me.UltraTabPageControl16.Controls.Add(Me.UltraLabel137)
        Me.UltraTabPageControl16.Controls.Add(Me.rbRFQC)
        Me.UltraTabPageControl16.Controls.Add(Me.UltraLabel136)
        Me.UltraTabPageControl16.Controls.Add(Me.rbRFCreditCard)
        Me.UltraTabPageControl16.Controls.Add(Me.UltraLabel135)
        Me.UltraTabPageControl16.Controls.Add(Me.rbRFShipping)
        Me.UltraTabPageControl16.Controls.Add(Me.rbRFRestocking)
        Me.UltraTabPageControl16.Controls.Add(Me.rbRFSendingReplacement)
        Me.UltraTabPageControl16.Controls.Add(Me.rbRFSendImmediately)
        Me.UltraTabPageControl16.Controls.Add(Me.tRFShipping)
        Me.UltraTabPageControl16.Controls.Add(Me.UltraLabel133)
        Me.UltraTabPageControl16.Controls.Add(Me.UltraLabel134)
        Me.UltraTabPageControl16.Controls.Add(Me.tRFRestocking)
        Me.UltraTabPageControl16.Controls.Add(Me.UltraLabel132)
        Me.UltraTabPageControl16.Controls.Add(Me.UltraLabel131)
        Me.UltraTabPageControl16.Controls.Add(Me.UltraLabel130)
        Me.UltraTabPageControl16.Controls.Add(Me.UltraLabel129)
        Me.UltraTabPageControl16.Controls.Add(Me.UltraGrid1)
        Me.UltraTabPageControl16.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraTabPageControl16.Location = New System.Drawing.Point(-10000, -10000)
        Me.UltraTabPageControl16.Name = "UltraTabPageControl16"
        Me.UltraTabPageControl16.Size = New System.Drawing.Size(1476, 604)
        '
        'tRFCondition
        '
        Me.tRFCondition.Enabled = False
        Me.tRFCondition.Location = New System.Drawing.Point(192, 609)
        Me.tRFCondition.Multiline = True
        Me.tRFCondition.Name = "tRFCondition"
        Me.tRFCondition.Scrollbars = System.Windows.Forms.ScrollBars.Vertical
        Me.tRFCondition.Size = New System.Drawing.Size(816, 46)
        Me.tRFCondition.TabIndex = 160
        Me.tRFCondition.Tag = "edit"
        '
        'tRFItemsReturned
        '
        Me.tRFItemsReturned.Enabled = False
        Me.tRFItemsReturned.Location = New System.Drawing.Point(192, 554)
        Me.tRFItemsReturned.Multiline = True
        Me.tRFItemsReturned.Name = "tRFItemsReturned"
        Me.tRFItemsReturned.Scrollbars = System.Windows.Forms.ScrollBars.Vertical
        Me.tRFItemsReturned.Size = New System.Drawing.Size(816, 46)
        Me.tRFItemsReturned.TabIndex = 159
        Me.tRFItemsReturned.Tag = "edit"
        '
        'tRFNameOnReturn
        '
        Me.tRFNameOnReturn.Enabled = False
        Me.tRFNameOnReturn.Location = New System.Drawing.Point(192, 526)
        Me.tRFNameOnReturn.Name = "tRFNameOnReturn"
        Me.tRFNameOnReturn.Size = New System.Drawing.Size(211, 24)
        Me.tRFNameOnReturn.TabIndex = 158
        Me.tRFNameOnReturn.Tag = "edit"
        '
        'UltraLabel151
        '
        Me.UltraLabel151.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel151.Location = New System.Drawing.Point(48, 609)
        Me.UltraLabel151.Name = "UltraLabel151"
        Me.UltraLabel151.Size = New System.Drawing.Size(125, 46)
        Me.UltraLabel151.TabIndex = 156
        Me.UltraLabel151.Text = "Condition of returned items"
        '
        'UltraLabel150
        '
        Me.UltraLabel150.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel150.Location = New System.Drawing.Point(48, 563)
        Me.UltraLabel150.Name = "UltraLabel150"
        Me.UltraLabel150.Size = New System.Drawing.Size(134, 19)
        Me.UltraLabel150.TabIndex = 155
        Me.UltraLabel150.Text = "Items returned"
        '
        'UltraLabel149
        '
        Me.UltraLabel149.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel149.Location = New System.Drawing.Point(48, 535)
        Me.UltraLabel149.Name = "UltraLabel149"
        Me.UltraLabel149.Size = New System.Drawing.Size(134, 19)
        Me.UltraLabel149.TabIndex = 154
        Me.UltraLabel149.Text = "Name on return"
        '
        'UltraLabel148
        '
        Me.UltraLabel148.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel148.Location = New System.Drawing.Point(48, 508)
        Me.UltraLabel148.Name = "UltraLabel148"
        Me.UltraLabel148.Size = New System.Drawing.Size(134, 18)
        Me.UltraLabel148.TabIndex = 153
        Me.UltraLabel148.Text = "Date product returned"
        '
        'dtRFReturnedDate
        '
        Me.dtRFReturnedDate.DateTime = New Date(2015, 9, 18, 0, 0, 0, 0)
        Me.dtRFReturnedDate.Location = New System.Drawing.Point(192, 498)
        Me.dtRFReturnedDate.Name = "dtRFReturnedDate"
        Me.dtRFReturnedDate.Size = New System.Drawing.Size(125, 24)
        Me.dtRFReturnedDate.TabIndex = 152
        Me.dtRFReturnedDate.Value = New Date(2015, 9, 18, 0, 0, 0, 0)
        '
        'UltraLabel147
        '
        Me.UltraLabel147.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel147.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel147.Location = New System.Drawing.Point(19, 480)
        Me.UltraLabel147.Name = "UltraLabel147"
        Me.UltraLabel147.Size = New System.Drawing.Size(413, 18)
        Me.UltraLabel147.TabIndex = 36
        Me.UltraLabel147.Text = "Returned Information:"
        '
        'rbRFCredit
        '
        Me.rbRFCredit.BackColor = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.rbRFCredit.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.rbRFCredit.BorderStyle = Infragistics.Win.UIElementBorderStyle.None
        Me.rbRFCredit.Enabled = False
        ValueListItem1.DataValue = "Yes"
        ValueListItem1.DisplayText = "Yes"
        ValueListItem2.DataValue = "No"
        ValueListItem2.DisplayText = "No"
        Me.rbRFCredit.Items.AddRange(New Infragistics.Win.ValueListItem() {ValueListItem1, ValueListItem2})
        Me.rbRFCredit.Location = New System.Drawing.Point(662, 222)
        Me.rbRFCredit.Name = "rbRFCredit"
        Me.rbRFCredit.Size = New System.Drawing.Size(183, 18)
        Me.rbRFCredit.TabIndex = 35
        Me.rbRFCredit.Tag = "edit"
        '
        'UltraLabel146
        '
        Me.UltraLabel146.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel146.Location = New System.Drawing.Point(499, 222)
        Me.UltraLabel146.Name = "UltraLabel146"
        Me.UltraLabel146.Size = New System.Drawing.Size(163, 18)
        Me.UltraLabel146.TabIndex = 34
        Me.UltraLabel146.Text = "Is a credit being issued?"
        '
        'tRFTracking
        '
        Me.tRFTracking.Enabled = False
        Me.tRFTracking.Location = New System.Drawing.Point(778, 443)
        Me.tRFTracking.Name = "tRFTracking"
        Me.tRFTracking.Size = New System.Drawing.Size(336, 24)
        Me.tRFTracking.TabIndex = 33
        Me.tRFTracking.Tag = "edit"
        '
        'tRFCarrier
        '
        Me.tRFCarrier.Enabled = False
        Me.tRFCarrier.Location = New System.Drawing.Point(259, 443)
        Me.tRFCarrier.Name = "tRFCarrier"
        Me.tRFCarrier.Size = New System.Drawing.Size(336, 24)
        Me.tRFCarrier.TabIndex = 32
        Me.tRFCarrier.Tag = "edit"
        '
        'UltraLabel140
        '
        Me.UltraLabel140.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel140.Location = New System.Drawing.Point(605, 452)
        Me.UltraLabel140.Name = "UltraLabel140"
        Me.UltraLabel140.Size = New System.Drawing.Size(413, 19)
        Me.UltraLabel140.TabIndex = 31
        Me.UltraLabel140.Text = "Tracking number of call tag"
        '
        'UltraLabel139
        '
        Me.UltraLabel139.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel139.Location = New System.Drawing.Point(48, 452)
        Me.UltraLabel139.Name = "UltraLabel139"
        Me.UltraLabel139.Size = New System.Drawing.Size(413, 19)
        Me.UltraLabel139.TabIndex = 30
        Me.UltraLabel139.Text = "Freight or Carrier used for return"
        '
        'UltraLabel138
        '
        Me.UltraLabel138.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel138.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel138.Location = New System.Drawing.Point(19, 425)
        Me.UltraLabel138.Name = "UltraLabel138"
        Me.UltraLabel138.Size = New System.Drawing.Size(413, 18)
        Me.UltraLabel138.TabIndex = 29
        Me.UltraLabel138.Text = "Call Tag or Bill of Lading Information:"
        '
        'rbRFClaim
        '
        Me.rbRFClaim.BackColor = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.rbRFClaim.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.rbRFClaim.BorderStyle = Infragistics.Win.UIElementBorderStyle.None
        Me.rbRFClaim.Enabled = False
        ValueListItem3.DataValue = "Yes"
        ValueListItem3.DisplayText = "Yes"
        ValueListItem4.DataValue = "No"
        ValueListItem4.DisplayText = "No"
        Me.rbRFClaim.Items.AddRange(New Infragistics.Win.ValueListItem() {ValueListItem3, ValueListItem4})
        Me.rbRFClaim.Location = New System.Drawing.Point(662, 397)
        Me.rbRFClaim.Name = "rbRFClaim"
        Me.rbRFClaim.Size = New System.Drawing.Size(183, 18)
        Me.rbRFClaim.TabIndex = 28
        Me.rbRFClaim.Tag = "edit"
        '
        'UltraLabel137
        '
        Me.UltraLabel137.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel137.Location = New System.Drawing.Point(374, 397)
        Me.UltraLabel137.Name = "UltraLabel137"
        Me.UltraLabel137.Size = New System.Drawing.Size(413, 18)
        Me.UltraLabel137.TabIndex = 27
        Me.UltraLabel137.Text = "Has a claim been filed for shipping damage?"
        '
        'rbRFQC
        '
        Me.rbRFQC.BackColor = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.rbRFQC.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.rbRFQC.BorderStyle = Infragistics.Win.UIElementBorderStyle.None
        Me.rbRFQC.Enabled = False
        ValueListItem5.DataValue = "Yes"
        ValueListItem5.DisplayText = "Yes"
        ValueListItem6.DataValue = "No"
        ValueListItem6.DisplayText = "No"
        Me.rbRFQC.Items.AddRange(New Infragistics.Win.ValueListItem() {ValueListItem5, ValueListItem6})
        Me.rbRFQC.Location = New System.Drawing.Point(259, 397)
        Me.rbRFQC.Name = "rbRFQC"
        Me.rbRFQC.Size = New System.Drawing.Size(183, 18)
        Me.rbRFQC.TabIndex = 26
        Me.rbRFQC.Tag = "edit"
        '
        'UltraLabel136
        '
        Me.UltraLabel136.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel136.Location = New System.Drawing.Point(10, 397)
        Me.UltraLabel136.Name = "UltraLabel136"
        Me.UltraLabel136.Size = New System.Drawing.Size(412, 18)
        Me.UltraLabel136.TabIndex = 25
        Me.UltraLabel136.Text = "Must be inspected for Quality Control?"
        '
        'rbRFCreditCard
        '
        Me.rbRFCreditCard.BackColor = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.rbRFCreditCard.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.rbRFCreditCard.BorderStyle = Infragistics.Win.UIElementBorderStyle.None
        Me.rbRFCreditCard.Enabled = False
        ValueListItem7.DataValue = "Yes"
        ValueListItem7.DisplayText = "Yes"
        ValueListItem8.DataValue = "No"
        ValueListItem8.DisplayText = "No"
        Me.rbRFCreditCard.Items.AddRange(New Infragistics.Win.ValueListItem() {ValueListItem7, ValueListItem8})
        Me.rbRFCreditCard.Location = New System.Drawing.Point(662, 194)
        Me.rbRFCreditCard.Name = "rbRFCreditCard"
        Me.rbRFCreditCard.Size = New System.Drawing.Size(183, 18)
        Me.rbRFCreditCard.TabIndex = 24
        Me.rbRFCreditCard.Tag = "edit"
        '
        'UltraLabel135
        '
        Me.UltraLabel135.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel135.Location = New System.Drawing.Point(422, 194)
        Me.UltraLabel135.Name = "UltraLabel135"
        Me.UltraLabel135.Size = New System.Drawing.Size(413, 18)
        Me.UltraLabel135.TabIndex = 23
        Me.UltraLabel135.Text = "If so, has a credit card been secured?"
        '
        'rbRFShipping
        '
        Me.rbRFShipping.BackColor = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.rbRFShipping.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.rbRFShipping.BorderStyle = Infragistics.Win.UIElementBorderStyle.None
        Me.rbRFShipping.Enabled = False
        ValueListItem9.DataValue = "Yes"
        ValueListItem9.DisplayText = "Yes"
        ValueListItem10.DataValue = "No"
        ValueListItem10.DisplayText = "No"
        Me.rbRFShipping.Items.AddRange(New Infragistics.Win.ValueListItem() {ValueListItem9, ValueListItem10})
        Me.rbRFShipping.Location = New System.Drawing.Point(317, 323)
        Me.rbRFShipping.Name = "rbRFShipping"
        Me.rbRFShipping.Size = New System.Drawing.Size(182, 19)
        Me.rbRFShipping.TabIndex = 22
        Me.rbRFShipping.Tag = "edit"
        '
        'rbRFRestocking
        '
        Me.rbRFRestocking.BackColor = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.rbRFRestocking.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.rbRFRestocking.BorderStyle = Infragistics.Win.UIElementBorderStyle.None
        Me.rbRFRestocking.Enabled = False
        ValueListItem11.DataValue = "Yes"
        ValueListItem11.DisplayText = "Yes"
        ValueListItem12.DataValue = "No"
        ValueListItem12.DisplayText = "No"
        Me.rbRFRestocking.Items.AddRange(New Infragistics.Win.ValueListItem() {ValueListItem11, ValueListItem12})
        Me.rbRFRestocking.Location = New System.Drawing.Point(288, 249)
        Me.rbRFRestocking.Name = "rbRFRestocking"
        Me.rbRFRestocking.Size = New System.Drawing.Size(182, 19)
        Me.rbRFRestocking.TabIndex = 21
        Me.rbRFRestocking.Tag = "edit"
        '
        'rbRFSendingReplacement
        '
        Me.rbRFSendingReplacement.BackColor = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.rbRFSendingReplacement.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.rbRFSendingReplacement.BorderStyle = Infragistics.Win.UIElementBorderStyle.None
        Me.rbRFSendingReplacement.Enabled = False
        ValueListItem13.DataValue = "Yes"
        ValueListItem13.DisplayText = "Yes"
        ValueListItem14.DataValue = "No"
        ValueListItem14.DisplayText = "No"
        Me.rbRFSendingReplacement.Items.AddRange(New Infragistics.Win.ValueListItem() {ValueListItem13, ValueListItem14})
        Me.rbRFSendingReplacement.Location = New System.Drawing.Point(384, 222)
        Me.rbRFSendingReplacement.Name = "rbRFSendingReplacement"
        Me.rbRFSendingReplacement.Size = New System.Drawing.Size(182, 18)
        Me.rbRFSendingReplacement.TabIndex = 20
        Me.rbRFSendingReplacement.Tag = "edit"
        '
        'rbRFSendImmediately
        '
        Me.rbRFSendImmediately.BackColor = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.rbRFSendImmediately.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.rbRFSendImmediately.BorderStyle = Infragistics.Win.UIElementBorderStyle.None
        Me.rbRFSendImmediately.Enabled = False
        ValueListItem15.DataValue = "Yes"
        ValueListItem15.DisplayText = "Yes"
        ValueListItem16.DataValue = "No"
        ValueListItem16.DisplayText = "No"
        Me.rbRFSendImmediately.Items.AddRange(New Infragistics.Win.ValueListItem() {ValueListItem15, ValueListItem16})
        Me.rbRFSendImmediately.Location = New System.Drawing.Point(288, 194)
        Me.rbRFSendImmediately.Name = "rbRFSendImmediately"
        Me.rbRFSendImmediately.Size = New System.Drawing.Size(182, 18)
        Me.rbRFSendImmediately.TabIndex = 19
        Me.rbRFSendImmediately.Tag = "edit"
        '
        'tRFShipping
        '
        Me.tRFShipping.Enabled = False
        Me.tRFShipping.Location = New System.Drawing.Point(221, 342)
        Me.tRFShipping.Multiline = True
        Me.tRFShipping.Name = "tRFShipping"
        Me.tRFShipping.Scrollbars = System.Windows.Forms.ScrollBars.Vertical
        Me.tRFShipping.Size = New System.Drawing.Size(816, 46)
        Me.tRFShipping.TabIndex = 18
        Me.tRFShipping.Tag = "edit"
        '
        'UltraLabel133
        '
        Me.UltraLabel133.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel133.Location = New System.Drawing.Point(86, 342)
        Me.UltraLabel133.Name = "UltraLabel133"
        Me.UltraLabel133.Size = New System.Drawing.Size(144, 18)
        Me.UltraLabel133.TabIndex = 17
        Me.UltraLabel133.Text = "If no, please explain"
        '
        'UltraLabel134
        '
        Me.UltraLabel134.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel134.Location = New System.Drawing.Point(58, 323)
        Me.UltraLabel134.Name = "UltraLabel134"
        Me.UltraLabel134.Size = New System.Drawing.Size(412, 19)
        Me.UltraLabel134.TabIndex = 16
        Me.UltraLabel134.Text = "* Are we charging the customer shipping?"
        '
        'tRFRestocking
        '
        Me.tRFRestocking.Enabled = False
        Me.tRFRestocking.Location = New System.Drawing.Point(221, 268)
        Me.tRFRestocking.Multiline = True
        Me.tRFRestocking.Name = "tRFRestocking"
        Me.tRFRestocking.Scrollbars = System.Windows.Forms.ScrollBars.Vertical
        Me.tRFRestocking.Size = New System.Drawing.Size(816, 46)
        Me.tRFRestocking.TabIndex = 15
        Me.tRFRestocking.Tag = "edit"
        '
        'UltraLabel132
        '
        Me.UltraLabel132.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel132.Location = New System.Drawing.Point(86, 268)
        Me.UltraLabel132.Name = "UltraLabel132"
        Me.UltraLabel132.Size = New System.Drawing.Size(144, 18)
        Me.UltraLabel132.TabIndex = 14
        Me.UltraLabel132.Text = "If no, please explain"
        '
        'UltraLabel131
        '
        Me.UltraLabel131.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel131.Location = New System.Drawing.Point(58, 249)
        Me.UltraLabel131.Name = "UltraLabel131"
        Me.UltraLabel131.Size = New System.Drawing.Size(412, 19)
        Me.UltraLabel131.TabIndex = 13
        Me.UltraLabel131.Text = "* Are we charging a restocking fee?"
        '
        'UltraLabel130
        '
        Me.UltraLabel130.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel130.Location = New System.Drawing.Point(10, 222)
        Me.UltraLabel130.Name = "UltraLabel130"
        Me.UltraLabel130.Size = New System.Drawing.Size(412, 18)
        Me.UltraLabel130.TabIndex = 12
        Me.UltraLabel130.Text = "Once the product is returned, are we sending a replacement?"
        '
        'UltraLabel129
        '
        Me.UltraLabel129.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.UltraLabel129.Location = New System.Drawing.Point(10, 194)
        Me.UltraLabel129.Name = "UltraLabel129"
        Me.UltraLabel129.Size = New System.Drawing.Size(412, 18)
        Me.UltraLabel129.TabIndex = 11
        Me.UltraLabel129.Text = "Are we sending a replacement immediately?"
        '
        'UltraGrid1
        '
        Me.UltraGrid1.CalcManager = Me.UltraCalcManager1
        Me.UltraGrid1.DisplayLayout.AutoFitStyle = Infragistics.Win.UltraWinGrid.AutoFitStyle.ResizeAllColumns
        UltraGridColumn164.Header.VisiblePosition = 0
        UltraGridColumn164.Hidden = True
        UltraGridColumn165.Header.VisiblePosition = 1
        UltraGridColumn165.Hidden = True
        UltraGridColumn166.Header.Caption = "Qty"
        UltraGridColumn166.Header.VisiblePosition = 2
        UltraGridColumn166.MaxWidth = 100
        UltraGridColumn166.Width = 71
        UltraGridColumn167.Header.Caption = "Item Being Returned"
        UltraGridColumn167.Header.VisiblePosition = 3
        UltraGridColumn167.MaxWidth = 300
        UltraGridColumn167.Width = 200
        UltraGridColumn168.Header.Caption = "Item Code"
        UltraGridColumn168.Header.VisiblePosition = 4
        UltraGridColumn168.MaxWidth = 200
        UltraGridColumn168.Width = 131
        UltraGridColumn169.Header.Caption = "Reason"
        UltraGridColumn169.Header.VisiblePosition = 5
        UltraGridColumn169.MaxWidth = 800
        UltraGridColumn169.Width = 527
        UltraGridColumn170.Header.Caption = "Stock"
        UltraGridColumn170.Header.VisiblePosition = 6
        UltraGridColumn170.MaxWidth = 60
        UltraGridColumn170.Width = 60
        UltraGridColumn171.Header.Caption = "Reshipped"
        UltraGridColumn171.Header.VisiblePosition = 7
        UltraGridColumn171.MaxWidth = 60
        UltraGridColumn171.Width = 60
        UltraGridColumn172.Header.Caption = "Replaced"
        UltraGridColumn172.Header.VisiblePosition = 8
        UltraGridColumn172.MaxWidth = 60
        UltraGridColumn172.Width = 60
        UltraGridColumn173.Header.Caption = "Inspect"
        UltraGridColumn173.Header.VisiblePosition = 9
        UltraGridColumn173.MaxWidth = 60
        UltraGridColumn173.Width = 60
        UltraGridBand14.Columns.AddRange(New Object() {UltraGridColumn164, UltraGridColumn165, UltraGridColumn166, UltraGridColumn167, UltraGridColumn168, UltraGridColumn169, UltraGridColumn170, UltraGridColumn171, UltraGridColumn172, UltraGridColumn173})
        Me.UltraGrid1.DisplayLayout.BandsSerializer.Add(UltraGridBand14)
        Me.UltraGrid1.DisplayLayout.Override.AllowAddNew = Infragistics.Win.UltraWinGrid.AllowAddNew.TemplateOnBottom
        Me.UltraGrid1.DisplayLayout.Override.AllowDelete = Infragistics.Win.DefaultableBoolean.[True]
        Me.UltraGrid1.DisplayLayout.Override.AllowUpdate = Infragistics.Win.DefaultableBoolean.[True]
        Me.UltraGrid1.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraGrid1.Location = New System.Drawing.Point(10, 9)
        Me.UltraGrid1.Name = "UltraGrid1"
        Me.UltraGrid1.Size = New System.Drawing.Size(1190, 166)
        Me.UltraGrid1.TabIndex = 10
        '
        'UltraTabPageControl17
        '
        Me.UltraTabPageControl17.Location = New System.Drawing.Point(-10000, -10000)
        Me.UltraTabPageControl17.Name = "UltraTabPageControl17"
        Me.UltraTabPageControl17.Size = New System.Drawing.Size(1476, 604)
        '
        'tTotal
        '
        Me.tTotal.Controls.Add(Me.pDiscount)
        Me.tTotal.Controls.Add(Me.tDefLacq)
        Me.tTotal.Controls.Add(Me.Panel2)
        Me.tTotal.Controls.Add(Me.pTotal)
        Me.tTotal.Controls.Add(Me.bImportBOMLookup)
        Me.tTotal.Controls.Add(Me.tDefFinish)
        Me.tTotal.Controls.Add(Me.UltraLabel152)
        Me.tTotal.Controls.Add(Me.bWizard)
        Me.tTotal.Controls.Add(Me.UltraLabel87)
        Me.tTotal.Controls.Add(Me.tDefStain)
        Me.tTotal.Controls.Add(Me.UltraLabel86)
        Me.tTotal.Controls.Add(Me.UltraButton9)
        Me.tTotal.Controls.Add(Me.lMaterialSummary)
        Me.tTotal.Controls.Add(Me.UltraButton8)
        Me.tTotal.Controls.Add(Me.bDoPrice)
        Me.tTotal.Controls.Add(Me.pItem)
        Me.tTotal.Controls.Add(Me.Label5)
        Me.tTotal.Controls.Add(Me.tGenMaterial)
        Me.tTotal.Controls.Add(Me.UltraLabel48)
        Me.tTotal.Controls.Add(Me.lMarginBelow0)
        Me.tTotal.Controls.Add(Me.tPicture)
        Me.tTotal.Controls.Add(Me.UltraButton3)
        Me.tTotal.Controls.Add(Me.tForecastOveride)
        Me.tTotal.Controls.Add(Me.tRet)
        Me.tTotal.Controls.Add(Me.tCon)
        Me.tTotal.Controls.Add(Me.lBase)
        Me.tTotal.Controls.Add(Me.tMF)
        Me.tTotal.Controls.Add(Me.tLineNotes)
        Me.tTotal.Controls.Add(Me.UltraLabel39)
        Me.tTotal.Controls.Add(Me.UltraLabel33)
        Me.tTotal.Controls.Add(Me.UltraLabel51)
        Me.tTotal.Controls.Add(Me.Label6)
        Me.tTotal.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tTotal.Location = New System.Drawing.Point(2, 27)
        Me.tTotal.Name = "tTotal"
        Me.tTotal.Size = New System.Drawing.Size(1478, 645)
        '
        'pDiscount
        '
        Me.pDiscount.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.pDiscount.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.pDiscount.Controls.Add(Me.lDiscSymbol)
        Me.pDiscount.Controls.Add(Me.oDiscountType)
        Me.pDiscount.Controls.Add(Me.tDiscMatl)
        Me.pDiscount.Controls.Add(Me.UltraLabel56)
        Me.pDiscount.Controls.Add(Me.UltraLabel70)
        Me.pDiscount.Controls.Add(Me.tdiscProdType)
        Me.pDiscount.Controls.Add(Me.UltraLabel71)
        Me.pDiscount.Controls.Add(Me.tDiscVal)
        Me.pDiscount.Enabled = False
        Me.pDiscount.Location = New System.Drawing.Point(1243, 114)
        Me.pDiscount.Name = "pDiscount"
        Me.pDiscount.Size = New System.Drawing.Size(229, 194)
        Me.pDiscount.TabIndex = 75
        Me.pDiscount.Tag = "edit"
        Me.pDiscount.Visible = False
        '
        'lDiscSymbol
        '
        Me.lDiscSymbol.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.lDiscSymbol.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.lDiscSymbol.Font = New System.Drawing.Font("Microsoft Sans Serif", 12.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lDiscSymbol.Location = New System.Drawing.Point(192, 0)
        Me.lDiscSymbol.Name = "lDiscSymbol"
        Me.lDiscSymbol.Size = New System.Drawing.Size(20, 28)
        Me.lDiscSymbol.TabIndex = 83
        Me.lDiscSymbol.Text = "%"
        '
        'oDiscountType
        '
        Me.oDiscountType.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Appearance34.FontData.BoldAsString = "True"
        Me.oDiscountType.Appearance = Appearance34
        Me.oDiscountType.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.oDiscountType.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.oDiscountType.BorderStyle = Infragistics.Win.UIElementBorderStyle.None
        Me.oDiscountType.Enabled = False
        ValueListItem17.DataValue = "P"
        ValueListItem17.DisplayText = "Perc"
        ValueListItem18.DataValue = "D"
        ValueListItem18.DisplayText = "$$$"
        ValueListItem19.DataValue = "T"
        ValueListItem19.DisplayText = "Match"
        Me.oDiscountType.Items.AddRange(New Infragistics.Win.ValueListItem() {ValueListItem17, ValueListItem18, ValueListItem19})
        Me.oDiscountType.ItemSpacingVertical = 5
        Me.oDiscountType.Location = New System.Drawing.Point(0, 0)
        Me.oDiscountType.Name = "oDiscountType"
        Me.oDiscountType.Size = New System.Drawing.Size(77, 83)
        Me.oDiscountType.TabIndex = 81
        Me.oDiscountType.Tag = "edit"
        Me.oDiscountType.UseFlatMode = Infragistics.Win.DefaultableBoolean.[True]
        '
        'tDiscMatl
        '
        Me.tDiscMatl.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tDiscMatl.CalcManager = Me.UltraCalcManager1
        Me.tDiscMatl.CheckedListSettings.CheckStateMember = ""
        Me.tDiscMatl.Enabled = False
        Me.tDiscMatl.Location = New System.Drawing.Point(96, 148)
        Me.tDiscMatl.Name = "tDiscMatl"
        Me.tDiscMatl.Size = New System.Drawing.Size(125, 29)
        Me.tDiscMatl.TabIndex = 76
        Me.tDiscMatl.Tag = "edit"
        '
        'UltraLabel56
        '
        Me.UltraLabel56.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel56.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel56.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel56.Location = New System.Drawing.Point(10, 111)
        Me.UltraLabel56.Name = "UltraLabel56"
        Me.UltraLabel56.Size = New System.Drawing.Size(86, 27)
        Me.UltraLabel56.TabIndex = 78
        Me.UltraLabel56.Text = "Prod Type"
        '
        'UltraLabel70
        '
        Me.UltraLabel70.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel70.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel70.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel70.Location = New System.Drawing.Point(10, 148)
        Me.UltraLabel70.Name = "UltraLabel70"
        Me.UltraLabel70.Size = New System.Drawing.Size(67, 27)
        Me.UltraLabel70.TabIndex = 77
        Me.UltraLabel70.Text = "Mat'l"
        '
        'tdiscProdType
        '
        Me.tdiscProdType.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tdiscProdType.CalcManager = Me.UltraCalcManager1
        Me.tdiscProdType.CheckedListSettings.CheckStateMember = ""
        Me.tdiscProdType.Enabled = False
        Me.tdiscProdType.Location = New System.Drawing.Point(96, 111)
        Me.tdiscProdType.Name = "tdiscProdType"
        Me.tdiscProdType.Size = New System.Drawing.Size(125, 29)
        Me.tdiscProdType.TabIndex = 80
        Me.tdiscProdType.Tag = "edit"
        '
        'UltraLabel71
        '
        Me.UltraLabel71.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Appearance36.TextHAlignAsString = "Center"
        Me.UltraLabel71.Appearance = Appearance36
        Me.UltraLabel71.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel71.BorderStyleOuter = Infragistics.Win.UIElementBorderStyle.Solid
        Me.UltraLabel71.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, CType((System.Drawing.FontStyle.Bold Or System.Drawing.FontStyle.Underline), System.Drawing.FontStyle), System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel71.Location = New System.Drawing.Point(0, 83)
        Me.UltraLabel71.Name = "UltraLabel71"
        Me.UltraLabel71.Size = New System.Drawing.Size(230, 102)
        Me.UltraLabel71.TabIndex = 79
        Me.UltraLabel71.Text = "Applies to:"
        '
        'tDiscVal
        '
        Me.tDiscVal.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tDiscVal.Enabled = False
        Me.tDiscVal.FormatString = "###0.00"
        Me.tDiscVal.Location = New System.Drawing.Point(86, 0)
        Me.tDiscVal.Name = "tDiscVal"
        Me.tDiscVal.NumericType = Infragistics.Win.UltraWinEditors.NumericType.[Double]
        Me.tDiscVal.Size = New System.Drawing.Size(106, 28)
        Me.tDiscVal.TabIndex = 85
        Me.tDiscVal.TabNavigation = Infragistics.Win.UltraWinMaskedEdit.MaskedEditTabNavigation.NextControl
        Me.tDiscVal.Tag = "edit"
        '
        'tDefLacq
        '
        Me.tDefLacq.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tDefLacq.CalcManager = Me.UltraCalcManager1
        Me.tDefLacq.CheckedListSettings.CheckStateMember = ""
        Me.tDefLacq.DropDownStyle = Infragistics.Win.UltraWinGrid.UltraComboStyle.DropDownList
        Me.tDefLacq.Enabled = False
        Me.tDefLacq.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tDefLacq.Location = New System.Drawing.Point(1303, 84)
        Me.tDefLacq.Name = "tDefLacq"
        Me.tDefLacq.Size = New System.Drawing.Size(108, 25)
        Me.tDefLacq.TabIndex = 128
        Me.tDefLacq.Tag = "edit"
        '
        'Panel2
        '
        Me.Panel2.Anchor = CType((((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom) _
            Or System.Windows.Forms.AnchorStyles.Left) _
            Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.Panel2.Controls.Add(Me.lLine)
        Me.Panel2.Controls.Add(Me.tOrdMod)
        Me.Panel2.Controls.Add(Me.Grid1)
        Me.Panel2.Location = New System.Drawing.Point(-1, 21)
        Me.Panel2.Name = "Panel2"
        Me.Panel2.Size = New System.Drawing.Size(1233, 503)
        Me.Panel2.TabIndex = 135
        '
        'lLine
        '
        Me.lLine.BackColorInternal = System.Drawing.Color.Yellow
        Me.lLine.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lLine.Location = New System.Drawing.Point(134, 160)
        Me.lLine.Name = "lLine"
        Me.lLine.Size = New System.Drawing.Size(202, 19)
        Me.lLine.TabIndex = 127
        Me.lLine.Text = "0"
        Me.lLine.Visible = False
        '
        'tOrdMod
        '
        Appearance13.BackColor = System.Drawing.Color.Yellow
        Appearance13.FontData.BoldAsString = "True"
        Appearance13.ForeColor = System.Drawing.Color.IndianRed
        Me.tOrdMod.Appearance = Appearance13
        Me.tOrdMod.BackColor = System.Drawing.Color.Yellow
        Me.tOrdMod.Dock = System.Windows.Forms.DockStyle.Bottom
        Me.tOrdMod.Location = New System.Drawing.Point(0, 389)
        Me.tOrdMod.Multiline = True
        Me.tOrdMod.Name = "tOrdMod"
        Me.tOrdMod.Size = New System.Drawing.Size(1233, 114)
        Me.tOrdMod.TabIndex = 132
        Me.tOrdMod.Visible = False
        '
        'Grid1
        '
        Me.Grid1.AllowDrop = True
        Me.Grid1.CalcManager = Me.UltraCalcManager1
        Me.Grid1.Cursor = System.Windows.Forms.Cursors.Hand
        Appearance204.BackColor = System.Drawing.Color.White
        Appearance204.TextTrimming = Infragistics.Win.TextTrimming.Character
        Me.Grid1.DisplayLayout.Appearance = Appearance204
        Me.Grid1.DisplayLayout.AutoFitStyle = Infragistics.Win.UltraWinGrid.AutoFitStyle.ResizeAllColumns
        UltraGridColumn6.Header.VisiblePosition = 0
        UltraGridColumn6.Hidden = True
        UltraGridColumn6.Width = 35
        UltraGridColumn7.Header.VisiblePosition = 1
        UltraGridColumn7.Hidden = True
        UltraGridColumn8.Header.VisiblePosition = 2
        UltraGridColumn8.Hidden = True
        UltraGridColumn9.Header.VisiblePosition = 3
        UltraGridColumn9.Hidden = True
        UltraGridColumn10.Header.Caption = "Line"
        UltraGridColumn10.Header.VisiblePosition = 4
        UltraGridColumn10.MaxWidth = 20
        UltraGridColumn10.MinWidth = 20
        UltraGridColumn10.RowLayoutColumnInfo.OriginX = 0
        UltraGridColumn10.RowLayoutColumnInfo.OriginY = 0
        UltraGridColumn10.RowLayoutColumnInfo.PreferredCellSize = New System.Drawing.Size(35, 0)
        UltraGridColumn10.RowLayoutColumnInfo.SpanX = 2
        UltraGridColumn10.RowLayoutColumnInfo.SpanY = 2
        UltraGridColumn10.Width = 20
        UltraGridColumn11.Header.Caption = "Grp"
        UltraGridColumn11.Header.VisiblePosition = 5
        UltraGridColumn11.MaxWidth = 20
        UltraGridColumn11.MinWidth = 20
        UltraGridColumn11.RowLayoutColumnInfo.OriginX = 2
        UltraGridColumn11.RowLayoutColumnInfo.OriginY = 0
        UltraGridColumn11.RowLayoutColumnInfo.SpanX = 2
        UltraGridColumn11.RowLayoutColumnInfo.SpanY = 2
        UltraGridColumn11.Width = 20
        UltraGridColumn12.AutoSizeMode = Infragistics.Win.UltraWinGrid.ColumnAutoSizeMode.None
        Appearance205.FontData.BoldAsString = "True"
        Appearance205.TextHAlignAsString = "Right"
        UltraGridColumn12.CellAppearance = Appearance205
        UltraGridColumn12.Header.Caption = "Qty"
        UltraGridColumn12.Header.VisiblePosition = 10
        UltraGridColumn12.MaxWidth = 40
        UltraGridColumn12.MinWidth = 40
        UltraGridColumn12.RowLayoutColumnInfo.OriginX = 4
        UltraGridColumn12.RowLayoutColumnInfo.OriginY = 0
        UltraGridColumn12.RowLayoutColumnInfo.SpanX = 2
        UltraGridColumn12.RowLayoutColumnInfo.SpanY = 2
        UltraGridColumn12.Width = 40
        UltraGridColumn13.Header.Caption = "Item Code"
        UltraGridColumn13.Header.VisiblePosition = 6
        UltraGridColumn13.MaxWidth = 200
        UltraGridColumn13.MinWidth = 100
        UltraGridColumn13.RowLayoutColumnInfo.OriginX = 6
        UltraGridColumn13.RowLayoutColumnInfo.OriginY = 0
        UltraGridColumn13.RowLayoutColumnInfo.SpanX = 2
        UltraGridColumn13.RowLayoutColumnInfo.SpanY = 2
        UltraGridColumn13.Width = 100
        UltraGridColumn14.Header.Caption = "Description"
        UltraGridColumn14.Header.VisiblePosition = 7
        UltraGridColumn14.MinWidth = 50
        UltraGridColumn14.RowLayoutColumnInfo.OriginX = 8
        UltraGridColumn14.RowLayoutColumnInfo.OriginY = 0
        UltraGridColumn14.RowLayoutColumnInfo.SpanX = 2
        UltraGridColumn14.RowLayoutColumnInfo.SpanY = 2
        UltraGridColumn14.Width = 202
        Appearance206.TextHAlignAsString = "Right"
        UltraGridColumn15.CellAppearance = Appearance206
        UltraGridColumn15.Format = "$###,###.00"
        UltraGridColumn15.Header.Caption = "Unit Sell $"
        UltraGridColumn15.Header.VisiblePosition = 11
        UltraGridColumn15.MaxWidth = 60
        UltraGridColumn15.MinWidth = 60
        UltraGridColumn15.RowLayoutColumnInfo.OriginX = 18
        UltraGridColumn15.RowLayoutColumnInfo.OriginY = 0
        UltraGridColumn15.RowLayoutColumnInfo.SpanX = 2
        UltraGridColumn15.RowLayoutColumnInfo.SpanY = 2
        UltraGridColumn15.Width = 60
        UltraGridColumn16.Header.VisiblePosition = 12
        UltraGridColumn16.Hidden = True
        UltraGridColumn16.Width = 60
        UltraGridColumn17.Header.VisiblePosition = 13
        UltraGridColumn17.Hidden = True
        UltraGridColumn17.Width = 67
        UltraGridColumn18.Header.VisiblePosition = 14
        UltraGridColumn18.Hidden = True
        UltraGridColumn18.Width = 53
        UltraGridColumn19.Header.VisiblePosition = 15
        UltraGridColumn19.Hidden = True
        UltraGridColumn19.Width = 77
        UltraGridColumn20.Header.VisiblePosition = 17
        UltraGridColumn20.Hidden = True
        UltraGridColumn20.Width = 83
        UltraGridColumn21.Header.VisiblePosition = 16
        UltraGridColumn21.Hidden = True
        UltraGridColumn22.Header.VisiblePosition = 18
        UltraGridColumn22.Hidden = True
        UltraGridColumn22.Width = 107
        UltraGridColumn23.Header.Caption = "Taxable"
        UltraGridColumn23.Header.VisiblePosition = 19
        UltraGridColumn23.Hidden = True
        UltraGridColumn23.Width = 93
        UltraGridColumn24.Header.Caption = "Fixture"
        UltraGridColumn24.Header.VisiblePosition = 8
        UltraGridColumn24.Hidden = True
        UltraGridColumn24.Width = 59
        UltraGridColumn25.Header.Caption = "Select Mat'l"
        UltraGridColumn25.Header.VisiblePosition = 9
        UltraGridColumn25.Hidden = True
        UltraGridColumn25.Width = 47
        UltraGridColumn26.Header.VisiblePosition = 20
        UltraGridColumn26.Hidden = True
        UltraGridColumn27.AutoCompleteMode = Infragistics.Win.AutoCompleteMode.None
        UltraGridColumn27.CellActivation = Infragistics.Win.UltraWinGrid.Activation.NoEdit
        UltraGridColumn27.Header.Caption = "Material"
        UltraGridColumn27.Header.VisiblePosition = 21
        UltraGridColumn27.MaxWidth = 50
        UltraGridColumn27.MinWidth = 30
        UltraGridColumn27.RowLayoutColumnInfo.OriginX = 10
        UltraGridColumn27.RowLayoutColumnInfo.OriginY = 0
        UltraGridColumn27.RowLayoutColumnInfo.SpanX = 2
        UltraGridColumn27.RowLayoutColumnInfo.SpanY = 2
        UltraGridColumn27.Width = 50
        UltraGridColumn28.Header.VisiblePosition = 23
        UltraGridColumn28.Hidden = True
        UltraGridColumn29.Header.VisiblePosition = 24
        UltraGridColumn29.Hidden = True
        UltraGridColumn30.Header.VisiblePosition = 25
        UltraGridColumn30.Hidden = True
        UltraGridColumn31.DefaultCellValue = "0"
        UltraGridColumn31.Header.VisiblePosition = 26
        UltraGridColumn31.Hidden = True
        UltraGridColumn32.Header.VisiblePosition = 27
        UltraGridColumn32.Hidden = True
        UltraGridColumn33.Header.VisiblePosition = 28
        UltraGridColumn33.Hidden = True
        UltraGridColumn34.Header.VisiblePosition = 29
        UltraGridColumn34.Hidden = True
        UltraGridColumn35.Header.VisiblePosition = 30
        UltraGridColumn35.Hidden = True
        UltraGridColumn36.Header.VisiblePosition = 31
        UltraGridColumn36.Hidden = True
        UltraGridColumn37.Header.VisiblePosition = 32
        UltraGridColumn37.Hidden = True
        UltraGridColumn38.Header.VisiblePosition = 33
        UltraGridColumn38.Hidden = True
        UltraGridColumn39.Header.VisiblePosition = 34
        UltraGridColumn39.Hidden = True
        UltraGridColumn40.Header.VisiblePosition = 35
        UltraGridColumn40.Hidden = True
        UltraGridColumn40.RowLayoutColumnInfo.OriginX = 12
        UltraGridColumn40.RowLayoutColumnInfo.OriginY = 0
        UltraGridColumn40.RowLayoutColumnInfo.SpanX = 2
        UltraGridColumn40.RowLayoutColumnInfo.SpanY = 2
        Appearance207.TextHAlignAsString = "Right"
        UltraGridColumn41.CellAppearance = Appearance207
        UltraGridColumn41.Format = "$###,###.00"
        UltraGridColumn41.Header.Caption = "Disc / Up"
        UltraGridColumn41.Header.VisiblePosition = 36
        UltraGridColumn41.MaxWidth = 60
        UltraGridColumn41.MinWidth = 60
        UltraGridColumn41.RowLayoutColumnInfo.OriginX = 22
        UltraGridColumn41.RowLayoutColumnInfo.OriginY = 0
        UltraGridColumn41.RowLayoutColumnInfo.SpanX = 2
        UltraGridColumn41.RowLayoutColumnInfo.SpanY = 2
        UltraGridColumn41.Width = 60
        UltraGridColumn42.Header.VisiblePosition = 37
        UltraGridColumn42.Hidden = True
        UltraGridColumn42.RowLayoutColumnInfo.OriginX = 16
        UltraGridColumn42.RowLayoutColumnInfo.OriginY = 0
        UltraGridColumn42.RowLayoutColumnInfo.PreferredCellSize = New System.Drawing.Size(53, 0)
        UltraGridColumn42.RowLayoutColumnInfo.SpanX = 2
        UltraGridColumn42.RowLayoutColumnInfo.SpanY = 2
        UltraGridColumn43.Header.VisiblePosition = 38
        UltraGridColumn43.Hidden = True
        UltraGridColumn44.Header.VisiblePosition = 39
        UltraGridColumn44.Hidden = True
        UltraGridColumn44.RowLayoutColumnInfo.OriginX = 18
        UltraGridColumn44.RowLayoutColumnInfo.OriginY = 0
        UltraGridColumn44.RowLayoutColumnInfo.PreferredCellSize = New System.Drawing.Size(78, 0)
        UltraGridColumn44.RowLayoutColumnInfo.SpanX = 2
        UltraGridColumn44.RowLayoutColumnInfo.SpanY = 2
        UltraGridColumn45.Header.VisiblePosition = 40
        UltraGridColumn45.Hidden = True
        UltraGridColumn45.RowLayoutColumnInfo.OriginX = 20
        UltraGridColumn45.RowLayoutColumnInfo.OriginY = 0
        UltraGridColumn45.RowLayoutColumnInfo.SpanX = 2
        UltraGridColumn45.RowLayoutColumnInfo.SpanY = 2
        UltraGridColumn46.CellActivation = Infragistics.Win.UltraWinGrid.Activation.ActivateOnly
        UltraGridColumn46.Format = ""
        UltraGridColumn46.Header.Caption = "User"
        UltraGridColumn46.Header.VisiblePosition = 41
        UltraGridColumn46.Hidden = True
        UltraGridColumn46.MaxWidth = 50
        UltraGridColumn46.MinWidth = 50
        UltraGridColumn47.CellActivation = Infragistics.Win.UltraWinGrid.Activation.ActivateOnly
        UltraGridColumn47.Format = "MM/dd/yyyy hh:mm"
        UltraGridColumn47.Header.Caption = "Updated"
        UltraGridColumn47.Header.VisiblePosition = 42
        UltraGridColumn47.Hidden = True
        UltraGridColumn47.MaxWidth = 75
        UltraGridColumn47.MinWidth = 75
        UltraGridColumn48.Header.VisiblePosition = 43
        UltraGridColumn48.Hidden = True
        UltraGridColumn49.Header.VisiblePosition = 44
        UltraGridColumn49.Hidden = True
        UltraGridColumn49.RowLayoutColumnInfo.PreferredCellSize = New System.Drawing.Size(44, 0)
        UltraGridColumn50.Header.VisiblePosition = 45
        UltraGridColumn50.Hidden = True
        UltraGridColumn50.RowLayoutColumnInfo.PreferredCellSize = New System.Drawing.Size(127, 0)
        UltraGridColumn51.Header.VisiblePosition = 46
        UltraGridColumn51.Hidden = True
        UltraGridColumn52.Header.VisiblePosition = 47
        UltraGridColumn52.Hidden = True
        UltraGridColumn53.Header.VisiblePosition = 48
        UltraGridColumn53.Hidden = True
        UltraGridColumn54.Header.VisiblePosition = 49
        UltraGridColumn54.Hidden = True
        UltraGridColumn55.Header.VisiblePosition = 50
        UltraGridColumn55.Hidden = True
        UltraGridColumn56.Header.VisiblePosition = 51
        UltraGridColumn56.Hidden = True
        UltraGridColumn57.Header.VisiblePosition = 52
        UltraGridColumn57.Hidden = True
        UltraGridColumn58.Header.VisiblePosition = 53
        UltraGridColumn58.Hidden = True
        UltraGridColumn59.Header.VisiblePosition = 54
        UltraGridColumn59.Hidden = True
        UltraGridColumn60.AutoCompleteMode = Infragistics.Win.AutoCompleteMode.None
        UltraGridColumn60.CellActivation = Infragistics.Win.UltraWinGrid.Activation.NoEdit
        UltraGridColumn60.Header.Caption = "BOM"
        UltraGridColumn60.Header.VisiblePosition = 55
        UltraGridColumn60.MaxWidth = 17
        UltraGridColumn60.RowLayoutColumnInfo.OriginX = 24
        UltraGridColumn60.RowLayoutColumnInfo.OriginY = 0
        UltraGridColumn60.RowLayoutColumnInfo.SpanX = 2
        UltraGridColumn60.RowLayoutColumnInfo.SpanY = 2
        UltraGridColumn60.Style = Infragistics.Win.UltraWinGrid.ColumnStyle.CheckBox
        UltraGridColumn60.Width = 17
        UltraGridColumn61.Header.Caption = "Created"
        UltraGridColumn61.Header.VisiblePosition = 56
        UltraGridColumn61.Hidden = True
        UltraGridColumn61.MaxWidth = 35
        UltraGridColumn61.MinWidth = 35
        UltraGridColumn61.Width = 35
        UltraGridColumn62.Header.Caption = "Created By"
        UltraGridColumn62.Header.VisiblePosition = 57
        UltraGridColumn62.Hidden = True
        UltraGridColumn62.MaxWidth = 35
        UltraGridColumn62.MinWidth = 35
        UltraGridColumn62.Width = 35
        UltraGridColumn63.Header.VisiblePosition = 58
        UltraGridColumn63.Hidden = True
        UltraGridColumn64.Header.VisiblePosition = 59
        UltraGridColumn64.Hidden = True
        UltraGridColumn65.Header.Caption = "Stain"
        UltraGridColumn65.Header.VisiblePosition = 60
        UltraGridColumn65.MaxWidth = 50
        UltraGridColumn65.MinWidth = 50
        UltraGridColumn65.RowLayoutColumnInfo.OriginX = 12
        UltraGridColumn65.RowLayoutColumnInfo.OriginY = 0
        UltraGridColumn65.RowLayoutColumnInfo.SpanX = 2
        UltraGridColumn65.RowLayoutColumnInfo.SpanY = 2
        UltraGridColumn66.Header.Caption = "Finish"
        UltraGridColumn66.Header.VisiblePosition = 61
        UltraGridColumn66.MaxWidth = 50
        UltraGridColumn66.MinWidth = 50
        UltraGridColumn66.RowLayoutColumnInfo.OriginX = 14
        UltraGridColumn66.RowLayoutColumnInfo.OriginY = 0
        UltraGridColumn66.RowLayoutColumnInfo.SpanX = 2
        UltraGridColumn66.RowLayoutColumnInfo.SpanY = 2
        UltraGridColumn67.Header.Caption = "Lacq"
        UltraGridColumn67.Header.VisiblePosition = 62
        UltraGridColumn67.Hidden = True
        UltraGridColumn67.MaxWidth = 20
        UltraGridColumn67.MinWidth = 5
        UltraGridColumn67.RowLayoutColumnInfo.OriginX = 16
        UltraGridColumn67.RowLayoutColumnInfo.OriginY = 0
        UltraGridColumn67.RowLayoutColumnInfo.SpanX = 2
        UltraGridColumn67.RowLayoutColumnInfo.SpanY = 2
        UltraGridColumn67.Style = Infragistics.Win.UltraWinGrid.ColumnStyle.CheckBox
        UltraGridColumn67.Width = 10
        UltraGridColumn68.Header.Caption = "Lacq"
        UltraGridColumn68.Header.VisiblePosition = 63
        UltraGridColumn68.MaxWidth = 40
        UltraGridColumn68.MinWidth = 40
        UltraGridColumn68.RowLayoutColumnInfo.PreferredCellSize = New System.Drawing.Size(39, 0)
        UltraGridColumn69.Header.VisiblePosition = 64
        UltraGridColumn69.Hidden = True
        UltraGridColumn70.Header.VisiblePosition = 65
        UltraGridColumn70.Hidden = True
        UltraGridColumn71.Header.VisiblePosition = 66
        UltraGridColumn71.Hidden = True
        UltraGridColumn72.Header.VisiblePosition = 67
        UltraGridColumn72.Hidden = True
        UltraGridColumn73.Header.VisiblePosition = 68
        UltraGridColumn73.Hidden = True
        UltraGridColumn74.Header.VisiblePosition = 69
        UltraGridColumn74.Hidden = True
        UltraGridColumn75.Header.VisiblePosition = 70
        UltraGridColumn75.Hidden = True
        UltraGridColumn76.Header.VisiblePosition = 71
        UltraGridColumn76.Hidden = True
        UltraGridColumn77.Header.VisiblePosition = 72
        UltraGridColumn77.Hidden = True
        UltraGridColumn78.Header.VisiblePosition = 73
        UltraGridColumn78.Hidden = True
        UltraGridColumn79.Header.VisiblePosition = 74
        UltraGridColumn79.Hidden = True
        UltraGridColumn80.Header.VisiblePosition = 75
        UltraGridColumn80.Hidden = True
        UltraGridColumn81.Header.VisiblePosition = 76
        UltraGridColumn81.Hidden = True
        UltraGridColumn82.Header.VisiblePosition = 77
        UltraGridColumn82.Hidden = True
        UltraGridColumn83.Header.VisiblePosition = 78
        UltraGridColumn83.Hidden = True
        UltraGridColumn84.Header.VisiblePosition = 79
        UltraGridColumn84.Hidden = True
        UltraGridColumn85.Header.VisiblePosition = 80
        UltraGridColumn85.Hidden = True
        UltraGridColumn86.Header.VisiblePosition = 81
        UltraGridColumn86.Hidden = True
        Appearance208.FontData.BoldAsString = "True"
        Appearance208.TextHAlignAsString = "Right"
        UltraGridColumn87.CellAppearance = Appearance208
        UltraGridColumn87.DataType = GetType(Double)
        UltraGridColumn87.Format = "$###,###.00"
        UltraGridColumn87.Formula = "([ord_itm_qty] *  [ord_itm_unt_sell]) + [ord_itm_disc]"
        UltraGridColumn87.Header.VisiblePosition = 22
        UltraGridColumn87.MaxWidth = 90
        UltraGridColumn87.MinWidth = 75
        UltraGridColumn87.RowLayoutColumnInfo.OriginX = 20
        UltraGridColumn87.RowLayoutColumnInfo.OriginY = 0
        UltraGridColumn87.RowLayoutColumnInfo.SpanX = 2
        UltraGridColumn87.RowLayoutColumnInfo.SpanY = 2
        UltraGridBand3.Columns.AddRange(New Object() {UltraGridColumn6, UltraGridColumn7, UltraGridColumn8, UltraGridColumn9, UltraGridColumn10, UltraGridColumn11, UltraGridColumn12, UltraGridColumn13, UltraGridColumn14, UltraGridColumn15, UltraGridColumn16, UltraGridColumn17, UltraGridColumn18, UltraGridColumn19, UltraGridColumn20, UltraGridColumn21, UltraGridColumn22, UltraGridColumn23, UltraGridColumn24, UltraGridColumn25, UltraGridColumn26, UltraGridColumn27, UltraGridColumn28, UltraGridColumn29, UltraGridColumn30, UltraGridColumn31, UltraGridColumn32, UltraGridColumn33, UltraGridColumn34, UltraGridColumn35, UltraGridColumn36, UltraGridColumn37, UltraGridColumn38, UltraGridColumn39, UltraGridColumn40, UltraGridColumn41, UltraGridColumn42, UltraGridColumn43, UltraGridColumn44, UltraGridColumn45, UltraGridColumn46, UltraGridColumn47, UltraGridColumn48, UltraGridColumn49, UltraGridColumn50, UltraGridColumn51, UltraGridColumn52, UltraGridColumn53, UltraGridColumn54, UltraGridColumn55, UltraGridColumn56, UltraGridColumn57, UltraGridColumn58, UltraGridColumn59, UltraGridColumn60, UltraGridColumn61, UltraGridColumn62, UltraGridColumn63, UltraGridColumn64, UltraGridColumn65, UltraGridColumn66, UltraGridColumn67, UltraGridColumn68, UltraGridColumn69, UltraGridColumn70, UltraGridColumn71, UltraGridColumn72, UltraGridColumn73, UltraGridColumn74, UltraGridColumn75, UltraGridColumn76, UltraGridColumn77, UltraGridColumn78, UltraGridColumn79, UltraGridColumn80, UltraGridColumn81, UltraGridColumn82, UltraGridColumn83, UltraGridColumn84, UltraGridColumn85, UltraGridColumn86, UltraGridColumn87})
        UltraGridBand3.RowLayoutStyle = Infragistics.Win.UltraWinGrid.RowLayoutStyle.ColumnLayout
        UltraGridBand3.SummaryFooterCaption = ""
        Me.Grid1.DisplayLayout.BandsSerializer.Add(UltraGridBand3)
        Me.Grid1.DisplayLayout.Override.AllowAddNew = Infragistics.Win.UltraWinGrid.AllowAddNew.TemplateOnBottom
        Me.Grid1.DisplayLayout.Override.AllowDelete = Infragistics.Win.DefaultableBoolean.[False]
        Me.Grid1.DisplayLayout.Override.AllowUpdate = Infragistics.Win.DefaultableBoolean.[False]
        Appearance209.BackColor = System.Drawing.Color.Transparent
        Me.Grid1.DisplayLayout.Override.CardAreaAppearance = Appearance209
        Appearance210.BackColor = System.Drawing.Color.FromArgb(CType(CType(168, Byte), Integer), CType(CType(167, Byte), Integer), CType(CType(191, Byte), Integer))
        Appearance210.BackColor2 = System.Drawing.Color.FromArgb(CType(CType(112, Byte), Integer), CType(CType(111, Byte), Integer), CType(CType(145, Byte), Integer))
        Appearance210.BackGradientStyle = Infragistics.Win.GradientStyle.Vertical
        Appearance210.FontData.BoldAsString = "True"
        Appearance210.FontData.Name = "Arial"
        Appearance210.FontData.SizeInPoints = 10.0!
        Appearance210.ForeColor = System.Drawing.Color.White
        Appearance210.ThemedElementAlpha = Infragistics.Win.Alpha.Transparent
        Me.Grid1.DisplayLayout.Override.HeaderAppearance = Appearance210
        Me.Grid1.DisplayLayout.Override.HeaderClickAction = Infragistics.Win.UltraWinGrid.HeaderClickAction.SortSingle
        Appearance211.BackColor = System.Drawing.Color.FromArgb(CType(CType(168, Byte), Integer), CType(CType(167, Byte), Integer), CType(CType(191, Byte), Integer))
        Appearance211.BackColor2 = System.Drawing.Color.FromArgb(CType(CType(112, Byte), Integer), CType(CType(111, Byte), Integer), CType(CType(145, Byte), Integer))
        Appearance211.BackGradientStyle = Infragistics.Win.GradientStyle.Vertical
        Me.Grid1.DisplayLayout.Override.RowSelectorAppearance = Appearance211
        Appearance212.BackColor = System.Drawing.Color.FromArgb(CType(CType(251, Byte), Integer), CType(CType(230, Byte), Integer), CType(CType(148, Byte), Integer))
        Appearance212.BackColor2 = System.Drawing.Color.FromArgb(CType(CType(238, Byte), Integer), CType(CType(149, Byte), Integer), CType(CType(21, Byte), Integer))
        Appearance212.BackGradientStyle = Infragistics.Win.GradientStyle.Vertical
        Me.Grid1.DisplayLayout.Override.SelectedRowAppearance = Appearance212
        Me.Grid1.DisplayLayout.Override.SelectTypeRow = Infragistics.Win.UltraWinGrid.SelectType.ExtendedAutoDrag
        Me.Grid1.DisplayLayout.ScrollBounds = Infragistics.Win.UltraWinGrid.ScrollBounds.ScrollToFill
        Me.Grid1.Dock = System.Windows.Forms.DockStyle.Fill
        Me.Grid1.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.Grid1.Location = New System.Drawing.Point(0, 0)
        Me.Grid1.Name = "Grid1"
        Me.Grid1.Size = New System.Drawing.Size(1233, 503)
        Me.Grid1.TabIndex = 0
        Me.Grid1.Tag = ""
        Me.Grid1.UpdateMode = Infragistics.Win.UltraWinGrid.UpdateMode.OnCellChangeOrLostFocus
        Me.Grid1.UseOsThemes = Infragistics.Win.DefaultableBoolean.[False]
        '
        'pTotal
        '
        Me.pTotal.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.pTotal.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.pTotal.Controls.Add(Me.UltraLabel55)
        Me.pTotal.Controls.Add(Me.UltraLabel53)
        Me.pTotal.Controls.Add(Me.UltraLabel52)
        Me.pTotal.Controls.Add(Me.lTax)
        Me.pTotal.Controls.Add(Me.tTotal2)
        Me.pTotal.Controls.Add(Me.tShipTotal)
        Me.pTotal.Controls.Add(Me.tTaxTotal)
        Me.pTotal.Controls.Add(Me.tGrandTotal)
        Me.pTotal.Location = New System.Drawing.Point(984, 524)
        Me.pTotal.Name = "pTotal"
        Me.pTotal.Size = New System.Drawing.Size(248, 121)
        Me.pTotal.TabIndex = 130
        '
        'UltraLabel55
        '
        Me.UltraLabel55.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Appearance14.TextHAlignAsString = "Right"
        Me.UltraLabel55.Appearance = Appearance14
        Me.UltraLabel55.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel55.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel55.Location = New System.Drawing.Point(28, 87)
        Me.UltraLabel55.Name = "UltraLabel55"
        Me.UltraLabel55.Size = New System.Drawing.Size(67, 18)
        Me.UltraLabel55.TabIndex = 55
        Me.UltraLabel55.Text = "Total"
        '
        'UltraLabel53
        '
        Me.UltraLabel53.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Appearance15.TextHAlignAsString = "Right"
        Me.UltraLabel53.Appearance = Appearance15
        Me.UltraLabel53.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel53.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel53.Location = New System.Drawing.Point(20, 31)
        Me.UltraLabel53.Name = "UltraLabel53"
        Me.UltraLabel53.Size = New System.Drawing.Size(75, 19)
        Me.UltraLabel53.TabIndex = 52
        Me.UltraLabel53.Text = "Shipping"
        '
        'UltraLabel52
        '
        Me.UltraLabel52.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Appearance16.TextHAlignAsString = "Right"
        Me.UltraLabel52.Appearance = Appearance16
        Me.UltraLabel52.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel52.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel52.Location = New System.Drawing.Point(7, 5)
        Me.UltraLabel52.Name = "UltraLabel52"
        Me.UltraLabel52.Size = New System.Drawing.Size(90, 18)
        Me.UltraLabel52.TabIndex = 50
        Me.UltraLabel52.Text = "Line Total"
        '
        'lTax
        '
        Me.lTax.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Appearance17.TextHAlignAsString = "Right"
        Me.lTax.Appearance = Appearance17
        Me.lTax.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.lTax.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lTax.Location = New System.Drawing.Point(17, 59)
        Me.lTax.Name = "lTax"
        Me.lTax.Size = New System.Drawing.Size(78, 18)
        Me.lTax.TabIndex = 54
        Me.lTax.Text = "Tax"
        '
        'tTotal2
        '
        Me.tTotal2.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tTotal2.Enabled = False
        Me.tTotal2.Font = New System.Drawing.Font("Microsoft Sans Serif", 9.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tTotal2.FormatString = "$#,###,##0.00"
        Me.tTotal2.Location = New System.Drawing.Point(104, 3)
        Me.tTotal2.Name = "tTotal2"
        Me.tTotal2.Size = New System.Drawing.Size(141, 28)
        Me.tTotal2.TabIndex = 70
        Me.tTotal2.TabNavigation = Infragistics.Win.UltraWinMaskedEdit.MaskedEditTabNavigation.NextControl
        Me.tTotal2.Tag = ""
        '
        'tShipTotal
        '
        Me.tShipTotal.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tShipTotal.Enabled = False
        Me.tShipTotal.Font = New System.Drawing.Font("Microsoft Sans Serif", 9.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tShipTotal.FormatString = "$#,###,##0.00"
        Me.tShipTotal.Location = New System.Drawing.Point(104, 31)
        Me.tShipTotal.Name = "tShipTotal"
        Me.tShipTotal.Size = New System.Drawing.Size(141, 28)
        Me.tShipTotal.TabIndex = 69
        Me.tShipTotal.TabNavigation = Infragistics.Win.UltraWinMaskedEdit.MaskedEditTabNavigation.NextControl
        Me.tShipTotal.Tag = ""
        '
        'tTaxTotal
        '
        Me.tTaxTotal.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tTaxTotal.Enabled = False
        Me.tTaxTotal.Font = New System.Drawing.Font("Microsoft Sans Serif", 9.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tTaxTotal.FormatString = "$#,###,##0.00"
        Me.tTaxTotal.Location = New System.Drawing.Point(104, 59)
        Me.tTaxTotal.Name = "tTaxTotal"
        Me.tTaxTotal.Size = New System.Drawing.Size(141, 28)
        Me.tTaxTotal.TabIndex = 68
        Me.tTaxTotal.TabNavigation = Infragistics.Win.UltraWinMaskedEdit.MaskedEditTabNavigation.NextControl
        Me.tTaxTotal.Tag = ""
        '
        'tGrandTotal
        '
        Me.tGrandTotal.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tGrandTotal.Enabled = False
        Me.tGrandTotal.Font = New System.Drawing.Font("Microsoft Sans Serif", 9.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tGrandTotal.FormatString = "$#,###,##0.00"
        Me.tGrandTotal.Location = New System.Drawing.Point(104, 87)
        Me.tGrandTotal.Name = "tGrandTotal"
        Me.tGrandTotal.Size = New System.Drawing.Size(141, 28)
        Me.tGrandTotal.TabIndex = 67
        Me.tGrandTotal.TabNavigation = Infragistics.Win.UltraWinMaskedEdit.MaskedEditTabNavigation.NextControl
        Me.tGrandTotal.Tag = ""
        '
        'bImportBOMLookup
        '
        Me.bImportBOMLookup.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
        Me.bImportBOMLookup.Enabled = False
        Me.bImportBOMLookup.Location = New System.Drawing.Point(144, 525)
        Me.bImportBOMLookup.Name = "bImportBOMLookup"
        Me.bImportBOMLookup.Size = New System.Drawing.Size(38, 29)
        Me.bImportBOMLookup.TabIndex = 134
        Me.bImportBOMLookup.Tag = "Edit"
        Me.bImportBOMLookup.Text = "..."
        '
        'tDefFinish
        '
        Me.tDefFinish.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tDefFinish.CalcManager = Me.UltraCalcManager1
        Me.tDefFinish.CheckedListSettings.CheckStateMember = ""
        Me.tDefFinish.DropDownStyle = Infragistics.Win.UltraWinGrid.UltraComboStyle.DropDownList
        Me.tDefFinish.Enabled = False
        Me.tDefFinish.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tDefFinish.Location = New System.Drawing.Point(1303, 58)
        Me.tDefFinish.Name = "tDefFinish"
        Me.tDefFinish.Size = New System.Drawing.Size(173, 25)
        Me.tDefFinish.TabIndex = 127
        Me.tDefFinish.Tag = "edit"
        '
        'UltraLabel152
        '
        Me.UltraLabel152.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel152.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel152.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel152.Location = New System.Drawing.Point(1246, 58)
        Me.UltraLabel152.Name = "UltraLabel152"
        Me.UltraLabel152.Size = New System.Drawing.Size(66, 19)
        Me.UltraLabel152.TabIndex = 133
        Me.UltraLabel152.Text = "Finish"
        '
        'bWizard
        '
        Me.bWizard.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.bWizard.Enabled = False
        Me.bWizard.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.bWizard.Location = New System.Drawing.Point(1238, 546)
        Me.bWizard.Name = "bWizard"
        Me.bWizard.Size = New System.Drawing.Size(78, 25)
        Me.bWizard.TabIndex = 131
        Me.bWizard.Tag = "edit"
        Me.bWizard.Text = "Wizard"
        '
        'UltraLabel87
        '
        Me.UltraLabel87.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel87.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel87.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel87.Location = New System.Drawing.Point(1246, 87)
        Me.UltraLabel87.Name = "UltraLabel87"
        Me.UltraLabel87.Size = New System.Drawing.Size(66, 18)
        Me.UltraLabel87.TabIndex = 128
        Me.UltraLabel87.Text = "Lacquer"
        '
        'tDefStain
        '
        Me.tDefStain.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tDefStain.CalcManager = Me.UltraCalcManager1
        Me.tDefStain.CheckedListSettings.CheckStateMember = ""
        Me.tDefStain.DropDownStyle = Infragistics.Win.UltraWinGrid.UltraComboStyle.DropDownList
        Me.tDefStain.Enabled = False
        Me.tDefStain.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tDefStain.Location = New System.Drawing.Point(1303, 31)
        Me.tDefStain.Name = "tDefStain"
        Me.tDefStain.Size = New System.Drawing.Size(173, 25)
        Me.tDefStain.TabIndex = 126
        Me.tDefStain.Tag = "edit"
        '
        'UltraLabel86
        '
        Me.UltraLabel86.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel86.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel86.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel86.Location = New System.Drawing.Point(1246, 31)
        Me.UltraLabel86.Name = "UltraLabel86"
        Me.UltraLabel86.Size = New System.Drawing.Size(66, 17)
        Me.UltraLabel86.TabIndex = 125
        Me.UltraLabel86.Text = "Stain"
        '
        'UltraButton9
        '
        Me.UltraButton9.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraButton9.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraButton9.Location = New System.Drawing.Point(1238, 571)
        Me.UltraButton9.Name = "UltraButton9"
        Me.UltraButton9.Size = New System.Drawing.Size(212, 24)
        Me.UltraButton9.TabIndex = 124
        Me.UltraButton9.Text = "Print Barcode"
        '
        'lMaterialSummary
        '
        Me.lMaterialSummary.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
            Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.lMaterialSummary.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.lMaterialSummary.Font = New System.Drawing.Font("Arial", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lMaterialSummary.Location = New System.Drawing.Point(134, 0)
        Me.lMaterialSummary.Name = "lMaterialSummary"
        Me.lMaterialSummary.Size = New System.Drawing.Size(1016, 18)
        Me.lMaterialSummary.TabIndex = 123
        Me.lMaterialSummary.Text = "None"
        '
        'UltraButton8
        '
        Me.UltraButton8.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraButton8.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraButton8.Location = New System.Drawing.Point(1238, 600)
        Me.UltraButton8.Name = "UltraButton8"
        Me.UltraButton8.Size = New System.Drawing.Size(212, 23)
        Me.UltraButton8.TabIndex = 121
        Me.UltraButton8.Text = "Show Woods"
        '
        'bDoPrice
        '
        Me.bDoPrice.Location = New System.Drawing.Point(480, 692)
        Me.bDoPrice.Name = "bDoPrice"
        Me.bDoPrice.Size = New System.Drawing.Size(134, 28)
        Me.bDoPrice.TabIndex = 120
        Me.bDoPrice.Text = "Do Price"
        Me.bDoPrice.Visible = False
        '
        'pItem
        '
        Me.pItem.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.pItem.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.pItem.Controls.Add(Me.tShipVal)
        Me.pItem.Controls.Add(Me.UltraLabel96)
        Me.pItem.Controls.Add(Me.UltraLabel95)
        Me.pItem.Controls.Add(Me.UltraLabel94)
        Me.pItem.Controls.Add(Me.tDepth)
        Me.pItem.Controls.Add(Me.tHeight)
        Me.pItem.Controls.Add(Me.tWidth)
        Me.pItem.Controls.Add(Me.lShipVal)
        Me.pItem.Controls.Add(Me.tLacqAdd)
        Me.pItem.Controls.Add(Me.tStainAdd)
        Me.pItem.Controls.Add(Me.UltraLabel91)
        Me.pItem.Controls.Add(Me.UltraLabel90)
        Me.pItem.Controls.Add(Me.UltraLabel26)
        Me.pItem.Controls.Add(Me.tProdType)
        Me.pItem.Controls.Add(Me.tShipUnit)
        Me.pItem.Controls.Add(Me.lShipUnit)
        Me.pItem.Controls.Add(Me.tMaterial)
        Me.pItem.Controls.Add(Me.lMaterial)
        Me.pItem.Controls.Add(Me.tMPF)
        Me.pItem.Controls.Add(Me.tDisc)
        Me.pItem.Controls.Add(Me.tUnitBase)
        Me.pItem.Controls.Add(Me.tBase)
        Me.pItem.Controls.Add(Me.tFixture)
        Me.pItem.Controls.Add(Me.tPriceCalc)
        Me.pItem.Controls.Add(Me.UltraLabel38)
        Me.pItem.Controls.Add(Me.UltraLabel35)
        Me.pItem.Controls.Add(Me.UltraLabel32)
        Me.pItem.Controls.Add(Me.UltraLabel31)
        Me.pItem.Controls.Add(Me.tSalesCat)
        Me.pItem.Controls.Add(Me.UltraLabel34)
        Me.pItem.Controls.Add(Me.tShipFlat)
        Me.pItem.Controls.Add(Me.tTaxable)
        Me.pItem.Location = New System.Drawing.Point(1238, 119)
        Me.pItem.Name = "pItem"
        Me.pItem.Size = New System.Drawing.Size(240, 443)
        Me.pItem.TabIndex = 119
        '
        'tShipVal
        '
        Me.tShipVal.AlwaysInEditMode = True
        Me.tShipVal.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tShipVal.FormatString = "$#,###,##0.00"
        Me.tShipVal.Location = New System.Drawing.Point(132, 390)
        Me.tShipVal.Name = "tShipVal"
        Me.tShipVal.PromptChar = Global.Microsoft.VisualBasic.ChrW(32)
        Me.tShipVal.Size = New System.Drawing.Size(106, 24)
        Me.tShipVal.TabIndex = 121
        Me.tShipVal.TabNavigation = Infragistics.Win.UltraWinMaskedEdit.MaskedEditTabNavigation.NextControl
        Me.tShipVal.Tag = "edit"
        '
        'UltraLabel96
        '
        Me.UltraLabel96.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel96.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel96.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel96.Location = New System.Drawing.Point(169, 363)
        Me.UltraLabel96.Name = "UltraLabel96"
        Me.UltraLabel96.Size = New System.Drawing.Size(67, 28)
        Me.UltraLabel96.TabIndex = 127
        Me.UltraLabel96.Text = "Depth"
        '
        'UltraLabel95
        '
        Me.UltraLabel95.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel95.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel95.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel95.Location = New System.Drawing.Point(92, 363)
        Me.UltraLabel95.Name = "UltraLabel95"
        Me.UltraLabel95.Size = New System.Drawing.Size(68, 28)
        Me.UltraLabel95.TabIndex = 126
        Me.UltraLabel95.Text = "Height"
        '
        'UltraLabel94
        '
        Me.UltraLabel94.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel94.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel94.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel94.Location = New System.Drawing.Point(16, 363)
        Me.UltraLabel94.Name = "UltraLabel94"
        Me.UltraLabel94.Size = New System.Drawing.Size(67, 28)
        Me.UltraLabel94.TabIndex = 125
        Me.UltraLabel94.Text = "Width"
        '
        'tDepth
        '
        Me.tDepth.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tDepth.AutoSize = False
        Me.tDepth.Enabled = False
        Me.tDepth.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tDepth.FormatString = "####.00"
        Me.tDepth.Location = New System.Drawing.Point(169, 336)
        Me.tDepth.MinValue = 0
        Me.tDepth.Name = "tDepth"
        Me.tDepth.NumericType = Infragistics.Win.UltraWinEditors.NumericType.[Double]
        Me.tDepth.Size = New System.Drawing.Size(67, 27)
        Me.tDepth.TabIndex = 124
        Me.tDepth.TabNavigation = Infragistics.Win.UltraWinMaskedEdit.MaskedEditTabNavigation.NextControl
        Me.tDepth.Tag = "edit"
        '
        'tHeight
        '
        Me.tHeight.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tHeight.AutoSize = False
        Me.tHeight.Enabled = False
        Me.tHeight.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tHeight.FormatString = "####.00"
        Me.tHeight.Location = New System.Drawing.Point(92, 336)
        Me.tHeight.MinValue = 0
        Me.tHeight.Name = "tHeight"
        Me.tHeight.NumericType = Infragistics.Win.UltraWinEditors.NumericType.[Double]
        Me.tHeight.Size = New System.Drawing.Size(68, 27)
        Me.tHeight.TabIndex = 123
        Me.tHeight.TabNavigation = Infragistics.Win.UltraWinMaskedEdit.MaskedEditTabNavigation.NextControl
        Me.tHeight.Tag = "edit"
        '
        'tWidth
        '
        Me.tWidth.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tWidth.AutoSize = False
        Me.tWidth.Enabled = False
        Me.tWidth.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tWidth.FormatString = "####.00"
        Me.tWidth.Location = New System.Drawing.Point(16, 336)
        Me.tWidth.MinValue = 0
        Me.tWidth.Name = "tWidth"
        Me.tWidth.NumericType = Infragistics.Win.UltraWinEditors.NumericType.[Double]
        Me.tWidth.Size = New System.Drawing.Size(67, 27)
        Me.tWidth.TabIndex = 122
        Me.tWidth.TabNavigation = Infragistics.Win.UltraWinMaskedEdit.MaskedEditTabNavigation.NextControl
        Me.tWidth.Tag = "edit"
        '
        'lShipVal
        '
        Me.lShipVal.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.lShipVal.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.lShipVal.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lShipVal.Location = New System.Drawing.Point(17, 390)
        Me.lShipVal.Name = "lShipVal"
        Me.lShipVal.Size = New System.Drawing.Size(115, 28)
        Me.lShipVal.TabIndex = 120
        Me.lShipVal.Text = "Declared Val"
        '
        'tLacqAdd
        '
        Me.tLacqAdd.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tLacqAdd.AutoSize = False
        Me.tLacqAdd.Enabled = False
        Me.tLacqAdd.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tLacqAdd.FormatString = "####.00"
        Me.tLacqAdd.Location = New System.Drawing.Point(133, 305)
        Me.tLacqAdd.MaskInput = "-nnnn.nn"
        Me.tLacqAdd.MaxValue = 9999
        Me.tLacqAdd.MinValue = -9999
        Me.tLacqAdd.Name = "tLacqAdd"
        Me.tLacqAdd.NumericType = Infragistics.Win.UltraWinEditors.NumericType.[Double]
        Me.tLacqAdd.Size = New System.Drawing.Size(106, 27)
        Me.tLacqAdd.TabIndex = 118
        Me.tLacqAdd.TabNavigation = Infragistics.Win.UltraWinMaskedEdit.MaskedEditTabNavigation.NextControl
        Me.tLacqAdd.Tag = "edit"
        '
        'tStainAdd
        '
        Me.tStainAdd.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tStainAdd.AutoSize = False
        Me.tStainAdd.Enabled = False
        Me.tStainAdd.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tStainAdd.FormatString = "####.00"
        Me.tStainAdd.Location = New System.Drawing.Point(133, 277)
        Me.tStainAdd.MaskInput = "-nnnn.nn"
        Me.tStainAdd.MaxValue = 9999
        Me.tStainAdd.MinValue = -9999
        Me.tStainAdd.Name = "tStainAdd"
        Me.tStainAdd.NumericType = Infragistics.Win.UltraWinEditors.NumericType.[Double]
        Me.tStainAdd.Size = New System.Drawing.Size(106, 28)
        Me.tStainAdd.TabIndex = 117
        Me.tStainAdd.TabNavigation = Infragistics.Win.UltraWinMaskedEdit.MaskedEditTabNavigation.NextControl
        Me.tStainAdd.Tag = "edit"
        '
        'UltraLabel91
        '
        Me.UltraLabel91.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel91.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel91.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel91.Location = New System.Drawing.Point(10, 305)
        Me.UltraLabel91.Name = "UltraLabel91"
        Me.UltraLabel91.Size = New System.Drawing.Size(182, 27)
        Me.UltraLabel91.TabIndex = 116
        Me.UltraLabel91.Text = "Add'l Lacq Bts"
        '
        'UltraLabel90
        '
        Me.UltraLabel90.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel90.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel90.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel90.Location = New System.Drawing.Point(10, 277)
        Me.UltraLabel90.Name = "UltraLabel90"
        Me.UltraLabel90.Size = New System.Drawing.Size(163, 28)
        Me.UltraLabel90.TabIndex = 115
        Me.UltraLabel90.Text = "Add'l Stain Bts"
        '
        'UltraLabel26
        '
        Me.UltraLabel26.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel26.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel26.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel26.Location = New System.Drawing.Point(5, 212)
        Me.UltraLabel26.Name = "UltraLabel26"
        Me.UltraLabel26.Size = New System.Drawing.Size(86, 28)
        Me.UltraLabel26.TabIndex = 108
        Me.UltraLabel26.Text = "Prod Type"
        '
        'tProdType
        '
        Me.tProdType.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tProdType.CalcManager = Me.UltraCalcManager1
        Me.tProdType.CheckedListSettings.CheckStateMember = ""
        Me.tProdType.Enabled = False
        Me.tProdType.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tProdType.Location = New System.Drawing.Point(101, 212)
        Me.tProdType.Name = "tProdType"
        Me.tProdType.Size = New System.Drawing.Size(139, 25)
        Me.tProdType.TabIndex = 95
        Me.tProdType.Tag = "show"
        '
        'tShipUnit
        '
        Me.tShipUnit.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tShipUnit.AutoSize = False
        Me.tShipUnit.Enabled = False
        Me.tShipUnit.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tShipUnit.FormatString = "$#,###,##0.00"
        Me.tShipUnit.Location = New System.Drawing.Point(120, 83)
        Me.tShipUnit.Name = "tShipUnit"
        Me.tShipUnit.Size = New System.Drawing.Size(115, 28)
        Me.tShipUnit.TabIndex = 89
        Me.tShipUnit.TabNavigation = Infragistics.Win.UltraWinMaskedEdit.MaskedEditTabNavigation.NextControl
        Me.tShipUnit.Tag = "Edit"
        '
        'lShipUnit
        '
        Me.lShipUnit.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.lShipUnit.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.lShipUnit.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lShipUnit.Location = New System.Drawing.Point(5, 83)
        Me.lShipUnit.Name = "lShipUnit"
        Me.lShipUnit.Size = New System.Drawing.Size(115, 28)
        Me.lShipUnit.TabIndex = 107
        Me.lShipUnit.Text = "Unit Shipping"
        '
        'tMaterial
        '
        Me.tMaterial.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tMaterial.CalcManager = Me.UltraCalcManager1
        Me.tMaterial.CheckedListSettings.CheckStateMember = ""
        Me.tMaterial.DisplayLayout.Override.DefaultColWidth = 50
        Me.tMaterial.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tMaterial.Location = New System.Drawing.Point(58, 240)
        Me.tMaterial.Name = "tMaterial"
        Me.tMaterial.Size = New System.Drawing.Size(182, 25)
        Me.tMaterial.TabIndex = 92
        Me.tMaterial.Tag = "edit"
        '
        'lMaterial
        '
        Me.lMaterial.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.lMaterial.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.lMaterial.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lMaterial.Location = New System.Drawing.Point(5, 240)
        Me.lMaterial.Name = "lMaterial"
        Me.lMaterial.Size = New System.Drawing.Size(67, 28)
        Me.lMaterial.TabIndex = 105
        Me.lMaterial.Text = "Mat'l"
        '
        'tMPF
        '
        Me.tMPF.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tMPF.AutoSize = False
        Me.tMPF.Enabled = False
        Me.tMPF.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tMPF.FormatString = "###,###.00%"
        Me.tMPF.Location = New System.Drawing.Point(120, 120)
        Me.tMPF.Name = "tMPF"
        Me.tMPF.NumericType = Infragistics.Win.UltraWinEditors.NumericType.[Double]
        Me.tMPF.Size = New System.Drawing.Size(115, 28)
        Me.tMPF.TabIndex = 96
        Me.tMPF.TabNavigation = Infragistics.Win.UltraWinMaskedEdit.MaskedEditTabNavigation.NextControl
        Me.tMPF.Tag = ""
        '
        'tDisc
        '
        Me.tDisc.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tDisc.AutoSize = False
        Me.tDisc.Enabled = False
        Me.tDisc.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tDisc.FormatString = "$##,##0.00"
        Me.tDisc.Location = New System.Drawing.Point(120, 148)
        Me.tDisc.MaskInput = "{currency:-9.2}"
        Me.tDisc.Name = "tDisc"
        Me.tDisc.Size = New System.Drawing.Size(115, 27)
        Me.tDisc.TabIndex = 91
        Me.tDisc.TabNavigation = Infragistics.Win.UltraWinMaskedEdit.MaskedEditTabNavigation.NextControl
        Me.tDisc.Tag = "Edit"
        '
        'tUnitBase
        '
        Me.tUnitBase.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tUnitBase.Enabled = False
        Me.tUnitBase.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tUnitBase.FormatString = "$#,###,##0.00"
        Me.tUnitBase.Location = New System.Drawing.Point(120, 55)
        Me.tUnitBase.Name = "tUnitBase"
        Me.tUnitBase.Size = New System.Drawing.Size(115, 24)
        Me.tUnitBase.TabIndex = 88
        Me.tUnitBase.TabNavigation = Infragistics.Win.UltraWinMaskedEdit.MaskedEditTabNavigation.NextControl
        Me.tUnitBase.Tag = ""
        '
        'tBase
        '
        Me.tBase.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tBase.AutoSize = False
        Me.tBase.Enabled = False
        Me.tBase.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tBase.FormatString = "$###,###.00"
        Me.tBase.Location = New System.Drawing.Point(120, 9)
        Me.tBase.MaskClipMode = Infragistics.Win.UltraWinMaskedEdit.MaskMode.Raw
        Me.tBase.MaskDisplayMode = Infragistics.Win.UltraWinMaskedEdit.MaskMode.Raw
        Me.tBase.MaskInput = "{currency:-9.2}"
        Me.tBase.Name = "tBase"
        Me.tBase.Size = New System.Drawing.Size(115, 28)
        Me.tBase.TabIndex = 104
        Me.tBase.TabNavigation = Infragistics.Win.UltraWinMaskedEdit.MaskedEditTabNavigation.NextControl
        '
        'tFixture
        '
        Me.tFixture.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Appearance18.FontData.SizeInPoints = 10.0!
        Me.tFixture.Appearance = Appearance18
        Me.tFixture.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.tFixture.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.tFixture.Location = New System.Drawing.Point(8, 421)
        Me.tFixture.Name = "tFixture"
        Me.tFixture.Size = New System.Drawing.Size(98, 19)
        Me.tFixture.TabIndex = 98
        Me.tFixture.Text = "Fixture"
        Me.tFixture.Visible = False
        '
        'tPriceCalc
        '
        Me.tPriceCalc.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Appearance19.ForeColor = System.Drawing.Color.Silver
        Me.tPriceCalc.Appearance = Appearance19
        Me.tPriceCalc.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.tPriceCalc.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tPriceCalc.Location = New System.Drawing.Point(14, 37)
        Me.tPriceCalc.Name = "tPriceCalc"
        Me.tPriceCalc.Size = New System.Drawing.Size(221, 18)
        Me.tPriceCalc.TabIndex = 103
        Me.tPriceCalc.Text = "Price Calc Method"
        '
        'UltraLabel38
        '
        Me.UltraLabel38.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Appearance20.ForeColor = System.Drawing.Color.Silver
        Me.UltraLabel38.Appearance = Appearance20
        Me.UltraLabel38.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel38.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel38.Location = New System.Drawing.Point(14, 9)
        Me.UltraLabel38.Name = "UltraLabel38"
        Me.UltraLabel38.Size = New System.Drawing.Size(173, 28)
        Me.UltraLabel38.TabIndex = 101
        Me.UltraLabel38.Text = "Base Price"
        '
        'UltraLabel35
        '
        Me.UltraLabel35.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel35.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel35.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel35.Location = New System.Drawing.Point(5, 148)
        Me.UltraLabel35.Name = "UltraLabel35"
        Me.UltraLabel35.Size = New System.Drawing.Size(192, 27)
        Me.UltraLabel35.TabIndex = 99
        Me.UltraLabel35.Text = "Item Disc/Up"
        '
        'UltraLabel32
        '
        Me.UltraLabel32.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel32.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel32.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel32.Location = New System.Drawing.Point(5, 120)
        Me.UltraLabel32.Name = "UltraLabel32"
        Me.UltraLabel32.Size = New System.Drawing.Size(105, 28)
        Me.UltraLabel32.TabIndex = 93
        Me.UltraLabel32.Text = "MPF"
        '
        'UltraLabel31
        '
        Me.UltraLabel31.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel31.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel31.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel31.Location = New System.Drawing.Point(5, 55)
        Me.UltraLabel31.Name = "UltraLabel31"
        Me.UltraLabel31.Size = New System.Drawing.Size(153, 28)
        Me.UltraLabel31.TabIndex = 90
        Me.UltraLabel31.Text = "Unit Base"
        '
        'tSalesCat
        '
        Me.tSalesCat.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tSalesCat.CalcManager = Me.UltraCalcManager1
        Me.tSalesCat.CheckedListSettings.CheckStateMember = ""
        Me.tSalesCat.Enabled = False
        Me.tSalesCat.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tSalesCat.Location = New System.Drawing.Point(101, 185)
        Me.tSalesCat.Name = "tSalesCat"
        Me.tSalesCat.Size = New System.Drawing.Size(139, 25)
        Me.tSalesCat.TabIndex = 109
        Me.tSalesCat.Tag = "edit"
        '
        'UltraLabel34
        '
        Me.UltraLabel34.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel34.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel34.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel34.Location = New System.Drawing.Point(5, 185)
        Me.UltraLabel34.Name = "UltraLabel34"
        Me.UltraLabel34.Size = New System.Drawing.Size(134, 18)
        Me.UltraLabel34.TabIndex = 110
        Me.UltraLabel34.Text = "Sales Cat"
        '
        'tShipFlat
        '
        Me.tShipFlat.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tShipFlat.AutoSize = False
        Me.tShipFlat.Enabled = False
        Me.tShipFlat.Font = New System.Drawing.Font("Microsoft Sans Serif", 9.75!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tShipFlat.FormatString = "$#,###,##0.00"
        Me.tShipFlat.Location = New System.Drawing.Point(120, 83)
        Me.tShipFlat.Name = "tShipFlat"
        Me.tShipFlat.Size = New System.Drawing.Size(115, 28)
        Me.tShipFlat.TabIndex = 114
        Me.tShipFlat.TabNavigation = Infragistics.Win.UltraWinMaskedEdit.MaskedEditTabNavigation.NextControl
        Me.tShipFlat.Tag = "Edit"
        Me.tShipFlat.Visible = False
        '
        'tTaxable
        '
        Me.tTaxable.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tTaxable.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.tTaxable.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.tTaxable.Enabled = False
        Me.tTaxable.Location = New System.Drawing.Point(120, 423)
        Me.tTaxable.Name = "tTaxable"
        Me.tTaxable.Size = New System.Drawing.Size(96, 19)
        Me.tTaxable.TabIndex = 111
        Me.tTaxable.Text = "Taxable"
        '
        'Label5
        '
        Me.Label5.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.Label5.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
        Me.Label5.Location = New System.Drawing.Point(1279, 111)
        Me.Label5.Name = "Label5"
        Me.Label5.Size = New System.Drawing.Size(229, 2)
        Me.Label5.TabIndex = 118
        Me.Label5.Text = "Label5"
        '
        'tGenMaterial
        '
        Me.tGenMaterial.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tGenMaterial.CalcManager = Me.UltraCalcManager1
        Me.tGenMaterial.CheckedListSettings.CheckStateMember = ""
        Me.tGenMaterial.DropDownStyle = Infragistics.Win.UltraWinGrid.UltraComboStyle.DropDownList
        Me.tGenMaterial.Enabled = False
        Me.tGenMaterial.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tGenMaterial.Location = New System.Drawing.Point(1303, 3)
        Me.tGenMaterial.Name = "tGenMaterial"
        Me.tGenMaterial.Size = New System.Drawing.Size(173, 25)
        Me.tGenMaterial.TabIndex = 117
        Me.tGenMaterial.Tag = "edit"
        '
        'UltraLabel48
        '
        Me.UltraLabel48.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel48.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel48.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel48.Location = New System.Drawing.Point(1246, 3)
        Me.UltraLabel48.Name = "UltraLabel48"
        Me.UltraLabel48.Size = New System.Drawing.Size(66, 15)
        Me.UltraLabel48.TabIndex = 116
        Me.UltraLabel48.Text = "Material"
        '
        'lMarginBelow0
        '
        Me.lMarginBelow0.Anchor = CType(((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left) _
            Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Appearance21.BackColor = System.Drawing.Color.White
        Appearance21.ForeColor = System.Drawing.Color.Red
        Appearance21.TextHAlignAsString = "Center"
        Appearance21.TextVAlignAsString = "Middle"
        Me.lMarginBelow0.Appearance = Appearance21
        Me.lMarginBelow0.Font = New System.Drawing.Font("Microsoft Sans Serif", 24.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lMarginBelow0.Location = New System.Drawing.Point(192, 525)
        Me.lMarginBelow0.Name = "lMarginBelow0"
        Me.lMarginBelow0.Size = New System.Drawing.Size(775, 66)
        Me.lMarginBelow0.TabIndex = 86
        Me.lMarginBelow0.Text = "Margin is below $0.00"
        Me.lMarginBelow0.Visible = False
        '
        'tPicture
        '
        Me.tPicture.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Appearance22.ImageHAlign = Infragistics.Win.HAlign.Left
        Appearance22.ImageVAlign = Infragistics.Win.VAlign.Top
        Me.tPicture.Appearance = Appearance22
        Me.tPicture.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.tPicture.BorderShadowColor = System.Drawing.Color.Empty
        Me.tPicture.DrawBorderShadow = True
        Me.tPicture.Location = New System.Drawing.Point(722, 342)
        Me.tPicture.Name = "tPicture"
        Me.tPicture.Size = New System.Drawing.Size(230, 193)
        Me.tPicture.TabIndex = 27
        Me.tPicture.Visible = False
        '
        'UltraButton3
        '
        Me.UltraButton3.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
        Me.UltraButton3.Enabled = False
        Me.UltraButton3.Location = New System.Drawing.Point(10, 525)
        Me.UltraButton3.Name = "UltraButton3"
        Me.UltraButton3.Size = New System.Drawing.Size(134, 29)
        Me.UltraButton3.TabIndex = 71
        Me.UltraButton3.Tag = "Edit"
        Me.UltraButton3.Text = "Import Items"
        '
        'tForecastOveride
        '
        Me.tForecastOveride.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
        Appearance23.BackColor = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.tForecastOveride.Appearance = Appearance23
        Me.tForecastOveride.CalcManager = Me.UltraCalcManager1
        Me.tForecastOveride.CheckedListSettings.CheckStateMember = ""
        Me.tForecastOveride.DisplayLayout.Override.NullText = "<Forcast Overide>"
        Me.tForecastOveride.DropDownStyle = Infragistics.Win.UltraWinGrid.UltraComboStyle.DropDownList
        Me.tForecastOveride.Location = New System.Drawing.Point(10, 555)
        Me.tForecastOveride.Name = "tForecastOveride"
        Me.tForecastOveride.Size = New System.Drawing.Size(172, 29)
        Me.tForecastOveride.TabIndex = 48
        Me.tForecastOveride.Visible = False
        '
        'tRet
        '
        Me.tRet.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
        Me.tRet.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.tRet.Font = New System.Drawing.Font("Arial", 10.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tRet.Location = New System.Drawing.Point(317, 607)
        Me.tRet.Name = "tRet"
        Me.tRet.Size = New System.Drawing.Size(144, 16)
        Me.tRet.TabIndex = 46
        Me.tRet.Text = "RET: $0.00"
        '
        'tCon
        '
        Me.tCon.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
        Me.tCon.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.tCon.Font = New System.Drawing.Font("Arial", 10.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tCon.Location = New System.Drawing.Point(163, 607)
        Me.tCon.Name = "tCon"
        Me.tCon.Size = New System.Drawing.Size(135, 16)
        Me.tCon.TabIndex = 45
        Me.tCon.Text = "CON: $0.00"
        '
        'lBase
        '
        Me.lBase.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
        Me.lBase.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.lBase.Font = New System.Drawing.Font("Arial", 10.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lBase.Location = New System.Drawing.Point(10, 607)
        Me.lBase.Name = "lBase"
        Me.lBase.Size = New System.Drawing.Size(144, 16)
        Me.lBase.TabIndex = 44
        Me.lBase.Text = "Base: $0.00"
        '
        'tMF
        '
        Me.tMF.AutoSize = False
        Me.tMF.Enabled = False
        Me.tMF.Font = New System.Drawing.Font("Microsoft Sans Serif", 9.75!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tMF.FormatString = "###,###.00%"
        Me.tMF.Location = New System.Drawing.Point(547, 655)
        Me.tMF.Name = "tMF"
        Me.tMF.NumericType = Infragistics.Win.UltraWinEditors.NumericType.[Double]
        Me.tMF.Size = New System.Drawing.Size(77, 28)
        Me.tMF.TabIndex = 7
        Me.tMF.TabNavigation = Infragistics.Win.UltraWinMaskedEdit.MaskedEditTabNavigation.NextControl
        Me.tMF.Tag = "Edit"
        Me.tMF.Visible = False
        '
        'tLineNotes
        '
        Me.tLineNotes.AcceptsReturn = True
        Me.tLineNotes.Anchor = CType(((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left) _
            Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tLineNotes.Location = New System.Drawing.Point(259, 525)
        Me.tLineNotes.Multiline = True
        Me.tLineNotes.Name = "tLineNotes"
        Me.tLineNotes.Scrollbars = System.Windows.Forms.ScrollBars.Vertical
        Me.tLineNotes.Size = New System.Drawing.Size(657, 66)
        Me.tLineNotes.TabIndex = 13
        Me.tLineNotes.Tag = "Edit"
        '
        'UltraLabel39
        '
        Me.UltraLabel39.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel39.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel39.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel39.Location = New System.Drawing.Point(202, 525)
        Me.UltraLabel39.Name = "UltraLabel39"
        Me.UltraLabel39.Size = New System.Drawing.Size(76, 66)
        Me.UltraLabel39.TabIndex = 23
        Me.UltraLabel39.Text = "Line Notes"
        '
        'UltraLabel33
        '
        Me.UltraLabel33.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel33.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel33.Location = New System.Drawing.Point(480, 655)
        Me.UltraLabel33.Name = "UltraLabel33"
        Me.UltraLabel33.Size = New System.Drawing.Size(67, 28)
        Me.UltraLabel33.TabIndex = 6
        Me.UltraLabel33.Text = "Markup"
        Me.UltraLabel33.Visible = False
        '
        'UltraLabel51
        '
        Me.UltraLabel51.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
        Appearance33.ForeColor = System.Drawing.Color.Silver
        Me.UltraLabel51.Appearance = Appearance33
        Me.UltraLabel51.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel51.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel51.Location = New System.Drawing.Point(10, 584)
        Me.UltraLabel51.Name = "UltraLabel51"
        Me.UltraLabel51.Size = New System.Drawing.Size(151, 29)
        Me.UltraLabel51.TabIndex = 49
        Me.UltraLabel51.Text = "Forecast Override"
        Me.UltraLabel51.Visible = False
        '
        'Label6
        '
        Me.Label6.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.Label6.Font = New System.Drawing.Font("Arial", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.Label6.Location = New System.Drawing.Point(0, 0)
        Me.Label6.Name = "Label6"
        Me.Label6.Size = New System.Drawing.Size(134, 27)
        Me.Label6.TabIndex = 122
        Me.Label6.Text = "Material Summary:"
        '
        'UltraTabPageControl4
        '
        Me.UltraTabPageControl4.Controls.Add(Me.Label8)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel174)
        Me.UltraTabPageControl4.Controls.Add(Me.tConsultType)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel175)
        Me.UltraTabPageControl4.Controls.Add(Me.tFieldConsultant)
        Me.UltraTabPageControl4.Controls.Add(Me.bGridStatusSize)
        Me.UltraTabPageControl4.Controls.Add(Me.tCCSource)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel168)
        Me.UltraTabPageControl4.Controls.Add(Me.GridStatus)
        Me.UltraTabPageControl4.Controls.Add(Me.tPCASignOffRecDate)
        Me.UltraTabPageControl4.Controls.Add(Me.tPCASignOffRecBy)
        Me.UltraTabPageControl4.Controls.Add(Me.cbPCAsignOffRec)
        Me.UltraTabPageControl4.Controls.Add(Me.tPCASignOffSentDate)
        Me.UltraTabPageControl4.Controls.Add(Me.tPCASignOffSentBy)
        Me.UltraTabPageControl4.Controls.Add(Me.cbPCASignOffSent)
        Me.UltraTabPageControl4.Controls.Add(Me.gbPropCommit)
        Me.UltraTabPageControl4.Controls.Add(Me.gbOrder)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel153)
        Me.UltraTabPageControl4.Controls.Add(Me.tPropStage)
        Me.UltraTabPageControl4.Controls.Add(Me.tRackHeight)
        Me.UltraTabPageControl4.Controls.Add(Me.tPriorityNote)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel10)
        Me.UltraTabPageControl4.Controls.Add(Me.tBottles)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel92)
        Me.UltraTabPageControl4.Controls.Add(Me.tCustOrd)
        Me.UltraTabPageControl4.Controls.Add(Me.tFloating)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel88)
        Me.UltraTabPageControl4.Controls.Add(Me.tTerr)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel23)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel84)
        Me.UltraTabPageControl4.Controls.Add(Me.tDesignAuto)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel82)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel72)
        Me.UltraTabPageControl4.Controls.Add(Me.tCreateBy)
        Me.UltraTabPageControl4.Controls.Add(Me.tDesType)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel47)
        Me.UltraTabPageControl4.Controls.Add(Me.gbCheckOff)
        Me.UltraTabPageControl4.Controls.Add(Me.oHistory)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel69)
        Me.UltraTabPageControl4.Controls.Add(Me.cbResponsible)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel66)
        Me.UltraTabPageControl4.Controls.Add(Me.tStageDate)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel65)
        Me.UltraTabPageControl4.Controls.Add(Me.tShipDate)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel61)
        Me.UltraTabPageControl4.Controls.Add(Me.tBilledDate)
        Me.UltraTabPageControl4.Controls.Add(Me.tSource)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel25)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel49)
        Me.UltraTabPageControl4.Controls.Add(Me.tGenFinish)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel7)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel24)
        Me.UltraTabPageControl4.Controls.Add(Me.tPO)
        Me.UltraTabPageControl4.Controls.Add(Me.tDesigner)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel15)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel44)
        Me.UltraTabPageControl4.Controls.Add(Me.tUpBy)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel43)
        Me.UltraTabPageControl4.Controls.Add(Me.tUpOn)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel42)
        Me.UltraTabPageControl4.Controls.Add(Me.tCreate)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel41)
        Me.UltraTabPageControl4.Controls.Add(Me.tDispDate)
        Me.UltraTabPageControl4.Controls.Add(Me.tOutside)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel37)
        Me.UltraTabPageControl4.Controls.Add(Me.tInside)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel36)
        Me.UltraTabPageControl4.Controls.Add(Me.tRefFee)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraTabControl1)
        Me.UltraTabPageControl4.Controls.Add(Me.tStatus)
        Me.UltraTabPageControl4.Controls.Add(Me.tTabTitle)
        Me.UltraTabPageControl4.Controls.Add(Me.UltraLabel93)
        Me.UltraTabPageControl4.Controls.Add(Me.cbPriority)
        Me.UltraTabPageControl4.Controls.Add(Me.cbAddon)
        Me.UltraTabPageControl4.Controls.Add(Me.cbAddOnNoEmail)
        Me.UltraTabPageControl4.Location = New System.Drawing.Point(-10000, -10000)
        Me.UltraTabPageControl4.Name = "UltraTabPageControl4"
        Me.UltraTabPageControl4.Size = New System.Drawing.Size(1478, 645)
        '
        'Label8
        '
        Me.Label8.AutoSize = True
        Me.Label8.Location = New System.Drawing.Point(610, 467)
        Me.Label8.Name = "Label8"
        Me.Label8.Size = New System.Drawing.Size(59, 20)
        Me.Label8.TabIndex = 148
        Me.Label8.Text = "Label8"
        Me.Label8.Visible = False
        '
        'UltraLabel174
        '
        Me.UltraLabel174.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel174.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel174.Location = New System.Drawing.Point(11, 151)
        Me.UltraLabel174.Name = "UltraLabel174"
        Me.UltraLabel174.Size = New System.Drawing.Size(123, 27)
        Me.UltraLabel174.TabIndex = 147
        Me.UltraLabel174.Text = "Consult Type"
        '
        'tConsultType
        '
        Me.tConsultType.AutoSize = False
        Me.tConsultType.CalcManager = Me.UltraCalcManager1
        Me.tConsultType.CheckedListSettings.CheckStateMember = ""
        Me.tConsultType.DataSource = Me.UltraDataSource2
        UltraGridColumn88.Header.VisiblePosition = 0
        UltraGridBand4.Columns.AddRange(New Object() {UltraGridColumn88})
        Me.tConsultType.DisplayLayout.BandsSerializer.Add(UltraGridBand4)
        Me.tConsultType.DropDownStyle = Infragistics.Win.UltraWinGrid.UltraComboStyle.DropDownList
        Me.tConsultType.Enabled = False
        Me.tConsultType.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tConsultType.LimitToList = True
        Me.tConsultType.Location = New System.Drawing.Point(144, 150)
        Me.tConsultType.Name = "tConsultType"
        Me.tConsultType.Size = New System.Drawing.Size(163, 20)
        Me.tConsultType.TabIndex = 146
        Me.tConsultType.Tag = "Edit"
        '
        'UltraDataSource2
        '
        Me.UltraDataSource2.Band.Columns.AddRange(New Object() {UltraDataColumn1})
        '
        'UltraLabel175
        '
        Me.UltraLabel175.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel175.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel175.Location = New System.Drawing.Point(11, 129)
        Me.UltraLabel175.Name = "UltraLabel175"
        Me.UltraLabel175.Size = New System.Drawing.Size(123, 27)
        Me.UltraLabel175.TabIndex = 145
        Me.UltraLabel175.Text = "Field Consultant"
        '
        'tFieldConsultant
        '
        Me.tFieldConsultant.AutoSize = False
        Me.tFieldConsultant.CalcManager = Me.UltraCalcManager1
        Me.tFieldConsultant.CheckedListSettings.CheckStateMember = ""
        Me.tFieldConsultant.DropDownStyle = Infragistics.Win.UltraWinGrid.UltraComboStyle.DropDownList
        Me.tFieldConsultant.Enabled = False
        Me.tFieldConsultant.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tFieldConsultant.Location = New System.Drawing.Point(144, 128)
        Me.tFieldConsultant.Name = "tFieldConsultant"
        Me.tFieldConsultant.Size = New System.Drawing.Size(163, 20)
        Me.tFieldConsultant.TabIndex = 143
        Me.tFieldConsultant.Tag = "Edit"
        '
        'bGridStatusSize
        '
        Me.bGridStatusSize.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.bGridStatusSize.BackColor = System.Drawing.Color.FromArgb(CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(224, Byte), Integer))
        Me.bGridStatusSize.FlatStyle = System.Windows.Forms.FlatStyle.Flat
        Me.bGridStatusSize.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.bGridStatusSize.Location = New System.Drawing.Point(1433, 243)
        Me.bGridStatusSize.Name = "bGridStatusSize"
        Me.bGridStatusSize.Size = New System.Drawing.Size(38, 19)
        Me.bGridStatusSize.TabIndex = 114
        Me.bGridStatusSize.Text = "<<"
        Me.bGridStatusSize.UseVisualStyleBackColor = False
        '
        'tCCSource
        '
        Me.tCCSource.AutoSize = False
        Me.tCCSource.CalcManager = Me.UltraCalcManager1
        Me.tCCSource.CheckedListSettings.CheckStateMember = ""
        Me.tCCSource.DropDownStyle = Infragistics.Win.UltraWinGrid.UltraComboStyle.DropDownList
        Me.tCCSource.Enabled = False
        Me.tCCSource.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tCCSource.Location = New System.Drawing.Point(144, 242)
        Me.tCCSource.MaxDropDownItems = 12
        Me.tCCSource.Name = "tCCSource"
        Me.tCCSource.Size = New System.Drawing.Size(163, 20)
        Me.tCCSource.TabIndex = 141
        Me.tCCSource.Tag = "edit"
        '
        'UltraLabel168
        '
        Me.UltraLabel168.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel168.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel168.Location = New System.Drawing.Point(10, 242)
        Me.UltraLabel168.Name = "UltraLabel168"
        Me.UltraLabel168.Size = New System.Drawing.Size(172, 20)
        Me.UltraLabel168.TabIndex = 142
        Me.UltraLabel168.Text = "Call Center Source"
        '
        'GridStatus
        '
        Me.GridStatus.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom) _
            Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.GridStatus.CalcManager = Me.UltraCalcManager1
        Appearance39.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.GridStatus.DisplayLayout.Appearance = Appearance39
        Me.GridStatus.DisplayLayout.AutoFitStyle = Infragistics.Win.UltraWinGrid.AutoFitStyle.ResizeAllColumns
        UltraGridColumn89.Format = "MM/dd/yyyy hh:mm"
        UltraGridColumn89.Header.Caption = "Date"
        UltraGridColumn89.Header.VisiblePosition = 0
        UltraGridColumn89.MinWidth = 75
        UltraGridColumn89.Width = 90
        UltraGridColumn90.Header.Caption = "User"
        UltraGridColumn90.Header.VisiblePosition = 1
        UltraGridColumn90.MinWidth = 50
        UltraGridColumn90.Width = 75
        UltraGridColumn91.Header.Caption = "Status"
        UltraGridColumn91.Header.VisiblePosition = 2
        UltraGridColumn91.MinWidth = 75
        UltraGridColumn91.Width = 93
        UltraGridColumn92.Header.Caption = "Source"
        UltraGridColumn92.Header.VisiblePosition = 3
        UltraGridColumn92.Hidden = True
        UltraGridColumn92.MinWidth = 100
        UltraGridColumn92.Width = 100
        UltraGridBand5.Columns.AddRange(New Object() {UltraGridColumn89, UltraGridColumn90, UltraGridColumn91, UltraGridColumn92})
        Me.GridStatus.DisplayLayout.BandsSerializer.Add(UltraGridBand5)
        Me.GridStatus.DisplayLayout.Override.AllowAddNew = Infragistics.Win.UltraWinGrid.AllowAddNew.No
        Me.GridStatus.DisplayLayout.Override.AllowDelete = Infragistics.Win.DefaultableBoolean.[False]
        Me.GridStatus.DisplayLayout.Override.AllowUpdate = Infragistics.Win.DefaultableBoolean.[False]
        Me.GridStatus.DisplayLayout.Override.RowSelectors = Infragistics.Win.DefaultableBoolean.[False]
        Me.GridStatus.DisplayLayout.ScrollBounds = Infragistics.Win.UltraWinGrid.ScrollBounds.ScrollToFill
        Me.GridStatus.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.GridStatus.Location = New System.Drawing.Point(1215, 243)
        Me.GridStatus.Name = "GridStatus"
        Me.GridStatus.Size = New System.Drawing.Size(260, 362)
        Me.GridStatus.TabIndex = 102
        Me.GridStatus.Text = "Status History"
        '
        'tPCASignOffRecDate
        '
        Me.tPCASignOffRecDate.AutoSize = False
        Me.tPCASignOffRecDate.Enabled = False
        Me.tPCASignOffRecDate.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tPCASignOffRecDate.Location = New System.Drawing.Point(812, 112)
        Me.tPCASignOffRecDate.Name = "tPCASignOffRecDate"
        Me.tPCASignOffRecDate.Size = New System.Drawing.Size(150, 20)
        Me.tPCASignOffRecDate.TabIndex = 140
        '
        'tPCASignOffRecBy
        '
        Me.tPCASignOffRecBy.AutoSize = False
        Me.tPCASignOffRecBy.Enabled = False
        Me.tPCASignOffRecBy.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tPCASignOffRecBy.Location = New System.Drawing.Point(713, 112)
        Me.tPCASignOffRecBy.Name = "tPCASignOffRecBy"
        Me.tPCASignOffRecBy.Size = New System.Drawing.Size(93, 20)
        Me.tPCASignOffRecBy.TabIndex = 139
        '
        'cbPCAsignOffRec
        '
        Appearance173.FontData.SizeInPoints = 8.0!
        Me.cbPCAsignOffRec.Appearance = Appearance173
        Me.cbPCAsignOffRec.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.cbPCAsignOffRec.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.cbPCAsignOffRec.Enabled = False
        Me.cbPCAsignOffRec.Location = New System.Drawing.Point(605, 110)
        Me.cbPCAsignOffRec.Name = "cbPCAsignOffRec"
        Me.cbPCAsignOffRec.Size = New System.Drawing.Size(153, 28)
        Me.cbPCAsignOffRec.TabIndex = 138
        Me.cbPCAsignOffRec.Tag = "edit"
        Me.cbPCAsignOffRec.Text = "Sign Off Rec'd"
        '
        'tPCASignOffSentDate
        '
        Me.tPCASignOffSentDate.AutoSize = False
        Me.tPCASignOffSentDate.Enabled = False
        Me.tPCASignOffSentDate.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tPCASignOffSentDate.Location = New System.Drawing.Point(812, 90)
        Me.tPCASignOffSentDate.Name = "tPCASignOffSentDate"
        Me.tPCASignOffSentDate.Size = New System.Drawing.Size(150, 20)
        Me.tPCASignOffSentDate.TabIndex = 137
        '
        'tPCASignOffSentBy
        '
        Me.tPCASignOffSentBy.AutoSize = False
        Me.tPCASignOffSentBy.Enabled = False
        Me.tPCASignOffSentBy.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tPCASignOffSentBy.Location = New System.Drawing.Point(713, 90)
        Me.tPCASignOffSentBy.Name = "tPCASignOffSentBy"
        Me.tPCASignOffSentBy.Size = New System.Drawing.Size(93, 20)
        Me.tPCASignOffSentBy.TabIndex = 136
        '
        'cbPCASignOffSent
        '
        Appearance175.FontData.SizeInPoints = 8.0!
        Me.cbPCASignOffSent.Appearance = Appearance175
        Me.cbPCASignOffSent.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.cbPCASignOffSent.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.cbPCASignOffSent.Enabled = False
        Me.cbPCASignOffSent.Location = New System.Drawing.Point(605, 88)
        Me.cbPCASignOffSent.Name = "cbPCASignOffSent"
        Me.cbPCASignOffSent.Size = New System.Drawing.Size(153, 29)
        Me.cbPCASignOffSent.TabIndex = 135
        Me.cbPCASignOffSent.Tag = "edit"
        Me.cbPCASignOffSent.Text = "Sign Off Sent"
        '
        'gbPropCommit
        '
        Me.gbPropCommit.BackColor = System.Drawing.Color.PaleGoldenrod
        Me.gbPropCommit.Controls.Add(Me.pcReport)
        Me.gbPropCommit.Controls.Add(Me.pcDate)
        Me.gbPropCommit.Controls.Add(Me.pcNotes)
        Me.gbPropCommit.Controls.Add(Me.UltraLabel128)
        Me.gbPropCommit.Controls.Add(Me.pcDays)
        Me.gbPropCommit.Controls.Add(Me.UltraLabel163)
        Me.gbPropCommit.Enabled = False
        Me.gbPropCommit.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.gbPropCommit.Location = New System.Drawing.Point(599, 219)
        Me.gbPropCommit.Name = "gbPropCommit"
        Me.gbPropCommit.Size = New System.Drawing.Size(363, 134)
        Me.gbPropCommit.TabIndex = 134
        Me.gbPropCommit.TabStop = False
        Me.gbPropCommit.Tag = "edit"
        Me.gbPropCommit.Text = "Proposed Commitment Date"
        Me.gbPropCommit.Visible = False
        '
        'pcReport
        '
        Appearance176.FontData.BoldAsString = "False"
        Appearance176.FontData.SizeInPoints = 6.0!
        Me.pcReport.Appearance = Appearance176
        Me.pcReport.Location = New System.Drawing.Point(278, 24)
        Me.pcReport.Name = "pcReport"
        Me.pcReport.Size = New System.Drawing.Size(78, 30)
        Me.pcReport.TabIndex = 19
        Me.pcReport.Text = "Show on Report"
        '
        'pcDate
        '
        Appearance37.FontData.BoldAsString = "False"
        Appearance37.FontData.SizeInPoints = 8.0!
        Me.pcDate.Appearance = Appearance37
        Me.pcDate.DateButtons.Add(DateButton1)
        Me.pcDate.Location = New System.Drawing.Point(6, 29)
        Me.pcDate.Name = "pcDate"
        Me.pcDate.NonAutoSizeHeight = 25
        Me.pcDate.Size = New System.Drawing.Size(98, 25)
        Me.pcDate.TabIndex = 18
        Me.pcDate.Value = ""
        '
        'pcNotes
        '
        Me.pcNotes.AutoSize = False
        Me.pcNotes.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.pcNotes.Location = New System.Drawing.Point(6, 68)
        Me.pcNotes.MaxLength = 250
        Me.pcNotes.Multiline = True
        Me.pcNotes.Name = "pcNotes"
        Me.pcNotes.Scrollbars = System.Windows.Forms.ScrollBars.Vertical
        Me.pcNotes.Size = New System.Drawing.Size(350, 62)
        Me.pcNotes.TabIndex = 16
        '
        'UltraLabel128
        '
        Appearance191.BackColor = System.Drawing.Color.PaleGoldenrod
        Me.UltraLabel128.Appearance = Appearance191
        Me.UltraLabel128.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel128.Font = New System.Drawing.Font("Microsoft Sans Serif", 6.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel128.Location = New System.Drawing.Point(133, 35)
        Me.UltraLabel128.Name = "UltraLabel128"
        Me.UltraLabel128.Size = New System.Drawing.Size(65, 28)
        Me.UltraLabel128.TabIndex = 15
        Me.UltraLabel128.Text = "Rolling Days"
        '
        'pcDays
        '
        Me.pcDays.AutoSize = False
        Me.pcDays.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.pcDays.Location = New System.Drawing.Point(198, 29)
        Me.pcDays.Name = "pcDays"
        Me.pcDays.Size = New System.Drawing.Size(65, 23)
        Me.pcDays.TabIndex = 14
        '
        'UltraLabel163
        '
        Appearance190.BackColor = System.Drawing.Color.PaleGoldenrod
        Me.UltraLabel163.Appearance = Appearance190
        Me.UltraLabel163.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel163.Font = New System.Drawing.Font("Microsoft Sans Serif", 6.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel163.Location = New System.Drawing.Point(6, 55)
        Me.UltraLabel163.Name = "UltraLabel163"
        Me.UltraLabel163.Size = New System.Drawing.Size(65, 29)
        Me.UltraLabel163.TabIndex = 17
        Me.UltraLabel163.Text = "Notes"
        '
        'gbOrder
        '
        Me.gbOrder.BackColor = System.Drawing.Color.PaleGoldenrod
        Me.gbOrder.Controls.Add(Me.oCustWTerms)
        Me.gbOrder.Controls.Add(Me.cbCustWTerms)
        Me.gbOrder.Enabled = False
        Me.gbOrder.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.gbOrder.Location = New System.Drawing.Point(932, 0)
        Me.gbOrder.Name = "gbOrder"
        Me.gbOrder.Size = New System.Drawing.Size(231, 443)
        Me.gbOrder.TabIndex = 120
        Me.gbOrder.TabStop = False
        Me.gbOrder.Tag = "edit"
        Me.gbOrder.Text = "Order Instructions"
        Me.gbOrder.Visible = False
        '
        'oCustWTerms
        '
        Appearance188.FontData.BoldAsString = "False"
        Appearance188.FontData.SizeInPoints = 8.0!
        Appearance188.ForeColor = System.Drawing.Color.Black
        Me.oCustWTerms.Appearance = Appearance188
        Me.oCustWTerms.BackColor = System.Drawing.Color.PaleGoldenrod
        Me.oCustWTerms.BackColorInternal = System.Drawing.Color.PaleGoldenrod
        Me.oCustWTerms.BorderStyle = Infragistics.Win.UIElementBorderStyle.None
        Me.oCustWTerms.CheckedIndex = 0
        Me.oCustWTerms.Enabled = False
        ValueListItem33.DataValue = "N"
        ValueListItem33.DisplayText = "Need Special Request"
        ValueListItem34.DataValue = "O"
        ValueListItem34.DisplayText = "OK to Ship"
        Me.oCustWTerms.Items.AddRange(New Infragistics.Win.ValueListItem() {ValueListItem33, ValueListItem34})
        Me.oCustWTerms.Location = New System.Drawing.Point(38, 65)
        Me.oCustWTerms.Name = "oCustWTerms"
        Me.oCustWTerms.Size = New System.Drawing.Size(192, 73)
        Me.oCustWTerms.TabIndex = 101
        Me.oCustWTerms.Tag = "edit"
        Me.oCustWTerms.Text = "Need Special Request"
        '
        'cbCustWTerms
        '
        Appearance189.FontData.SizeInPoints = 8.0!
        Me.cbCustWTerms.Appearance = Appearance189
        Me.cbCustWTerms.Enabled = False
        Me.cbCustWTerms.Location = New System.Drawing.Point(10, 37)
        Me.cbCustWTerms.Name = "cbCustWTerms"
        Me.cbCustWTerms.Size = New System.Drawing.Size(201, 28)
        Me.cbCustWTerms.TabIndex = 1
        Me.cbCustWTerms.Tag = "edit"
        Me.cbCustWTerms.Text = "Customer w/ Terms"
        '
        'UltraLabel153
        '
        Me.UltraLabel153.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel153.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel153.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel153.Location = New System.Drawing.Point(1214, 129)
        Me.UltraLabel153.Name = "UltraLabel153"
        Me.UltraLabel153.Size = New System.Drawing.Size(117, 28)
        Me.UltraLabel153.TabIndex = 133
        Me.UltraLabel153.Text = "Proposed Staging"
        '
        'tPropStage
        '
        Me.tPropStage.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tPropStage.Enabled = False
        Me.tPropStage.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tPropStage.Location = New System.Drawing.Point(1331, 129)
        Me.tPropStage.Name = "tPropStage"
        Me.tPropStage.Size = New System.Drawing.Size(144, 24)
        Me.tPropStage.TabIndex = 132
        Me.tPropStage.Tag = ""
        '
        'tRackHeight
        '
        Me.tRackHeight.AutoSize = False
        Me.tRackHeight.Enabled = False
        Me.tRackHeight.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tRackHeight.Location = New System.Drawing.Point(144, 444)
        Me.tRackHeight.MaxLength = 25
        Me.tRackHeight.Name = "tRackHeight"
        Me.tRackHeight.Size = New System.Drawing.Size(163, 20)
        Me.tRackHeight.TabIndex = 130
        Me.tRackHeight.Tag = "edit"
        '
        'tPriorityNote
        '
        Me.tPriorityNote.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
            Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tPriorityNote.AutoSize = False
        Me.tPriorityNote.Enabled = False
        Me.tPriorityNote.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tPriorityNote.Location = New System.Drawing.Point(701, 9)
        Me.tPriorityNote.MaxLength = 100
        Me.tPriorityNote.Name = "tPriorityNote"
        Me.tPriorityNote.Size = New System.Drawing.Size(504, 24)
        Me.tPriorityNote.TabIndex = 128
        Me.tPriorityNote.Tag = "edit"
        '
        'UltraLabel10
        '
        Me.UltraLabel10.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel10.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel10.Location = New System.Drawing.Point(10, 423)
        Me.UltraLabel10.Name = "UltraLabel10"
        Me.UltraLabel10.Size = New System.Drawing.Size(134, 18)
        Me.UltraLabel10.TabIndex = 124
        Me.UltraLabel10.Text = "Tot Btl Capacity"
        '
        'tBottles
        '
        Me.tBottles.AutoSize = False
        Me.tBottles.Enabled = False
        Me.tBottles.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tBottles.Location = New System.Drawing.Point(144, 423)
        Me.tBottles.MaxLength = 25
        Me.tBottles.Name = "tBottles"
        Me.tBottles.Size = New System.Drawing.Size(96, 20)
        Me.tBottles.TabIndex = 15
        Me.tBottles.Tag = "edit"
        '
        'UltraLabel92
        '
        Me.UltraLabel92.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel92.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel92.Location = New System.Drawing.Point(10, 297)
        Me.UltraLabel92.Name = "UltraLabel92"
        Me.UltraLabel92.Size = New System.Drawing.Size(124, 20)
        Me.UltraLabel92.TabIndex = 122
        Me.UltraLabel92.Text = "Cust Order#"
        '
        'tCustOrd
        '
        Me.tCustOrd.AutoSize = False
        Me.tCustOrd.Enabled = False
        Me.tCustOrd.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tCustOrd.Location = New System.Drawing.Point(144, 297)
        Me.tCustOrd.Name = "tCustOrd"
        Me.tCustOrd.Size = New System.Drawing.Size(163, 20)
        Me.tCustOrd.TabIndex = 9
        Me.tCustOrd.Tag = "edit"
        '
        'tFloating
        '
        Me.tFloating.AutoSize = False
        Me.tFloating.CalcManager = Me.UltraCalcManager1
        Me.tFloating.CheckedListSettings.CheckStateMember = ""
        Me.tFloating.DropDownStyle = Infragistics.Win.UltraWinGrid.UltraComboStyle.DropDownList
        Me.tFloating.Enabled = False
        Me.tFloating.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tFloating.Location = New System.Drawing.Point(144, 99)
        Me.tFloating.Name = "tFloating"
        Me.tFloating.Size = New System.Drawing.Size(163, 20)
        Me.tFloating.TabIndex = 3
        Me.tFloating.Tag = "edit"
        '
        'UltraLabel88
        '
        Me.UltraLabel88.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel88.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel88.Location = New System.Drawing.Point(10, 99)
        Me.UltraLabel88.Name = "UltraLabel88"
        Me.UltraLabel88.Size = New System.Drawing.Size(172, 27)
        Me.UltraLabel88.TabIndex = 119
        Me.UltraLabel88.Text = "Floating Rep"
        '
        'tTerr
        '
        Me.tTerr.AutoSize = False
        Me.tTerr.CalcManager = Me.UltraCalcManager1
        Me.tTerr.CheckedListSettings.CheckStateMember = ""
        Me.tTerr.DropDownStyle = Infragistics.Win.UltraWinGrid.UltraComboStyle.DropDownList
        Me.tTerr.Enabled = False
        Me.tTerr.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tTerr.Location = New System.Drawing.Point(144, 179)
        Me.tTerr.Name = "tTerr"
        Me.tTerr.Size = New System.Drawing.Size(163, 19)
        Me.tTerr.TabIndex = 4
        Me.tTerr.Tag = "Edit"
        '
        'UltraLabel23
        '
        Me.UltraLabel23.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel23.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel23.Location = New System.Drawing.Point(10, 179)
        Me.UltraLabel23.Name = "UltraLabel23"
        Me.UltraLabel23.Size = New System.Drawing.Size(172, 19)
        Me.UltraLabel23.TabIndex = 116
        Me.UltraLabel23.Text = "Territory"
        '
        'UltraLabel84
        '
        Me.UltraLabel84.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel84.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel84.Location = New System.Drawing.Point(10, 360)
        Me.UltraLabel84.Name = "UltraLabel84"
        Me.UltraLabel84.Size = New System.Drawing.Size(124, 20)
        Me.UltraLabel84.TabIndex = 113
        Me.UltraLabel84.Text = "AutoProcess"
        '
        'tDesignAuto
        '
        Me.tDesignAuto.AutoSize = False
        Me.tDesignAuto.Enabled = False
        Me.tDesignAuto.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tDesignAuto.Location = New System.Drawing.Point(144, 360)
        Me.tDesignAuto.Name = "tDesignAuto"
        Me.tDesignAuto.Size = New System.Drawing.Size(163, 20)
        Me.tDesignAuto.TabIndex = 12
        Me.tDesignAuto.Tag = "show"
        '
        'UltraLabel82
        '
        Me.UltraLabel82.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel82.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel82.Location = New System.Drawing.Point(10, 381)
        Me.UltraLabel82.Name = "UltraLabel82"
        Me.UltraLabel82.Size = New System.Drawing.Size(124, 21)
        Me.UltraLabel82.TabIndex = 110
        Me.UltraLabel82.Text = "Referral Fee"
        '
        'UltraLabel72
        '
        Me.UltraLabel72.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel72.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel72.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel72.Location = New System.Drawing.Point(1214, 37)
        Me.UltraLabel72.Name = "UltraLabel72"
        Me.UltraLabel72.Size = New System.Drawing.Size(117, 28)
        Me.UltraLabel72.TabIndex = 108
        Me.UltraLabel72.Text = "Created By"
        '
        'tCreateBy
        '
        Me.tCreateBy.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tCreateBy.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tCreateBy.Location = New System.Drawing.Point(1331, 37)
        Me.tCreateBy.Name = "tCreateBy"
        Me.tCreateBy.ReadOnly = True
        Me.tCreateBy.Size = New System.Drawing.Size(144, 24)
        Me.tCreateBy.TabIndex = 107
        Me.tCreateBy.Tag = ""
        '
        'tDesType
        '
        Me.tDesType.AutoSize = False
        Me.tDesType.CalcManager = Me.UltraCalcManager1
        Me.tDesType.CheckedListSettings.CheckStateMember = ""
        Me.tDesType.DropDownStyle = Infragistics.Win.UltraWinGrid.UltraComboStyle.DropDownList
        Me.tDesType.Enabled = False
        Me.tDesType.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tDesType.Location = New System.Drawing.Point(144, 339)
        Me.tDesType.Name = "tDesType"
        Me.tDesType.Size = New System.Drawing.Size(163, 20)
        Me.tDesType.TabIndex = 11
        Me.tDesType.Tag = "edit"
        '
        'UltraLabel47
        '
        Me.UltraLabel47.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel47.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel47.Location = New System.Drawing.Point(10, 339)
        Me.UltraLabel47.Name = "UltraLabel47"
        Me.UltraLabel47.Size = New System.Drawing.Size(172, 28)
        Me.UltraLabel47.TabIndex = 106
        Me.UltraLabel47.Text = "Design Type"
        '
        'gbCheckOff
        '
        Me.gbCheckOff.BackColor = System.Drawing.Color.PaleGoldenrod
        Me.gbCheckOff.Controls.Add(Me.Button3)
        Me.gbCheckOff.Controls.Add(Me.lDesReq)
        Me.gbCheckOff.Controls.Add(Me.cbDesigner)
        Me.gbCheckOff.Controls.Add(Me.ddDesignStatus)
        Me.gbCheckOff.Controls.Add(Me.UltraLabel106)
        Me.gbCheckOff.Controls.Add(Me.tInstallDate)
        Me.gbCheckOff.Controls.Add(Me.tInstallUser)
        Me.gbCheckOff.Controls.Add(Me.cbFactoryInstallReq)
        Me.gbCheckOff.Controls.Add(Me.cbFactoryInstall)
        Me.gbCheckOff.Controls.Add(Me.tCADate)
        Me.gbCheckOff.Controls.Add(Me.tCAUser)
        Me.gbCheckOff.Controls.Add(Me.cbCellarArt)
        Me.gbCheckOff.Controls.Add(Me.cbToArt)
        Me.gbCheckOff.Controls.Add(Me.tDesDate)
        Me.gbCheckOff.Controls.Add(Me.tDesUser)
        Me.gbCheckOff.Controls.Add(Me.cbDesReq)
        Me.gbCheckOff.Controls.Add(Me.tISRDate)
        Me.gbCheckOff.Controls.Add(Me.tISRUser)
        Me.gbCheckOff.Controls.Add(Me.cbISR)
        Me.gbCheckOff.Enabled = False
        Me.gbCheckOff.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.gbCheckOff.Location = New System.Drawing.Point(362, -1)
        Me.gbCheckOff.Name = "gbCheckOff"
        Me.gbCheckOff.Size = New System.Drawing.Size(231, 490)
        Me.gbCheckOff.TabIndex = 104
        Me.gbCheckOff.TabStop = False
        Me.gbCheckOff.Tag = "edit"
        Me.gbCheckOff.Text = "Check Offs"
        '
        'Button3
        '
        Me.Button3.BackColor = System.Drawing.Color.WhiteSmoke
        Me.Button3.Location = New System.Drawing.Point(145, 170)
        Me.Button3.Name = "Button3"
        Me.Button3.Size = New System.Drawing.Size(46, 19)
        Me.Button3.TabIndex = 144
        Me.ToolTip1.SetToolTip(Me.Button3, "Designer Check Off")
        Me.Button3.UseVisualStyleBackColor = False
        Me.Button3.Visible = False
        '
        'lDesReq
        '
        Appearance151.BackColor = System.Drawing.Color.PaleGoldenrod
        Appearance151.ForeColor = System.Drawing.Color.DarkGoldenrod
        Appearance151.TextHAlignAsString = "Center"
        Me.lDesReq.Appearance = Appearance151
        Me.lDesReq.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.lDesReq.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.0!, System.Drawing.FontStyle.Italic, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lDesReq.Location = New System.Drawing.Point(34, 120)
        Me.lDesReq.Name = "lDesReq"
        Me.lDesReq.RightToLeft = System.Windows.Forms.RightToLeft.No
        Me.lDesReq.Size = New System.Drawing.Size(187, 18)
        Me.lDesReq.TabIndex = 143
        Me.lDesReq.Tag = ""
        Me.lDesReq.Text = "..."
        '
        'cbDesigner
        '
        Appearance166.FontData.SizeInPoints = 8.0!
        Me.cbDesigner.Appearance = Appearance166
        Me.cbDesigner.Enabled = False
        Me.cbDesigner.Location = New System.Drawing.Point(10, 166)
        Me.cbDesigner.Name = "cbDesigner"
        Me.cbDesigner.Size = New System.Drawing.Size(201, 28)
        Me.cbDesigner.TabIndex = 5
        Me.cbDesigner.Text = "Design Checker"
        '
        'ddDesignStatus
        '
        Me.ddDesignStatus.CalcManager = Me.UltraCalcManager1
        Me.ddDesignStatus.CheckedListSettings.CheckStateMember = ""
        Me.ddDesignStatus.Enabled = False
        Me.ddDesignStatus.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.ddDesignStatus.Location = New System.Drawing.Point(58, 141)
        Me.ddDesignStatus.Name = "ddDesignStatus"
        Me.ddDesignStatus.Size = New System.Drawing.Size(163, 25)
        Me.ddDesignStatus.TabIndex = 87
        Me.ddDesignStatus.Tag = "edit"
        '
        'UltraLabel106
        '
        Appearance40.ForeColor = System.Drawing.Color.Black
        Me.UltraLabel106.Appearance = Appearance40
        Me.UltraLabel106.BackColorInternal = System.Drawing.Color.PaleGoldenrod
        Me.UltraLabel106.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel106.Location = New System.Drawing.Point(10, 145)
        Me.UltraLabel106.Name = "UltraLabel106"
        Me.UltraLabel106.Size = New System.Drawing.Size(124, 28)
        Me.UltraLabel106.TabIndex = 86
        Me.UltraLabel106.Text = "Status"
        '
        'tInstallDate
        '
        Me.tInstallDate.Enabled = False
        Me.tInstallDate.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tInstallDate.Location = New System.Drawing.Point(10, 443)
        Me.tInstallDate.Name = "tInstallDate"
        Me.tInstallDate.Size = New System.Drawing.Size(201, 24)
        Me.tInstallDate.TabIndex = 19
        '
        'tInstallUser
        '
        Me.tInstallUser.Enabled = False
        Me.tInstallUser.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tInstallUser.Location = New System.Drawing.Point(10, 415)
        Me.tInstallUser.Name = "tInstallUser"
        Me.tInstallUser.Size = New System.Drawing.Size(201, 24)
        Me.tInstallUser.TabIndex = 18
        '
        'cbFactoryInstallReq
        '
        Appearance170.FontData.SizeInPoints = 8.0!
        Me.cbFactoryInstallReq.Appearance = Appearance170
        Me.cbFactoryInstallReq.Enabled = False
        Me.cbFactoryInstallReq.Location = New System.Drawing.Point(10, 360)
        Me.cbFactoryInstallReq.Name = "cbFactoryInstallReq"
        Me.cbFactoryInstallReq.Size = New System.Drawing.Size(201, 27)
        Me.cbFactoryInstallReq.TabIndex = 17
        Me.cbFactoryInstallReq.Text = "Factory Install Req'd"
        '
        'cbFactoryInstall
        '
        Appearance169.FontData.SizeInPoints = 8.0!
        Me.cbFactoryInstall.Appearance = Appearance169
        Me.cbFactoryInstall.Enabled = False
        Me.cbFactoryInstall.Location = New System.Drawing.Point(10, 387)
        Me.cbFactoryInstall.Name = "cbFactoryInstall"
        Me.cbFactoryInstall.Size = New System.Drawing.Size(201, 28)
        Me.cbFactoryInstall.TabIndex = 13
        Me.cbFactoryInstall.Text = "Factory Install Checker"
        '
        'tCADate
        '
        Me.tCADate.Enabled = False
        Me.tCADate.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tCADate.Location = New System.Drawing.Point(19, 332)
        Me.tCADate.Name = "tCADate"
        Me.tCADate.Size = New System.Drawing.Size(202, 24)
        Me.tCADate.TabIndex = 12
        '
        'tCAUser
        '
        Me.tCAUser.Enabled = False
        Me.tCAUser.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tCAUser.Location = New System.Drawing.Point(19, 303)
        Me.tCAUser.Name = "tCAUser"
        Me.tCAUser.Size = New System.Drawing.Size(202, 24)
        Me.tCAUser.TabIndex = 11
        '
        'cbCellarArt
        '
        Appearance168.FontData.SizeInPoints = 8.0!
        Me.cbCellarArt.Appearance = Appearance168
        Me.cbCellarArt.Enabled = False
        Me.cbCellarArt.Location = New System.Drawing.Point(10, 277)
        Me.cbCellarArt.Name = "cbCellarArt"
        Me.cbCellarArt.Size = New System.Drawing.Size(201, 26)
        Me.cbCellarArt.TabIndex = 10
        Me.cbCellarArt.Text = "Cellar Art Checker"
        '
        'cbToArt
        '
        Appearance167.FontData.SizeInPoints = 8.0!
        Me.cbToArt.Appearance = Appearance167
        Me.cbToArt.Enabled = False
        Me.cbToArt.Location = New System.Drawing.Point(10, 249)
        Me.cbToArt.Name = "cbToArt"
        Me.cbToArt.Size = New System.Drawing.Size(201, 28)
        Me.cbToArt.TabIndex = 9
        Me.cbToArt.Text = "Cellar Art Required"
        '
        'tDesDate
        '
        Me.tDesDate.Enabled = False
        Me.tDesDate.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tDesDate.Location = New System.Drawing.Point(19, 222)
        Me.tDesDate.Name = "tDesDate"
        Me.tDesDate.Size = New System.Drawing.Size(202, 24)
        Me.tDesDate.TabIndex = 7
        '
        'tDesUser
        '
        Me.tDesUser.Enabled = False
        Me.tDesUser.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tDesUser.Location = New System.Drawing.Point(19, 194)
        Me.tDesUser.Name = "tDesUser"
        Me.tDesUser.Size = New System.Drawing.Size(202, 24)
        Me.tDesUser.TabIndex = 6
        '
        'cbDesReq
        '
        Appearance165.FontData.SizeInPoints = 8.0!
        Me.cbDesReq.Appearance = Appearance165
        Me.cbDesReq.Enabled = False
        Me.cbDesReq.Location = New System.Drawing.Point(10, 99)
        Me.cbDesReq.Name = "cbDesReq"
        Me.cbDesReq.Size = New System.Drawing.Size(211, 27)
        Me.cbDesReq.TabIndex = 4
        Me.cbDesReq.Tag = ""
        Me.cbDesReq.Text = "Design Required"
        '
        'tISRDate
        '
        Me.tISRDate.Enabled = False
        Me.tISRDate.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tISRDate.Location = New System.Drawing.Point(19, 74)
        Me.tISRDate.Name = "tISRDate"
        Me.tISRDate.Size = New System.Drawing.Size(202, 24)
        Me.tISRDate.TabIndex = 3
        '
        'tISRUser
        '
        Me.tISRUser.Enabled = False
        Me.tISRUser.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tISRUser.Location = New System.Drawing.Point(19, 46)
        Me.tISRUser.Name = "tISRUser"
        Me.tISRUser.Size = New System.Drawing.Size(202, 24)
        Me.tISRUser.TabIndex = 2
        '
        'cbISR
        '
        Appearance164.FontData.SizeInPoints = 8.0!
        Me.cbISR.Appearance = Appearance164
        Me.cbISR.Enabled = False
        Me.cbISR.Location = New System.Drawing.Point(19, 18)
        Me.cbISR.Name = "cbISR"
        Me.cbISR.Size = New System.Drawing.Size(202, 28)
        Me.cbISR.TabIndex = 1
        Me.cbISR.Text = "Inside Sales Rep"
        '
        'oHistory
        '
        Me.oHistory.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.oHistory.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.oHistory.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.oHistory.BorderStyle = Infragistics.Win.UIElementBorderStyle.None
        ValueListItem22.DataValue = "Status"
        ValueListItem22.DisplayText = "Status"
        ValueListItem23.DataValue = "Edit"
        ValueListItem23.DisplayText = "Edit"
        ValueListItem24.DataValue = "Ship"
        ValueListItem24.DisplayText = "Ship"
        Me.oHistory.Items.AddRange(New Infragistics.Win.ValueListItem() {ValueListItem22, ValueListItem23, ValueListItem24})
        Me.oHistory.Location = New System.Drawing.Point(1220, 611)
        Me.oHistory.Name = "oHistory"
        Me.oHistory.Size = New System.Drawing.Size(251, 25)
        Me.oHistory.TabIndex = 103
        Me.oHistory.UseFlatMode = Infragistics.Win.DefaultableBoolean.[True]
        '
        'UltraLabel69
        '
        Appearance42.TextHAlignAsString = "Right"
        Me.UltraLabel69.Appearance = Appearance42
        Me.UltraLabel69.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel69.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel69.Location = New System.Drawing.Point(318, 133)
        Me.UltraLabel69.Name = "UltraLabel69"
        Me.UltraLabel69.Size = New System.Drawing.Size(19, 204)
        Me.UltraLabel69.TabIndex = 101
        Me.UltraLabel69.Text = "^ FORECAST"
        '
        'cbResponsible
        '
        Appearance43.ForeColor = System.Drawing.Color.LightGoldenrodYellow
        Me.cbResponsible.Appearance = Appearance43
        Me.cbResponsible.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.cbResponsible.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.cbResponsible.BorderStyle = Infragistics.Win.UIElementBorderStyle.None
        Me.cbResponsible.CheckedIndex = 0
        Me.cbResponsible.Enabled = False
        ValueListItem25.DataValue = "I"
        ValueListItem25.DisplayText = ""
        ValueListItem26.DataValue = "O"
        ValueListItem26.DisplayText = ""
        ValueListItem27.DataValue = "F"
        Me.cbResponsible.Items.AddRange(New Infragistics.Win.ValueListItem() {ValueListItem25, ValueListItem26, ValueListItem27})
        Me.cbResponsible.ItemSpacingVertical = 4
        Me.cbResponsible.Location = New System.Drawing.Point(326, 51)
        Me.cbResponsible.Name = "cbResponsible"
        Me.cbResponsible.Size = New System.Drawing.Size(20, 81)
        Me.cbResponsible.TabIndex = 100
        Me.cbResponsible.Tag = "edit"
        Me.cbResponsible.Text = "I"
        '
        'UltraLabel66
        '
        Me.UltraLabel66.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel66.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel66.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel66.Location = New System.Drawing.Point(1214, 157)
        Me.UltraLabel66.Name = "UltraLabel66"
        Me.UltraLabel66.Size = New System.Drawing.Size(117, 28)
        Me.UltraLabel66.TabIndex = 99
        Me.UltraLabel66.Text = "Staged Date"
        '
        'tStageDate
        '
        Me.tStageDate.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tStageDate.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tStageDate.Location = New System.Drawing.Point(1331, 157)
        Me.tStageDate.Name = "tStageDate"
        Me.tStageDate.ReadOnly = True
        Me.tStageDate.Size = New System.Drawing.Size(144, 24)
        Me.tStageDate.TabIndex = 98
        Me.tStageDate.Tag = ""
        '
        'UltraLabel65
        '
        Me.UltraLabel65.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel65.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel65.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel65.Location = New System.Drawing.Point(1214, 185)
        Me.UltraLabel65.Name = "UltraLabel65"
        Me.UltraLabel65.Size = New System.Drawing.Size(117, 27)
        Me.UltraLabel65.TabIndex = 97
        Me.UltraLabel65.Text = "Ship Date"
        '
        'tShipDate
        '
        Me.tShipDate.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tShipDate.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tShipDate.Location = New System.Drawing.Point(1331, 185)
        Me.tShipDate.Name = "tShipDate"
        Me.tShipDate.ReadOnly = True
        Me.tShipDate.Size = New System.Drawing.Size(144, 24)
        Me.tShipDate.TabIndex = 96
        Me.tShipDate.Tag = ""
        '
        'UltraLabel61
        '
        Me.UltraLabel61.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel61.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel61.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel61.Location = New System.Drawing.Point(1214, 212)
        Me.UltraLabel61.Name = "UltraLabel61"
        Me.UltraLabel61.Size = New System.Drawing.Size(117, 28)
        Me.UltraLabel61.TabIndex = 95
        Me.UltraLabel61.Text = "Billed Date"
        '
        'tBilledDate
        '
        Me.tBilledDate.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tBilledDate.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tBilledDate.Location = New System.Drawing.Point(1331, 212)
        Me.tBilledDate.Name = "tBilledDate"
        Me.tBilledDate.ReadOnly = True
        Me.tBilledDate.Size = New System.Drawing.Size(144, 24)
        Me.tBilledDate.TabIndex = 94
        Me.tBilledDate.Tag = ""
        '
        'tSource
        '
        Me.tSource.AutoSize = False
        Me.tSource.CalcManager = Me.UltraCalcManager1
        Me.tSource.CheckedListSettings.CheckStateMember = ""
        Me.tSource.DropDownStyle = Infragistics.Win.UltraWinGrid.UltraComboStyle.DropDownList
        Me.tSource.Enabled = False
        Me.tSource.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tSource.Location = New System.Drawing.Point(144, 222)
        Me.tSource.MaxDropDownItems = 12
        Me.tSource.Name = "tSource"
        Me.tSource.Size = New System.Drawing.Size(163, 19)
        Me.tSource.TabIndex = 6
        Me.tSource.Tag = "edit"
        '
        'UltraLabel25
        '
        Me.UltraLabel25.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel25.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel25.Location = New System.Drawing.Point(10, 222)
        Me.UltraLabel25.Name = "UltraLabel25"
        Me.UltraLabel25.Size = New System.Drawing.Size(172, 19)
        Me.UltraLabel25.TabIndex = 91
        Me.UltraLabel25.Text = "Order Source"
        '
        'UltraLabel49
        '
        Me.UltraLabel49.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel49.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel49.Location = New System.Drawing.Point(10, 318)
        Me.UltraLabel49.Name = "UltraLabel49"
        Me.UltraLabel49.Size = New System.Drawing.Size(124, 28)
        Me.UltraLabel49.TabIndex = 89
        Me.UltraLabel49.Text = "Finish"
        '
        'tGenFinish
        '
        Me.tGenFinish.AutoSize = False
        Me.tGenFinish.Enabled = False
        Me.tGenFinish.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tGenFinish.Location = New System.Drawing.Point(144, 318)
        Me.tGenFinish.Name = "tGenFinish"
        Me.tGenFinish.Size = New System.Drawing.Size(163, 20)
        Me.tGenFinish.TabIndex = 10
        Me.tGenFinish.Tag = "edit"
        '
        'UltraLabel7
        '
        Appearance177.ForeColor = System.Drawing.Color.Black
        Me.UltraLabel7.Appearance = Appearance177
        Me.UltraLabel7.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel7.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel7.Location = New System.Drawing.Point(10, 9)
        Me.UltraLabel7.Name = "UltraLabel7"
        Me.UltraLabel7.Size = New System.Drawing.Size(124, 28)
        Me.UltraLabel7.TabIndex = 84
        Me.UltraLabel7.Text = "Status"
        '
        'UltraLabel24
        '
        Me.UltraLabel24.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel24.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel24.Location = New System.Drawing.Point(10, 276)
        Me.UltraLabel24.Name = "UltraLabel24"
        Me.UltraLabel24.Size = New System.Drawing.Size(124, 27)
        Me.UltraLabel24.TabIndex = 83
        Me.UltraLabel24.Text = "Customer PO"
        '
        'tPO
        '
        Me.tPO.AutoSize = False
        Me.tPO.Enabled = False
        Me.tPO.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tPO.Location = New System.Drawing.Point(144, 276)
        Me.tPO.Name = "tPO"
        Me.tPO.Size = New System.Drawing.Size(163, 21)
        Me.tPO.TabIndex = 8
        Me.tPO.Tag = "edit"
        '
        'tDesigner
        '
        Me.tDesigner.AutoSize = False
        Me.tDesigner.CalcManager = Me.UltraCalcManager1
        Me.tDesigner.CheckedListSettings.CheckStateMember = ""
        Me.tDesigner.DropDownStyle = Infragistics.Win.UltraWinGrid.UltraComboStyle.DropDownList
        Me.tDesigner.Enabled = False
        Me.tDesigner.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tDesigner.Location = New System.Drawing.Point(144, 200)
        Me.tDesigner.Name = "tDesigner"
        Me.tDesigner.Size = New System.Drawing.Size(163, 20)
        Me.tDesigner.TabIndex = 5
        Me.tDesigner.Tag = "edit"
        '
        'UltraLabel15
        '
        Me.UltraLabel15.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel15.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel15.Location = New System.Drawing.Point(10, 200)
        Me.UltraLabel15.Name = "UltraLabel15"
        Me.UltraLabel15.Size = New System.Drawing.Size(172, 28)
        Me.UltraLabel15.TabIndex = 79
        Me.UltraLabel15.Text = "Designer"
        '
        'UltraLabel44
        '
        Me.UltraLabel44.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel44.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel44.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel44.Location = New System.Drawing.Point(1214, 92)
        Me.UltraLabel44.Name = "UltraLabel44"
        Me.UltraLabel44.Size = New System.Drawing.Size(117, 28)
        Me.UltraLabel44.TabIndex = 14
        Me.UltraLabel44.Text = "Updated By"
        '
        'tUpBy
        '
        Me.tUpBy.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tUpBy.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tUpBy.Location = New System.Drawing.Point(1331, 92)
        Me.tUpBy.Name = "tUpBy"
        Me.tUpBy.ReadOnly = True
        Me.tUpBy.Size = New System.Drawing.Size(144, 24)
        Me.tUpBy.TabIndex = 13
        Me.tUpBy.Tag = ""
        '
        'UltraLabel43
        '
        Me.UltraLabel43.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel43.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel43.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel43.Location = New System.Drawing.Point(1214, 65)
        Me.UltraLabel43.Name = "UltraLabel43"
        Me.UltraLabel43.Size = New System.Drawing.Size(117, 27)
        Me.UltraLabel43.TabIndex = 12
        Me.UltraLabel43.Text = "Updated On"
        '
        'tUpOn
        '
        Me.tUpOn.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tUpOn.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tUpOn.Location = New System.Drawing.Point(1331, 65)
        Me.tUpOn.Name = "tUpOn"
        Me.tUpOn.ReadOnly = True
        Me.tUpOn.Size = New System.Drawing.Size(144, 24)
        Me.tUpOn.TabIndex = 11
        Me.tUpOn.Tag = ""
        '
        'UltraLabel42
        '
        Me.UltraLabel42.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel42.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel42.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel42.Location = New System.Drawing.Point(1214, 9)
        Me.UltraLabel42.Name = "UltraLabel42"
        Me.UltraLabel42.Size = New System.Drawing.Size(117, 28)
        Me.UltraLabel42.TabIndex = 10
        Me.UltraLabel42.Text = "Created On"
        '
        'tCreate
        '
        Me.tCreate.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tCreate.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tCreate.Location = New System.Drawing.Point(1331, 9)
        Me.tCreate.Name = "tCreate"
        Me.tCreate.ReadOnly = True
        Me.tCreate.Size = New System.Drawing.Size(144, 24)
        Me.tCreate.TabIndex = 9
        Me.tCreate.Tag = ""
        '
        'UltraLabel41
        '
        Me.UltraLabel41.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel41.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel41.Location = New System.Drawing.Point(10, 444)
        Me.UltraLabel41.Name = "UltraLabel41"
        Me.UltraLabel41.Size = New System.Drawing.Size(124, 27)
        Me.UltraLabel41.TabIndex = 8
        Me.UltraLabel41.Text = "Rack Height"
        '
        'tDispDate
        '
        Me.tDispDate.AutoSize = False
        Me.tDispDate.DateTime = New Date(2008, 10, 31, 0, 0, 0, 0)
        Me.tDispDate.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tDispDate.Location = New System.Drawing.Point(254, 423)
        Me.tDispDate.Name = "tDispDate"
        Me.tDispDate.Size = New System.Drawing.Size(58, 20)
        Me.tDispDate.TabIndex = 7
        Me.tDispDate.Tag = "edit"
        Me.tDispDate.Value = New Date(2008, 10, 31, 0, 0, 0, 0)
        Me.tDispDate.Visible = False
        '
        'tOutside
        '
        Me.tOutside.AutoSize = False
        Me.tOutside.CalcManager = Me.UltraCalcManager1
        Me.tOutside.CheckedListSettings.CheckStateMember = ""
        Me.tOutside.DropDownStyle = Infragistics.Win.UltraWinGrid.UltraComboStyle.DropDownList
        Me.tOutside.Enabled = False
        Me.tOutside.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tOutside.Location = New System.Drawing.Point(144, 78)
        Me.tOutside.Name = "tOutside"
        Me.tOutside.Size = New System.Drawing.Size(163, 20)
        Me.tOutside.TabIndex = 2
        Me.tOutside.Tag = "edit"
        '
        'UltraLabel37
        '
        Me.UltraLabel37.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel37.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel37.Location = New System.Drawing.Point(10, 78)
        Me.UltraLabel37.Name = "UltraLabel37"
        Me.UltraLabel37.Size = New System.Drawing.Size(172, 28)
        Me.UltraLabel37.TabIndex = 5
        Me.UltraLabel37.Text = "Outside Rep"
        '
        'tInside
        '
        Me.tInside.AutoSize = False
        Me.tInside.CalcManager = Me.UltraCalcManager1
        Me.tInside.CheckedListSettings.CheckStateMember = ""
        Me.tInside.DropDownStyle = Infragistics.Win.UltraWinGrid.UltraComboStyle.DropDownList
        Me.tInside.Enabled = False
        Me.tInside.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tInside.Location = New System.Drawing.Point(144, 57)
        Me.tInside.Name = "tInside"
        Me.tInside.Size = New System.Drawing.Size(163, 20)
        Me.tInside.TabIndex = 1
        Me.tInside.Tag = "edit"
        '
        'UltraLabel36
        '
        Me.UltraLabel36.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel36.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel36.Location = New System.Drawing.Point(10, 57)
        Me.UltraLabel36.Name = "UltraLabel36"
        Me.UltraLabel36.Size = New System.Drawing.Size(172, 28)
        Me.UltraLabel36.TabIndex = 3
        Me.UltraLabel36.Text = "Inside Rep"
        '
        'tRefFee
        '
        Me.tRefFee.AutoSize = False
        Me.tRefFee.Enabled = False
        Me.tRefFee.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tRefFee.Location = New System.Drawing.Point(144, 381)
        Me.tRefFee.Name = "tRefFee"
        Me.tRefFee.PromptChar = Global.Microsoft.VisualBasic.ChrW(32)
        Me.tRefFee.Size = New System.Drawing.Size(163, 21)
        Me.tRefFee.TabIndex = 13
        Me.tRefFee.TabNavigation = Infragistics.Win.UltraWinMaskedEdit.MaskedEditTabNavigation.NextControl
        Me.tRefFee.Tag = ""
        '
        'UltraTabControl1
        '
        Appearance46.FontData.BoldAsString = "True"
        Me.UltraTabControl1.ActiveTabAppearance = Appearance46
        Me.UltraTabControl1.Anchor = CType((((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom) _
            Or System.Windows.Forms.AnchorStyles.Left) _
            Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraTabControl1.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Appearance47.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraTabControl1.ClientAreaAppearance = Appearance47
        Me.UltraTabControl1.Controls.Add(Me.UltraTabSharedControlsPage3)
        Me.UltraTabControl1.Controls.Add(Me.UltraTabPageControl9)
        Me.UltraTabControl1.Controls.Add(Me.UltraTabPageControl10)
        Me.UltraTabControl1.Controls.Add(Me.UltraTabPageControl3)
        Me.UltraTabControl1.Location = New System.Drawing.Point(0, 489)
        Me.UltraTabControl1.Name = "UltraTabControl1"
        Me.UltraTabControl1.SharedControlsPage = Me.UltraTabSharedControlsPage3
        Me.UltraTabControl1.Size = New System.Drawing.Size(1207, 140)
        Me.UltraTabControl1.TabIndex = 111
        UltraTab1.Key = "Note"
        UltraTab1.TabPage = Me.UltraTabPageControl9
        UltraTab1.Text = "Special Notes"
        UltraTab2.Key = "Ref"
        UltraTab2.TabPage = Me.UltraTabPageControl10
        UltraTab2.Text = "Referrals"
        UltraTab3.Key = "Other"
        UltraTab3.TabPage = Me.UltraTabPageControl3
        UltraTab3.Text = "Other"
        Me.UltraTabControl1.Tabs.AddRange(New Infragistics.Win.UltraWinTabControl.UltraTab() {UltraTab1, UltraTab2, UltraTab3})
        Me.UltraTabControl1.UseOsThemes = Infragistics.Win.DefaultableBoolean.[False]
        '
        'UltraTabSharedControlsPage3
        '
        Me.UltraTabSharedControlsPage3.Location = New System.Drawing.Point(-10000, -10000)
        Me.UltraTabSharedControlsPage3.Name = "UltraTabSharedControlsPage3"
        Me.UltraTabSharedControlsPage3.Size = New System.Drawing.Size(1203, 109)
        '
        'tStatus
        '
        Me.tStatus.AutoSize = False
        Me.tStatus.Enabled = False
        Me.tStatus.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tStatus.Location = New System.Drawing.Point(144, 9)
        Me.tStatus.Name = "tStatus"
        Me.tStatus.Size = New System.Drawing.Size(163, 20)
        Me.tStatus.TabIndex = 13
        '
        'tTabTitle
        '
        Me.tTabTitle.AutoSize = False
        Me.tTabTitle.Enabled = False
        Me.tTabTitle.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tTabTitle.Location = New System.Drawing.Point(144, 402)
        Me.tTabTitle.MaxLength = 25
        Me.tTabTitle.Name = "tTabTitle"
        Me.tTabTitle.Size = New System.Drawing.Size(202, 20)
        Me.tTabTitle.TabIndex = 14
        Me.tTabTitle.Tag = "Edit"
        Me.tTabTitle.WordWrap = False
        '
        'UltraLabel93
        '
        Me.UltraLabel93.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel93.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel93.Location = New System.Drawing.Point(10, 402)
        Me.UltraLabel93.Name = "UltraLabel93"
        Me.UltraLabel93.Size = New System.Drawing.Size(115, 19)
        Me.UltraLabel93.TabIndex = 2
        Me.UltraLabel93.Text = "Tab Title"
        '
        'cbPriority
        '
        Appearance172.FontData.SizeInPoints = 8.0!
        Me.cbPriority.Appearance = Appearance172
        Me.cbPriority.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.cbPriority.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.cbPriority.Enabled = False
        Me.cbPriority.Location = New System.Drawing.Point(605, 9)
        Me.cbPriority.Name = "cbPriority"
        Me.cbPriority.Size = New System.Drawing.Size(105, 28)
        Me.cbPriority.TabIndex = 8
        Me.cbPriority.Text = "Priority"
        '
        'cbAddon
        '
        Appearance174.FontData.SizeInPoints = 8.0!
        Me.cbAddon.Appearance = Appearance174
        Me.cbAddon.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.cbAddon.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.cbAddon.Enabled = False
        Me.cbAddon.Location = New System.Drawing.Point(605, 37)
        Me.cbAddon.Name = "cbAddon"
        Me.cbAddon.Size = New System.Drawing.Size(201, 28)
        Me.cbAddon.TabIndex = 125
        Me.cbAddon.Tag = "edit"
        Me.cbAddon.Text = "Add On"
        '
        'cbAddOnNoEmail
        '
        Appearance48.FontData.SizeInPoints = 8.0!
        Me.cbAddOnNoEmail.Appearance = Appearance48
        Me.cbAddOnNoEmail.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.cbAddOnNoEmail.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.cbAddOnNoEmail.Enabled = False
        Me.cbAddOnNoEmail.Location = New System.Drawing.Point(624, 59)
        Me.cbAddOnNoEmail.Name = "cbAddOnNoEmail"
        Me.cbAddOnNoEmail.Size = New System.Drawing.Size(202, 28)
        Me.cbAddOnNoEmail.TabIndex = 131
        Me.cbAddOnNoEmail.Tag = "edit"
        Me.cbAddOnNoEmail.Text = "Do Not Send Email"
        '
        'UltraTabPageControl13
        '
        Me.UltraTabPageControl13.Controls.Add(Me.bShipNotify)
        Me.UltraTabPageControl13.Controls.Add(Me.oShipToType)
        Me.UltraTabPageControl13.Controls.Add(Me.lOldTaxRate)
        Me.UltraTabPageControl13.Controls.Add(Me.gsShipHold)
        Me.UltraTabPageControl13.Controls.Add(Me.pShipping)
        Me.UltraTabPageControl13.Controls.Add(Me.gsExemptAddr)
        Me.UltraTabPageControl13.Controls.Add(Me.gsShipTaxPerc)
        Me.UltraTabPageControl13.Controls.Add(Me.UltraLabel120)
        Me.UltraTabPageControl13.Controls.Add(Me.gsTaxInstalls)
        Me.UltraTabPageControl13.Controls.Add(Me.UltraLabel118)
        Me.UltraTabPageControl13.Controls.Add(Me.gsTaxExempt)
        Me.UltraTabPageControl13.Controls.Add(Me.gsExemptNo)
        Me.UltraTabPageControl13.Controls.Add(Me.gsTaxRate)
        Me.UltraTabPageControl13.Controls.Add(Me.UltraLabel119)
        Me.UltraTabPageControl13.Controls.Add(Me.GroupBox1)
        Me.UltraTabPageControl13.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraTabPageControl13.Location = New System.Drawing.Point(-10000, -10000)
        Me.UltraTabPageControl13.Name = "UltraTabPageControl13"
        Me.UltraTabPageControl13.Size = New System.Drawing.Size(1478, 645)
        '
        'bShipNotify
        '
        Me.bShipNotify.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.bShipNotify.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.bShipNotify.Location = New System.Drawing.Point(662, 74)
        Me.bShipNotify.Name = "bShipNotify"
        Me.bShipNotify.Size = New System.Drawing.Size(173, 30)
        Me.bShipNotify.TabIndex = 192
        Me.bShipNotify.Tag = ""
        Me.bShipNotify.Text = "Shipping Notification"
        '
        'oShipToType
        '
        Appearance49.FontData.BoldAsString = "True"
        Appearance49.FontData.SizeInPoints = 10.0!
        Me.oShipToType.Appearance = Appearance49
        Me.oShipToType.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.oShipToType.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.oShipToType.BorderStyle = Infragistics.Win.UIElementBorderStyle.None
        Me.oShipToType.Enabled = False
        ValueListItem28.DataValue = "C"
        ValueListItem28.DisplayText = "Commercial"
        ValueListItem29.DataValue = "R"
        ValueListItem29.DisplayText = "Residential"
        Me.oShipToType.Items.AddRange(New Infragistics.Win.ValueListItem() {ValueListItem28, ValueListItem29})
        Me.oShipToType.ItemSpacingVertical = 4
        Me.oShipToType.Location = New System.Drawing.Point(662, 9)
        Me.oShipToType.Name = "oShipToType"
        Me.oShipToType.Size = New System.Drawing.Size(154, 65)
        Me.oShipToType.TabIndex = 191
        Me.oShipToType.Tag = "edit"
        '
        'lOldTaxRate
        '
        Me.lOldTaxRate.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
        Me.lOldTaxRate.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.lOldTaxRate.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lOldTaxRate.ForeColor = System.Drawing.Color.Gray
        Me.lOldTaxRate.Location = New System.Drawing.Point(191, 599)
        Me.lOldTaxRate.Name = "lOldTaxRate"
        Me.lOldTaxRate.Size = New System.Drawing.Size(297, 17)
        Me.lOldTaxRate.TabIndex = 190
        Me.lOldTaxRate.Text = "* Tax rate was 0.00%"
        '
        'gsShipHold
        '
        Appearance51.FontData.BoldAsString = "True"
        Appearance51.FontData.SizeInPoints = 8.0!
        Appearance51.ForeColor = System.Drawing.Color.Black
        Me.gsShipHold.Appearance = Appearance51
        Me.gsShipHold.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.gsShipHold.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.gsShipHold.Enabled = False
        Me.gsShipHold.Location = New System.Drawing.Point(816, 9)
        Me.gsShipHold.Name = "gsShipHold"
        Me.gsShipHold.Size = New System.Drawing.Size(143, 28)
        Me.gsShipHold.TabIndex = 187
        Me.gsShipHold.Tag = "edit"
        Me.gsShipHold.Text = "Shipping Hold"
        '
        'pShipping
        '
        Me.pShipping.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.pShipping.Controls.Add(Me.gsShipNotify)
        Me.pShipping.Controls.Add(Me.pShipHold)
        Me.pShipping.Controls.Add(Me.gsCopy)
        Me.pShipping.Controls.Add(Me.Label7)
        Me.pShipping.Controls.Add(Me.gsState)
        Me.pShipping.Controls.Add(Me.gslState)
        Me.pShipping.Controls.Add(Me.gsAddr2)
        Me.pShipping.Controls.Add(Me.gslAddr2)
        Me.pShipping.Controls.Add(Me.gsAddr1)
        Me.pShipping.Controls.Add(Me.gslAddr1)
        Me.pShipping.Controls.Add(Me.gsCompany)
        Me.pShipping.Controls.Add(Me.gslCompany)
        Me.pShipping.Controls.Add(Me.gsName)
        Me.pShipping.Controls.Add(Me.gslName)
        Me.pShipping.Controls.Add(Me.gsEmailSend)
        Me.pShipping.Controls.Add(Me.gsCounty)
        Me.pShipping.Controls.Add(Me.gslCounty)
        Me.pShipping.Controls.Add(Me.gsCell)
        Me.pShipping.Controls.Add(Me.gsFax)
        Me.pShipping.Controls.Add(Me.gsPhone2)
        Me.pShipping.Controls.Add(Me.gsPhone1)
        Me.pShipping.Controls.Add(Me.gsCountry)
        Me.pShipping.Controls.Add(Me.gsAddr3)
        Me.pShipping.Controls.Add(Me.gslAddr3)
        Me.pShipping.Controls.Add(Me.gsProvince)
        Me.pShipping.Controls.Add(Me.gslProvince)
        Me.pShipping.Controls.Add(Me.gsCity)
        Me.pShipping.Controls.Add(Me.gsCustId)
        Me.pShipping.Controls.Add(Me.gsEmail)
        Me.pShipping.Controls.Add(Me.gslEmail)
        Me.pShipping.Controls.Add(Me.gslCell)
        Me.pShipping.Controls.Add(Me.gslFax)
        Me.pShipping.Controls.Add(Me.gslPhone2)
        Me.pShipping.Controls.Add(Me.gslPhone)
        Me.pShipping.Controls.Add(Me.gsZip)
        Me.pShipping.Controls.Add(Me.gslZip)
        Me.pShipping.Controls.Add(Me.gslCustID)
        Me.pShipping.Controls.Add(Me.gslCountry)
        Me.pShipping.Controls.Add(Me.gslCity)
        Me.pShipping.Location = New System.Drawing.Point(0, 9)
        Me.pShipping.Name = "pShipping"
        Me.pShipping.Size = New System.Drawing.Size(298, 554)
        Me.pShipping.TabIndex = 186
        '
        'gsShipNotify
        '
        Appearance52.FontData.BoldAsString = "True"
        Me.gsShipNotify.Appearance = Appearance52
        Me.gsShipNotify.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.gsShipNotify.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.gsShipNotify.Enabled = False
        Me.gsShipNotify.Location = New System.Drawing.Point(96, 526)
        Me.gsShipNotify.Name = "gsShipNotify"
        Me.gsShipNotify.Size = New System.Drawing.Size(192, 19)
        Me.gsShipNotify.TabIndex = 190
        Me.gsShipNotify.Tag = "edit"
        Me.gsShipNotify.Text = "Email Ship Notifications"
        '
        'pShipHold
        '
        Me.pShipHold.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.pShipHold.Controls.Add(Me.Label2)
        Me.pShipHold.Controls.Add(Me.lShipHold)
        Me.pShipHold.Location = New System.Drawing.Point(0, 46)
        Me.pShipHold.Name = "pShipHold"
        Me.pShipHold.Size = New System.Drawing.Size(298, 194)
        Me.pShipHold.TabIndex = 189
        Me.pShipHold.Visible = False
        '
        'Label2
        '
        Me.Label2.Font = New System.Drawing.Font("Microsoft Sans Serif", 14.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.Label2.ForeColor = System.Drawing.Color.Red
        Me.Label2.Location = New System.Drawing.Point(10, 9)
        Me.Label2.Name = "Label2"
        Me.Label2.Size = New System.Drawing.Size(278, 28)
        Me.Label2.TabIndex = 189
        Me.Label2.Text = "Shipping is On Hold"
        '
        'lShipHold
        '
        Me.lShipHold.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.lShipHold.Font = New System.Drawing.Font("Microsoft Sans Serif", 12.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lShipHold.ForeColor = System.Drawing.Color.Red
        Me.lShipHold.Location = New System.Drawing.Point(10, 46)
        Me.lShipHold.Name = "lShipHold"
        Me.lShipHold.Size = New System.Drawing.Size(278, 139)
        Me.lShipHold.TabIndex = 188
        Me.lShipHold.Text = "See an administrator to ship this order."
        '
        'gsCopy
        '
        Me.gsCopy.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.gsCopy.Enabled = False
        Me.gsCopy.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.gsCopy.Location = New System.Drawing.Point(115, 9)
        Me.gsCopy.Name = "gsCopy"
        Me.gsCopy.Size = New System.Drawing.Size(173, 28)
        Me.gsCopy.TabIndex = 171
        Me.gsCopy.Tag = "edit"
        Me.gsCopy.Text = "Copy From Sold To"
        '
        'Label7
        '
        Me.Label7.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.Label7.Font = New System.Drawing.Font("Microsoft Sans Serif", 12.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.Label7.Location = New System.Drawing.Point(10, 18)
        Me.Label7.Name = "Label7"
        Me.Label7.Size = New System.Drawing.Size(278, 28)
        Me.Label7.TabIndex = 160
        Me.Label7.Text = "Ship To:"
        '
        'gsState
        '
        Me.gsState.CharacterCasing = System.Windows.Forms.CharacterCasing.Upper
        Me.gsState.Enabled = False
        Me.gsState.Location = New System.Drawing.Point(96, 323)
        Me.gsState.Name = "gsState"
        Me.gsState.Size = New System.Drawing.Size(192, 25)
        Me.gsState.TabIndex = 146
        Me.gsState.Tag = "edit"
        '
        'gslState
        '
        Me.gslState.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.gslState.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.gslState.Location = New System.Drawing.Point(10, 323)
        Me.gslState.Name = "gslState"
        Me.gslState.Size = New System.Drawing.Size(124, 19)
        Me.gslState.TabIndex = 159
        Me.gslState.Text = "State"
        '
        'gsAddr2
        '
        Me.gsAddr2.Enabled = False
        Me.gsAddr2.Location = New System.Drawing.Point(96, 212)
        Me.gsAddr2.Name = "gsAddr2"
        Me.gsAddr2.Size = New System.Drawing.Size(192, 25)
        Me.gsAddr2.TabIndex = 142
        Me.gsAddr2.Tag = "edit"
        '
        'gslAddr2
        '
        Me.gslAddr2.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.gslAddr2.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.gslAddr2.Location = New System.Drawing.Point(10, 212)
        Me.gslAddr2.Name = "gslAddr2"
        Me.gslAddr2.Size = New System.Drawing.Size(124, 19)
        Me.gslAddr2.TabIndex = 157
        Me.gslAddr2.Text = "Addr2"
        '
        'gsAddr1
        '
        Me.gsAddr1.Enabled = False
        Me.gsAddr1.Location = New System.Drawing.Point(96, 185)
        Me.gsAddr1.Name = "gsAddr1"
        Me.gsAddr1.Size = New System.Drawing.Size(192, 25)
        Me.gsAddr1.TabIndex = 141
        Me.gsAddr1.Tag = "edit"
        '
        'gslAddr1
        '
        Me.gslAddr1.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.gslAddr1.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.gslAddr1.Location = New System.Drawing.Point(10, 185)
        Me.gslAddr1.Name = "gslAddr1"
        Me.gslAddr1.Size = New System.Drawing.Size(124, 18)
        Me.gslAddr1.TabIndex = 156
        Me.gslAddr1.Text = "Addr1"
        '
        'gsCompany
        '
        Me.gsCompany.Enabled = False
        Me.gsCompany.Location = New System.Drawing.Point(96, 129)
        Me.gsCompany.Name = "gsCompany"
        Me.gsCompany.Size = New System.Drawing.Size(192, 25)
        Me.gsCompany.TabIndex = 139
        Me.gsCompany.Tag = "edit"
        '
        'gslCompany
        '
        Me.gslCompany.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.gslCompany.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.gslCompany.Location = New System.Drawing.Point(10, 129)
        Me.gslCompany.Name = "gslCompany"
        Me.gslCompany.Size = New System.Drawing.Size(124, 19)
        Me.gslCompany.TabIndex = 154
        Me.gslCompany.Text = "Company"
        '
        'gsName
        '
        Me.gsName.Enabled = False
        Me.gsName.Location = New System.Drawing.Point(96, 102)
        Me.gsName.Name = "gsName"
        Me.gsName.Size = New System.Drawing.Size(192, 25)
        Me.gsName.TabIndex = 138
        Me.gsName.Tag = "edit"
        '
        'gslName
        '
        Me.gslName.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.gslName.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.gslName.Location = New System.Drawing.Point(10, 102)
        Me.gslName.Name = "gslName"
        Me.gslName.Size = New System.Drawing.Size(124, 18)
        Me.gslName.TabIndex = 153
        Me.gslName.Text = "Name"
        '
        'gsEmailSend
        '
        Me.gsEmailSend.ButtonStyle = Infragistics.Win.UIElementButtonStyle.FlatBorderless
        Me.gsEmailSend.Location = New System.Drawing.Point(259, 498)
        Me.gsEmailSend.Name = "gsEmailSend"
        Me.gsEmailSend.Size = New System.Drawing.Size(39, 28)
        Me.gsEmailSend.TabIndex = 172
        '
        'gsCounty
        '
        Me.gsCounty.Enabled = False
        Me.gsCounty.Location = New System.Drawing.Point(96, 351)
        Me.gsCounty.Name = "gsCounty"
        Me.gsCounty.Size = New System.Drawing.Size(192, 25)
        Me.gsCounty.TabIndex = 169
        Me.gsCounty.Tag = "edit"
        '
        'gslCounty
        '
        Me.gslCounty.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.gslCounty.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.gslCounty.Location = New System.Drawing.Point(10, 351)
        Me.gslCounty.Name = "gslCounty"
        Me.gslCounty.Size = New System.Drawing.Size(124, 18)
        Me.gslCounty.TabIndex = 170
        Me.gslCounty.Text = "County"
        '
        'gsCell
        '
        Me.gsCell.Enabled = False
        Me.gsCell.Location = New System.Drawing.Point(96, 471)
        Me.gsCell.Name = "gsCell"
        Me.gsCell.Size = New System.Drawing.Size(192, 24)
        Me.gsCell.TabIndex = 150
        Me.gsCell.Tag = "edit"
        '
        'gsFax
        '
        Me.gsFax.Enabled = False
        Me.gsFax.Location = New System.Drawing.Point(96, 443)
        Me.gsFax.Name = "gsFax"
        Me.gsFax.Size = New System.Drawing.Size(192, 24)
        Me.gsFax.TabIndex = 149
        Me.gsFax.Tag = "edit"
        '
        'gsPhone2
        '
        Me.gsPhone2.Enabled = False
        Me.gsPhone2.Location = New System.Drawing.Point(96, 415)
        Me.gsPhone2.Name = "gsPhone2"
        Me.gsPhone2.Size = New System.Drawing.Size(192, 24)
        Me.gsPhone2.TabIndex = 148
        Me.gsPhone2.Tag = "edit"
        '
        'gsPhone1
        '
        Me.gsPhone1.Enabled = False
        Me.gsPhone1.Location = New System.Drawing.Point(96, 46)
        Me.gsPhone1.Name = "gsPhone1"
        Me.gsPhone1.Size = New System.Drawing.Size(192, 24)
        Me.gsPhone1.TabIndex = 136
        Me.gsPhone1.Tag = "edit"
        '
        'gsCountry
        '
        Me.gsCountry.CalcManager = Me.UltraCalcManager1
        Me.gsCountry.CheckedListSettings.CheckStateMember = ""
        Me.gsCountry.DropDownStyle = Infragistics.Win.UltraWinGrid.UltraComboStyle.DropDownList
        Me.gsCountry.Enabled = False
        Me.gsCountry.Location = New System.Drawing.Point(96, 157)
        Me.gsCountry.Name = "gsCountry"
        Me.gsCountry.Size = New System.Drawing.Size(192, 26)
        Me.gsCountry.TabIndex = 140
        Me.gsCountry.Tag = "edit"
        '
        'gsAddr3
        '
        Me.gsAddr3.Enabled = False
        Me.gsAddr3.Location = New System.Drawing.Point(96, 240)
        Me.gsAddr3.Name = "gsAddr3"
        Me.gsAddr3.Size = New System.Drawing.Size(192, 25)
        Me.gsAddr3.TabIndex = 143
        Me.gsAddr3.Tag = "edit"
        '
        'gslAddr3
        '
        Me.gslAddr3.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.gslAddr3.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.gslAddr3.Location = New System.Drawing.Point(10, 240)
        Me.gslAddr3.Name = "gslAddr3"
        Me.gslAddr3.Size = New System.Drawing.Size(124, 18)
        Me.gslAddr3.TabIndex = 168
        Me.gslAddr3.Text = "Addr3"
        '
        'gsProvince
        '
        Me.gsProvince.Enabled = False
        Me.gsProvince.Location = New System.Drawing.Point(96, 378)
        Me.gsProvince.Name = "gsProvince"
        Me.gsProvince.Size = New System.Drawing.Size(192, 25)
        Me.gsProvince.TabIndex = 147
        Me.gsProvince.Tag = "edit"
        '
        'gslProvince
        '
        Me.gslProvince.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.gslProvince.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.gslProvince.Location = New System.Drawing.Point(10, 378)
        Me.gslProvince.Name = "gslProvince"
        Me.gslProvince.Size = New System.Drawing.Size(124, 19)
        Me.gslProvince.TabIndex = 167
        Me.gslProvince.Text = "Province"
        '
        'gsCity
        '
        Me.gsCity.CalcManager = Me.UltraCalcManager1
        Me.gsCity.CheckedListSettings.CheckStateMember = ""
        Me.gsCity.Enabled = False
        Me.gsCity.Location = New System.Drawing.Point(96, 295)
        Me.gsCity.Name = "gsCity"
        Me.gsCity.Size = New System.Drawing.Size(192, 26)
        Me.gsCity.TabIndex = 145
        Me.gsCity.Tag = "edit"
        '
        'gsCustId
        '
        Me.gsCustId.CalcManager = Me.UltraCalcManager1
        Me.gsCustId.CheckedListSettings.CheckStateMember = ""
        Me.gsCustId.Enabled = False
        Me.gsCustId.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.gsCustId.LimitToList = True
        Me.gsCustId.Location = New System.Drawing.Point(96, 74)
        Me.gsCustId.Name = "gsCustId"
        Me.gsCustId.Size = New System.Drawing.Size(192, 26)
        Me.gsCustId.TabIndex = 137
        Me.gsCustId.Tag = "edit"
        '
        'gsEmail
        '
        Me.gsEmail.Enabled = False
        Me.gsEmail.Location = New System.Drawing.Point(96, 498)
        Me.gsEmail.Name = "gsEmail"
        Me.gsEmail.Size = New System.Drawing.Size(163, 25)
        Me.gsEmail.TabIndex = 152
        Me.gsEmail.Tag = "edit"
        '
        'gslEmail
        '
        Me.gslEmail.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.gslEmail.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.gslEmail.Location = New System.Drawing.Point(10, 498)
        Me.gslEmail.Name = "gslEmail"
        Me.gslEmail.Size = New System.Drawing.Size(124, 19)
        Me.gslEmail.TabIndex = 166
        Me.gslEmail.Text = "Email"
        '
        'gslCell
        '
        Me.gslCell.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.gslCell.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.gslCell.Location = New System.Drawing.Point(10, 471)
        Me.gslCell.Name = "gslCell"
        Me.gslCell.Size = New System.Drawing.Size(124, 18)
        Me.gslCell.TabIndex = 165
        Me.gslCell.Text = "Cell Phone"
        '
        'gslFax
        '
        Me.gslFax.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.gslFax.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.gslFax.Location = New System.Drawing.Point(10, 443)
        Me.gslFax.Name = "gslFax"
        Me.gslFax.Size = New System.Drawing.Size(124, 19)
        Me.gslFax.TabIndex = 164
        Me.gslFax.Text = "Fax"
        '
        'gslPhone2
        '
        Me.gslPhone2.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.gslPhone2.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.gslPhone2.Location = New System.Drawing.Point(10, 415)
        Me.gslPhone2.Name = "gslPhone2"
        Me.gslPhone2.Size = New System.Drawing.Size(124, 19)
        Me.gslPhone2.TabIndex = 163
        Me.gslPhone2.Text = "Phone2"
        '
        'gslPhone
        '
        Me.gslPhone.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.gslPhone.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.gslPhone.Location = New System.Drawing.Point(10, 46)
        Me.gslPhone.Name = "gslPhone"
        Me.gslPhone.Size = New System.Drawing.Size(124, 19)
        Me.gslPhone.TabIndex = 162
        Me.gslPhone.Text = "Phone1"
        '
        'gsZip
        '
        Me.gsZip.Enabled = False
        Me.gsZip.Location = New System.Drawing.Point(96, 268)
        Me.gsZip.Name = "gsZip"
        Me.gsZip.Size = New System.Drawing.Size(192, 25)
        Me.gsZip.TabIndex = 144
        Me.gsZip.Tag = "edit"
        '
        'gslZip
        '
        Me.gslZip.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.gslZip.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.gslZip.Location = New System.Drawing.Point(10, 268)
        Me.gslZip.Name = "gslZip"
        Me.gslZip.Size = New System.Drawing.Size(124, 18)
        Me.gslZip.TabIndex = 161
        Me.gslZip.Text = "Zip"
        '
        'gslCustID
        '
        Me.gslCustID.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.gslCustID.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.gslCustID.Location = New System.Drawing.Point(10, 74)
        Me.gslCustID.Name = "gslCustID"
        Me.gslCustID.Size = New System.Drawing.Size(124, 18)
        Me.gslCustID.TabIndex = 151
        Me.gslCustID.Text = "Cust ID"
        '
        'gslCountry
        '
        Me.gslCountry.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.gslCountry.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.gslCountry.Location = New System.Drawing.Point(10, 157)
        Me.gslCountry.Name = "gslCountry"
        Me.gslCountry.Size = New System.Drawing.Size(124, 18)
        Me.gslCountry.TabIndex = 155
        Me.gslCountry.Text = "Country"
        '
        'gslCity
        '
        Me.gslCity.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.gslCity.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.gslCity.Location = New System.Drawing.Point(10, 295)
        Me.gslCity.Name = "gslCity"
        Me.gslCity.Size = New System.Drawing.Size(124, 19)
        Me.gslCity.TabIndex = 158
        Me.gslCity.Text = "City"
        '
        'gsExemptAddr
        '
        Me.gsExemptAddr.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
            Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.gsExemptAddr.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.gsExemptAddr.Location = New System.Drawing.Point(336, 597)
        Me.gsExemptAddr.Name = "gsExemptAddr"
        Me.gsExemptAddr.Size = New System.Drawing.Size(583, 81)
        Me.gsExemptAddr.TabIndex = 185
        Me.gsExemptAddr.Tag = "show"
        '
        'gsShipTaxPerc
        '
        Me.gsShipTaxPerc.Enabled = False
        Me.gsShipTaxPerc.Location = New System.Drawing.Point(106, 657)
        Me.gsShipTaxPerc.Name = "gsShipTaxPerc"
        Me.gsShipTaxPerc.ReadOnly = True
        Me.gsShipTaxPerc.Size = New System.Drawing.Size(76, 25)
        Me.gsShipTaxPerc.TabIndex = 180
        Me.gsShipTaxPerc.Tag = ""
        '
        'UltraLabel120
        '
        Me.UltraLabel120.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel120.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel120.Location = New System.Drawing.Point(19, 660)
        Me.UltraLabel120.Name = "UltraLabel120"
        Me.UltraLabel120.Size = New System.Drawing.Size(125, 18)
        Me.UltraLabel120.TabIndex = 181
        Me.UltraLabel120.Text = "Ship Tax %"
        '
        'gsTaxInstalls
        '
        Appearance202.FontData.BoldAsString = "True"
        Me.gsTaxInstalls.Appearance = Appearance202
        Me.gsTaxInstalls.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.gsTaxInstalls.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.gsTaxInstalls.Enabled = False
        Me.gsTaxInstalls.Location = New System.Drawing.Point(134, 572)
        Me.gsTaxInstalls.Name = "gsTaxInstalls"
        Me.gsTaxInstalls.Size = New System.Drawing.Size(144, 19)
        Me.gsTaxInstalls.TabIndex = 179
        Me.gsTaxInstalls.Tag = ""
        Me.gsTaxInstalls.Text = "Tax Installs"
        '
        'UltraLabel118
        '
        Me.UltraLabel118.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel118.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel118.Location = New System.Drawing.Point(19, 609)
        Me.UltraLabel118.Name = "UltraLabel118"
        Me.UltraLabel118.Size = New System.Drawing.Size(77, 19)
        Me.UltraLabel118.TabIndex = 177
        Me.UltraLabel118.Text = "Exempt #"
        '
        'gsTaxExempt
        '
        Appearance203.FontData.BoldAsString = "True"
        Appearance203.FontData.SizeInPoints = 8.0!
        Appearance203.ForeColor = System.Drawing.Color.Black
        Me.gsTaxExempt.Appearance = Appearance203
        Me.gsTaxExempt.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.gsTaxExempt.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.gsTaxExempt.Enabled = False
        Me.gsTaxExempt.Location = New System.Drawing.Point(10, 572)
        Me.gsTaxExempt.Name = "gsTaxExempt"
        Me.gsTaxExempt.Size = New System.Drawing.Size(142, 19)
        Me.gsTaxExempt.TabIndex = 173
        Me.gsTaxExempt.Tag = "edit"
        Me.gsTaxExempt.Text = "Tax Exempt"
        '
        'gsExemptNo
        '
        Me.gsExemptNo.Enabled = False
        Me.gsExemptNo.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.gsExemptNo.Location = New System.Drawing.Point(106, 600)
        Me.gsExemptNo.Name = "gsExemptNo"
        Me.gsExemptNo.Size = New System.Drawing.Size(192, 28)
        Me.gsExemptNo.TabIndex = 174
        Me.gsExemptNo.Tag = "edit"
        '
        'gsTaxRate
        '
        Me.gsTaxRate.Enabled = False
        Me.gsTaxRate.Location = New System.Drawing.Point(106, 630)
        Me.gsTaxRate.Name = "gsTaxRate"
        Me.gsTaxRate.ReadOnly = True
        Me.gsTaxRate.Size = New System.Drawing.Size(76, 25)
        Me.gsTaxRate.TabIndex = 175
        Me.gsTaxRate.Tag = ""
        '
        'UltraLabel119
        '
        Me.UltraLabel119.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel119.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel119.Location = New System.Drawing.Point(19, 633)
        Me.UltraLabel119.Name = "UltraLabel119"
        Me.UltraLabel119.Size = New System.Drawing.Size(125, 19)
        Me.UltraLabel119.TabIndex = 176
        Me.UltraLabel119.Text = "Tax Rate"
        '
        'GroupBox1
        '
        Me.GroupBox1.BackColor = System.Drawing.Color.PaleGoldenrod
        Me.GroupBox1.Controls.Add(Me.ddThirdPartyFill)
        Me.GroupBox1.Controls.Add(Me.tThirdPartyShipVia)
        Me.GroupBox1.Controls.Add(Me.tThirdPartyAcct)
        Me.GroupBox1.Controls.Add(Me.UltraLabel109)
        Me.GroupBox1.Controls.Add(Me.UltraLabel108)
        Me.GroupBox1.Controls.Add(Me.bShipPromoAdd)
        Me.GroupBox1.Controls.Add(Me.tShipPromo)
        Me.GroupBox1.Controls.Add(Me.cbShipActive)
        Me.GroupBox1.Controls.Add(Me.cbShipWhiteGlove)
        Me.GroupBox1.Controls.Add(Me.cbShipCustPickup)
        Me.GroupBox1.Controls.Add(Me.cbCollect)
        Me.GroupBox1.Controls.Add(Me.UltraLabel58)
        Me.GroupBox1.Controls.Add(Me.tSkids)
        Me.GroupBox1.Controls.Add(Me.cbIntlShip)
        Me.GroupBox1.Controls.Add(Me.cbOvernite)
        Me.GroupBox1.Controls.Add(Me.tShipDiscount)
        Me.GroupBox1.Controls.Add(Me.UltraLabel59)
        Me.GroupBox1.Controls.Add(Me.tThirdPartyName)
        Me.GroupBox1.Controls.Add(Me.UltraLabel14)
        Me.GroupBox1.Controls.Add(Me.cbThirdParty)
        Me.GroupBox1.Controls.Add(Me.tCallPhone)
        Me.GroupBox1.Controls.Add(Me.tCallName)
        Me.GroupBox1.Controls.Add(Me.UltraLabel13)
        Me.GroupBox1.Controls.Add(Me.UltraLabel12)
        Me.GroupBox1.Controls.Add(Me.cbCall)
        Me.GroupBox1.Controls.Add(Me.tTurns)
        Me.GroupBox1.Controls.Add(Me.tSteps)
        Me.GroupBox1.Controls.Add(Me.cbSteps)
        Me.GroupBox1.Controls.Add(Me.cbTurns)
        Me.GroupBox1.Controls.Add(Me.cbLiftGate)
        Me.GroupBox1.Controls.Add(Me.cbAlert)
        Me.GroupBox1.Controls.Add(Me.cbSmallTruck)
        Me.GroupBox1.Controls.Add(Me.cbTwoMan)
        Me.GroupBox1.Controls.Add(Me.cbInside)
        Me.GroupBox1.Controls.Add(Me.cbGated)
        Me.GroupBox1.Controls.Add(Me.tShipExtra)
        Me.GroupBox1.Controls.Add(Me.UltraLabel22)
        Me.GroupBox1.Controls.Add(Me.UltraLabel45)
        Me.GroupBox1.Controls.Add(Me.UltraLabel3)
        Me.GroupBox1.Enabled = False
        Me.GroupBox1.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.GroupBox1.Location = New System.Drawing.Point(307, 9)
        Me.GroupBox1.Name = "GroupBox1"
        Me.GroupBox1.Size = New System.Drawing.Size(346, 591)
        Me.GroupBox1.TabIndex = 10
        Me.GroupBox1.TabStop = False
        Me.GroupBox1.Tag = "edit"
        Me.GroupBox1.Text = "Shipping Instructions"
        '
        'ddThirdPartyFill
        '
        Me.ddThirdPartyFill.CalcManager = Me.UltraCalcManager1
        Me.ddThirdPartyFill.CheckedListSettings.CheckStateMember = ""
        UltraGridColumn158.Header.Caption = "Name"
        UltraGridColumn158.Header.VisiblePosition = 0
        UltraGridColumn159.Header.Caption = "Ship Via"
        UltraGridColumn159.Header.VisiblePosition = 1
        UltraGridColumn160.Header.Caption = "Account Number"
        UltraGridColumn160.Header.VisiblePosition = 2
        UltraGridColumn161.Header.Caption = "Default"
        UltraGridColumn161.Header.VisiblePosition = 3
        UltraGridColumn161.Style = Infragistics.Win.UltraWinGrid.ColumnStyle.CheckBox
        UltraGridBand12.Columns.AddRange(New Object() {UltraGridColumn158, UltraGridColumn159, UltraGridColumn160, UltraGridColumn161})
        Me.ddThirdPartyFill.DisplayLayout.BandsSerializer.Add(UltraGridBand12)
        Me.ddThirdPartyFill.Font = New System.Drawing.Font("Arial", 7.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.ddThirdPartyFill.Location = New System.Drawing.Point(182, 369)
        Me.ddThirdPartyFill.Name = "ddThirdPartyFill"
        Me.ddThirdPartyFill.Size = New System.Drawing.Size(29, 23)
        Me.ddThirdPartyFill.TabIndex = 103
        '
        'tThirdPartyShipVia
        '
        Me.tThirdPartyShipVia.CalcManager = Me.UltraCalcManager1
        Me.tThirdPartyShipVia.CheckedListSettings.CheckStateMember = ""
        Me.tThirdPartyShipVia.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tThirdPartyShipVia.Location = New System.Drawing.Point(86, 425)
        Me.tThirdPartyShipVia.Name = "tThirdPartyShipVia"
        Me.tThirdPartyShipVia.Size = New System.Drawing.Size(173, 25)
        Me.tThirdPartyShipVia.TabIndex = 102
        '
        'tThirdPartyAcct
        '
        Appearance55.FontData.SizeInPoints = 8.0!
        Me.tThirdPartyAcct.Appearance = Appearance55
        Me.tThirdPartyAcct.Location = New System.Drawing.Point(86, 452)
        Me.tThirdPartyAcct.MaxLength = 35
        Me.tThirdPartyAcct.Name = "tThirdPartyAcct"
        Me.tThirdPartyAcct.Size = New System.Drawing.Size(240, 24)
        Me.tThirdPartyAcct.TabIndex = 101
        '
        'UltraLabel109
        '
        Appearance56.TextHAlignAsString = "Right"
        Me.UltraLabel109.Appearance = Appearance56
        Me.UltraLabel109.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel109.Location = New System.Drawing.Point(19, 462)
        Me.UltraLabel109.Name = "UltraLabel109"
        Me.UltraLabel109.Size = New System.Drawing.Size(58, 18)
        Me.UltraLabel109.TabIndex = 99
        Me.UltraLabel109.Text = "Acct#"
        '
        'UltraLabel108
        '
        Appearance57.TextHAlignAsString = "Right"
        Me.UltraLabel108.Appearance = Appearance57
        Me.UltraLabel108.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel108.Location = New System.Drawing.Point(19, 434)
        Me.UltraLabel108.Name = "UltraLabel108"
        Me.UltraLabel108.Size = New System.Drawing.Size(58, 18)
        Me.UltraLabel108.TabIndex = 98
        Me.UltraLabel108.Text = "Ship Via"
        '
        'bShipPromoAdd
        '
        Me.bShipPromoAdd.Font = New System.Drawing.Font("Microsoft Sans Serif", 14.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.bShipPromoAdd.Location = New System.Drawing.Point(317, 554)
        Me.bShipPromoAdd.Name = "bShipPromoAdd"
        Me.bShipPromoAdd.Size = New System.Drawing.Size(29, 25)
        Me.bShipPromoAdd.TabIndex = 97
        Me.bShipPromoAdd.Tag = "edit"
        Me.bShipPromoAdd.Text = "+"
        '
        'tShipPromo
        '
        Me.tShipPromo.CalcManager = Me.UltraCalcManager1
        Me.tShipPromo.CheckedListSettings.CheckStateMember = ""
        UltraGridColumn162.Header.VisiblePosition = 0
        UltraGridColumn162.Hidden = True
        UltraGridColumn163.Header.Caption = "Shipping Promotion"
        UltraGridColumn163.Header.VisiblePosition = 1
        UltraGridColumn163.Width = 300
        UltraGridBand13.Columns.AddRange(New Object() {UltraGridColumn162, UltraGridColumn163})
        Me.tShipPromo.DisplayLayout.BandsSerializer.Add(UltraGridBand13)
        Me.tShipPromo.DropDownWidth = 300
        Me.tShipPromo.Enabled = False
        Me.tShipPromo.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tShipPromo.Location = New System.Drawing.Point(134, 554)
        Me.tShipPromo.Name = "tShipPromo"
        Me.tShipPromo.Size = New System.Drawing.Size(183, 25)
        Me.tShipPromo.TabIndex = 95
        Me.tShipPromo.Tag = "edit"
        '
        'cbShipActive
        '
        Me.cbShipActive.BackColor = System.Drawing.Color.Gold
        Me.cbShipActive.BackColorInternal = System.Drawing.Color.Gold
        Me.cbShipActive.Location = New System.Drawing.Point(19, 18)
        Me.cbShipActive.Name = "cbShipActive"
        Me.cbShipActive.Size = New System.Drawing.Size(317, 28)
        Me.cbShipActive.TabIndex = 93
        Me.cbShipActive.Text = "Shipping Costs Are Active"
        '
        'cbShipWhiteGlove
        '
        Me.cbShipWhiteGlove.Location = New System.Drawing.Point(202, 157)
        Me.cbShipWhiteGlove.Name = "cbShipWhiteGlove"
        Me.cbShipWhiteGlove.Size = New System.Drawing.Size(124, 28)
        Me.cbShipWhiteGlove.TabIndex = 92
        Me.cbShipWhiteGlove.Text = "White Glove"
        '
        'cbShipCustPickup
        '
        Me.cbShipCustPickup.Location = New System.Drawing.Point(202, 129)
        Me.cbShipCustPickup.Name = "cbShipCustPickup"
        Me.cbShipCustPickup.Size = New System.Drawing.Size(124, 28)
        Me.cbShipCustPickup.TabIndex = 91
        Me.cbShipCustPickup.Text = "Cust Pickup"
        '
        'cbCollect
        '
        Me.cbCollect.Location = New System.Drawing.Point(202, 46)
        Me.cbCollect.Name = "cbCollect"
        Me.cbCollect.Size = New System.Drawing.Size(115, 28)
        Me.cbCollect.TabIndex = 88
        Me.cbCollect.Text = "Collect"
        '
        'UltraLabel58
        '
        Me.UltraLabel58.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel58.Location = New System.Drawing.Point(269, 425)
        Me.UltraLabel58.Name = "UltraLabel58"
        Me.UltraLabel58.Size = New System.Drawing.Size(57, 20)
        Me.UltraLabel58.TabIndex = 87
        Me.UltraLabel58.Text = "Skids"
        '
        'tSkids
        '
        Appearance58.FontData.SizeInPoints = 8.0!
        Me.tSkids.Appearance = Appearance58
        Me.tSkids.Location = New System.Drawing.Point(269, 397)
        Me.tSkids.MaskInput = "nn"
        Me.tSkids.MaxValue = 99
        Me.tSkids.MinValue = 0
        Me.tSkids.Name = "tSkids"
        Me.tSkids.PromptChar = Global.Microsoft.VisualBasic.ChrW(32)
        Me.tSkids.Size = New System.Drawing.Size(57, 24)
        Me.tSkids.SpinButtonDisplayStyle = Infragistics.Win.ButtonDisplayStyle.Always
        Me.tSkids.TabIndex = 86
        '
        'cbIntlShip
        '
        Me.cbIntlShip.Location = New System.Drawing.Point(19, 268)
        Me.cbIntlShip.Name = "cbIntlShip"
        Me.cbIntlShip.Size = New System.Drawing.Size(202, 27)
        Me.cbIntlShip.TabIndex = 84
        Me.cbIntlShip.Text = "Int'l Shpmt (Skid Fee)"
        '
        'cbOvernite
        '
        Me.cbOvernite.Location = New System.Drawing.Point(19, 240)
        Me.cbOvernite.Name = "cbOvernite"
        Me.cbOvernite.Size = New System.Drawing.Size(250, 28)
        Me.cbOvernite.TabIndex = 83
        Me.cbOvernite.Text = "Overnite Guaranteed"
        '
        'tShipDiscount
        '
        Me.tShipDiscount.Enabled = False
        Me.tShipDiscount.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tShipDiscount.Location = New System.Drawing.Point(134, 526)
        Me.tShipDiscount.Name = "tShipDiscount"
        Me.tShipDiscount.PromptChar = Global.Microsoft.VisualBasic.ChrW(32)
        Me.tShipDiscount.Size = New System.Drawing.Size(144, 24)
        Me.tShipDiscount.TabIndex = 81
        Me.tShipDiscount.TabNavigation = Infragistics.Win.UltraWinMaskedEdit.MaskedEditTabNavigation.NextControl
        Me.tShipDiscount.Tag = "edit"
        '
        'UltraLabel59
        '
        Me.UltraLabel59.BackColorInternal = System.Drawing.Color.PaleGoldenrod
        Me.UltraLabel59.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel59.Location = New System.Drawing.Point(10, 526)
        Me.UltraLabel59.Name = "UltraLabel59"
        Me.UltraLabel59.Size = New System.Drawing.Size(124, 28)
        Me.UltraLabel59.TabIndex = 82
        Me.UltraLabel59.Text = "Ship Discount"
        '
        'tThirdPartyName
        '
        Appearance59.FontData.SizeInPoints = 8.0!
        Me.tThirdPartyName.Appearance = Appearance59
        Me.tThirdPartyName.Location = New System.Drawing.Point(86, 397)
        Me.tThirdPartyName.MaxLength = 35
        Me.tThirdPartyName.Name = "tThirdPartyName"
        Me.tThirdPartyName.Size = New System.Drawing.Size(173, 24)
        Me.tThirdPartyName.TabIndex = 17
        '
        'UltraLabel14
        '
        Appearance60.TextHAlignAsString = "Right"
        Me.UltraLabel14.Appearance = Appearance60
        Me.UltraLabel14.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel14.Location = New System.Drawing.Point(19, 406)
        Me.UltraLabel14.Name = "UltraLabel14"
        Me.UltraLabel14.Size = New System.Drawing.Size(58, 19)
        Me.UltraLabel14.TabIndex = 16
        Me.UltraLabel14.Text = "Name"
        '
        'cbThirdParty
        '
        Me.cbThirdParty.Location = New System.Drawing.Point(19, 369)
        Me.cbThirdParty.Name = "cbThirdParty"
        Me.cbThirdParty.Size = New System.Drawing.Size(221, 28)
        Me.cbThirdParty.TabIndex = 15
        Me.cbThirdParty.Text = "3rd Party Billing"
        '
        'tCallPhone
        '
        Me.tCallPhone.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tCallPhone.Location = New System.Drawing.Point(192, 323)
        Me.tCallPhone.MaxLength = 25
        Me.tCallPhone.Name = "tCallPhone"
        Me.tCallPhone.Size = New System.Drawing.Size(125, 24)
        Me.tCallPhone.TabIndex = 14
        '
        'tCallName
        '
        Me.tCallName.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tCallName.Location = New System.Drawing.Point(29, 323)
        Me.tCallName.MaxLength = 25
        Me.tCallName.Name = "tCallName"
        Me.tCallName.Size = New System.Drawing.Size(153, 24)
        Me.tCallName.TabIndex = 12
        '
        'UltraLabel13
        '
        Me.UltraLabel13.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel13.Location = New System.Drawing.Point(192, 351)
        Me.UltraLabel13.Name = "UltraLabel13"
        Me.UltraLabel13.Size = New System.Drawing.Size(125, 27)
        Me.UltraLabel13.TabIndex = 13
        Me.UltraLabel13.Text = "Phone"
        '
        'UltraLabel12
        '
        Me.UltraLabel12.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel12.Location = New System.Drawing.Point(29, 351)
        Me.UltraLabel12.Name = "UltraLabel12"
        Me.UltraLabel12.Size = New System.Drawing.Size(125, 27)
        Me.UltraLabel12.TabIndex = 11
        Me.UltraLabel12.Text = "Name"
        '
        'cbCall
        '
        Me.cbCall.Location = New System.Drawing.Point(19, 295)
        Me.cbCall.Name = "cbCall"
        Me.cbCall.Size = New System.Drawing.Size(240, 28)
        Me.cbCall.TabIndex = 10
        Me.cbCall.Text = "Call Before Delivery"
        '
        'tTurns
        '
        Me.tTurns.Location = New System.Drawing.Point(240, 212)
        Me.tTurns.MaskInput = "nn"
        Me.tTurns.MaxValue = 99
        Me.tTurns.MinValue = 0
        Me.tTurns.Name = "tTurns"
        Me.tTurns.PromptChar = Global.Microsoft.VisualBasic.ChrW(32)
        Me.tTurns.Size = New System.Drawing.Size(58, 28)
        Me.tTurns.SpinButtonDisplayStyle = Infragistics.Win.ButtonDisplayStyle.Always
        Me.tTurns.TabIndex = 9
        '
        'tSteps
        '
        Me.tSteps.FormatString = ""
        Me.tSteps.Location = New System.Drawing.Point(96, 212)
        Me.tSteps.MaskInput = "nn"
        Me.tSteps.MaxValue = 99
        Me.tSteps.MinValue = 0
        Me.tSteps.Name = "tSteps"
        Me.tSteps.PromptChar = Global.Microsoft.VisualBasic.ChrW(32)
        Me.tSteps.Size = New System.Drawing.Size(58, 28)
        Me.tSteps.SpinButtonDisplayStyle = Infragistics.Win.ButtonDisplayStyle.Always
        Me.tSteps.TabIndex = 7
        '
        'cbSteps
        '
        Me.cbSteps.Location = New System.Drawing.Point(19, 212)
        Me.cbSteps.Name = "cbSteps"
        Me.cbSteps.Size = New System.Drawing.Size(96, 28)
        Me.cbSteps.TabIndex = 6
        Me.cbSteps.Text = "Steps"
        '
        'cbTurns
        '
        Me.cbTurns.Location = New System.Drawing.Point(163, 212)
        Me.cbTurns.Name = "cbTurns"
        Me.cbTurns.Size = New System.Drawing.Size(96, 28)
        Me.cbTurns.TabIndex = 8
        Me.cbTurns.Text = "Turns"
        '
        'cbLiftGate
        '
        Me.cbLiftGate.Location = New System.Drawing.Point(19, 157)
        Me.cbLiftGate.Name = "cbLiftGate"
        Me.cbLiftGate.Size = New System.Drawing.Size(250, 28)
        Me.cbLiftGate.TabIndex = 4
        Me.cbLiftGate.Text = "Lift Gate"
        '
        'cbAlert
        '
        Appearance61.FontData.SizeInPoints = 8.0!
        Me.cbAlert.Appearance = Appearance61
        Me.cbAlert.Location = New System.Drawing.Point(19, 185)
        Me.cbAlert.Name = "cbAlert"
        Me.cbAlert.Size = New System.Drawing.Size(250, 27)
        Me.cbAlert.TabIndex = 5
        Me.cbAlert.Text = "Alert Customer of Shipment"
        '
        'cbSmallTruck
        '
        Me.cbSmallTruck.Location = New System.Drawing.Point(19, 102)
        Me.cbSmallTruck.Name = "cbSmallTruck"
        Me.cbSmallTruck.Size = New System.Drawing.Size(250, 27)
        Me.cbSmallTruck.TabIndex = 2
        Me.cbSmallTruck.Text = "Small Truck (Team Air)"
        '
        'cbTwoMan
        '
        Me.cbTwoMan.Location = New System.Drawing.Point(19, 129)
        Me.cbTwoMan.Name = "cbTwoMan"
        Me.cbTwoMan.Size = New System.Drawing.Size(250, 28)
        Me.cbTwoMan.TabIndex = 3
        Me.cbTwoMan.Text = "Two Man Team"
        '
        'cbInside
        '
        Me.cbInside.Location = New System.Drawing.Point(19, 46)
        Me.cbInside.Name = "cbInside"
        Me.cbInside.Size = New System.Drawing.Size(163, 28)
        Me.cbInside.TabIndex = 0
        Me.cbInside.Text = "Inside Delivery"
        '
        'cbGated
        '
        Me.cbGated.Location = New System.Drawing.Point(19, 74)
        Me.cbGated.Name = "cbGated"
        Me.cbGated.Size = New System.Drawing.Size(250, 28)
        Me.cbGated.TabIndex = 1
        Me.cbGated.Text = "Gated Community"
        '
        'tShipExtra
        '
        Me.tShipExtra.Enabled = False
        Me.tShipExtra.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tShipExtra.Location = New System.Drawing.Point(134, 498)
        Me.tShipExtra.Name = "tShipExtra"
        Me.tShipExtra.PromptChar = Global.Microsoft.VisualBasic.ChrW(32)
        Me.tShipExtra.Size = New System.Drawing.Size(144, 24)
        Me.tShipExtra.TabIndex = 5
        Me.tShipExtra.TabNavigation = Infragistics.Win.UltraWinMaskedEdit.MaskedEditTabNavigation.NextControl
        Me.tShipExtra.Tag = "edit"
        '
        'UltraLabel22
        '
        Me.UltraLabel22.BackColorInternal = System.Drawing.Color.PaleGoldenrod
        Me.UltraLabel22.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel22.Location = New System.Drawing.Point(10, 498)
        Me.UltraLabel22.Name = "UltraLabel22"
        Me.UltraLabel22.Size = New System.Drawing.Size(134, 28)
        Me.UltraLabel22.TabIndex = 80
        Me.UltraLabel22.Text = "Extra Shipping"
        '
        'UltraLabel45
        '
        Appearance62.BorderColor = System.Drawing.Color.Gold
        Me.UltraLabel45.Appearance = Appearance62
        Me.UltraLabel45.BorderStyleInner = Infragistics.Win.UIElementBorderStyle.Solid
        Me.UltraLabel45.BorderStyleOuter = Infragistics.Win.UIElementBorderStyle.Solid
        Me.UltraLabel45.Location = New System.Drawing.Point(10, 22)
        Me.UltraLabel45.Name = "UltraLabel45"
        Me.UltraLabel45.Size = New System.Drawing.Size(326, 467)
        Me.UltraLabel45.TabIndex = 94
        '
        'UltraLabel3
        '
        Me.UltraLabel3.BackColorInternal = System.Drawing.Color.PaleGoldenrod
        Me.UltraLabel3.Font = New System.Drawing.Font("Microsoft Sans Serif", 10.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel3.Location = New System.Drawing.Point(10, 554)
        Me.UltraLabel3.Name = "UltraLabel3"
        Me.UltraLabel3.Size = New System.Drawing.Size(144, 28)
        Me.UltraLabel3.TabIndex = 96
        Me.UltraLabel3.Text = "Promo Code"
        '
        'UltraTabPageControl11
        '
        Me.UltraTabPageControl11.Controls.Add(Me.lOldAltTax)
        Me.UltraTabPageControl11.Controls.Add(Me.pAltShip)
        Me.UltraTabPageControl11.Controls.Add(Me.chUseAltShip)
        Me.UltraTabPageControl11.Controls.Add(Me.Label4)
        Me.UltraTabPageControl11.Location = New System.Drawing.Point(-10000, -10000)
        Me.UltraTabPageControl11.Name = "UltraTabPageControl11"
        Me.UltraTabPageControl11.Size = New System.Drawing.Size(1478, 645)
        '
        'lOldAltTax
        '
        Me.lOldAltTax.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
        Me.lOldAltTax.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.lOldAltTax.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lOldAltTax.ForeColor = System.Drawing.Color.Gray
        Me.lOldAltTax.Location = New System.Drawing.Point(10, 613)
        Me.lOldAltTax.Name = "lOldAltTax"
        Me.lOldAltTax.Size = New System.Drawing.Size(298, 16)
        Me.lOldAltTax.TabIndex = 142
        Me.lOldAltTax.Text = "* Tax rate was 0.00%"
        '
        'pAltShip
        '
        Me.pAltShip.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.pAltShip.Controls.Add(Me.tAltShipCounty)
        Me.pAltShip.Controls.Add(Me.lAltShipCounty)
        Me.pAltShip.Controls.Add(Me.tAltShipCell)
        Me.pAltShip.Controls.Add(Me.tAltShipFax)
        Me.pAltShip.Controls.Add(Me.tAltShipPhone2)
        Me.pAltShip.Controls.Add(Me.tAltShipPhone1)
        Me.pAltShip.Controls.Add(Me.tAltShipCountry)
        Me.pAltShip.Controls.Add(Me.tAltShipAddr3)
        Me.pAltShip.Controls.Add(Me.lAltShipAddr3)
        Me.pAltShip.Controls.Add(Me.tAltShipProvince)
        Me.pAltShip.Controls.Add(Me.lAltShipProvince)
        Me.pAltShip.Controls.Add(Me.tAltShipCity)
        Me.pAltShip.Controls.Add(Me.tAltShipCustId)
        Me.pAltShip.Controls.Add(Me.tAltShipEmail)
        Me.pAltShip.Controls.Add(Me.lAltShipEmail)
        Me.pAltShip.Controls.Add(Me.lAltShipCell)
        Me.pAltShip.Controls.Add(Me.lAltShipFax)
        Me.pAltShip.Controls.Add(Me.lAltShipPhone2)
        Me.pAltShip.Controls.Add(Me.lAltShipPhone1)
        Me.pAltShip.Controls.Add(Me.tAltShipZip)
        Me.pAltShip.Controls.Add(Me.lAltShipZip)
        Me.pAltShip.Controls.Add(Me.tAltShipState)
        Me.pAltShip.Controls.Add(Me.lAltShipState)
        Me.pAltShip.Controls.Add(Me.lAltShipCity)
        Me.pAltShip.Controls.Add(Me.tAltShipAddr2)
        Me.pAltShip.Controls.Add(Me.lAltShipAddr2)
        Me.pAltShip.Controls.Add(Me.tAltShipAddr1)
        Me.pAltShip.Controls.Add(Me.lAltShipAddr1)
        Me.pAltShip.Controls.Add(Me.lAltShipCountry)
        Me.pAltShip.Controls.Add(Me.tAltShipCompany)
        Me.pAltShip.Controls.Add(Me.lAltShipCompany)
        Me.pAltShip.Controls.Add(Me.tAltShipName)
        Me.pAltShip.Controls.Add(Me.lAltShipName)
        Me.pAltShip.Controls.Add(Me.lAltShipCustId)
        Me.pAltShip.Enabled = False
        Me.pAltShip.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.pAltShip.Location = New System.Drawing.Point(10, 37)
        Me.pAltShip.Name = "pAltShip"
        Me.pAltShip.Size = New System.Drawing.Size(489, 609)
        Me.pAltShip.TabIndex = 141
        Me.pAltShip.Tag = "edit"
        '
        'tAltShipCounty
        '
        Me.tAltShipCounty.AutoSize = False
        Me.tAltShipCounty.Location = New System.Drawing.Point(96, 314)
        Me.tAltShipCounty.Name = "tAltShipCounty"
        Me.tAltShipCounty.Size = New System.Drawing.Size(192, 25)
        Me.tAltShipCounty.TabIndex = 11
        Me.tAltShipCounty.Tag = ""
        '
        'lAltShipCounty
        '
        Me.lAltShipCounty.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.lAltShipCounty.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lAltShipCounty.Location = New System.Drawing.Point(10, 314)
        Me.lAltShipCounty.Name = "lAltShipCounty"
        Me.lAltShipCounty.Size = New System.Drawing.Size(124, 18)
        Me.lAltShipCounty.TabIndex = 173
        Me.lAltShipCounty.Text = "County"
        '
        'tAltShipCell
        '
        Me.tAltShipCell.AutoSize = False
        Me.tAltShipCell.Location = New System.Drawing.Point(96, 434)
        Me.tAltShipCell.Name = "tAltShipCell"
        Me.tAltShipCell.Size = New System.Drawing.Size(192, 25)
        Me.tAltShipCell.TabIndex = 15
        Me.tAltShipCell.Tag = ""
        '
        'tAltShipFax
        '
        Me.tAltShipFax.AutoSize = False
        Me.tAltShipFax.Location = New System.Drawing.Point(96, 406)
        Me.tAltShipFax.Name = "tAltShipFax"
        Me.tAltShipFax.Size = New System.Drawing.Size(192, 26)
        Me.tAltShipFax.TabIndex = 14
        Me.tAltShipFax.Tag = ""
        '
        'tAltShipPhone2
        '
        Me.tAltShipPhone2.AutoSize = False
        Me.tAltShipPhone2.Location = New System.Drawing.Point(96, 378)
        Me.tAltShipPhone2.Name = "tAltShipPhone2"
        Me.tAltShipPhone2.Size = New System.Drawing.Size(192, 26)
        Me.tAltShipPhone2.TabIndex = 13
        Me.tAltShipPhone2.Tag = ""
        '
        'tAltShipPhone1
        '
        Me.tAltShipPhone1.AutoSize = False
        Me.tAltShipPhone1.Location = New System.Drawing.Point(96, 9)
        Me.tAltShipPhone1.Name = "tAltShipPhone1"
        Me.tAltShipPhone1.Size = New System.Drawing.Size(192, 26)
        Me.tAltShipPhone1.TabIndex = 0
        Me.tAltShipPhone1.Tag = ""
        '
        'tAltShipCountry
        '
        Me.tAltShipCountry.AutoSize = False
        Me.tAltShipCountry.CalcManager = Me.UltraCalcManager1
        Me.tAltShipCountry.CheckedListSettings.CheckStateMember = ""
        Me.tAltShipCountry.DropDownStyle = Infragistics.Win.UltraWinGrid.UltraComboStyle.DropDownList
        Me.tAltShipCountry.Location = New System.Drawing.Point(96, 120)
        Me.tAltShipCountry.Name = "tAltShipCountry"
        Me.tAltShipCountry.Size = New System.Drawing.Size(192, 25)
        Me.tAltShipCountry.TabIndex = 4
        Me.tAltShipCountry.Tag = ""
        '
        'tAltShipAddr3
        '
        Me.tAltShipAddr3.AutoSize = False
        Me.tAltShipAddr3.Location = New System.Drawing.Point(96, 203)
        Me.tAltShipAddr3.Name = "tAltShipAddr3"
        Me.tAltShipAddr3.Size = New System.Drawing.Size(192, 25)
        Me.tAltShipAddr3.TabIndex = 7
        Me.tAltShipAddr3.Tag = ""
        '
        'lAltShipAddr3
        '
        Me.lAltShipAddr3.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.lAltShipAddr3.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lAltShipAddr3.Location = New System.Drawing.Point(10, 203)
        Me.lAltShipAddr3.Name = "lAltShipAddr3"
        Me.lAltShipAddr3.Size = New System.Drawing.Size(124, 19)
        Me.lAltShipAddr3.TabIndex = 171
        Me.lAltShipAddr3.Text = "Addr3"
        '
        'tAltShipProvince
        '
        Me.tAltShipProvince.AutoSize = False
        Me.tAltShipProvince.Location = New System.Drawing.Point(96, 342)
        Me.tAltShipProvince.Name = "tAltShipProvince"
        Me.tAltShipProvince.Size = New System.Drawing.Size(192, 25)
        Me.tAltShipProvince.TabIndex = 12
        Me.tAltShipProvince.Tag = ""
        '
        'lAltShipProvince
        '
        Me.lAltShipProvince.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.lAltShipProvince.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lAltShipProvince.Location = New System.Drawing.Point(10, 342)
        Me.lAltShipProvince.Name = "lAltShipProvince"
        Me.lAltShipProvince.Size = New System.Drawing.Size(124, 18)
        Me.lAltShipProvince.TabIndex = 170
        Me.lAltShipProvince.Text = "Province"
        '
        'tAltShipCity
        '
        Me.tAltShipCity.AutoSize = False
        Me.tAltShipCity.CalcManager = Me.UltraCalcManager1
        Me.tAltShipCity.CheckedListSettings.CheckStateMember = ""
        Me.tAltShipCity.Location = New System.Drawing.Point(96, 258)
        Me.tAltShipCity.Name = "tAltShipCity"
        Me.tAltShipCity.Size = New System.Drawing.Size(192, 26)
        Me.tAltShipCity.TabIndex = 9
        Me.tAltShipCity.Tag = ""
        '
        'tAltShipCustId
        '
        Me.tAltShipCustId.AutoSize = False
        Me.tAltShipCustId.CalcManager = Me.UltraCalcManager1
        Me.tAltShipCustId.CheckedListSettings.CheckStateMember = ""
        Me.tAltShipCustId.Location = New System.Drawing.Point(96, 37)
        Me.tAltShipCustId.Name = "tAltShipCustId"
        Me.tAltShipCustId.Size = New System.Drawing.Size(192, 25)
        Me.tAltShipCustId.TabIndex = 1
        Me.tAltShipCustId.Tag = ""
        '
        'tAltShipEmail
        '
        Me.tAltShipEmail.AutoSize = False
        Me.tAltShipEmail.Location = New System.Drawing.Point(96, 462)
        Me.tAltShipEmail.Name = "tAltShipEmail"
        Me.tAltShipEmail.Size = New System.Drawing.Size(192, 25)
        Me.tAltShipEmail.TabIndex = 16
        Me.tAltShipEmail.Tag = ""
        '
        'lAltShipEmail
        '
        Me.lAltShipEmail.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.lAltShipEmail.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lAltShipEmail.Location = New System.Drawing.Point(10, 462)
        Me.lAltShipEmail.Name = "lAltShipEmail"
        Me.lAltShipEmail.Size = New System.Drawing.Size(124, 18)
        Me.lAltShipEmail.TabIndex = 169
        Me.lAltShipEmail.Text = "Email"
        '
        'lAltShipCell
        '
        Me.lAltShipCell.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.lAltShipCell.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lAltShipCell.Location = New System.Drawing.Point(10, 434)
        Me.lAltShipCell.Name = "lAltShipCell"
        Me.lAltShipCell.Size = New System.Drawing.Size(124, 18)
        Me.lAltShipCell.TabIndex = 168
        Me.lAltShipCell.Text = "Cell Phone"
        '
        'lAltShipFax
        '
        Me.lAltShipFax.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.lAltShipFax.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lAltShipFax.Location = New System.Drawing.Point(10, 406)
        Me.lAltShipFax.Name = "lAltShipFax"
        Me.lAltShipFax.Size = New System.Drawing.Size(124, 19)
        Me.lAltShipFax.TabIndex = 167
        Me.lAltShipFax.Text = "Fax"
        '
        'lAltShipPhone2
        '
        Me.lAltShipPhone2.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.lAltShipPhone2.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lAltShipPhone2.Location = New System.Drawing.Point(10, 378)
        Me.lAltShipPhone2.Name = "lAltShipPhone2"
        Me.lAltShipPhone2.Size = New System.Drawing.Size(124, 19)
        Me.lAltShipPhone2.TabIndex = 166
        Me.lAltShipPhone2.Text = "Phone2"
        '
        'lAltShipPhone1
        '
        Me.lAltShipPhone1.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.lAltShipPhone1.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lAltShipPhone1.Location = New System.Drawing.Point(10, 9)
        Me.lAltShipPhone1.Name = "lAltShipPhone1"
        Me.lAltShipPhone1.Size = New System.Drawing.Size(124, 19)
        Me.lAltShipPhone1.TabIndex = 165
        Me.lAltShipPhone1.Text = "Phone1"
        '
        'tAltShipZip
        '
        Me.tAltShipZip.AutoSize = False
        Me.tAltShipZip.Location = New System.Drawing.Point(96, 231)
        Me.tAltShipZip.Name = "tAltShipZip"
        Me.tAltShipZip.Size = New System.Drawing.Size(192, 25)
        Me.tAltShipZip.TabIndex = 8
        Me.tAltShipZip.Tag = ""
        '
        'lAltShipZip
        '
        Me.lAltShipZip.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.lAltShipZip.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lAltShipZip.Location = New System.Drawing.Point(10, 231)
        Me.lAltShipZip.Name = "lAltShipZip"
        Me.lAltShipZip.Size = New System.Drawing.Size(124, 18)
        Me.lAltShipZip.TabIndex = 164
        Me.lAltShipZip.Text = "Zip"
        '
        'tAltShipState
        '
        Me.tAltShipState.AutoSize = False
        Me.tAltShipState.CharacterCasing = System.Windows.Forms.CharacterCasing.Upper
        Me.tAltShipState.Location = New System.Drawing.Point(96, 286)
        Me.tAltShipState.Name = "tAltShipState"
        Me.tAltShipState.Size = New System.Drawing.Size(192, 26)
        Me.tAltShipState.TabIndex = 10
        Me.tAltShipState.Tag = ""
        '
        'lAltShipState
        '
        Me.lAltShipState.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.lAltShipState.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lAltShipState.Location = New System.Drawing.Point(10, 286)
        Me.lAltShipState.Name = "lAltShipState"
        Me.lAltShipState.Size = New System.Drawing.Size(124, 19)
        Me.lAltShipState.TabIndex = 163
        Me.lAltShipState.Text = "State"
        '
        'lAltShipCity
        '
        Me.lAltShipCity.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.lAltShipCity.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lAltShipCity.Location = New System.Drawing.Point(10, 258)
        Me.lAltShipCity.Name = "lAltShipCity"
        Me.lAltShipCity.Size = New System.Drawing.Size(124, 19)
        Me.lAltShipCity.TabIndex = 162
        Me.lAltShipCity.Text = "City"
        '
        'tAltShipAddr2
        '
        Me.tAltShipAddr2.AutoSize = False
        Me.tAltShipAddr2.Location = New System.Drawing.Point(96, 175)
        Me.tAltShipAddr2.Name = "tAltShipAddr2"
        Me.tAltShipAddr2.Size = New System.Drawing.Size(192, 26)
        Me.tAltShipAddr2.TabIndex = 6
        Me.tAltShipAddr2.Tag = ""
        '
        'lAltShipAddr2
        '
        Me.lAltShipAddr2.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.lAltShipAddr2.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lAltShipAddr2.Location = New System.Drawing.Point(10, 175)
        Me.lAltShipAddr2.Name = "lAltShipAddr2"
        Me.lAltShipAddr2.Size = New System.Drawing.Size(124, 19)
        Me.lAltShipAddr2.TabIndex = 161
        Me.lAltShipAddr2.Text = "Addr2"
        '
        'tAltShipAddr1
        '
        Me.tAltShipAddr1.AutoSize = False
        Me.tAltShipAddr1.Location = New System.Drawing.Point(96, 148)
        Me.tAltShipAddr1.Name = "tAltShipAddr1"
        Me.tAltShipAddr1.Size = New System.Drawing.Size(192, 25)
        Me.tAltShipAddr1.TabIndex = 5
        Me.tAltShipAddr1.Tag = ""
        '
        'lAltShipAddr1
        '
        Me.lAltShipAddr1.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.lAltShipAddr1.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lAltShipAddr1.Location = New System.Drawing.Point(10, 148)
        Me.lAltShipAddr1.Name = "lAltShipAddr1"
        Me.lAltShipAddr1.Size = New System.Drawing.Size(124, 18)
        Me.lAltShipAddr1.TabIndex = 160
        Me.lAltShipAddr1.Text = "Addr1"
        '
        'lAltShipCountry
        '
        Me.lAltShipCountry.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.lAltShipCountry.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lAltShipCountry.Location = New System.Drawing.Point(10, 120)
        Me.lAltShipCountry.Name = "lAltShipCountry"
        Me.lAltShipCountry.Size = New System.Drawing.Size(124, 18)
        Me.lAltShipCountry.TabIndex = 159
        Me.lAltShipCountry.Text = "Country"
        '
        'tAltShipCompany
        '
        Me.tAltShipCompany.AutoSize = False
        Me.tAltShipCompany.Location = New System.Drawing.Point(96, 92)
        Me.tAltShipCompany.Name = "tAltShipCompany"
        Me.tAltShipCompany.Size = New System.Drawing.Size(192, 26)
        Me.tAltShipCompany.TabIndex = 3
        Me.tAltShipCompany.Tag = ""
        '
        'lAltShipCompany
        '
        Me.lAltShipCompany.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.lAltShipCompany.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lAltShipCompany.Location = New System.Drawing.Point(10, 92)
        Me.lAltShipCompany.Name = "lAltShipCompany"
        Me.lAltShipCompany.Size = New System.Drawing.Size(124, 19)
        Me.lAltShipCompany.TabIndex = 158
        Me.lAltShipCompany.Text = "Company"
        '
        'tAltShipName
        '
        Me.tAltShipName.AutoSize = False
        Me.tAltShipName.Location = New System.Drawing.Point(96, 65)
        Me.tAltShipName.Name = "tAltShipName"
        Me.tAltShipName.Size = New System.Drawing.Size(192, 25)
        Me.tAltShipName.TabIndex = 2
        Me.tAltShipName.Tag = ""
        '
        'lAltShipName
        '
        Me.lAltShipName.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.lAltShipName.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lAltShipName.Location = New System.Drawing.Point(10, 65)
        Me.lAltShipName.Name = "lAltShipName"
        Me.lAltShipName.Size = New System.Drawing.Size(124, 18)
        Me.lAltShipName.TabIndex = 157
        Me.lAltShipName.Text = "Name"
        '
        'lAltShipCustId
        '
        Me.lAltShipCustId.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.lAltShipCustId.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.lAltShipCustId.Location = New System.Drawing.Point(10, 37)
        Me.lAltShipCustId.Name = "lAltShipCustId"
        Me.lAltShipCustId.Size = New System.Drawing.Size(124, 18)
        Me.lAltShipCustId.TabIndex = 156
        Me.lAltShipCustId.Text = "Cust ID"
        '
        'chUseAltShip
        '
        Appearance63.FontData.BoldAsString = "True"
        Appearance63.FontData.SizeInPoints = 10.0!
        Me.chUseAltShip.Appearance = Appearance63
        Me.chUseAltShip.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.chUseAltShip.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.chUseAltShip.Enabled = False
        Me.chUseAltShip.Location = New System.Drawing.Point(115, 9)
        Me.chUseAltShip.Name = "chUseAltShip"
        Me.chUseAltShip.Size = New System.Drawing.Size(269, 19)
        Me.chUseAltShip.TabIndex = 140
        Me.chUseAltShip.Tag = "edit"
        Me.chUseAltShip.Text = "Use Alternate Shipping Address"
        '
        'Label4
        '
        Me.Label4.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.Label4.Font = New System.Drawing.Font("Microsoft Sans Serif", 12.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.Label4.Location = New System.Drawing.Point(10, 9)
        Me.Label4.Name = "Label4"
        Me.Label4.Size = New System.Drawing.Size(278, 28)
        Me.Label4.TabIndex = 129
        Me.Label4.Text = "Ship To:"
        '
        'UltraTabPageControl5
        '
        Me.UltraTabPageControl5.Controls.Add(Me.bPrintOrder)
        Me.UltraTabPageControl5.Controls.Add(Me.bAddPayment)
        Me.UltraTabPageControl5.Controls.Add(Me.UltraLabel64)
        Me.UltraTabPageControl5.Controls.Add(Me.tPayOrdTot)
        Me.UltraTabPageControl5.Controls.Add(Me.UltraLabel63)
        Me.UltraTabPageControl5.Controls.Add(Me.tPayTot)
        Me.UltraTabPageControl5.Controls.Add(Me.UltraLabel60)
        Me.UltraTabPageControl5.Controls.Add(Me.tBalance)
        Me.UltraTabPageControl5.Controls.Add(Me.PayGrid)
        Me.UltraTabPageControl5.Location = New System.Drawing.Point(-10000, -10000)
        Me.UltraTabPageControl5.Name = "UltraTabPageControl5"
        Me.UltraTabPageControl5.Size = New System.Drawing.Size(1478, 645)
        '
        'bPrintOrder
        '
        Me.bPrintOrder.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
        Me.bPrintOrder.Font = New System.Drawing.Font("Microsoft Sans Serif", 12.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.bPrintOrder.Location = New System.Drawing.Point(10, 598)
        Me.bPrintOrder.Name = "bPrintOrder"
        Me.bPrintOrder.Size = New System.Drawing.Size(211, 29)
        Me.bPrintOrder.TabIndex = 78
        Me.bPrintOrder.TabStop = False
        Me.bPrintOrder.Text = "Print Order"
        '
        'bAddPayment
        '
        Me.bAddPayment.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
        Me.bAddPayment.Font = New System.Drawing.Font("Microsoft Sans Serif", 12.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.bAddPayment.Location = New System.Drawing.Point(10, 552)
        Me.bAddPayment.Name = "bAddPayment"
        Me.bAddPayment.Size = New System.Drawing.Size(211, 29)
        Me.bAddPayment.TabIndex = 77
        Me.bAddPayment.TabStop = False
        Me.bAddPayment.Text = "Add Payment"
        '
        'UltraLabel64
        '
        Me.UltraLabel64.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel64.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel64.Font = New System.Drawing.Font("Microsoft Sans Serif", 12.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel64.Location = New System.Drawing.Point(1205, 552)
        Me.UltraLabel64.Name = "UltraLabel64"
        Me.UltraLabel64.Size = New System.Drawing.Size(116, 29)
        Me.UltraLabel64.TabIndex = 76
        Me.UltraLabel64.Text = "Order Total"
        '
        'tPayOrdTot
        '
        Me.tPayOrdTot.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tPayOrdTot.Enabled = False
        Me.tPayOrdTot.Font = New System.Drawing.Font("Microsoft Sans Serif", 9.75!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tPayOrdTot.FormatString = "$#,###,##0.00"
        Me.tPayOrdTot.Location = New System.Drawing.Point(1331, 552)
        Me.tPayOrdTot.Name = "tPayOrdTot"
        Me.tPayOrdTot.Size = New System.Drawing.Size(144, 28)
        Me.tPayOrdTot.TabIndex = 75
        Me.tPayOrdTot.TabNavigation = Infragistics.Win.UltraWinMaskedEdit.MaskedEditTabNavigation.NextControl
        Me.tPayOrdTot.Tag = ""
        '
        'UltraLabel63
        '
        Me.UltraLabel63.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel63.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel63.Font = New System.Drawing.Font("Microsoft Sans Serif", 12.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel63.Location = New System.Drawing.Point(1205, 581)
        Me.UltraLabel63.Name = "UltraLabel63"
        Me.UltraLabel63.Size = New System.Drawing.Size(116, 25)
        Me.UltraLabel63.TabIndex = 74
        Me.UltraLabel63.Text = "Payments"
        '
        'tPayTot
        '
        Me.tPayTot.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tPayTot.Enabled = False
        Me.tPayTot.Font = New System.Drawing.Font("Microsoft Sans Serif", 9.75!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tPayTot.FormatString = "$#,###,##0.00"
        Me.tPayTot.Location = New System.Drawing.Point(1331, 581)
        Me.tPayTot.Name = "tPayTot"
        Me.tPayTot.Size = New System.Drawing.Size(144, 28)
        Me.tPayTot.TabIndex = 73
        Me.tPayTot.TabNavigation = Infragistics.Win.UltraWinMaskedEdit.MaskedEditTabNavigation.NextControl
        Me.tPayTot.Tag = ""
        '
        'UltraLabel60
        '
        Me.UltraLabel60.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.UltraLabel60.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel60.Font = New System.Drawing.Font("Microsoft Sans Serif", 12.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.UltraLabel60.Location = New System.Drawing.Point(1205, 606)
        Me.UltraLabel60.Name = "UltraLabel60"
        Me.UltraLabel60.Size = New System.Drawing.Size(116, 29)
        Me.UltraLabel60.TabIndex = 72
        Me.UltraLabel60.Text = "Balance"
        '
        'tBalance
        '
        Me.tBalance.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.tBalance.Enabled = False
        Me.tBalance.Font = New System.Drawing.Font("Microsoft Sans Serif", 9.75!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.tBalance.FormatString = "$#,###,##0.00"
        Me.tBalance.Location = New System.Drawing.Point(1331, 606)
        Me.tBalance.Name = "tBalance"
        Me.tBalance.Size = New System.Drawing.Size(144, 28)
        Me.tBalance.TabIndex = 71
        Me.tBalance.TabNavigation = Infragistics.Win.UltraWinMaskedEdit.MaskedEditTabNavigation.NextControl
        Me.tBalance.Tag = ""
        '
        'PayGrid
        '
        Me.PayGrid.Anchor = CType((((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom) _
            Or System.Windows.Forms.AnchorStyles.Left) _
            Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
        Me.PayGrid.CalcManager = Me.UltraCalcManager1
        Appearance64.BackColor = System.Drawing.Color.Green
        Appearance64.BackColor2 = System.Drawing.Color.MediumSpringGreen
        Appearance64.BackGradientStyle = Infragistics.Win.GradientStyle.BackwardDiagonal
        Me.PayGrid.DisplayLayout.Appearance = Appearance64
        Me.PayGrid.DisplayLayout.AutoFitStyle = Infragistics.Win.UltraWinGrid.AutoFitStyle.ResizeAllColumns
        UltraGridColumn93.Header.Caption = "Payment Number"
        UltraGridColumn93.Header.VisiblePosition = 0
        UltraGridColumn93.MinWidth = 100
        UltraGridColumn93.Style = Infragistics.Win.UltraWinGrid.ColumnStyle.EditButton
        UltraGridColumn93.Width = 164
        UltraGridColumn94.Header.VisiblePosition = 1
        UltraGridColumn94.Hidden = True
        UltraGridColumn94.Width = 104
        UltraGridColumn95.Header.Caption = "Date"
        UltraGridColumn95.Header.VisiblePosition = 2
        UltraGridColumn95.MinWidth = 100
        UltraGridColumn95.Width = 181
        UltraGridColumn96.Header.Caption = "Applied"
        UltraGridColumn96.Header.VisiblePosition = 3
        UltraGridColumn96.Width = 138
        UltraGridColumn97.Header.Caption = "Method"
        UltraGridColumn97.Header.VisiblePosition = 4
        UltraGridColumn97.MinWidth = 100
        UltraGridColumn97.Width = 176
        Appearance65.TextHAlignAsString = "Right"
        UltraGridColumn98.CellAppearance = Appearance65
        UltraGridColumn98.Format = "$###,###,###.00"
        Appearance66.TextHAlignAsString = "Right"
        UltraGridColumn98.Header.Appearance = Appearance66
        UltraGridColumn98.Header.Caption = "Amount"
        UltraGridColumn98.Header.VisiblePosition = 9
        UltraGridColumn98.MinWidth = 100
        UltraGridColumn98.Width = 167
        UltraGridColumn99.Header.Caption = "Number"
        UltraGridColumn99.Header.VisiblePosition = 5
        UltraGridColumn99.MinWidth = 100
        UltraGridColumn99.Width = 171
        UltraGridColumn100.Header.Caption = "Sec Cd"
        UltraGridColumn100.Header.VisiblePosition = 7
        UltraGridColumn100.Width = 129
        UltraGridColumn101.Header.Caption = "Expiration"
        UltraGridColumn101.Header.VisiblePosition = 8
        UltraGridColumn101.MinWidth = 100
        UltraGridColumn101.Width = 171
        UltraGridColumn102.Header.Caption = "Auth"
        UltraGridColumn102.Header.VisiblePosition = 6
        UltraGridColumn102.MinWidth = 100
        UltraGridColumn102.Width = 176
        UltraGridBand6.Columns.AddRange(New Object() {UltraGridColumn93, UltraGridColumn94, UltraGridColumn95, UltraGridColumn96, UltraGridColumn97, UltraGridColumn98, UltraGridColumn99, UltraGridColumn100, UltraGridColumn101, UltraGridColumn102})
        Me.PayGrid.DisplayLayout.BandsSerializer.Add(UltraGridBand6)
        Me.PayGrid.DisplayLayout.InterBandSpacing = 10
        Me.PayGrid.DisplayLayout.Override.BorderStyleCell = Infragistics.Win.UIElementBorderStyle.None
        Me.PayGrid.DisplayLayout.Override.BorderStyleHeader = Infragistics.Win.UIElementBorderStyle.Solid
        Appearance67.BackColor = System.Drawing.Color.Transparent
        Me.PayGrid.DisplayLayout.Override.CardAreaAppearance = Appearance67
        Appearance68.BackColor = System.Drawing.Color.MediumSpringGreen
        Appearance68.BackColor2 = System.Drawing.Color.Green
        Appearance68.BackGradientAlignment = Infragistics.Win.GradientAlignment.Client
        Appearance68.BackGradientStyle = Infragistics.Win.GradientStyle.None
        Me.PayGrid.DisplayLayout.Override.CellAppearance = Appearance68
        Me.PayGrid.DisplayLayout.Override.CellSpacing = 2
        Appearance69.BackColor = System.Drawing.Color.PaleGreen
        Appearance69.FontData.BoldAsString = "True"
        Appearance69.FontData.Name = "Verdana"
        Appearance69.ForeColor = System.Drawing.Color.Navy
        Appearance69.TextHAlignAsString = "Left"
        Appearance69.ThemedElementAlpha = Infragistics.Win.Alpha.Transparent
        Me.PayGrid.DisplayLayout.Override.HeaderAppearance = Appearance69
        Appearance70.BackColor = System.Drawing.Color.Transparent
        Me.PayGrid.DisplayLayout.Override.RowAppearance = Appearance70
        Appearance71.BackColor = System.Drawing.Color.Green
        Me.PayGrid.DisplayLayout.Override.RowSelectorAppearance = Appearance71
        Me.PayGrid.DisplayLayout.Override.RowSelectorWidth = 10
        Me.PayGrid.DisplayLayout.Override.RowSpacingAfter = 0
        Me.PayGrid.DisplayLayout.Override.RowSpacingBefore = 0
        Appearance72.BackColor = System.Drawing.Color.Green
        Appearance72.BackColor2 = System.Drawing.Color.MediumSpringGreen
        Appearance72.BackGradientStyle = Infragistics.Win.GradientStyle.VerticalBump
        Me.PayGrid.DisplayLayout.Override.SelectedRowAppearance = Appearance72
        Me.PayGrid.DisplayLayout.RowConnectorStyle = Infragistics.Win.UltraWinGrid.RowConnectorStyle.None
        Me.PayGrid.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.PayGrid.Location = New System.Drawing.Point(-4, 0)
        Me.PayGrid.Name = "PayGrid"
        Me.PayGrid.Size = New System.Drawing.Size(1485, 546)
        Me.PayGrid.TabIndex = 0
        '
        'UltraTabPageControl6
        '
        Me.UltraTabPageControl6.Controls.Add(Me.UltraButton13)
        Me.UltraTabPageControl6.Controls.Add(Me.tTrackBoxes)
        Me.UltraTabPageControl6.Controls.Add(Me.bAddShipment)
        Me.UltraTabPageControl6.Controls.Add(Me.UltraLabel62)
        Me.UltraTabPageControl6.Controls.Add(Me.tShipTot)
        Me.UltraTabPageControl6.Controls.Add(Me.ShipGrid)
        Me.UltraTabPageControl6.Location = New System.Drawing.Point(-10000, -10000)
        Me.UltraTabPageControl6.Name = "UltraTabPageControl6"
        Me.UltraTabPageControl6.Size = New System.Drawing.Size(1478, 645)
        '
        'UltraButton13
        '
        Me.UltraButton13.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left),System.Windows.Forms.AnchorStyles)
        Me.UltraButton13.Font = New System.Drawing.Font("Microsoft Sans Serif", 10!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraButton13.Location = New System.Drawing.Point(262, 608)
        Me.UltraButton13.Name = "UltraButton13"
        Me.UltraButton13.Size = New System.Drawing.Size(187, 28)
        Me.UltraButton13.TabIndex = 77
        Me.UltraButton13.Text = "Update FedEx Status"
        '
        'tTrackBoxes
        '
        Me.tTrackBoxes.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tTrackBoxes.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.tTrackBoxes.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tTrackBoxes.Location = New System.Drawing.Point(725, 606)
        Me.tTrackBoxes.Name = "tTrackBoxes"
        Me.tTrackBoxes.Size = New System.Drawing.Size(201, 29)
        Me.tTrackBoxes.TabIndex = 76
        Me.tTrackBoxes.Text = "0 Boxes"
        '
        'bAddShipment
        '
        Me.bAddShipment.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left),System.Windows.Forms.AnchorStyles)
        Me.bAddShipment.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.bAddShipment.Location = New System.Drawing.Point(10, 606)
        Me.bAddShipment.Name = "bAddShipment"
        Me.bAddShipment.Size = New System.Drawing.Size(211, 29)
        Me.bAddShipment.TabIndex = 75
        Me.bAddShipment.Text = "Add Shipment"
        '
        'UltraLabel62
        '
        Me.UltraLabel62.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.UltraLabel62.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel62.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel62.Location = New System.Drawing.Point(1070, 606)
        Me.UltraLabel62.Name = "UltraLabel62"
        Me.UltraLabel62.Size = New System.Drawing.Size(203, 29)
        Me.UltraLabel62.TabIndex = 74
        Me.UltraLabel62.Text = "Shipping Total Cost"
        '
        'tShipTot
        '
        Me.tShipTot.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Appearance73.TextHAlignAsString = "Right"
        Me.tShipTot.Appearance = Appearance73
        Me.tShipTot.Location = New System.Drawing.Point(1291, 606)
        Me.tShipTot.Name = "tShipTot"
        Me.tShipTot.Size = New System.Drawing.Size(184, 28)
        Me.tShipTot.TabIndex = 73
        '
        'ShipGrid
        '
        Me.ShipGrid.Anchor = CType((((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom)  _
            Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.ShipGrid.CalcManager = Me.UltraCalcManager1
        Appearance25.BackColor = System.Drawing.Color.DarkGoldenrod
        Appearance25.BackColor2 = System.Drawing.Color.Khaki
        Appearance25.BackGradientStyle = Infragistics.Win.GradientStyle.BackwardDiagonal
        Me.ShipGrid.DisplayLayout.Appearance = Appearance25
        Me.ShipGrid.DisplayLayout.AutoFitStyle = Infragistics.Win.UltraWinGrid.AutoFitStyle.ResizeAllColumns
        UltraGridColumn103.Header.Caption = "Date"
        UltraGridColumn103.Header.VisiblePosition = 1
        UltraGridColumn103.MaxWidth = 80
        UltraGridColumn103.MinWidth = 80
        UltraGridColumn103.Width = 80
        UltraGridColumn104.Header.Caption = "Ship Via"
        UltraGridColumn104.Header.VisiblePosition = 2
        UltraGridColumn104.Width = 92
        UltraGridColumn105.Header.Caption = "Tracking"
        UltraGridColumn105.Header.VisiblePosition = 3
        UltraGridColumn105.Style = Infragistics.Win.UltraWinGrid.ColumnStyle.EditButton
        UltraGridColumn105.Width = 160
        UltraGridColumn106.Header.Caption = "Status"
        UltraGridColumn106.Header.VisiblePosition = 4
        UltraGridColumn106.Width = 82
        UltraGridColumn107.Header.Caption = "Status Date"
        UltraGridColumn107.Header.VisiblePosition = 5
        UltraGridColumn107.Width = 105
        UltraGridColumn108.Header.Caption = "Signature"
        UltraGridColumn108.Header.VisiblePosition = 6
        UltraGridColumn108.Width = 109
        UltraGridColumn109.Header.Caption = "Boxes"
        UltraGridColumn109.Header.VisiblePosition = 7
        UltraGridColumn109.MaxWidth = 75
        UltraGridColumn109.MinWidth = 50
        UltraGridColumn109.Width = 74
        UltraGridColumn110.CellMultiLine = Infragistics.Win.DefaultableBoolean.[True]
        UltraGridColumn110.Header.Caption = "Notes"
        UltraGridColumn110.Header.VisiblePosition = 8
        UltraGridColumn110.MinWidth = 100
        UltraGridColumn110.Width = 330
        UltraGridColumn111.Format = "$###,##0.00"
        UltraGridColumn111.Header.Caption = "Cost"
        UltraGridColumn111.Header.VisiblePosition = 9
        UltraGridColumn111.MaxWidth = 100
        UltraGridColumn111.MinWidth = 50
        UltraGridColumn111.Width = 71
        UltraGridColumn112.Format = "$###,##0.00"
        UltraGridColumn112.Header.Caption = "Declared"
        UltraGridColumn112.Header.VisiblePosition = 10
        UltraGridColumn112.MaxLength = 50
        UltraGridColumn112.MaxWidth = 100
        UltraGridColumn112.MinWidth = 50
        UltraGridColumn112.ProportionalResize = true
        UltraGridColumn112.Width = 100
        UltraGridColumn113.Header.VisiblePosition = 11
        UltraGridColumn114.Header.Caption = ""
        UltraGridColumn114.Header.VisiblePosition = 0
        UltraGridColumn114.MaxWidth = 25
        UltraGridColumn114.MinWidth = 25
        UltraGridColumn114.Style = Infragistics.Win.UltraWinGrid.ColumnStyle.Button
        UltraGridColumn114.Width = 25
        UltraGridBand7.Columns.AddRange(New Object() {UltraGridColumn103, UltraGridColumn104, UltraGridColumn105, UltraGridColumn106, UltraGridColumn107, UltraGridColumn108, UltraGridColumn109, UltraGridColumn110, UltraGridColumn111, UltraGridColumn112, UltraGridColumn113, UltraGridColumn114})
        UltraGridBand7.GroupHeadersVisible = false
        UltraGridBand8.ColHeadersVisible = false
        UltraGridColumn115.Header.VisiblePosition = 0
        UltraGridColumn115.Hidden = true
        UltraGridColumn115.HiddenWhenGroupBy = Infragistics.Win.DefaultableBoolean.[True]
        UltraGridColumn115.Width = 56
        UltraGridColumn116.Header.VisiblePosition = 2
        UltraGridColumn116.Hidden = true
        UltraGridColumn116.HiddenWhenGroupBy = Infragistics.Win.DefaultableBoolean.[True]
        UltraGridColumn116.Width = 72
        UltraGridColumn117.Header.VisiblePosition = 3
        UltraGridColumn117.Hidden = true
        UltraGridColumn117.HiddenWhenGroupBy = Infragistics.Win.DefaultableBoolean.[True]
        UltraGridColumn117.Width = 76
        UltraGridColumn118.Header.VisiblePosition = 4
        UltraGridColumn118.Hidden = true
        UltraGridColumn118.HiddenWhenGroupBy = Infragistics.Win.DefaultableBoolean.[True]
        UltraGridColumn118.Width = 75
        UltraGridColumn119.Header.VisiblePosition = 5
        UltraGridColumn119.Hidden = true
        UltraGridColumn119.HiddenWhenGroupBy = Infragistics.Win.DefaultableBoolean.[True]
        UltraGridColumn119.Width = 103
        UltraGridColumn120.Header.Caption = "Item Code"
        UltraGridColumn120.Header.VisiblePosition = 1
        UltraGridColumn120.Width = 123
        UltraGridColumn121.Header.Caption = "Description"
        UltraGridColumn121.Header.VisiblePosition = 6
        UltraGridColumn121.Width = 678
        UltraGridColumn122.Header.Caption = "Qty"
        UltraGridColumn122.Header.VisiblePosition = 7
        UltraGridColumn122.Width = 149
        UltraGridBand8.Columns.AddRange(New Object() {UltraGridColumn115, UltraGridColumn116, UltraGridColumn117, UltraGridColumn118, UltraGridColumn119, UltraGridColumn120, UltraGridColumn121, UltraGridColumn122})
        UltraGridBand8.GroupHeadersVisible = false
        Appearance26.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Appearance26.FontData.SizeInPoints = 8!
        UltraGridBand8.Override.CellAppearance = Appearance26
        UltraGridBand8.RowLayoutStyle = Infragistics.Win.UltraWinGrid.RowLayoutStyle.ColumnLayout
        Me.ShipGrid.DisplayLayout.BandsSerializer.Add(UltraGridBand7)
        Me.ShipGrid.DisplayLayout.BandsSerializer.Add(UltraGridBand8)
        Me.ShipGrid.DisplayLayout.InterBandSpacing = 0
        Me.ShipGrid.DisplayLayout.Override.BorderStyleCell = Infragistics.Win.UIElementBorderStyle.None
        Me.ShipGrid.DisplayLayout.Override.BorderStyleHeader = Infragistics.Win.UIElementBorderStyle.Solid
        Appearance27.BackColor = System.Drawing.Color.Transparent
        Me.ShipGrid.DisplayLayout.Override.CardAreaAppearance = Appearance27
        Appearance28.BackColor = System.Drawing.Color.PaleGoldenrod
        Appearance28.BackGradientStyle = Infragistics.Win.GradientStyle.None
        Me.ShipGrid.DisplayLayout.Override.CellAppearance = Appearance28
        Me.ShipGrid.DisplayLayout.Override.CellSpacing = 2
        Appearance29.BackColor = System.Drawing.Color.Goldenrod
        Appearance29.FontData.BoldAsString = "True"
        Appearance29.FontData.Name = "Verdana"
        Appearance29.ForeColor = System.Drawing.Color.Black
        Appearance29.TextHAlignAsString = "Left"
        Appearance29.ThemedElementAlpha = Infragistics.Win.Alpha.Transparent
        Me.ShipGrid.DisplayLayout.Override.HeaderAppearance = Appearance29
        Me.ShipGrid.DisplayLayout.Override.HeaderClickAction = Infragistics.Win.UltraWinGrid.HeaderClickAction.SortMulti
        Appearance30.BackColor = System.Drawing.Color.Transparent
        Me.ShipGrid.DisplayLayout.Override.RowAppearance = Appearance30
        Appearance31.BackColor = System.Drawing.Color.Goldenrod
        Me.ShipGrid.DisplayLayout.Override.RowSelectorAppearance = Appearance31
        Me.ShipGrid.DisplayLayout.Override.RowSelectorWidth = 10
        Me.ShipGrid.DisplayLayout.Override.RowSpacingAfter = 0
        Me.ShipGrid.DisplayLayout.Override.RowSpacingBefore = 0
        Appearance32.BackColor = System.Drawing.Color.DarkGoldenrod
        Appearance32.BackColor2 = System.Drawing.Color.PaleGoldenrod
        Appearance32.BackGradientStyle = Infragistics.Win.GradientStyle.VerticalBump
        Me.ShipGrid.DisplayLayout.Override.SelectedRowAppearance = Appearance32
        Me.ShipGrid.DisplayLayout.RowConnectorStyle = Infragistics.Win.UltraWinGrid.RowConnectorStyle.None
        Me.ShipGrid.DisplayLayout.ScrollBounds = Infragistics.Win.UltraWinGrid.ScrollBounds.ScrollToFill
        Me.ShipGrid.DisplayLayout.ScrollStyle = Infragistics.Win.UltraWinGrid.ScrollStyle.Immediate
        Me.ShipGrid.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.ShipGrid.Location = New System.Drawing.Point(10, 18)
        Me.ShipGrid.Name = "ShipGrid"
        Me.ShipGrid.Size = New System.Drawing.Size(1465, 583)
        Me.ShipGrid.TabIndex = 72
        '
        'UltraTabPageControl7
        '
        Me.UltraTabPageControl7.Controls.Add(Me.tabNotes)
        Me.UltraTabPageControl7.Controls.Add(Me.pOrdMod)
        Me.UltraTabPageControl7.Controls.Add(Me.bNotesShowAll)
        Me.UltraTabPageControl7.Controls.Add(Me.bAddNote)
        Me.UltraTabPageControl7.Controls.Add(Me.tNote)
        Me.UltraTabPageControl7.Location = New System.Drawing.Point(-10000, -10000)
        Me.UltraTabPageControl7.Name = "UltraTabPageControl7"
        Me.UltraTabPageControl7.Size = New System.Drawing.Size(1478, 645)
        '
        'tabNotes
        '
        Me.tabNotes.Anchor = CType((((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom)  _
            Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Appearance113.BackColor = System.Drawing.Color.PaleGoldenrod
        Me.tabNotes.ClientAreaAppearance = Appearance113
        Me.tabNotes.Controls.Add(Me.UltraTabSharedControlsPage5)
        Me.tabNotes.Controls.Add(Me.UltraTabPageControl20)
        Me.tabNotes.Controls.Add(Me.UltraTabPageControl21)
        Me.tabNotes.Controls.Add(Me.UltraTabPageControl23)
        Me.tabNotes.Location = New System.Drawing.Point(4, 89)
        Me.tabNotes.Name = "tabNotes"
        Me.tabNotes.SharedControlsPage = Me.UltraTabSharedControlsPage5
        Me.tabNotes.Size = New System.Drawing.Size(1473, 561)
        Me.tabNotes.TabIndex = 7
        UltraTab22.Key = "Notes"
        UltraTab22.TabPage = Me.UltraTabPageControl20
        UltraTab22.Text = "Notes"
        UltraTab23.Key = "Emails"
        UltraTab23.TabPage = Me.UltraTabPageControl21
        UltraTab23.Text = "Emails Sent"
        UltraTab25.Key = "Design"
        UltraTab25.TabPage = Me.UltraTabPageControl23
        UltraTab25.Text = "Design Notes"
        Me.tabNotes.Tabs.AddRange(New Infragistics.Win.UltraWinTabControl.UltraTab() {UltraTab22, UltraTab23, UltraTab25})
        Me.tabNotes.UseOsThemes = Infragistics.Win.DefaultableBoolean.[False]
        '
        'UltraTabSharedControlsPage5
        '
        Me.UltraTabSharedControlsPage5.Location = New System.Drawing.Point(-10000, -10000)
        Me.UltraTabSharedControlsPage5.Name = "UltraTabSharedControlsPage5"
        Me.UltraTabSharedControlsPage5.Size = New System.Drawing.Size(1469, 530)
        '
        'pOrdMod
        '
        Me.pOrdMod.BackColor = System.Drawing.Color.Yellow
        Me.pOrdMod.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
        Me.pOrdMod.Controls.Add(Me.bAddOrdMod)
        Me.pOrdMod.ForeColor = System.Drawing.Color.IndianRed
        Me.pOrdMod.Location = New System.Drawing.Point(152, 5)
        Me.pOrdMod.Name = "pOrdMod"
        Me.pOrdMod.Size = New System.Drawing.Size(262, 45)
        Me.pOrdMod.TabIndex = 5
        '
        'bAddOrdMod
        '
        Me.bAddOrdMod.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.bAddOrdMod.Location = New System.Drawing.Point(8, 6)
        Me.bAddOrdMod.Name = "bAddOrdMod"
        Me.bAddOrdMod.Size = New System.Drawing.Size(242, 33)
        Me.bAddOrdMod.TabIndex = 5
        Me.bAddOrdMod.Text = "Add Order Modification"
        '
        'bNotesShowAll
        '
        Me.bNotesShowAll.Font = New System.Drawing.Font("Microsoft Sans Serif", 10!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.bNotesShowAll.Location = New System.Drawing.Point(8, 55)
        Me.bNotesShowAll.Name = "bNotesShowAll"
        Me.bNotesShowAll.Size = New System.Drawing.Size(231, 28)
        Me.bNotesShowAll.TabIndex = 3
        Me.bNotesShowAll.Text = "Show This Rev Only"
        '
        'bAddNote
        '
        Me.bAddNote.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.bAddNote.Location = New System.Drawing.Point(10, 9)
        Me.bAddNote.Name = "bAddNote"
        Me.bAddNote.Size = New System.Drawing.Size(133, 37)
        Me.bAddNote.TabIndex = 2
        Me.bAddNote.Text = "Add Note"
        '
        'tNote
        '
        Me.tNote.AcceptsReturn = true
        Me.tNote.AcceptsTab = true
        Me.tNote.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tNote.Location = New System.Drawing.Point(422, 9)
        Me.tNote.Multiline = true
        Me.tNote.Name = "tNote"
        Me.tNote.Size = New System.Drawing.Size(789, 74)
        Me.tNote.TabIndex = 1
        Me.tNote.Visible = false
        '
        'UltraTabPageControl8
        '
        Me.UltraTabPageControl8.Controls.Add(Me.bDocDDP)
        Me.UltraTabPageControl8.Controls.Add(Me.bDocPrint)
        Me.UltraTabPageControl8.Controls.Add(Me.Button1)
        Me.UltraTabPageControl8.Controls.Add(Me.bDocList)
        Me.UltraTabPageControl8.Controls.Add(Me.UltraButton5)
        Me.UltraTabPageControl8.Controls.Add(Me.bOpenPdf)
        Me.UltraTabPageControl8.Controls.Add(Me.UltraButton2)
        Me.UltraTabPageControl8.Controls.Add(Me.ListPDF)
        Me.UltraTabPageControl8.Location = New System.Drawing.Point(-10000, -10000)
        Me.UltraTabPageControl8.Name = "UltraTabPageControl8"
        Me.UltraTabPageControl8.Size = New System.Drawing.Size(1478, 645)
        '
        'bDocDDP
        '
        Me.bDocDDP.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left),System.Windows.Forms.AnchorStyles)
        Me.bDocDDP.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.bDocDDP.Location = New System.Drawing.Point(922, 584)
        Me.bDocDDP.Name = "bDocDDP"
        Me.bDocDDP.Size = New System.Drawing.Size(259, 37)
        Me.bDocDDP.TabIndex = 9
        Me.bDocDDP.Text = "DDP Combine-O-Mater"
        '
        'bDocPrint
        '
        Me.bDocPrint.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left),System.Windows.Forms.AnchorStyles)
        Me.bDocPrint.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.bDocPrint.Location = New System.Drawing.Point(740, 584)
        Me.bDocPrint.Name = "bDocPrint"
        Me.bDocPrint.Size = New System.Drawing.Size(180, 37)
        Me.bDocPrint.TabIndex = 7
        Me.bDocPrint.Text = "Print"
        '
        'Button1
        '
        Me.Button1.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left),System.Windows.Forms.AnchorStyles)
        Me.Button1.Location = New System.Drawing.Point(826, 491)
        Me.Button1.Name = "Button1"
        Me.Button1.Size = New System.Drawing.Size(172, 38)
        Me.Button1.TabIndex = 6
        Me.Button1.Text = "Rename Dir"
        Me.Button1.Visible = false
        '
        'bDocList
        '
        Me.bDocList.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left),System.Windows.Forms.AnchorStyles)
        Me.bDocList.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.bDocList.Location = New System.Drawing.Point(557, 584)
        Me.bDocList.Name = "bDocList"
        Me.bDocList.Size = New System.Drawing.Size(180, 37)
        Me.bDocList.TabIndex = 5
        Me.bDocList.Text = "List All Revs"
        '
        'UltraButton5
        '
        Me.UltraButton5.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left),System.Windows.Forms.AnchorStyles)
        Me.UltraButton5.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraButton5.Location = New System.Drawing.Point(374, 584)
        Me.UltraButton5.Name = "UltraButton5"
        Me.UltraButton5.Size = New System.Drawing.Size(180, 37)
        Me.UltraButton5.TabIndex = 4
        Me.UltraButton5.Text = "Show Directory"
        '
        'bOpenPdf
        '
        Me.bOpenPdf.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left),System.Windows.Forms.AnchorStyles)
        Me.bOpenPdf.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.bOpenPdf.Location = New System.Drawing.Point(192, 584)
        Me.bOpenPdf.Name = "bOpenPdf"
        Me.bOpenPdf.Size = New System.Drawing.Size(180, 37)
        Me.bOpenPdf.TabIndex = 3
        Me.bOpenPdf.Text = "Open"
        '
        'UltraButton2
        '
        Me.UltraButton2.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left),System.Windows.Forms.AnchorStyles)
        Me.UltraButton2.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraButton2.Location = New System.Drawing.Point(10, 584)
        Me.UltraButton2.Name = "UltraButton2"
        Me.UltraButton2.Size = New System.Drawing.Size(180, 37)
        Me.UltraButton2.TabIndex = 2
        Me.UltraButton2.Text = "eMail"
        '
        'ListPDF
        '
        Me.ListPDF.Anchor = CType((((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom)  _
            Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.ListPDF.Font = New System.Drawing.Font("Microsoft Sans Serif", 9.75!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.ListPDF.ItemHeight = 20
        Me.ListPDF.Location = New System.Drawing.Point(10, 9)
        Me.ListPDF.Name = "ListPDF"
        Me.ListPDF.SelectionMode = System.Windows.Forms.SelectionMode.MultiExtended
        Me.ListPDF.Size = New System.Drawing.Size(1455, 404)
        Me.ListPDF.TabIndex = 0
        '
        'UltraTabPageControl1
        '
        Me.UltraTabPageControl1.Controls.Add(Me.tForecastNote)
        Me.UltraTabPageControl1.Controls.Add(Me.tForecastPerc)
        Me.UltraTabPageControl1.Controls.Add(Me.tForecastDate)
        Me.UltraTabPageControl1.Controls.Add(Me.tLostDate)
        Me.UltraTabPageControl1.Controls.Add(Me.tLostReason)
        Me.UltraTabPageControl1.Controls.Add(Me.tForecast)
        Me.UltraTabPageControl1.Controls.Add(Me.UltraLabel2)
        Me.UltraTabPageControl1.Controls.Add(Me.UltraLabel98)
        Me.UltraTabPageControl1.Controls.Add(Me.UltraMonthViewMulti1)
        Me.UltraTabPageControl1.Controls.Add(Me.UltraLabel68)
        Me.UltraTabPageControl1.Controls.Add(Me.UltraLabel67)
        Me.UltraTabPageControl1.Controls.Add(Me.lLostReason)
        Me.UltraTabPageControl1.Controls.Add(Me.UltraLabel50)
        Me.UltraTabPageControl1.Location = New System.Drawing.Point(-10000, -10000)
        Me.UltraTabPageControl1.Name = "UltraTabPageControl1"
        Me.UltraTabPageControl1.Size = New System.Drawing.Size(1478, 645)
        '
        'tForecastNote
        '
        Me.tForecastNote.AcceptsReturn = true
        Me.tForecastNote.Enabled = false
        Me.tForecastNote.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tForecastNote.Location = New System.Drawing.Point(91, 148)
        Me.tForecastNote.Multiline = true
        Me.tForecastNote.Name = "tForecastNote"
        Me.tForecastNote.Scrollbars = System.Windows.Forms.ScrollBars.Vertical
        Me.tForecastNote.Size = New System.Drawing.Size(493, 510)
        Me.tForecastNote.TabIndex = 93
        Me.tForecastNote.Tag = "edit"
        '
        'tForecastPerc
        '
        Me.tForecastPerc.Enabled = false
        Me.tForecastPerc.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tForecastPerc.Location = New System.Drawing.Point(440, 62)
        Me.tForecastPerc.Name = "tForecastPerc"
        Me.tForecastPerc.Size = New System.Drawing.Size(144, 24)
        Me.tForecastPerc.TabIndex = 98
        Me.tForecastPerc.Tag = "Edit"
        '
        'tForecastDate
        '
        Me.tForecastDate.DateTime = New Date(2008, 10, 31, 0, 0, 0, 0)
        Me.tForecastDate.DropDownButtonDisplayStyle = Infragistics.Win.ButtonDisplayStyle.Never
        Me.tForecastDate.Enabled = false
        Me.tForecastDate.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tForecastDate.Location = New System.Drawing.Point(440, 14)
        Me.tForecastDate.Name = "tForecastDate"
        Me.tForecastDate.Size = New System.Drawing.Size(144, 24)
        Me.tForecastDate.TabIndex = 89
        Me.tForecastDate.Tag = "Edit"
        Me.tForecastDate.Value = New Date(2008, 10, 31, 0, 0, 0, 0)
        '
        'tLostDate
        '
        Me.tLostDate.DateTime = New Date(2008, 10, 31, 0, 0, 0, 0)
        Me.tLostDate.DropDownButtonDisplayStyle = Infragistics.Win.ButtonDisplayStyle.Never
        Me.tLostDate.Enabled = false
        Me.tLostDate.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tLostDate.Location = New System.Drawing.Point(91, 92)
        Me.tLostDate.Name = "tLostDate"
        Me.tLostDate.Size = New System.Drawing.Size(144, 24)
        Me.tLostDate.TabIndex = 96
        Me.tLostDate.Tag = "Edit"
        Me.tLostDate.Value = New Date(2008, 10, 31, 0, 0, 0, 0)
        '
        'tLostReason
        '
        Me.tLostReason.CalcManager = Me.UltraCalcManager1
        Me.tLostReason.CheckedListSettings.CheckStateMember = ""
        Me.tLostReason.DropDownStyle = Infragistics.Win.UltraWinGrid.UltraComboStyle.DropDownList
        Me.tLostReason.Enabled = false
        Me.tLostReason.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tLostReason.Location = New System.Drawing.Point(91, 55)
        Me.tLostReason.Name = "tLostReason"
        Me.tLostReason.Size = New System.Drawing.Size(221, 25)
        Me.tLostReason.TabIndex = 86
        Me.tLostReason.Tag = "Edit"
        '
        'tForecast
        '
        Me.tForecast.CalcManager = Me.UltraCalcManager1
        Me.tForecast.CheckedListSettings.CheckStateMember = ""
        Me.tForecast.DropDownStyle = Infragistics.Win.UltraWinGrid.UltraComboStyle.DropDownList
        Me.tForecast.Enabled = false
        Me.tForecast.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tForecast.Location = New System.Drawing.Point(91, 18)
        Me.tForecast.Name = "tForecast"
        Me.tForecast.Size = New System.Drawing.Size(221, 25)
        Me.tForecast.TabIndex = 0
        Me.tForecast.Tag = "Edit"
        '
        'UltraLabel2
        '
        Appearance82.ForeColor = System.Drawing.Color.Black
        Me.UltraLabel2.Appearance = Appearance82
        Me.UltraLabel2.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel2.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel2.Location = New System.Drawing.Point(326, 67)
        Me.UltraLabel2.Name = "UltraLabel2"
        Me.UltraLabel2.Size = New System.Drawing.Size(144, 28)
        Me.UltraLabel2.TabIndex = 99
        Me.UltraLabel2.Text = "Forecast Percent"
        '
        'UltraLabel98
        '
        Appearance83.ForeColor = System.Drawing.Color.Black
        Me.UltraLabel98.Appearance = Appearance83
        Me.UltraLabel98.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel98.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel98.Location = New System.Drawing.Point(10, 92)
        Me.UltraLabel98.Name = "UltraLabel98"
        Me.UltraLabel98.Size = New System.Drawing.Size(115, 28)
        Me.UltraLabel98.TabIndex = 97
        Me.UltraLabel98.Text = "Lost Date"
        '
        'UltraMonthViewMulti1
        '
        Me.UltraMonthViewMulti1.Anchor = CType((((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom)  _
            Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Appearance5.FontData.SizeInPoints = 8!
        Me.UltraMonthViewMulti1.Appearance = Appearance5
        Me.UltraMonthViewMulti1.Enabled = false
        Me.UltraMonthViewMulti1.Location = New System.Drawing.Point(592, 147)
        Me.UltraMonthViewMulti1.Name = "UltraMonthViewMulti1"
        Me.UltraMonthViewMulti1.Size = New System.Drawing.Size(178, 156)
        Me.UltraMonthViewMulti1.TabIndex = 95
        Me.UltraMonthViewMulti1.Tag = "edit"
        '
        'UltraLabel68
        '
        Appearance84.ForeColor = System.Drawing.Color.Black
        Me.UltraLabel68.Appearance = Appearance84
        Me.UltraLabel68.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel68.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel68.Location = New System.Drawing.Point(10, 148)
        Me.UltraLabel68.Name = "UltraLabel68"
        Me.UltraLabel68.Size = New System.Drawing.Size(115, 27)
        Me.UltraLabel68.TabIndex = 94
        Me.UltraLabel68.Text = "Notes"
        '
        'UltraLabel67
        '
        Appearance85.ForeColor = System.Drawing.Color.Black
        Me.UltraLabel67.Appearance = Appearance85
        Me.UltraLabel67.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel67.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel67.Location = New System.Drawing.Point(329, 18)
        Me.UltraLabel67.Name = "UltraLabel67"
        Me.UltraLabel67.Size = New System.Drawing.Size(144, 28)
        Me.UltraLabel67.TabIndex = 88
        Me.UltraLabel67.Text = "Forecasted Date"
        '
        'lLostReason
        '
        Appearance86.ForeColor = System.Drawing.Color.Black
        Me.lLostReason.Appearance = Appearance86
        Me.lLostReason.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.lLostReason.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.lLostReason.Location = New System.Drawing.Point(10, 55)
        Me.lLostReason.Name = "lLostReason"
        Me.lLostReason.Size = New System.Drawing.Size(115, 28)
        Me.lLostReason.TabIndex = 87
        Me.lLostReason.Text = "Lost Reason"
        '
        'UltraLabel50
        '
        Appearance154.ForeColor = System.Drawing.Color.Black
        Me.UltraLabel50.Appearance = Appearance154
        Me.UltraLabel50.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel50.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel50.Location = New System.Drawing.Point(10, 18)
        Me.UltraLabel50.Name = "UltraLabel50"
        Me.UltraLabel50.Size = New System.Drawing.Size(67, 28)
        Me.UltraLabel50.TabIndex = 85
        Me.UltraLabel50.Text = "Forecast"
        '
        'UltraTabPageControl12
        '
        Me.UltraTabPageControl12.Controls.Add(Me.bUpSave)
        Me.UltraTabPageControl12.Controls.Add(Me.bUpsellUncheck)
        Me.UltraTabPageControl12.Controls.Add(Me.UltraLabel99)
        Me.UltraTabPageControl12.Controls.Add(Me.tUpSellSqFt)
        Me.UltraTabPageControl12.Controls.Add(Me.bUpsellSendToQuote)
        Me.UltraTabPageControl12.Controls.Add(Me.UpType)
        Me.UltraTabPageControl12.Controls.Add(Me.UpTree)
        Me.UltraTabPageControl12.Controls.Add(Me.UltraLabel97)
        Me.UltraTabPageControl12.Location = New System.Drawing.Point(-10000, -10000)
        Me.UltraTabPageControl12.Name = "UltraTabPageControl12"
        Me.UltraTabPageControl12.Size = New System.Drawing.Size(1478, 645)
        '
        'bUpSave
        '
        Me.bUpSave.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.bUpSave.Font = New System.Drawing.Font("Microsoft Sans Serif", 10!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.bUpSave.Location = New System.Drawing.Point(1340, 44)
        Me.bUpSave.Name = "bUpSave"
        Me.bUpSave.Size = New System.Drawing.Size(135, 28)
        Me.bUpSave.TabIndex = 8
        Me.bUpSave.Tag = ""
        Me.bUpSave.Text = "Save Selection"
        '
        'bUpsellUncheck
        '
        Me.bUpsellUncheck.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.bUpsellUncheck.Font = New System.Drawing.Font("Microsoft Sans Serif", 10!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.bUpsellUncheck.Location = New System.Drawing.Point(1339, 591)
        Me.bUpsellUncheck.Name = "bUpsellUncheck"
        Me.bUpsellUncheck.Size = New System.Drawing.Size(136, 29)
        Me.bUpsellUncheck.TabIndex = 7
        Me.bUpsellUncheck.Tag = ""
        Me.bUpsellUncheck.Text = "Uncheck All"
        '
        'UltraLabel99
        '
        Me.UltraLabel99.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.UltraLabel99.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel99.Font = New System.Drawing.Font("Microsoft Sans Serif", 10!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel99.Location = New System.Drawing.Point(1358, 185)
        Me.UltraLabel99.Name = "UltraLabel99"
        Me.UltraLabel99.Size = New System.Drawing.Size(107, 27)
        Me.UltraLabel99.TabIndex = 6
        Me.UltraLabel99.Text = "Room Sq Ft"
        '
        'tUpSellSqFt
        '
        Me.tUpSellSqFt.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Appearance88.TextHAlignAsString = "Right"
        Me.tUpSellSqFt.Appearance = Appearance88
        Me.tUpSellSqFt.Enabled = false
        Me.tUpSellSqFt.Font = New System.Drawing.Font("Microsoft Sans Serif", 10!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tUpSellSqFt.Location = New System.Drawing.Point(1349, 148)
        Me.tUpSellSqFt.Name = "tUpSellSqFt"
        Me.tUpSellSqFt.Size = New System.Drawing.Size(116, 28)
        Me.tUpSellSqFt.TabIndex = 5
        Me.tUpSellSqFt.Tag = "edit"
        Me.tUpSellSqFt.Text = "0"
        '
        'bUpsellSendToQuote
        '
        Me.bUpsellSendToQuote.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.bUpsellSendToQuote.Enabled = false
        Me.bUpsellSendToQuote.Font = New System.Drawing.Font("Microsoft Sans Serif", 10!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.bUpsellSendToQuote.Location = New System.Drawing.Point(1339, 9)
        Me.bUpsellSendToQuote.Name = "bUpsellSendToQuote"
        Me.bUpsellSendToQuote.Size = New System.Drawing.Size(136, 28)
        Me.bUpsellSendToQuote.TabIndex = 3
        Me.bUpsellSendToQuote.Tag = "edit"
        Me.bUpsellSendToQuote.Text = "Copy to Items"
        '
        'UpType
        '
        Me.UpType.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom)  _
            Or System.Windows.Forms.AnchorStyles.Left),System.Windows.Forms.AnchorStyles)
        Me.UpType.Font = New System.Drawing.Font("Microsoft Sans Serif", 10!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UpType.Location = New System.Drawing.Point(1086, 501)
        Me.UpType.Name = "UpType"
        Override1.NodeStyle = Infragistics.Win.UltraWinTree.NodeStyle.CheckBox
        Override1.Sort = Infragistics.Win.UltraWinTree.SortType.Ascending
        Me.UpType.Override = Override1
        Me.UpType.ShowLines = false
        Me.UpType.ShowRootLines = false
        Me.UpType.Size = New System.Drawing.Size(109, 104)
        Me.UpType.TabIndex = 2
        Me.UpType.Visible = false
        '
        'UpTree
        '
        Me.UpTree.Anchor = CType((((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom)  _
            Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.UpTree.Font = New System.Drawing.Font("Microsoft Sans Serif", 10!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UpTree.Location = New System.Drawing.Point(-5, 0)
        Me.UpTree.Name = "UpTree"
        Override3.NodeStyle = Infragistics.Win.UltraWinTree.NodeStyle.CheckBox
        Me.UpTree.NodeLevelOverrides.Add(Override2)
        Me.UpTree.NodeLevelOverrides.Add(Override3)
        Me.UpTree.Size = New System.Drawing.Size(1338, 635)
        Me.UpTree.TabIndex = 1
        '
        'UltraLabel97
        '
        Me.UltraLabel97.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel97.Font = New System.Drawing.Font("Microsoft Sans Serif", 26!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel97.Location = New System.Drawing.Point(240, 18)
        Me.UltraLabel97.Name = "UltraLabel97"
        Me.UltraLabel97.Size = New System.Drawing.Size(461, 65)
        Me.UltraLabel97.TabIndex = 4
        Me.UltraLabel97.Text = "Loading..."
        '
        'UltraTabPageControl14
        '
        Me.UltraTabPageControl14.Controls.Add(Me.pRepReq)
        Me.UltraTabPageControl14.Controls.Add(Me.lRepReq)
        Me.UltraTabPageControl14.Controls.Add(Me.rrAddRepReq)
        Me.UltraTabPageControl14.Controls.Add(Me.tabRepReq)
        Me.UltraTabPageControl14.Location = New System.Drawing.Point(-10000, -10000)
        Me.UltraTabPageControl14.Name = "UltraTabPageControl14"
        Me.UltraTabPageControl14.Size = New System.Drawing.Size(1478, 645)
        '
        'pRepReq
        '
        Me.pRepReq.BackColor = System.Drawing.Color.FromArgb(CType(CType(255,Byte),Integer), CType(CType(192,Byte),Integer), CType(CType(192,Byte),Integer))
        Me.pRepReq.Location = New System.Drawing.Point(206, 0)
        Me.pRepReq.Name = "pRepReq"
        Me.pRepReq.Size = New System.Drawing.Size(927, 22)
        Me.pRepReq.TabIndex = 4
        '
        'lRepReq
        '
        Me.lRepReq.BackColor = System.Drawing.Color.FromArgb(CType(CType(255,Byte),Integer), CType(CType(192,Byte),Integer), CType(CType(192,Byte),Integer))
        Me.lRepReq.Font = New System.Drawing.Font("Microsoft Sans Serif", 10!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.lRepReq.Location = New System.Drawing.Point(132, 1)
        Me.lRepReq.Name = "lRepReq"
        Me.lRepReq.Size = New System.Drawing.Size(130, 23)
        Me.lRepReq.TabIndex = 3
        Me.lRepReq.Text = "Request"
        Me.lRepReq.Visible = false
        '
        'rrAddRepReq
        '
        Me.rrAddRepReq.BackColor = System.Drawing.Color.FromArgb(CType(CType(255,Byte),Integer), CType(CType(192,Byte),Integer), CType(CType(192,Byte),Integer))
        Me.rrAddRepReq.Enabled = false
        Me.rrAddRepReq.Font = New System.Drawing.Font("Microsoft Sans Serif", 10!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.rrAddRepReq.Location = New System.Drawing.Point(1, 1)
        Me.rrAddRepReq.Name = "rrAddRepReq"
        Me.rrAddRepReq.Size = New System.Drawing.Size(115, 21)
        Me.rrAddRepReq.TabIndex = 2
        Me.rrAddRepReq.TabStop = true
        Me.rrAddRepReq.Tag = "Edit"
        Me.rrAddRepReq.Text = "Add Request"
        '
        'tabRepReq
        '
        Me.tabRepReq.Anchor = CType((((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom)  _
            Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tabRepReq.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(255,Byte),Integer), CType(CType(192,Byte),Integer), CType(CType(192,Byte),Integer))
        Me.tabRepReq.Controls.Add(Me.UltraTabSharedControlsPage4)
        Me.tabRepReq.Controls.Add(Me.UltraTabPageControl15)
        Me.tabRepReq.Controls.Add(Me.UltraTabPageControl16)
        Me.tabRepReq.Controls.Add(Me.UltraTabPageControl17)
        Me.tabRepReq.Controls.Add(Me.UltraTabPageControl18)
        Me.tabRepReq.Location = New System.Drawing.Point(1, 24)
        Me.tabRepReq.Name = "tabRepReq"
        Me.tabRepReq.SharedControlsPage = Me.UltraTabSharedControlsPage4
        Me.tabRepReq.Size = New System.Drawing.Size(1480, 635)
        Me.tabRepReq.TabIndex = 0
        Appearance89.BackColor = System.Drawing.Color.FromArgb(CType(CType(224,Byte),Integer), CType(CType(224,Byte),Integer), CType(CType(224,Byte),Integer))
        UltraTab4.Appearance = Appearance89
        Appearance90.BackColor = System.Drawing.Color.FromArgb(CType(CType(224,Byte),Integer), CType(CType(224,Byte),Integer), CType(CType(224,Byte),Integer))
        UltraTab4.ClientAreaAppearance = Appearance90
        UltraTab4.TabPage = Me.UltraTabPageControl15
        UltraTab4.Text = "Contact"
        Appearance91.BackColor = System.Drawing.Color.FromArgb(CType(CType(224,Byte),Integer), CType(CType(224,Byte),Integer), CType(CType(224,Byte),Integer))
        UltraTab5.Appearance = Appearance91
        Appearance92.BackColor = System.Drawing.Color.FromArgb(CType(CType(224,Byte),Integer), CType(CType(224,Byte),Integer), CType(CType(224,Byte),Integer))
        UltraTab5.ClientAreaAppearance = Appearance92
        UltraTab5.TabPage = Me.UltraTabPageControl18
        UltraTab5.Text = "Replacement Form"
        Appearance93.BackColor = System.Drawing.Color.FromArgb(CType(CType(224,Byte),Integer), CType(CType(224,Byte),Integer), CType(CType(224,Byte),Integer))
        UltraTab6.Appearance = Appearance93
        Appearance94.BackColor = System.Drawing.Color.FromArgb(CType(CType(224,Byte),Integer), CType(CType(224,Byte),Integer), CType(CType(224,Byte),Integer))
        UltraTab6.ClientAreaAppearance = Appearance94
        UltraTab6.TabPage = Me.UltraTabPageControl16
        UltraTab6.Text = "Return Form"
        Appearance95.BackColor = System.Drawing.Color.FromArgb(CType(CType(224,Byte),Integer), CType(CType(224,Byte),Integer), CType(CType(224,Byte),Integer))
        UltraTab7.Appearance = Appearance95
        Appearance96.BackColor = System.Drawing.Color.FromArgb(CType(CType(224,Byte),Integer), CType(CType(224,Byte),Integer), CType(CType(224,Byte),Integer))
        UltraTab7.ClientAreaAppearance = Appearance96
        UltraTab7.TabPage = Me.UltraTabPageControl17
        UltraTab7.Text = "Claim Form"
        Me.tabRepReq.Tabs.AddRange(New Infragistics.Win.UltraWinTabControl.UltraTab() {UltraTab4, UltraTab5, UltraTab6, UltraTab7})
        Me.tabRepReq.UseOsThemes = Infragistics.Win.DefaultableBoolean.[False]
        '
        'UltraTabSharedControlsPage4
        '
        Me.UltraTabSharedControlsPage4.Location = New System.Drawing.Point(-10000, -10000)
        Me.UltraTabSharedControlsPage4.Name = "UltraTabSharedControlsPage4"
        Me.UltraTabSharedControlsPage4.Size = New System.Drawing.Size(1476, 604)
        '
        'UltraTabPageControl19
        '
        Me.UltraTabPageControl19.Controls.Add(Me.UltraButton11)
        Me.UltraTabPageControl19.Controls.Add(Me.UltraButton10)
        Me.UltraTabPageControl19.Controls.Add(Me.UltraButton7)
        Me.UltraTabPageControl19.Controls.Add(Me.bProdUserFuture)
        Me.UltraTabPageControl19.Controls.Add(Me.bProdUserPast)
        Me.UltraTabPageControl19.Controls.Add(Me.lProdUser)
        Me.UltraTabPageControl19.Controls.Add(Me.UltraButton12)
        Me.UltraTabPageControl19.Controls.Add(Me.pProduction)
        Me.UltraTabPageControl19.Location = New System.Drawing.Point(-10000, -10000)
        Me.UltraTabPageControl19.Name = "UltraTabPageControl19"
        Me.UltraTabPageControl19.Size = New System.Drawing.Size(1478, 645)
        '
        'UltraButton11
        '
        Me.UltraButton11.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Appearance162.BackColor = System.Drawing.Color.FromArgb(CType(CType(224,Byte),Integer), CType(CType(224,Byte),Integer), CType(CType(224,Byte),Integer))
        Me.UltraButton11.Appearance = Appearance162
        Me.UltraButton11.ButtonStyle = Infragistics.Win.UIElementButtonStyle.Flat
        Appearance186.BackColor = System.Drawing.Color.FromArgb(CType(CType(255,Byte),Integer), CType(CType(255,Byte),Integer), CType(CType(128,Byte),Integer))
        Me.UltraButton11.HotTrackAppearance = Appearance186
        Me.UltraButton11.Location = New System.Drawing.Point(1438, 360)
        Me.UltraButton11.Name = "UltraButton11"
        Me.UltraButton11.Size = New System.Drawing.Size(39, 21)
        Me.UltraButton11.TabIndex = 3
        Me.UltraButton11.Text = "V"
        Me.UltraButton11.UseOsThemes = Infragistics.Win.DefaultableBoolean.[False]
        '
        'UltraButton10
        '
        Me.UltraButton10.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Appearance163.BackColor = System.Drawing.Color.FromArgb(CType(CType(224,Byte),Integer), CType(CType(224,Byte),Integer), CType(CType(224,Byte),Integer))
        Me.UltraButton10.Appearance = Appearance163
        Me.UltraButton10.ButtonStyle = Infragistics.Win.UIElementButtonStyle.Flat
        Appearance187.BackColor = System.Drawing.Color.FromArgb(CType(CType(255,Byte),Integer), CType(CType(255,Byte),Integer), CType(CType(128,Byte),Integer))
        Me.UltraButton10.HotTrackAppearance = Appearance187
        Me.UltraButton10.Location = New System.Drawing.Point(1438, 338)
        Me.UltraButton10.Name = "UltraButton10"
        Me.UltraButton10.Size = New System.Drawing.Size(39, 21)
        Me.UltraButton10.TabIndex = 2
        Me.UltraButton10.Text = "V"
        Me.UltraButton10.UseOsThemes = Infragistics.Win.DefaultableBoolean.[False]
        '
        'UltraButton7
        '
        Me.UltraButton7.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Appearance160.BackColor = System.Drawing.Color.FromArgb(CType(CType(224,Byte),Integer), CType(CType(224,Byte),Integer), CType(CType(224,Byte),Integer))
        Me.UltraButton7.Appearance = Appearance160
        Me.UltraButton7.ButtonStyle = Infragistics.Win.UIElementButtonStyle.Flat
        Appearance185.BackColor = System.Drawing.Color.FromArgb(CType(CType(255,Byte),Integer), CType(CType(255,Byte),Integer), CType(CType(128,Byte),Integer))
        Me.UltraButton7.HotTrackAppearance = Appearance185
        Me.UltraButton7.Location = New System.Drawing.Point(1438, 299)
        Me.UltraButton7.Name = "UltraButton7"
        Me.UltraButton7.Size = New System.Drawing.Size(39, 19)
        Me.UltraButton7.TabIndex = 1
        Me.UltraButton7.Text = "V"
        Me.UltraButton7.UseOsThemes = Infragistics.Win.DefaultableBoolean.[False]
        '
        'bProdUserFuture
        '
        Me.bProdUserFuture.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left),System.Windows.Forms.AnchorStyles)
        Me.bProdUserFuture.FlatAppearance.MouseOverBackColor = System.Drawing.Color.FromArgb(CType(CType(255,Byte),Integer), CType(CType(255,Byte),Integer), CType(CType(128,Byte),Integer))
        Me.bProdUserFuture.FlatStyle = System.Windows.Forms.FlatStyle.Flat
        Me.bProdUserFuture.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.bProdUserFuture.Location = New System.Drawing.Point(808, 620)
        Me.bProdUserFuture.Margin = New System.Windows.Forms.Padding(0)
        Me.bProdUserFuture.Name = "bProdUserFuture"
        Me.bProdUserFuture.Size = New System.Drawing.Size(51, 23)
        Me.bProdUserFuture.TabIndex = 7
        Me.bProdUserFuture.Text = ">"
        Me.bProdUserFuture.UseVisualStyleBackColor = true
        Me.bProdUserFuture.Visible = false
        '
        'bProdUserPast
        '
        Me.bProdUserPast.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left),System.Windows.Forms.AnchorStyles)
        Me.bProdUserPast.FlatAppearance.MouseOverBackColor = System.Drawing.Color.FromArgb(CType(CType(255,Byte),Integer), CType(CType(255,Byte),Integer), CType(CType(128,Byte),Integer))
        Me.bProdUserPast.FlatStyle = System.Windows.Forms.FlatStyle.Flat
        Me.bProdUserPast.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.bProdUserPast.Location = New System.Drawing.Point(410, 620)
        Me.bProdUserPast.Margin = New System.Windows.Forms.Padding(0)
        Me.bProdUserPast.Name = "bProdUserPast"
        Me.bProdUserPast.Size = New System.Drawing.Size(51, 23)
        Me.bProdUserPast.TabIndex = 6
        Me.bProdUserPast.Text = "<"
        Me.bProdUserPast.UseVisualStyleBackColor = true
        Me.bProdUserPast.Visible = false
        '
        'lProdUser
        '
        Me.lProdUser.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left),System.Windows.Forms.AnchorStyles)
        Me.lProdUser.AutoSize = true
        Me.lProdUser.Location = New System.Drawing.Point(470, 624)
        Me.lProdUser.Name = "lProdUser"
        Me.lProdUser.Size = New System.Drawing.Size(256, 20)
        Me.lProdUser.TabIndex = 5
        Me.lProdUser.Text = "Saved by User on 1/1/1900 00:00"
        Me.lProdUser.Visible = false
        '
        'UltraButton12
        '
        Me.UltraButton12.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Appearance161.BackColor = System.Drawing.Color.FromArgb(CType(CType(224,Byte),Integer), CType(CType(224,Byte),Integer), CType(CType(224,Byte),Integer))
        Me.UltraButton12.Appearance = Appearance161
        Me.UltraButton12.ButtonStyle = Infragistics.Win.UIElementButtonStyle.Flat
        Appearance184.BackColor = System.Drawing.Color.FromArgb(CType(CType(255,Byte),Integer), CType(CType(255,Byte),Integer), CType(CType(128,Byte),Integer))
        Me.UltraButton12.HotTrackAppearance = Appearance184
        Me.UltraButton12.Location = New System.Drawing.Point(1438, 381)
        Me.UltraButton12.Name = "UltraButton12"
        Me.UltraButton12.Size = New System.Drawing.Size(39, 21)
        Me.UltraButton12.TabIndex = 4
        Me.UltraButton12.Text = "V"
        Me.UltraButton12.UseOsThemes = Infragistics.Win.DefaultableBoolean.[False]
        '
        'pProduction
        '
        Me.pProduction.Anchor = CType((((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom)  _
            Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.pProduction.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Me.pProduction.Controls.Add(Me.tpCellarComp_note)
        Me.pProduction.Controls.Add(Me.tpCellarComp_by)
        Me.pProduction.Controls.Add(Me.tpCellarComp_date)
        Me.pProduction.Controls.Add(Me.tpCellarComp)
        Me.pProduction.Controls.Add(Me.UltraLabel176)
        Me.pProduction.Controls.Add(Me.lEstShipEmail)
        Me.pProduction.Controls.Add(Me.chEstEmailShip)
        Me.pProduction.Controls.Add(Me.UltraLabel173)
        Me.pProduction.Controls.Add(Me.tpFactComp_Note)
        Me.pProduction.Controls.Add(Me.tpFactComp_By)
        Me.pProduction.Controls.Add(Me.tpFactComp_Date)
        Me.pProduction.Controls.Add(Me.tpFactComp)
        Me.pProduction.Controls.Add(Me.UltraLabel172)
        Me.pProduction.Controls.Add(Me.tpCDRDown_note)
        Me.pProduction.Controls.Add(Me.tpCDRDown_by)
        Me.pProduction.Controls.Add(Me.tpCDRDown_date)
        Me.pProduction.Controls.Add(Me.tpCDRDown)
        Me.pProduction.Controls.Add(Me.UltraLabel171)
        Me.pProduction.Controls.Add(Me.tpKitDown_note)
        Me.pProduction.Controls.Add(Me.tpKitDown_by)
        Me.pProduction.Controls.Add(Me.tpKitDown_date)
        Me.pProduction.Controls.Add(Me.tpKitDown)
        Me.pProduction.Controls.Add(Me.UltraLabel170)
        Me.pProduction.Controls.Add(Me.UltraLabel164)
        Me.pProduction.Controls.Add(Me.tpProdNote)
        Me.pProduction.Controls.Add(Me.tpOKBillEarly)
        Me.pProduction.Controls.Add(Me.tpAddedClosedWeek)
        Me.pProduction.Controls.Add(Me.tpProdNoteFlag)
        Me.pProduction.Controls.Add(Me.tEstCompleteCalc)
        Me.pProduction.Controls.Add(Me.tpSignedStain_By)
        Me.pProduction.Controls.Add(Me.tpMustship_By)
        Me.pProduction.Controls.Add(Me.tpCommitted_By)
        Me.pProduction.Controls.Add(Me.tpArt_By)
        Me.pProduction.Controls.Add(Me.tpEstComp_By)
        Me.pProduction.Controls.Add(Me.tInstallerDate)
        Me.pProduction.Controls.Add(Me.UltraLabel162)
        Me.pProduction.Controls.Add(Me.tStatus2)
        Me.pProduction.Controls.Add(Me.tpStatus)
        Me.pProduction.Controls.Add(Me.tpToFactory_Note)
        Me.pProduction.Controls.Add(Me.tpToFactory_By)
        Me.pProduction.Controls.Add(Me.tpToFactory_Date)
        Me.pProduction.Controls.Add(Me.tpToFactory)
        Me.pProduction.Controls.Add(Me.UltraLabel161)
        Me.pProduction.Controls.Add(Me.tpDesignComplete_Note)
        Me.pProduction.Controls.Add(Me.tpDesignComplete_By)
        Me.pProduction.Controls.Add(Me.tpDesignComplete_Date)
        Me.pProduction.Controls.Add(Me.tpDesignComplete)
        Me.pProduction.Controls.Add(Me.tpDesignStart_Note)
        Me.pProduction.Controls.Add(Me.tpDesignStart_By)
        Me.pProduction.Controls.Add(Me.tpDesignStart_Date)
        Me.pProduction.Controls.Add(Me.tpDesignStart)
        Me.pProduction.Controls.Add(Me.UltraLabel159)
        Me.pProduction.Controls.Add(Me.tpAllClear_Note)
        Me.pProduction.Controls.Add(Me.tpAllClear_By)
        Me.pProduction.Controls.Add(Me.tpAllClear_Date)
        Me.pProduction.Controls.Add(Me.tpAllClear)
        Me.pProduction.Controls.Add(Me.UltraLabel158)
        Me.pProduction.Controls.Add(Me.tpSignoffRec_Note)
        Me.pProduction.Controls.Add(Me.tpSignoffRec_By)
        Me.pProduction.Controls.Add(Me.tpSignoffRec_Date)
        Me.pProduction.Controls.Add(Me.tpSignoffRec)
        Me.pProduction.Controls.Add(Me.UltraLabel157)
        Me.pProduction.Controls.Add(Me.tpWaitingSignoff_Note)
        Me.pProduction.Controls.Add(Me.tpWaitingSignoff_By)
        Me.pProduction.Controls.Add(Me.tpWaitingSignoff_Date)
        Me.pProduction.Controls.Add(Me.tpWaitingSignoff)
        Me.pProduction.Controls.Add(Me.lWaitingSignoff)
        Me.pProduction.Controls.Add(Me.tpRoomRevision_Note)
        Me.pProduction.Controls.Add(Me.tpRoomRevision_By)
        Me.pProduction.Controls.Add(Me.tpRoomRevision_Date)
        Me.pProduction.Controls.Add(Me.tpRoomRevision)
        Me.pProduction.Controls.Add(Me.UltraLabel156)
        Me.pProduction.Controls.Add(Me.tpRoomNotReady_Note)
        Me.pProduction.Controls.Add(Me.tpRoomNotReady_By)
        Me.pProduction.Controls.Add(Me.tpRoomNotReady_Date)
        Me.pProduction.Controls.Add(Me.tpRoomNotReady)
        Me.pProduction.Controls.Add(Me.UltraLabel155)
        Me.pProduction.Controls.Add(Me.tpSignOffSent_Note)
        Me.pProduction.Controls.Add(Me.tpSignOffSent_By)
        Me.pProduction.Controls.Add(Me.tpSignOffSent_Date)
        Me.pProduction.Controls.Add(Me.tpSignOffSent)
        Me.pProduction.Controls.Add(Me.UltraLabel154)
        Me.pProduction.Controls.Add(Me.bCopyInstall)
        Me.pProduction.Controls.Add(Me.tpSignStainDt)
        Me.pProduction.Controls.Add(Me.tpSignStain)
        Me.pProduction.Controls.Add(Me.UltraLabel145)
        Me.pProduction.Controls.Add(Me.tInstallNotes)
        Me.pProduction.Controls.Add(Me.tpArt)
        Me.pProduction.Controls.Add(Me.tpEstComp)
        Me.pProduction.Controls.Add(Me.tpCommitted)
        Me.pProduction.Controls.Add(Me.tpMustShip)
        Me.pProduction.Controls.Add(Me.grInstallServiceCalls)
        Me.pProduction.Controls.Add(Me.tpArtNote)
        Me.pProduction.Controls.Add(Me.UltraLabel144)
        Me.pProduction.Controls.Add(Me.tpEstCompNote)
        Me.pProduction.Controls.Add(Me.UltraLabel143)
        Me.pProduction.Controls.Add(Me.tpCommittedNote)
        Me.pProduction.Controls.Add(Me.UltraLabel142)
        Me.pProduction.Controls.Add(Me.tpMustShipNote)
        Me.pProduction.Controls.Add(Me.UltraLabel141)
        Me.pProduction.Controls.Add(Me.tInstaller)
        Me.pProduction.Controls.Add(Me.UltraLabel107)
        Me.pProduction.Controls.Add(Me.UltraLabel105)
        Me.pProduction.Controls.Add(Me.bEmailInstallNote)
        Me.pProduction.Controls.Add(Me.UltraLabel160)
        Me.pProduction.Enabled = false
        Me.pProduction.Location = New System.Drawing.Point(0, 0)
        Me.pProduction.Name = "pProduction"
        Me.pProduction.Size = New System.Drawing.Size(1438, 618)
        Me.pProduction.TabIndex = 0
        Me.pProduction.Tag = "edit"
        '
        'tpCellarComp_note
        '
        Me.tpCellarComp_note.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tpCellarComp_note.AutoSize = false
        Me.tpCellarComp_note.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpCellarComp_note.Location = New System.Drawing.Point(360, 225)
        Me.tpCellarComp_note.MaxLength = 500
        Me.tpCellarComp_note.Name = "tpCellarComp_note"
        Me.tpCellarComp_note.Size = New System.Drawing.Size(1075, 20)
        Me.tpCellarComp_note.TabIndex = 243
        Me.tpCellarComp_note.Tag = ""
        '
        'tpCellarComp_by
        '
        Me.tpCellarComp_by.AutoSize = false
        Me.tpCellarComp_by.Enabled = false
        Me.tpCellarComp_by.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpCellarComp_by.Location = New System.Drawing.Point(287, 225)
        Me.tpCellarComp_by.Name = "tpCellarComp_by"
        Me.tpCellarComp_by.Size = New System.Drawing.Size(67, 20)
        Me.tpCellarComp_by.TabIndex = 242
        Me.tpCellarComp_by.Tag = ""
        '
        'tpCellarComp_date
        '
        Me.tpCellarComp_date.AutoSize = false
        Me.tpCellarComp_date.DateTime = New Date(2015, 9, 18, 0, 0, 0, 0)
        Me.tpCellarComp_date.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpCellarComp_date.Location = New System.Drawing.Point(180, 225)
        Me.tpCellarComp_date.Name = "tpCellarComp_date"
        Me.tpCellarComp_date.Size = New System.Drawing.Size(101, 20)
        Me.tpCellarComp_date.TabIndex = 241
        Me.tpCellarComp_date.Value = New Date(2015, 9, 18, 0, 0, 0, 0)
        '
        'tpCellarComp
        '
        Me.tpCellarComp.AutoSize = true
        Me.tpCellarComp.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpCellarComp.Location = New System.Drawing.Point(156, 228)
        Me.tpCellarComp.Name = "tpCellarComp"
        Me.tpCellarComp.Size = New System.Drawing.Size(18, 17)
        Me.tpCellarComp.TabIndex = 240
        Me.tpCellarComp.UseVisualStyleBackColor = true
        '
        'UltraLabel176
        '
        Appearance53.TextHAlignAsString = "Right"
        Me.UltraLabel176.Appearance = Appearance53
        Me.UltraLabel176.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel176.Location = New System.Drawing.Point(8, 228)
        Me.UltraLabel176.Name = "UltraLabel176"
        Me.UltraLabel176.Size = New System.Drawing.Size(142, 20)
        Me.UltraLabel176.TabIndex = 239
        Me.UltraLabel176.Text = "Cellar Art Complete"
        '
        'lEstShipEmail
        '
        Appearance74.TextHAlignAsString = "Left"
        Me.lEstShipEmail.Appearance = Appearance74
        Me.lEstShipEmail.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.lEstShipEmail.Location = New System.Drawing.Point(180, 320)
        Me.lEstShipEmail.Name = "lEstShipEmail"
        Me.lEstShipEmail.Size = New System.Drawing.Size(295, 19)
        Me.lEstShipEmail.TabIndex = 238
        Me.lEstShipEmail.Text = "---"
        '
        'chEstEmailShip
        '
        Me.chEstEmailShip.AutoSize = true
        Me.chEstEmailShip.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.chEstEmailShip.Location = New System.Drawing.Point(156, 322)
        Me.chEstEmailShip.Name = "chEstEmailShip"
        Me.chEstEmailShip.Size = New System.Drawing.Size(18, 17)
        Me.chEstEmailShip.TabIndex = 237
        Me.chEstEmailShip.UseVisualStyleBackColor = true
        '
        'UltraLabel173
        '
        Appearance152.TextHAlignAsString = "Right"
        Me.UltraLabel173.Appearance = Appearance152
        Me.UltraLabel173.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel173.Location = New System.Drawing.Point(8, 322)
        Me.UltraLabel173.Name = "UltraLabel173"
        Me.UltraLabel173.Size = New System.Drawing.Size(142, 21)
        Me.UltraLabel173.TabIndex = 236
        Me.UltraLabel173.Text = "Est. Ship Email Sent"
        '
        'tpFactComp_Note
        '
        Me.tpFactComp_Note.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tpFactComp_Note.AutoSize = false
        Me.tpFactComp_Note.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpFactComp_Note.Location = New System.Drawing.Point(360, 426)
        Me.tpFactComp_Note.MaxLength = 500
        Me.tpFactComp_Note.Name = "tpFactComp_Note"
        Me.tpFactComp_Note.Size = New System.Drawing.Size(1075, 19)
        Me.tpFactComp_Note.TabIndex = 235
        Me.tpFactComp_Note.Tag = ""
        '
        'tpFactComp_By
        '
        Me.tpFactComp_By.AutoSize = false
        Me.tpFactComp_By.Enabled = false
        Me.tpFactComp_By.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpFactComp_By.Location = New System.Drawing.Point(287, 426)
        Me.tpFactComp_By.Name = "tpFactComp_By"
        Me.tpFactComp_By.Size = New System.Drawing.Size(67, 19)
        Me.tpFactComp_By.TabIndex = 234
        Me.tpFactComp_By.Tag = ""
        '
        'tpFactComp_Date
        '
        Me.tpFactComp_Date.AutoSize = false
        Me.tpFactComp_Date.DateTime = New Date(2015, 9, 18, 0, 0, 0, 0)
        Me.tpFactComp_Date.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpFactComp_Date.Location = New System.Drawing.Point(180, 426)
        Me.tpFactComp_Date.Name = "tpFactComp_Date"
        Me.tpFactComp_Date.Size = New System.Drawing.Size(101, 19)
        Me.tpFactComp_Date.TabIndex = 233
        Me.tpFactComp_Date.Value = New Date(2015, 9, 18, 0, 0, 0, 0)
        '
        'tpFactComp
        '
        Me.tpFactComp.AutoSize = true
        Me.tpFactComp.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpFactComp.Location = New System.Drawing.Point(156, 429)
        Me.tpFactComp.Name = "tpFactComp"
        Me.tpFactComp.Size = New System.Drawing.Size(18, 17)
        Me.tpFactComp.TabIndex = 232
        Me.tpFactComp.UseVisualStyleBackColor = true
        '
        'UltraLabel172
        '
        Appearance153.TextHAlignAsString = "Right"
        Me.UltraLabel172.Appearance = Appearance153
        Me.UltraLabel172.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel172.Location = New System.Drawing.Point(8, 429)
        Me.UltraLabel172.Name = "UltraLabel172"
        Me.UltraLabel172.Size = New System.Drawing.Size(142, 20)
        Me.UltraLabel172.TabIndex = 231
        Me.UltraLabel172.Text = "Est. Factory Complete"
        '
        'tpCDRDown_note
        '
        Me.tpCDRDown_note.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tpCDRDown_note.AutoSize = false
        Me.tpCDRDown_note.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpCDRDown_note.Location = New System.Drawing.Point(360, 271)
        Me.tpCDRDown_note.MaxLength = 500
        Me.tpCDRDown_note.Name = "tpCDRDown_note"
        Me.tpCDRDown_note.Size = New System.Drawing.Size(1075, 20)
        Me.tpCDRDown_note.TabIndex = 230
        Me.tpCDRDown_note.Tag = ""
        Me.tpCDRDown_note.Visible = false
        '
        'tpCDRDown_by
        '
        Me.tpCDRDown_by.AutoSize = false
        Me.tpCDRDown_by.Enabled = false
        Me.tpCDRDown_by.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpCDRDown_by.Location = New System.Drawing.Point(287, 271)
        Me.tpCDRDown_by.Name = "tpCDRDown_by"
        Me.tpCDRDown_by.Size = New System.Drawing.Size(67, 20)
        Me.tpCDRDown_by.TabIndex = 229
        Me.tpCDRDown_by.Tag = ""
        Me.tpCDRDown_by.Visible = false
        '
        'tpCDRDown_date
        '
        Me.tpCDRDown_date.AutoSize = false
        Me.tpCDRDown_date.DateTime = New Date(2015, 9, 18, 0, 0, 0, 0)
        Me.tpCDRDown_date.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpCDRDown_date.Location = New System.Drawing.Point(180, 271)
        Me.tpCDRDown_date.Name = "tpCDRDown_date"
        Me.tpCDRDown_date.Size = New System.Drawing.Size(101, 20)
        Me.tpCDRDown_date.TabIndex = 228
        Me.tpCDRDown_date.Value = New Date(2015, 9, 18, 0, 0, 0, 0)
        Me.tpCDRDown_date.Visible = false
        '
        'tpCDRDown
        '
        Me.tpCDRDown.AutoSize = true
        Me.tpCDRDown.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpCDRDown.Location = New System.Drawing.Point(156, 275)
        Me.tpCDRDown.Name = "tpCDRDown"
        Me.tpCDRDown.Size = New System.Drawing.Size(18, 17)
        Me.tpCDRDown.TabIndex = 227
        Me.tpCDRDown.UseVisualStyleBackColor = true
        Me.tpCDRDown.Visible = false
        '
        'UltraLabel171
        '
        Appearance150.TextHAlignAsString = "Right"
        Me.UltraLabel171.Appearance = Appearance150
        Me.UltraLabel171.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel171.Location = New System.Drawing.Point(29, 275)
        Me.UltraLabel171.Name = "UltraLabel171"
        Me.UltraLabel171.Size = New System.Drawing.Size(121, 19)
        Me.UltraLabel171.TabIndex = 226
        Me.UltraLabel171.Text = "CDR Downstairs"
        Me.UltraLabel171.Visible = false
        '
        'tpKitDown_note
        '
        Me.tpKitDown_note.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tpKitDown_note.AutoSize = false
        Me.tpKitDown_note.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpKitDown_note.Location = New System.Drawing.Point(360, 248)
        Me.tpKitDown_note.MaxLength = 500
        Me.tpKitDown_note.Name = "tpKitDown_note"
        Me.tpKitDown_note.Size = New System.Drawing.Size(1075, 20)
        Me.tpKitDown_note.TabIndex = 225
        Me.tpKitDown_note.Tag = ""
        '
        'tpKitDown_by
        '
        Me.tpKitDown_by.AutoSize = false
        Me.tpKitDown_by.Enabled = false
        Me.tpKitDown_by.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpKitDown_by.Location = New System.Drawing.Point(287, 248)
        Me.tpKitDown_by.Name = "tpKitDown_by"
        Me.tpKitDown_by.Size = New System.Drawing.Size(67, 20)
        Me.tpKitDown_by.TabIndex = 224
        Me.tpKitDown_by.Tag = ""
        '
        'tpKitDown_date
        '
        Me.tpKitDown_date.AutoSize = false
        Me.tpKitDown_date.DateTime = New Date(2015, 9, 18, 0, 0, 0, 0)
        Me.tpKitDown_date.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpKitDown_date.Location = New System.Drawing.Point(180, 248)
        Me.tpKitDown_date.Name = "tpKitDown_date"
        Me.tpKitDown_date.Size = New System.Drawing.Size(101, 20)
        Me.tpKitDown_date.TabIndex = 223
        Me.tpKitDown_date.Value = New Date(2015, 9, 18, 0, 0, 0, 0)
        '
        'tpKitDown
        '
        Me.tpKitDown.AutoSize = true
        Me.tpKitDown.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpKitDown.Location = New System.Drawing.Point(156, 252)
        Me.tpKitDown.Name = "tpKitDown"
        Me.tpKitDown.Size = New System.Drawing.Size(18, 17)
        Me.tpKitDown.TabIndex = 222
        Me.tpKitDown.UseVisualStyleBackColor = true
        '
        'UltraLabel170
        '
        Appearance87.TextHAlignAsString = "Right"
        Me.UltraLabel170.Appearance = Appearance87
        Me.UltraLabel170.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel170.Location = New System.Drawing.Point(8, 252)
        Me.UltraLabel170.Name = "UltraLabel170"
        Me.UltraLabel170.Size = New System.Drawing.Size(142, 19)
        Me.UltraLabel170.TabIndex = 221
        Me.UltraLabel170.Text = "Kit\CDR Downstairs"
        '
        'UltraLabel164
        '
        Appearance183.TextHAlignAsString = "Right"
        Me.UltraLabel164.Appearance = Appearance183
        Me.UltraLabel164.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel164.Location = New System.Drawing.Point(-23, 480)
        Me.UltraLabel164.Name = "UltraLabel164"
        Me.UltraLabel164.Size = New System.Drawing.Size(173, 20)
        Me.UltraLabel164.TabIndex = 220
        Me.UltraLabel164.Text = "Production Note"
        '
        'tpProdNote
        '
        Me.tpProdNote.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tpProdNote.AutoSize = false
        Me.tpProdNote.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpProdNote.Location = New System.Drawing.Point(180, 478)
        Me.tpProdNote.MaxLength = 500
        Me.tpProdNote.Name = "tpProdNote"
        Me.tpProdNote.Size = New System.Drawing.Size(1255, 18)
        Me.tpProdNote.TabIndex = 219
        Me.tpProdNote.Tag = ""
        '
        'tpOKBillEarly
        '
        Me.tpOKBillEarly.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left),System.Windows.Forms.AnchorStyles)
        Appearance171.FontData.Name = "Microsoft Sans Serif"
        Appearance171.FontData.SizeInPoints = 8!
        Me.tpOKBillEarly.Appearance = Appearance171
        Me.tpOKBillEarly.Location = New System.Drawing.Point(595, 590)
        Me.tpOKBillEarly.Name = "tpOKBillEarly"
        Me.tpOKBillEarly.Size = New System.Drawing.Size(163, 19)
        Me.tpOKBillEarly.TabIndex = 218
        Me.tpOKBillEarly.Text = "OK To Bill Early"
        '
        'tpAddedClosedWeek
        '
        Me.tpAddedClosedWeek.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left),System.Windows.Forms.AnchorStyles)
        Me.tpAddedClosedWeek.AutoSize = true
        Me.tpAddedClosedWeek.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpAddedClosedWeek.Location = New System.Drawing.Point(246, 591)
        Me.tpAddedClosedWeek.Name = "tpAddedClosedWeek"
        Me.tpAddedClosedWeek.Size = New System.Drawing.Size(174, 21)
        Me.tpAddedClosedWeek.TabIndex = 216
        Me.tpAddedClosedWeek.Text = "Added to Closed Week"
        Me.tpAddedClosedWeek.UseVisualStyleBackColor = true
        '
        'tpProdNoteFlag
        '
        Me.tpProdNoteFlag.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left),System.Windows.Forms.AnchorStyles)
        Me.tpProdNoteFlag.AutoSize = true
        Me.tpProdNoteFlag.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpProdNoteFlag.Location = New System.Drawing.Point(426, 591)
        Me.tpProdNoteFlag.Name = "tpProdNoteFlag"
        Me.tpProdNoteFlag.Size = New System.Drawing.Size(163, 21)
        Me.tpProdNoteFlag.TabIndex = 215
        Me.tpProdNoteFlag.Text = "Production Note Flag"
        Me.tpProdNoteFlag.UseVisualStyleBackColor = true
        '
        'tEstCompleteCalc
        '
        Me.tEstCompleteCalc.AutoSize = false
        Me.tEstCompleteCalc.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tEstCompleteCalc.Location = New System.Drawing.Point(156, 298)
        Me.tEstCompleteCalc.Name = "tEstCompleteCalc"
        Me.tEstCompleteCalc.Size = New System.Drawing.Size(25, 20)
        Me.tEstCompleteCalc.TabIndex = 214
        Me.tEstCompleteCalc.Tag = ""
        '
        'tpSignedStain_By
        '
        Me.tpSignedStain_By.AutoSize = false
        Me.tpSignedStain_By.Enabled = false
        Me.tpSignedStain_By.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpSignedStain_By.Location = New System.Drawing.Point(287, 451)
        Me.tpSignedStain_By.Name = "tpSignedStain_By"
        Me.tpSignedStain_By.Size = New System.Drawing.Size(67, 21)
        Me.tpSignedStain_By.TabIndex = 213
        Me.tpSignedStain_By.Tag = ""
        '
        'tpMustship_By
        '
        Me.tpMustship_By.AutoSize = false
        Me.tpMustship_By.Enabled = false
        Me.tpMustship_By.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpMustship_By.Location = New System.Drawing.Point(287, 383)
        Me.tpMustship_By.Name = "tpMustship_By"
        Me.tpMustship_By.Size = New System.Drawing.Size(67, 20)
        Me.tpMustship_By.TabIndex = 211
        Me.tpMustship_By.Tag = ""
        '
        'tpCommitted_By
        '
        Me.tpCommitted_By.AutoSize = false
        Me.tpCommitted_By.Enabled = false
        Me.tpCommitted_By.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpCommitted_By.Location = New System.Drawing.Point(287, 362)
        Me.tpCommitted_By.Name = "tpCommitted_By"
        Me.tpCommitted_By.Size = New System.Drawing.Size(67, 20)
        Me.tpCommitted_By.TabIndex = 210
        Me.tpCommitted_By.Tag = ""
        '
        'tpArt_By
        '
        Me.tpArt_By.AutoSize = false
        Me.tpArt_By.Enabled = false
        Me.tpArt_By.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpArt_By.Location = New System.Drawing.Point(287, 340)
        Me.tpArt_By.Name = "tpArt_By"
        Me.tpArt_By.Size = New System.Drawing.Size(67, 21)
        Me.tpArt_By.TabIndex = 209
        Me.tpArt_By.Tag = ""
        '
        'tpEstComp_By
        '
        Me.tpEstComp_By.AutoSize = false
        Me.tpEstComp_By.Enabled = false
        Me.tpEstComp_By.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpEstComp_By.Location = New System.Drawing.Point(287, 298)
        Me.tpEstComp_By.Name = "tpEstComp_By"
        Me.tpEstComp_By.Size = New System.Drawing.Size(67, 20)
        Me.tpEstComp_By.TabIndex = 208
        Me.tpEstComp_By.Tag = ""
        '
        'tInstallerDate
        '
        Me.tInstallerDate.AutoSize = false
        Me.tInstallerDate.DateTime = New Date(2015, 9, 18, 0, 0, 0, 0)
        Me.tInstallerDate.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tInstallerDate.Location = New System.Drawing.Point(180, 404)
        Me.tInstallerDate.Name = "tInstallerDate"
        Me.tInstallerDate.NullText = "None"
        Me.tInstallerDate.Size = New System.Drawing.Size(101, 19)
        Me.tInstallerDate.TabIndex = 207
        Me.tInstallerDate.Value = New Date(2015, 9, 18, 0, 0, 0, 0)
        '
        'UltraLabel162
        '
        Appearance45.ForeColor = System.Drawing.Color.Black
        Appearance45.TextHAlignAsString = "Right"
        Me.UltraLabel162.Appearance = Appearance45
        Me.UltraLabel162.BackColorInternal = System.Drawing.Color.LightGoldenrodYellow
        Me.UltraLabel162.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel162.Location = New System.Drawing.Point(22, 3)
        Me.UltraLabel162.Name = "UltraLabel162"
        Me.UltraLabel162.Size = New System.Drawing.Size(124, 20)
        Me.UltraLabel162.TabIndex = 206
        Me.UltraLabel162.Text = "Status 2"
        '
        'tStatus2
        '
        Me.tStatus2.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tStatus2.AutoSize = false
        Me.tStatus2.Enabled = false
        Me.tStatus2.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tStatus2.Location = New System.Drawing.Point(156, 3)
        Me.tStatus2.Margin = New System.Windows.Forms.Padding(0)
        Me.tStatus2.MaxLength = 250
        Me.tStatus2.Name = "tStatus2"
        Me.tStatus2.Size = New System.Drawing.Size(1279, 20)
        Me.tStatus2.TabIndex = 205
        Me.tStatus2.Tag = "edit"
        '
        'tpStatus
        '
        Me.tpStatus.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpStatus.Location = New System.Drawing.Point(20, 556)
        Me.tpStatus.Name = "tpStatus"
        Me.tpStatus.Size = New System.Drawing.Size(154, 23)
        Me.tpStatus.TabIndex = 204
        Me.tpStatus.Tag = ""
        Me.tpStatus.Visible = false
        '
        'tpToFactory_Note
        '
        Me.tpToFactory_Note.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tpToFactory_Note.AutoSize = false
        Me.tpToFactory_Note.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpToFactory_Note.Location = New System.Drawing.Point(360, 202)
        Me.tpToFactory_Note.MaxLength = 500
        Me.tpToFactory_Note.Name = "tpToFactory_Note"
        Me.tpToFactory_Note.Size = New System.Drawing.Size(1075, 20)
        Me.tpToFactory_Note.TabIndex = 203
        Me.tpToFactory_Note.Tag = ""
        '
        'tpToFactory_By
        '
        Me.tpToFactory_By.AutoSize = false
        Me.tpToFactory_By.Enabled = false
        Me.tpToFactory_By.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpToFactory_By.Location = New System.Drawing.Point(287, 202)
        Me.tpToFactory_By.Name = "tpToFactory_By"
        Me.tpToFactory_By.Size = New System.Drawing.Size(67, 20)
        Me.tpToFactory_By.TabIndex = 202
        Me.tpToFactory_By.Tag = ""
        '
        'tpToFactory_Date
        '
        Me.tpToFactory_Date.AutoSize = false
        Me.tpToFactory_Date.DateTime = New Date(2015, 9, 18, 0, 0, 0, 0)
        Me.tpToFactory_Date.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpToFactory_Date.Location = New System.Drawing.Point(180, 202)
        Me.tpToFactory_Date.Name = "tpToFactory_Date"
        Me.tpToFactory_Date.Size = New System.Drawing.Size(101, 20)
        Me.tpToFactory_Date.TabIndex = 201
        Me.tpToFactory_Date.Value = New Date(2015, 9, 18, 0, 0, 0, 0)
        '
        'tpToFactory
        '
        Me.tpToFactory.AutoSize = true
        Me.tpToFactory.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpToFactory.Location = New System.Drawing.Point(156, 205)
        Me.tpToFactory.Name = "tpToFactory"
        Me.tpToFactory.Size = New System.Drawing.Size(18, 17)
        Me.tpToFactory.TabIndex = 200
        Me.tpToFactory.UseVisualStyleBackColor = true
        '
        'UltraLabel161
        '
        Appearance54.TextHAlignAsString = "Right"
        Me.UltraLabel161.Appearance = Appearance54
        Me.UltraLabel161.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel161.Location = New System.Drawing.Point(29, 205)
        Me.UltraLabel161.Name = "UltraLabel161"
        Me.UltraLabel161.Size = New System.Drawing.Size(121, 20)
        Me.UltraLabel161.TabIndex = 199
        Me.UltraLabel161.Text = "To Factory"
        '
        'tpDesignComplete_Note
        '
        Me.tpDesignComplete_Note.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tpDesignComplete_Note.AutoSize = false
        Me.tpDesignComplete_Note.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpDesignComplete_Note.Location = New System.Drawing.Point(360, 180)
        Me.tpDesignComplete_Note.MaxLength = 500
        Me.tpDesignComplete_Note.Name = "tpDesignComplete_Note"
        Me.tpDesignComplete_Note.Size = New System.Drawing.Size(1075, 21)
        Me.tpDesignComplete_Note.TabIndex = 198
        Me.tpDesignComplete_Note.Tag = ""
        '
        'tpDesignComplete_By
        '
        Me.tpDesignComplete_By.AutoSize = false
        Me.tpDesignComplete_By.Enabled = false
        Me.tpDesignComplete_By.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpDesignComplete_By.Location = New System.Drawing.Point(287, 180)
        Me.tpDesignComplete_By.Name = "tpDesignComplete_By"
        Me.tpDesignComplete_By.Size = New System.Drawing.Size(67, 21)
        Me.tpDesignComplete_By.TabIndex = 197
        Me.tpDesignComplete_By.Tag = ""
        '
        'tpDesignComplete_Date
        '
        Me.tpDesignComplete_Date.AutoSize = false
        Me.tpDesignComplete_Date.DateTime = New Date(2015, 9, 18, 0, 0, 0, 0)
        Me.tpDesignComplete_Date.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpDesignComplete_Date.Location = New System.Drawing.Point(180, 180)
        Me.tpDesignComplete_Date.Name = "tpDesignComplete_Date"
        Me.tpDesignComplete_Date.Size = New System.Drawing.Size(101, 21)
        Me.tpDesignComplete_Date.TabIndex = 196
        Me.tpDesignComplete_Date.Value = New Date(2015, 9, 18, 0, 0, 0, 0)
        '
        'tpDesignComplete
        '
        Me.tpDesignComplete.AutoSize = true
        Me.tpDesignComplete.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpDesignComplete.Location = New System.Drawing.Point(156, 185)
        Me.tpDesignComplete.Name = "tpDesignComplete"
        Me.tpDesignComplete.Size = New System.Drawing.Size(18, 17)
        Me.tpDesignComplete.TabIndex = 195
        Me.tpDesignComplete.UseVisualStyleBackColor = true
        '
        'tpDesignStart_Note
        '
        Me.tpDesignStart_Note.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tpDesignStart_Note.AutoSize = false
        Me.tpDesignStart_Note.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpDesignStart_Note.Location = New System.Drawing.Point(360, 159)
        Me.tpDesignStart_Note.MaxLength = 500
        Me.tpDesignStart_Note.Name = "tpDesignStart_Note"
        Me.tpDesignStart_Note.Size = New System.Drawing.Size(1075, 20)
        Me.tpDesignStart_Note.TabIndex = 193
        Me.tpDesignStart_Note.Tag = ""
        '
        'tpDesignStart_By
        '
        Me.tpDesignStart_By.AutoSize = false
        Me.tpDesignStart_By.Enabled = false
        Me.tpDesignStart_By.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpDesignStart_By.Location = New System.Drawing.Point(287, 159)
        Me.tpDesignStart_By.Name = "tpDesignStart_By"
        Me.tpDesignStart_By.Size = New System.Drawing.Size(67, 20)
        Me.tpDesignStart_By.TabIndex = 192
        Me.tpDesignStart_By.Tag = ""
        '
        'tpDesignStart_Date
        '
        Me.tpDesignStart_Date.AutoSize = false
        Me.tpDesignStart_Date.DateTime = New Date(2015, 9, 18, 0, 0, 0, 0)
        Me.tpDesignStart_Date.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpDesignStart_Date.Location = New System.Drawing.Point(180, 159)
        Me.tpDesignStart_Date.Name = "tpDesignStart_Date"
        Me.tpDesignStart_Date.Size = New System.Drawing.Size(101, 20)
        Me.tpDesignStart_Date.TabIndex = 191
        Me.tpDesignStart_Date.Value = New Date(2015, 9, 18, 0, 0, 0, 0)
        '
        'tpDesignStart
        '
        Me.tpDesignStart.AutoSize = true
        Me.tpDesignStart.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpDesignStart.Location = New System.Drawing.Point(156, 164)
        Me.tpDesignStart.Name = "tpDesignStart"
        Me.tpDesignStart.Size = New System.Drawing.Size(18, 17)
        Me.tpDesignStart.TabIndex = 190
        Me.tpDesignStart.UseVisualStyleBackColor = true
        '
        'UltraLabel159
        '
        Appearance78.TextHAlignAsString = "Right"
        Me.UltraLabel159.Appearance = Appearance78
        Me.UltraLabel159.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel159.Location = New System.Drawing.Point(13, 164)
        Me.UltraLabel159.Name = "UltraLabel159"
        Me.UltraLabel159.Size = New System.Drawing.Size(137, 19)
        Me.UltraLabel159.TabIndex = 189
        Me.UltraLabel159.Text = "Rack Design Started"
        '
        'tpAllClear_Note
        '
        Me.tpAllClear_Note.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tpAllClear_Note.AutoSize = false
        Me.tpAllClear_Note.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpAllClear_Note.Location = New System.Drawing.Point(360, 138)
        Me.tpAllClear_Note.MaxLength = 500
        Me.tpAllClear_Note.Name = "tpAllClear_Note"
        Me.tpAllClear_Note.Size = New System.Drawing.Size(1075, 20)
        Me.tpAllClear_Note.TabIndex = 188
        Me.tpAllClear_Note.Tag = ""
        '
        'tpAllClear_By
        '
        Me.tpAllClear_By.AutoSize = false
        Me.tpAllClear_By.Enabled = false
        Me.tpAllClear_By.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpAllClear_By.Location = New System.Drawing.Point(287, 138)
        Me.tpAllClear_By.Name = "tpAllClear_By"
        Me.tpAllClear_By.Size = New System.Drawing.Size(67, 20)
        Me.tpAllClear_By.TabIndex = 187
        Me.tpAllClear_By.Tag = ""
        '
        'tpAllClear_Date
        '
        Me.tpAllClear_Date.AutoSize = false
        Me.tpAllClear_Date.DateTime = New Date(2015, 9, 18, 0, 0, 0, 0)
        Me.tpAllClear_Date.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpAllClear_Date.Location = New System.Drawing.Point(180, 138)
        Me.tpAllClear_Date.Name = "tpAllClear_Date"
        Me.tpAllClear_Date.Size = New System.Drawing.Size(101, 20)
        Me.tpAllClear_Date.TabIndex = 186
        Me.tpAllClear_Date.Value = New Date(2015, 9, 18, 0, 0, 0, 0)
        '
        'tpAllClear
        '
        Me.tpAllClear.AutoSize = true
        Me.tpAllClear.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpAllClear.Location = New System.Drawing.Point(156, 142)
        Me.tpAllClear.Name = "tpAllClear"
        Me.tpAllClear.Size = New System.Drawing.Size(18, 17)
        Me.tpAllClear.TabIndex = 185
        Me.tpAllClear.UseVisualStyleBackColor = true
        '
        'UltraLabel158
        '
        Appearance80.TextHAlignAsString = "Right"
        Me.UltraLabel158.Appearance = Appearance80
        Me.UltraLabel158.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel158.Location = New System.Drawing.Point(29, 142)
        Me.UltraLabel158.Name = "UltraLabel158"
        Me.UltraLabel158.Size = New System.Drawing.Size(121, 21)
        Me.UltraLabel158.TabIndex = 184
        Me.UltraLabel158.Text = "All Clear"
        '
        'tpSignoffRec_Note
        '
        Me.tpSignoffRec_Note.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tpSignoffRec_Note.AutoSize = false
        Me.tpSignoffRec_Note.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpSignoffRec_Note.Location = New System.Drawing.Point(360, 118)
        Me.tpSignoffRec_Note.MaxLength = 500
        Me.tpSignoffRec_Note.Name = "tpSignoffRec_Note"
        Me.tpSignoffRec_Note.Size = New System.Drawing.Size(1075, 19)
        Me.tpSignoffRec_Note.TabIndex = 183
        Me.tpSignoffRec_Note.Tag = ""
        '
        'tpSignoffRec_By
        '
        Me.tpSignoffRec_By.AutoSize = false
        Me.tpSignoffRec_By.Enabled = false
        Me.tpSignoffRec_By.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpSignoffRec_By.Location = New System.Drawing.Point(287, 118)
        Me.tpSignoffRec_By.Name = "tpSignoffRec_By"
        Me.tpSignoffRec_By.Size = New System.Drawing.Size(67, 19)
        Me.tpSignoffRec_By.TabIndex = 182
        Me.tpSignoffRec_By.Tag = ""
        '
        'tpSignoffRec_Date
        '
        Me.tpSignoffRec_Date.AutoSize = false
        Me.tpSignoffRec_Date.DateTime = New Date(2015, 9, 18, 0, 0, 0, 0)
        Me.tpSignoffRec_Date.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpSignoffRec_Date.Location = New System.Drawing.Point(180, 118)
        Me.tpSignoffRec_Date.Name = "tpSignoffRec_Date"
        Me.tpSignoffRec_Date.Size = New System.Drawing.Size(101, 19)
        Me.tpSignoffRec_Date.TabIndex = 181
        Me.tpSignoffRec_Date.Value = New Date(2015, 9, 18, 0, 0, 0, 0)
        '
        'tpSignoffRec
        '
        Me.tpSignoffRec.AutoSize = true
        Me.tpSignoffRec.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpSignoffRec.Location = New System.Drawing.Point(156, 121)
        Me.tpSignoffRec.Name = "tpSignoffRec"
        Me.tpSignoffRec.Size = New System.Drawing.Size(18, 17)
        Me.tpSignoffRec.TabIndex = 180
        Me.tpSignoffRec.UseVisualStyleBackColor = true
        '
        'UltraLabel157
        '
        Appearance81.TextHAlignAsString = "Right"
        Me.UltraLabel157.Appearance = Appearance81
        Me.UltraLabel157.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel157.Location = New System.Drawing.Point(29, 121)
        Me.UltraLabel157.Name = "UltraLabel157"
        Me.UltraLabel157.Size = New System.Drawing.Size(121, 21)
        Me.UltraLabel157.TabIndex = 179
        Me.UltraLabel157.Text = "Signoff Received"
        '
        'tpWaitingSignoff_Note
        '
        Me.tpWaitingSignoff_Note.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tpWaitingSignoff_Note.AutoSize = false
        Me.tpWaitingSignoff_Note.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpWaitingSignoff_Note.Location = New System.Drawing.Point(360, 88)
        Me.tpWaitingSignoff_Note.MaxLength = 500
        Me.tpWaitingSignoff_Note.Name = "tpWaitingSignoff_Note"
        Me.tpWaitingSignoff_Note.Size = New System.Drawing.Size(1075, 20)
        Me.tpWaitingSignoff_Note.TabIndex = 178
        Me.tpWaitingSignoff_Note.Tag = ""
        '
        'tpWaitingSignoff_By
        '
        Me.tpWaitingSignoff_By.AutoSize = false
        Me.tpWaitingSignoff_By.Enabled = false
        Me.tpWaitingSignoff_By.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpWaitingSignoff_By.Location = New System.Drawing.Point(287, 88)
        Me.tpWaitingSignoff_By.Name = "tpWaitingSignoff_By"
        Me.tpWaitingSignoff_By.Size = New System.Drawing.Size(67, 20)
        Me.tpWaitingSignoff_By.TabIndex = 177
        Me.tpWaitingSignoff_By.Tag = ""
        '
        'tpWaitingSignoff_Date
        '
        Me.tpWaitingSignoff_Date.AutoSize = false
        Me.tpWaitingSignoff_Date.DateTime = New Date(2015, 9, 18, 0, 0, 0, 0)
        Me.tpWaitingSignoff_Date.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpWaitingSignoff_Date.Location = New System.Drawing.Point(180, 88)
        Me.tpWaitingSignoff_Date.Name = "tpWaitingSignoff_Date"
        Me.tpWaitingSignoff_Date.Size = New System.Drawing.Size(101, 20)
        Me.tpWaitingSignoff_Date.TabIndex = 176
        Me.tpWaitingSignoff_Date.Value = New Date(2015, 9, 18, 0, 0, 0, 0)
        '
        'tpWaitingSignoff
        '
        Me.tpWaitingSignoff.AutoSize = true
        Me.tpWaitingSignoff.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpWaitingSignoff.Location = New System.Drawing.Point(156, 92)
        Me.tpWaitingSignoff.Name = "tpWaitingSignoff"
        Me.tpWaitingSignoff.Size = New System.Drawing.Size(18, 17)
        Me.tpWaitingSignoff.TabIndex = 175
        Me.tpWaitingSignoff.UseVisualStyleBackColor = true
        '
        'lWaitingSignoff
        '
        Appearance159.TextHAlignAsString = "Right"
        Me.lWaitingSignoff.Appearance = Appearance159
        Me.lWaitingSignoff.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.lWaitingSignoff.Location = New System.Drawing.Point(29, 92)
        Me.lWaitingSignoff.Name = "lWaitingSignoff"
        Me.lWaitingSignoff.Size = New System.Drawing.Size(121, 20)
        Me.lWaitingSignoff.TabIndex = 174
        Me.lWaitingSignoff.Text = "Waiting on Signoff"
        '
        'tpRoomRevision_Note
        '
        Me.tpRoomRevision_Note.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tpRoomRevision_Note.AutoSize = false
        Me.tpRoomRevision_Note.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpRoomRevision_Note.Location = New System.Drawing.Point(360, 67)
        Me.tpRoomRevision_Note.MaxLength = 500
        Me.tpRoomRevision_Note.Name = "tpRoomRevision_Note"
        Me.tpRoomRevision_Note.Size = New System.Drawing.Size(1075, 20)
        Me.tpRoomRevision_Note.TabIndex = 173
        Me.tpRoomRevision_Note.Tag = ""
        '
        'tpRoomRevision_By
        '
        Me.tpRoomRevision_By.AutoSize = false
        Me.tpRoomRevision_By.Enabled = false
        Me.tpRoomRevision_By.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpRoomRevision_By.Location = New System.Drawing.Point(287, 67)
        Me.tpRoomRevision_By.Name = "tpRoomRevision_By"
        Me.tpRoomRevision_By.Size = New System.Drawing.Size(67, 20)
        Me.tpRoomRevision_By.TabIndex = 172
        Me.tpRoomRevision_By.Tag = ""
        '
        'tpRoomRevision_Date
        '
        Me.tpRoomRevision_Date.AutoSize = false
        Me.tpRoomRevision_Date.DateTime = New Date(2015, 9, 18, 0, 0, 0, 0)
        Me.tpRoomRevision_Date.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpRoomRevision_Date.Location = New System.Drawing.Point(180, 67)
        Me.tpRoomRevision_Date.Name = "tpRoomRevision_Date"
        Me.tpRoomRevision_Date.Size = New System.Drawing.Size(101, 20)
        Me.tpRoomRevision_Date.TabIndex = 171
        Me.tpRoomRevision_Date.Value = New Date(2015, 9, 18, 0, 0, 0, 0)
        '
        'tpRoomRevision
        '
        Me.tpRoomRevision.AutoSize = true
        Me.tpRoomRevision.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpRoomRevision.Location = New System.Drawing.Point(156, 72)
        Me.tpRoomRevision.Name = "tpRoomRevision"
        Me.tpRoomRevision.Size = New System.Drawing.Size(18, 17)
        Me.tpRoomRevision.TabIndex = 170
        Me.tpRoomRevision.UseVisualStyleBackColor = true
        '
        'UltraLabel156
        '
        Appearance75.TextHAlignAsString = "Right"
        Me.UltraLabel156.Appearance = Appearance75
        Me.UltraLabel156.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel156.Location = New System.Drawing.Point(38, 72)
        Me.UltraLabel156.Name = "UltraLabel156"
        Me.UltraLabel156.Size = New System.Drawing.Size(112, 19)
        Me.UltraLabel156.TabIndex = 169
        Me.UltraLabel156.Text = "Room in Revision"
        '
        'tpRoomNotReady_Note
        '
        Me.tpRoomNotReady_Note.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tpRoomNotReady_Note.AutoSize = false
        Me.tpRoomNotReady_Note.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpRoomNotReady_Note.Location = New System.Drawing.Point(360, 46)
        Me.tpRoomNotReady_Note.MaxLength = 500
        Me.tpRoomNotReady_Note.Name = "tpRoomNotReady_Note"
        Me.tpRoomNotReady_Note.Size = New System.Drawing.Size(1075, 20)
        Me.tpRoomNotReady_Note.TabIndex = 168
        Me.tpRoomNotReady_Note.Tag = ""
        '
        'tpRoomNotReady_By
        '
        Me.tpRoomNotReady_By.AutoSize = false
        Me.tpRoomNotReady_By.Enabled = false
        Me.tpRoomNotReady_By.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpRoomNotReady_By.Location = New System.Drawing.Point(287, 46)
        Me.tpRoomNotReady_By.Name = "tpRoomNotReady_By"
        Me.tpRoomNotReady_By.Size = New System.Drawing.Size(67, 20)
        Me.tpRoomNotReady_By.TabIndex = 167
        Me.tpRoomNotReady_By.Tag = ""
        '
        'tpRoomNotReady_Date
        '
        Me.tpRoomNotReady_Date.AutoSize = false
        Me.tpRoomNotReady_Date.DateTime = New Date(2015, 9, 18, 0, 0, 0, 0)
        Me.tpRoomNotReady_Date.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpRoomNotReady_Date.Location = New System.Drawing.Point(180, 46)
        Me.tpRoomNotReady_Date.Name = "tpRoomNotReady_Date"
        Me.tpRoomNotReady_Date.Size = New System.Drawing.Size(101, 20)
        Me.tpRoomNotReady_Date.TabIndex = 166
        Me.tpRoomNotReady_Date.Value = New Date(2015, 9, 18, 0, 0, 0, 0)
        '
        'tpRoomNotReady
        '
        Me.tpRoomNotReady.AutoSize = true
        Me.tpRoomNotReady.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpRoomNotReady.Location = New System.Drawing.Point(156, 50)
        Me.tpRoomNotReady.Name = "tpRoomNotReady"
        Me.tpRoomNotReady.Size = New System.Drawing.Size(18, 17)
        Me.tpRoomNotReady.TabIndex = 165
        Me.tpRoomNotReady.UseVisualStyleBackColor = true
        '
        'UltraLabel155
        '
        Appearance76.TextHAlignAsString = "Right"
        Me.UltraLabel155.Appearance = Appearance76
        Me.UltraLabel155.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel155.Location = New System.Drawing.Point(38, 50)
        Me.UltraLabel155.Name = "UltraLabel155"
        Me.UltraLabel155.Size = New System.Drawing.Size(112, 20)
        Me.UltraLabel155.TabIndex = 164
        Me.UltraLabel155.Text = "Room Not Ready"
        '
        'tpSignOffSent_Note
        '
        Me.tpSignOffSent_Note.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tpSignOffSent_Note.AutoSize = false
        Me.tpSignOffSent_Note.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpSignOffSent_Note.Location = New System.Drawing.Point(360, 25)
        Me.tpSignOffSent_Note.MaxLength = 500
        Me.tpSignOffSent_Note.Name = "tpSignOffSent_Note"
        Me.tpSignOffSent_Note.Size = New System.Drawing.Size(1075, 20)
        Me.tpSignOffSent_Note.TabIndex = 163
        Me.tpSignOffSent_Note.Tag = ""
        '
        'tpSignOffSent_By
        '
        Me.tpSignOffSent_By.AutoSize = false
        Me.tpSignOffSent_By.Enabled = false
        Me.tpSignOffSent_By.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpSignOffSent_By.Location = New System.Drawing.Point(287, 25)
        Me.tpSignOffSent_By.Name = "tpSignOffSent_By"
        Me.tpSignOffSent_By.Size = New System.Drawing.Size(67, 20)
        Me.tpSignOffSent_By.TabIndex = 162
        Me.tpSignOffSent_By.Tag = ""
        '
        'tpSignOffSent_Date
        '
        Me.tpSignOffSent_Date.AutoSize = false
        Me.tpSignOffSent_Date.DateTime = New Date(2015, 9, 18, 0, 0, 0, 0)
        Me.tpSignOffSent_Date.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpSignOffSent_Date.Location = New System.Drawing.Point(180, 25)
        Me.tpSignOffSent_Date.Name = "tpSignOffSent_Date"
        Me.tpSignOffSent_Date.Size = New System.Drawing.Size(101, 20)
        Me.tpSignOffSent_Date.TabIndex = 161
        Me.tpSignOffSent_Date.Value = New Date(2015, 9, 18, 0, 0, 0, 0)
        '
        'tpSignOffSent
        '
        Me.tpSignOffSent.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpSignOffSent.Location = New System.Drawing.Point(156, 25)
        Me.tpSignOffSent.Name = "tpSignOffSent"
        Me.tpSignOffSent.Size = New System.Drawing.Size(20, 23)
        Me.tpSignOffSent.TabIndex = 160
        Me.tpSignOffSent.UseVisualStyleBackColor = true
        '
        'UltraLabel154
        '
        Appearance77.TextHAlignAsString = "Right"
        Me.UltraLabel154.Appearance = Appearance77
        Me.UltraLabel154.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel154.Location = New System.Drawing.Point(53, 29)
        Me.UltraLabel154.Name = "UltraLabel154"
        Me.UltraLabel154.Size = New System.Drawing.Size(97, 19)
        Me.UltraLabel154.TabIndex = 159
        Me.UltraLabel154.Text = "Sign Off Sent"
        '
        'bCopyInstall
        '
        Me.bCopyInstall.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left),System.Windows.Forms.AnchorStyles)
        Me.bCopyInstall.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.bCopyInstall.Location = New System.Drawing.Point(13, 581)
        Me.bCopyInstall.Name = "bCopyInstall"
        Me.bCopyInstall.Size = New System.Drawing.Size(211, 33)
        Me.bCopyInstall.TabIndex = 158
        Me.bCopyInstall.Text = "Copy Install to Other Revs"
        '
        'tpSignStainDt
        '
        Me.tpSignStainDt.AutoSize = false
        Me.tpSignStainDt.DateTime = New Date(2015, 9, 18, 0, 0, 0, 0)
        Me.tpSignStainDt.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpSignStainDt.Location = New System.Drawing.Point(180, 451)
        Me.tpSignStainDt.Name = "tpSignStainDt"
        Me.tpSignStainDt.NullText = "None"
        Me.tpSignStainDt.Size = New System.Drawing.Size(101, 21)
        Me.tpSignStainDt.TabIndex = 157
        Me.tpSignStainDt.Value = New Date(2015, 9, 18, 0, 0, 0, 0)
        '
        'tpSignStain
        '
        Me.tpSignStain.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList
        Me.tpSignStain.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpSignStain.Items.AddRange(New Object() {"N/A", "Need", "Received"})
        Me.tpSignStain.Location = New System.Drawing.Point(360, 451)
        Me.tpSignStain.Name = "tpSignStain"
        Me.tpSignStain.Size = New System.Drawing.Size(115, 24)
        Me.tpSignStain.TabIndex = 155
        '
        'UltraLabel145
        '
        Appearance192.TextHAlignAsString = "Right"
        Me.UltraLabel145.Appearance = Appearance192
        Me.UltraLabel145.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel145.Location = New System.Drawing.Point(-23, 450)
        Me.UltraLabel145.Name = "UltraLabel145"
        Me.UltraLabel145.Size = New System.Drawing.Size(173, 20)
        Me.UltraLabel145.TabIndex = 154
        Me.UltraLabel145.Text = "Signed Stain Sample"
        '
        'tInstallNotes
        '
        Me.tInstallNotes.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tInstallNotes.AutoSize = false
        Me.tInstallNotes.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tInstallNotes.Location = New System.Drawing.Point(493, 404)
        Me.tInstallNotes.Margin = New System.Windows.Forms.Padding(0)
        Me.tInstallNotes.MaxLength = 300
        Me.tInstallNotes.Name = "tInstallNotes"
        Me.tInstallNotes.Scrollbars = System.Windows.Forms.ScrollBars.Vertical
        Me.tInstallNotes.Size = New System.Drawing.Size(942, 19)
        Me.tInstallNotes.TabIndex = 134
        Me.tInstallNotes.Tag = ""
        '
        'tpArt
        '
        Me.tpArt.AutoSize = false
        Me.tpArt.DateTime = New Date(2015, 9, 18, 0, 0, 0, 0)
        Me.tpArt.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpArt.Location = New System.Drawing.Point(180, 340)
        Me.tpArt.Name = "tpArt"
        Me.tpArt.NullText = "None"
        Me.tpArt.Size = New System.Drawing.Size(101, 21)
        Me.tpArt.TabIndex = 152
        Me.tpArt.Value = New Date(2015, 9, 18, 0, 0, 0, 0)
        '
        'tpEstComp
        '
        Me.tpEstComp.AutoSize = false
        Me.tpEstComp.DateTime = New Date(2015, 9, 18, 0, 0, 0, 0)
        Me.tpEstComp.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpEstComp.Location = New System.Drawing.Point(180, 298)
        Me.tpEstComp.Name = "tpEstComp"
        Me.tpEstComp.Size = New System.Drawing.Size(101, 20)
        Me.tpEstComp.TabIndex = 151
        Me.tpEstComp.Value = New Date(2015, 9, 18, 0, 0, 0, 0)
        '
        'tpCommitted
        '
        Me.tpCommitted.AutoSize = false
        Me.tpCommitted.DateTime = New Date(2015, 9, 18, 0, 0, 0, 0)
        Me.tpCommitted.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpCommitted.Location = New System.Drawing.Point(180, 362)
        Me.tpCommitted.Name = "tpCommitted"
        Me.tpCommitted.NullText = "None"
        Me.tpCommitted.Size = New System.Drawing.Size(101, 20)
        Me.tpCommitted.TabIndex = 150
        Me.tpCommitted.Value = New Date(2015, 9, 18, 0, 0, 0, 0)
        '
        'tpMustShip
        '
        Me.tpMustShip.AutoSize = false
        Me.tpMustShip.DateTime = New Date(2015, 9, 18, 0, 0, 0, 0)
        Me.tpMustShip.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpMustShip.Location = New System.Drawing.Point(180, 383)
        Me.tpMustShip.Name = "tpMustShip"
        Me.tpMustShip.NullText = "None"
        Me.tpMustShip.Size = New System.Drawing.Size(101, 20)
        Me.tpMustShip.TabIndex = 149
        Me.tpMustShip.Value = New Date(2015, 9, 18, 0, 0, 0, 0)
        '
        'grInstallServiceCalls
        '
        Me.grInstallServiceCalls.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.grInstallServiceCalls.CalcManager = Me.UltraCalcManager1
        Me.grInstallServiceCalls.DisplayLayout.AutoFitStyle = Infragistics.Win.UltraWinGrid.AutoFitStyle.ResizeAllColumns
        UltraGridColumn174.Header.VisiblePosition = 0
        UltraGridColumn174.Hidden = true
        UltraGridColumn175.Header.VisiblePosition = 1
        UltraGridColumn175.Hidden = true
        UltraGridColumn176.Header.VisiblePosition = 2
        UltraGridColumn176.Hidden = true
        UltraGridColumn177.Header.VisiblePosition = 3
        UltraGridColumn177.Hidden = true
        UltraGridColumn178.Header.VisiblePosition = 4
        UltraGridColumn178.Hidden = true
        UltraGridColumn179.Header.VisiblePosition = 5
        UltraGridColumn179.Hidden = true
        UltraGridColumn180.Header.Caption = "Date"
        UltraGridColumn180.Header.VisiblePosition = 6
        UltraGridColumn180.MaxWidth = 150
        UltraGridColumn180.Width = 104
        UltraGridColumn181.Header.Caption = "Note"
        UltraGridColumn181.Header.VisiblePosition = 7
        UltraGridColumn181.Width = 1103
        UltraGridBand15.Columns.AddRange(New Object() {UltraGridColumn174, UltraGridColumn175, UltraGridColumn176, UltraGridColumn177, UltraGridColumn178, UltraGridColumn179, UltraGridColumn180, UltraGridColumn181})
        Me.grInstallServiceCalls.DisplayLayout.BandsSerializer.Add(UltraGridBand15)
        Me.grInstallServiceCalls.DisplayLayout.Override.AllowAddNew = Infragistics.Win.UltraWinGrid.AllowAddNew.TemplateOnBottom
        Me.grInstallServiceCalls.DisplayLayout.Override.AllowDelete = Infragistics.Win.DefaultableBoolean.[True]
        Me.grInstallServiceCalls.DisplayLayout.Override.AllowUpdate = Infragistics.Win.DefaultableBoolean.[True]
        Me.grInstallServiceCalls.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.grInstallServiceCalls.Location = New System.Drawing.Point(180, 501)
        Me.grInstallServiceCalls.Name = "grInstallServiceCalls"
        Me.grInstallServiceCalls.Size = New System.Drawing.Size(1249, 112)
        Me.grInstallServiceCalls.TabIndex = 148
        Me.grInstallServiceCalls.Text = "Install Service Call Dates"
        '
        'tpArtNote
        '
        Me.tpArtNote.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tpArtNote.AutoSize = false
        Me.tpArtNote.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpArtNote.Location = New System.Drawing.Point(360, 340)
        Me.tpArtNote.MaxLength = 500
        Me.tpArtNote.Name = "tpArtNote"
        Me.tpArtNote.Size = New System.Drawing.Size(1075, 21)
        Me.tpArtNote.TabIndex = 147
        Me.tpArtNote.Tag = ""
        '
        'UltraLabel144
        '
        Appearance178.TextHAlignAsString = "Right"
        Me.UltraLabel144.Appearance = Appearance178
        Me.UltraLabel144.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel144.Location = New System.Drawing.Point(62, 340)
        Me.UltraLabel144.Name = "UltraLabel144"
        Me.UltraLabel144.Size = New System.Drawing.Size(88, 21)
        Me.UltraLabel144.TabIndex = 145
        Me.UltraLabel144.Text = "Art"
        '
        'tpEstCompNote
        '
        Me.tpEstCompNote.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tpEstCompNote.AutoSize = false
        Me.tpEstCompNote.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpEstCompNote.Location = New System.Drawing.Point(360, 298)
        Me.tpEstCompNote.MaxLength = 500
        Me.tpEstCompNote.Name = "tpEstCompNote"
        Me.tpEstCompNote.Size = New System.Drawing.Size(1075, 20)
        Me.tpEstCompNote.TabIndex = 144
        Me.tpEstCompNote.Tag = ""
        '
        'UltraLabel143
        '
        Appearance179.TextHAlignAsString = "Right"
        Me.UltraLabel143.Appearance = Appearance179
        Me.UltraLabel143.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel143.Location = New System.Drawing.Point(59, 298)
        Me.UltraLabel143.Name = "UltraLabel143"
        Me.UltraLabel143.Size = New System.Drawing.Size(91, 20)
        Me.UltraLabel143.TabIndex = 142
        Me.UltraLabel143.Text = "Est Ship"
        '
        'tpCommittedNote
        '
        Me.tpCommittedNote.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tpCommittedNote.AutoSize = false
        Me.tpCommittedNote.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpCommittedNote.Location = New System.Drawing.Point(360, 362)
        Me.tpCommittedNote.MaxLength = 500
        Me.tpCommittedNote.Name = "tpCommittedNote"
        Me.tpCommittedNote.Size = New System.Drawing.Size(1075, 20)
        Me.tpCommittedNote.TabIndex = 141
        Me.tpCommittedNote.Tag = ""
        '
        'UltraLabel142
        '
        Appearance180.TextHAlignAsString = "Right"
        Me.UltraLabel142.Appearance = Appearance180
        Me.UltraLabel142.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel142.Location = New System.Drawing.Point(62, 362)
        Me.UltraLabel142.Name = "UltraLabel142"
        Me.UltraLabel142.Size = New System.Drawing.Size(88, 19)
        Me.UltraLabel142.TabIndex = 139
        Me.UltraLabel142.Text = "Committed"
        '
        'tpMustShipNote
        '
        Me.tpMustShipNote.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tpMustShipNote.AutoSize = false
        Me.tpMustShipNote.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tpMustShipNote.Location = New System.Drawing.Point(360, 383)
        Me.tpMustShipNote.MaxLength = 500
        Me.tpMustShipNote.Name = "tpMustShipNote"
        Me.tpMustShipNote.Size = New System.Drawing.Size(1075, 20)
        Me.tpMustShipNote.TabIndex = 138
        Me.tpMustShipNote.Tag = ""
        '
        'UltraLabel141
        '
        Appearance181.TextHAlignAsString = "Right"
        Me.UltraLabel141.Appearance = Appearance181
        Me.UltraLabel141.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel141.Location = New System.Drawing.Point(62, 383)
        Me.UltraLabel141.Name = "UltraLabel141"
        Me.UltraLabel141.Size = New System.Drawing.Size(88, 20)
        Me.UltraLabel141.TabIndex = 136
        Me.UltraLabel141.Text = "Must Ship by"
        '
        'tInstaller
        '
        Me.tInstaller.AutoSize = false
        Me.tInstaller.CalcManager = Me.UltraCalcManager1
        Me.tInstaller.CheckedListSettings.CheckStateMember = ""
        Me.tInstaller.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tInstaller.Location = New System.Drawing.Point(342, 404)
        Me.tInstaller.Name = "tInstaller"
        Me.tInstaller.Size = New System.Drawing.Size(148, 19)
        Me.tInstaller.TabIndex = 132
        Me.tInstaller.Tag = ""
        '
        'UltraLabel107
        '
        Me.UltraLabel107.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel107.Location = New System.Drawing.Point(287, 407)
        Me.UltraLabel107.Name = "UltraLabel107"
        Me.UltraLabel107.Size = New System.Drawing.Size(59, 19)
        Me.UltraLabel107.TabIndex = 130
        Me.UltraLabel107.Text = "Installer"
        '
        'UltraLabel105
        '
        Appearance182.TextHAlignAsString = "Right"
        Me.UltraLabel105.Appearance = Appearance182
        Me.UltraLabel105.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel105.Location = New System.Drawing.Point(26, 402)
        Me.UltraLabel105.Name = "UltraLabel105"
        Me.UltraLabel105.Size = New System.Drawing.Size(124, 20)
        Me.UltraLabel105.TabIndex = 129
        Me.UltraLabel105.Text = "Install Date"
        '
        'bEmailInstallNote
        '
        Me.bEmailInstallNote.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Appearance97.Image = CType(resources.GetObject("Appearance97.Image"),Object)
        Me.bEmailInstallNote.Appearance = Appearance97
        Me.bEmailInstallNote.ButtonStyle = Infragistics.Win.UIElementButtonStyle.FlatBorderless
        Me.bEmailInstallNote.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.bEmailInstallNote.Location = New System.Drawing.Point(1273, 455)
        Me.bEmailInstallNote.Name = "bEmailInstallNote"
        Me.bEmailInstallNote.Size = New System.Drawing.Size(156, 24)
        Me.bEmailInstallNote.TabIndex = 153
        Me.bEmailInstallNote.Text = "Email Installer Notes"
        Me.bEmailInstallNote.UseOsThemes = Infragistics.Win.DefaultableBoolean.[False]
        '
        'UltraLabel160
        '
        Appearance79.TextHAlignAsString = "Right"
        Me.UltraLabel160.Appearance = Appearance79
        Me.UltraLabel160.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel160.Location = New System.Drawing.Point(2, 185)
        Me.UltraLabel160.Name = "UltraLabel160"
        Me.UltraLabel160.Size = New System.Drawing.Size(148, 19)
        Me.UltraLabel160.TabIndex = 194
        Me.UltraLabel160.Text = "Rack Design Complete"
        '
        'UltraTabPageControl22
        '
        Me.UltraTabPageControl22.Controls.Add(Me.tDiagNote)
        Me.UltraTabPageControl22.Controls.Add(Me.UltraLabel167)
        Me.UltraTabPageControl22.Controls.Add(Me.pDiag)
        Me.UltraTabPageControl22.Location = New System.Drawing.Point(-10000, -10000)
        Me.UltraTabPageControl22.Name = "UltraTabPageControl22"
        Me.UltraTabPageControl22.Size = New System.Drawing.Size(1478, 645)
        '
        'tDiagNote
        '
        Me.tDiagNote.Anchor = CType((((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom)  _
            Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tDiagNote.Enabled = false
        Me.tDiagNote.Location = New System.Drawing.Point(1, 471)
        Me.tDiagNote.Multiline = true
        Me.tDiagNote.Name = "tDiagNote"
        Me.tDiagNote.Size = New System.Drawing.Size(1474, 171)
        Me.tDiagNote.TabIndex = 1
        Me.tDiagNote.Tag = "edit"
        '
        'UltraLabel167
        '
        Me.UltraLabel167.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel167.Location = New System.Drawing.Point(7, 455)
        Me.UltraLabel167.Name = "UltraLabel167"
        Me.UltraLabel167.Size = New System.Drawing.Size(131, 20)
        Me.UltraLabel167.TabIndex = 20
        Me.UltraLabel167.Text = "Internal Notes"
        '
        'pDiag
        '
        Me.pDiag.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.pDiag.AutoScroll = true
        Me.pDiag.BackColor = System.Drawing.Color.Beige
        Me.pDiag.Controls.Add(Me.pDiag0)
        Me.pDiag.Location = New System.Drawing.Point(0, 3)
        Me.pDiag.Name = "pDiag"
        Me.pDiag.Size = New System.Drawing.Size(1477, 446)
        Me.pDiag.TabIndex = 0
        Me.pDiag.Tag = ""
        '
        'pDiag0
        '
        Me.pDiag0.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.pDiag0.BackColor = System.Drawing.Color.Cornsilk
        Me.pDiag0.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
        Me.pDiag0.Controls.Add(Me.tDiagStatus)
        Me.pDiag0.Controls.Add(Me.Button2)
        Me.pDiag0.Controls.Add(Me.tDiagEISR)
        Me.pDiag0.Controls.Add(Me.tDiagEOSR)
        Me.pDiag0.Controls.Add(Me.tDiagEShipTo)
        Me.pDiag0.Controls.Add(Me.tDiagESoldTo)
        Me.pDiag0.Controls.Add(Me.tDiagDenNote)
        Me.pDiag0.Controls.Add(Me.tDiagAccNote)
        Me.pDiag0.Controls.Add(Me.tDiagNextSend)
        Me.pDiag0.Controls.Add(Me.UltraLabel165)
        Me.pDiag0.Controls.Add(Me.tDiagDenDate)
        Me.pDiag0.Controls.Add(Me.tDiagDenBy)
        Me.pDiag0.Controls.Add(Me.tDiagAccDate)
        Me.pDiag0.Controls.Add(Me.tDiagAccBy)
        Me.pDiag0.Controls.Add(Me.tDiagDen)
        Me.pDiag0.Controls.Add(Me.tDiagAcc)
        Me.pDiag0.Controls.Add(Me.tDiagRec)
        Me.pDiag0.Controls.Add(Me.tDiagEmail)
        Me.pDiag0.Controls.Add(Me.UltraLabel166)
        Me.pDiag0.Controls.Add(Me.tDiagRecDate)
        Me.pDiag0.Controls.Add(Me.tDiagRecBy)
        Me.pDiag0.Controls.Add(Me.UltraLabel104)
        Me.pDiag0.Controls.Add(Me.tDiagSent)
        Me.pDiag0.Enabled = false
        Me.pDiag0.Location = New System.Drawing.Point(0, 0)
        Me.pDiag0.Name = "pDiag0"
        Me.pDiag0.Size = New System.Drawing.Size(1447, 172)
        Me.pDiag0.TabIndex = 0
        Me.pDiag0.Tag = "Edit"
        '
        'tDiagStatus
        '
        Me.tDiagStatus.Enabled = false
        Me.tDiagStatus.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tDiagStatus.Location = New System.Drawing.Point(197, 132)
        Me.tDiagStatus.Name = "tDiagStatus"
        Me.tDiagStatus.Size = New System.Drawing.Size(132, 24)
        Me.tDiagStatus.TabIndex = 25
        '
        'Button2
        '
        Me.Button2.Location = New System.Drawing.Point(6, 128)
        Me.Button2.Name = "Button2"
        Me.Button2.Size = New System.Drawing.Size(182, 29)
        Me.Button2.TabIndex = 24
        Me.Button2.Text = "Cancel Diag Email"
        Me.Button2.UseVisualStyleBackColor = true
        '
        'tDiagEISR
        '
        Appearance197.FontData.BoldAsString = "True"
        Appearance197.FontData.SizeInPoints = 8!
        Me.tDiagEISR.Appearance = Appearance197
        Me.tDiagEISR.Location = New System.Drawing.Point(1012, 29)
        Me.tDiagEISR.Name = "tDiagEISR"
        Me.tDiagEISR.Size = New System.Drawing.Size(97, 19)
        Me.tDiagEISR.TabIndex = 23
        Me.tDiagEISR.Text = "Email ISR"
        '
        'tDiagEOSR
        '
        Appearance201.FontData.BoldAsString = "True"
        Appearance201.FontData.SizeInPoints = 8!
        Me.tDiagEOSR.Appearance = Appearance201
        Me.tDiagEOSR.Location = New System.Drawing.Point(899, 29)
        Me.tDiagEOSR.Name = "tDiagEOSR"
        Me.tDiagEOSR.Size = New System.Drawing.Size(97, 19)
        Me.tDiagEOSR.TabIndex = 22
        Me.tDiagEOSR.Text = "Email OSR"
        '
        'tDiagEShipTo
        '
        Appearance199.FontData.BoldAsString = "True"
        Appearance199.FontData.SizeInPoints = 8!
        Me.tDiagEShipTo.Appearance = Appearance199
        Me.tDiagEShipTo.Location = New System.Drawing.Point(763, 29)
        Me.tDiagEShipTo.Name = "tDiagEShipTo"
        Me.tDiagEShipTo.Size = New System.Drawing.Size(121, 19)
        Me.tDiagEShipTo.TabIndex = 21
        Me.tDiagEShipTo.Text = "Email Ship To"
        '
        'tDiagESoldTo
        '
        Appearance198.FontData.BoldAsString = "True"
        Appearance198.FontData.SizeInPoints = 8!
        Me.tDiagESoldTo.Appearance = Appearance198
        Me.tDiagESoldTo.Location = New System.Drawing.Point(637, 29)
        Me.tDiagESoldTo.Name = "tDiagESoldTo"
        Me.tDiagESoldTo.Size = New System.Drawing.Size(120, 19)
        Me.tDiagESoldTo.TabIndex = 20
        Me.tDiagESoldTo.Text = "Email Sold To"
        '
        'tDiagDenNote
        '
        Me.tDiagDenNote.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tDiagDenNote.AutoSize = false
        EditorButton1.Text = "All"
        Me.tDiagDenNote.ButtonsRight.Add(EditorButton1)
        Me.tDiagDenNote.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tDiagDenNote.Location = New System.Drawing.Point(335, 80)
        Me.tDiagDenNote.Multiline = true
        Me.tDiagDenNote.Name = "tDiagDenNote"
        Me.tDiagDenNote.Scrollbars = System.Windows.Forms.ScrollBars.Vertical
        Me.tDiagDenNote.Size = New System.Drawing.Size(1107, 88)
        Me.tDiagDenNote.TabIndex = 19
        '
        'tDiagAccNote
        '
        Me.tDiagAccNote.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tDiagAccNote.AutoSize = false
        Me.tDiagAccNote.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tDiagAccNote.Location = New System.Drawing.Point(335, 54)
        Me.tDiagAccNote.Name = "tDiagAccNote"
        Me.tDiagAccNote.Size = New System.Drawing.Size(1107, 24)
        Me.tDiagAccNote.TabIndex = 18
        '
        'tDiagNextSend
        '
        Me.tDiagNextSend.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tDiagNextSend.Location = New System.Drawing.Point(458, 29)
        Me.tDiagNextSend.Name = "tDiagNextSend"
        Me.tDiagNextSend.Size = New System.Drawing.Size(132, 24)
        Me.tDiagNextSend.TabIndex = 17
        '
        'UltraLabel165
        '
        Me.UltraLabel165.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel165.Location = New System.Drawing.Point(348, 33)
        Me.UltraLabel165.Name = "UltraLabel165"
        Me.UltraLabel165.Size = New System.Drawing.Size(119, 20)
        Me.UltraLabel165.TabIndex = 16
        Me.UltraLabel165.Text = "Next Send Date"
        '
        'tDiagDenDate
        '
        Me.tDiagDenDate.Enabled = false
        Me.tDiagDenDate.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tDiagDenDate.Location = New System.Drawing.Point(197, 81)
        Me.tDiagDenDate.Name = "tDiagDenDate"
        Me.tDiagDenDate.Size = New System.Drawing.Size(132, 24)
        Me.tDiagDenDate.TabIndex = 15
        '
        'tDiagDenBy
        '
        Me.tDiagDenBy.Enabled = false
        Me.tDiagDenBy.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tDiagDenBy.Location = New System.Drawing.Point(110, 81)
        Me.tDiagDenBy.Name = "tDiagDenBy"
        Me.tDiagDenBy.Size = New System.Drawing.Size(82, 24)
        Me.tDiagDenBy.TabIndex = 14
        '
        'tDiagAccDate
        '
        Me.tDiagAccDate.Enabled = false
        Me.tDiagAccDate.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tDiagAccDate.Location = New System.Drawing.Point(197, 55)
        Me.tDiagAccDate.Name = "tDiagAccDate"
        Me.tDiagAccDate.Size = New System.Drawing.Size(132, 24)
        Me.tDiagAccDate.TabIndex = 13
        '
        'tDiagAccBy
        '
        Me.tDiagAccBy.Enabled = false
        Me.tDiagAccBy.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tDiagAccBy.Location = New System.Drawing.Point(110, 55)
        Me.tDiagAccBy.Name = "tDiagAccBy"
        Me.tDiagAccBy.Size = New System.Drawing.Size(82, 24)
        Me.tDiagAccBy.TabIndex = 12
        '
        'tDiagDen
        '
        Appearance195.FontData.BoldAsString = "True"
        Appearance195.FontData.SizeInPoints = 8!
        Me.tDiagDen.Appearance = Appearance195
        Me.tDiagDen.Location = New System.Drawing.Point(8, 84)
        Me.tDiagDen.Name = "tDiagDen"
        Me.tDiagDen.Size = New System.Drawing.Size(96, 20)
        Me.tDiagDen.TabIndex = 11
        Me.tDiagDen.Text = "Denied"
        '
        'tDiagAcc
        '
        Appearance196.FontData.BoldAsString = "True"
        Appearance196.FontData.SizeInPoints = 8!
        Me.tDiagAcc.Appearance = Appearance196
        Me.tDiagAcc.Location = New System.Drawing.Point(8, 58)
        Me.tDiagAcc.Name = "tDiagAcc"
        Me.tDiagAcc.Size = New System.Drawing.Size(96, 20)
        Me.tDiagAcc.TabIndex = 10
        Me.tDiagAcc.Text = "Accepted"
        '
        'tDiagRec
        '
        Appearance200.FontData.BoldAsString = "True"
        Appearance200.FontData.SizeInPoints = 8!
        Me.tDiagRec.Appearance = Appearance200
        Me.tDiagRec.Location = New System.Drawing.Point(8, 32)
        Me.tDiagRec.Name = "tDiagRec"
        Me.tDiagRec.Size = New System.Drawing.Size(96, 20)
        Me.tDiagRec.TabIndex = 9
        Me.tDiagRec.Text = "Received"
        '
        'tDiagEmail
        '
        Me.tDiagEmail.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.tDiagEmail.AutoSize = false
        Me.tDiagEmail.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tDiagEmail.Location = New System.Drawing.Point(401, 3)
        Me.tDiagEmail.Name = "tDiagEmail"
        Me.tDiagEmail.Size = New System.Drawing.Size(1041, 24)
        Me.tDiagEmail.TabIndex = 6
        '
        'UltraLabel166
        '
        Me.UltraLabel166.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel166.Location = New System.Drawing.Point(348, 7)
        Me.UltraLabel166.Name = "UltraLabel166"
        Me.UltraLabel166.Size = New System.Drawing.Size(56, 20)
        Me.UltraLabel166.TabIndex = 5
        Me.UltraLabel166.Text = "Email"
        '
        'tDiagRecDate
        '
        Me.tDiagRecDate.Enabled = false
        Me.tDiagRecDate.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tDiagRecDate.Location = New System.Drawing.Point(197, 29)
        Me.tDiagRecDate.Name = "tDiagRecDate"
        Me.tDiagRecDate.Size = New System.Drawing.Size(132, 24)
        Me.tDiagRecDate.TabIndex = 4
        '
        'tDiagRecBy
        '
        Me.tDiagRecBy.Enabled = false
        Me.tDiagRecBy.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tDiagRecBy.Location = New System.Drawing.Point(110, 29)
        Me.tDiagRecBy.Name = "tDiagRecBy"
        Me.tDiagRecBy.Size = New System.Drawing.Size(82, 24)
        Me.tDiagRecBy.TabIndex = 3
        '
        'UltraLabel104
        '
        Me.UltraLabel104.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel104.Location = New System.Drawing.Point(28, 8)
        Me.UltraLabel104.Name = "UltraLabel104"
        Me.UltraLabel104.Size = New System.Drawing.Size(57, 20)
        Me.UltraLabel104.TabIndex = 1
        Me.UltraLabel104.Text = "Sent"
        '
        'tDiagSent
        '
        Me.tDiagSent.Enabled = false
        Me.tDiagSent.Font = New System.Drawing.Font("Microsoft Sans Serif", 8!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tDiagSent.Location = New System.Drawing.Point(197, 3)
        Me.tDiagSent.Name = "tDiagSent"
        Me.tDiagSent.Size = New System.Drawing.Size(132, 24)
        Me.tDiagSent.TabIndex = 0
        '
        'TabControl
        '
        Me.TabControl.Controls.Add(Me.pContJump)
        Me.TabControl.Controls.Add(Me.pContRefresh)
        Me.TabControl.Controls.Add(Me.UltraButton6)
        Me.TabControl.Controls.Add(Me.tSoldCounty)
        Me.TabControl.Controls.Add(Me.pContacts)
        Me.TabControl.Controls.Add(Me.tsold_cell)
        Me.TabControl.Controls.Add(Me.tOrdContSerial)
        Me.TabControl.Controls.Add(Me.tsold_fax)
        Me.TabControl.Controls.Add(Me.UltraLabel169)
        Me.TabControl.Controls.Add(Me.tsold_phone2)
        Me.TabControl.Controls.Add(Me.cbEmailOSRShipments)
        Me.TabControl.Controls.Add(Me.tsold_addr3)
        Me.TabControl.Controls.Add(Me.cbEmailShipment)
        Me.TabControl.Controls.Add(Me.tProvince)
        Me.TabControl.Controls.Add(Me.bContFind)
        Me.TabControl.Controls.Add(Me.tCountry)
        Me.TabControl.Controls.Add(Me.bAddOther)
        Me.TabControl.Controls.Add(Me.tSold_City)
        Me.TabControl.Controls.Add(Me.bAddHVAC)
        Me.TabControl.Controls.Add(Me.tsold_email)
        Me.TabControl.Controls.Add(Me.bAddInst)
        Me.TabControl.Controls.Add(Me.tsold_zip)
        Me.TabControl.Controls.Add(Me.bAddBuilder)
        Me.TabControl.Controls.Add(Me.tsold_state)
        Me.TabControl.Controls.Add(Me.bAddArch)
        Me.TabControl.Controls.Add(Me.tsold_addr2)
        Me.TabControl.Controls.Add(Me.gContacts)
        Me.TabControl.Controls.Add(Me.tsold_addr1)
        Me.TabControl.Controls.Add(Me.pContact)
        Me.TabControl.Controls.Add(Me.tsold_company)
        Me.TabControl.Controls.Add(Me.cbIsSplit)
        Me.TabControl.Controls.Add(Me.UltraLabel89)
        Me.TabControl.Controls.Add(Me.tRefSpecialNote)
        Me.TabControl.Controls.Add(Me.UltraTextEditor2)
        Me.TabControl.Controls.Add(Me.UltraLabel83)
        Me.TabControl.Controls.Add(Me.UltraLabel79)
        Me.TabControl.Controls.Add(Me.tRefPerc)
        Me.TabControl.Controls.Add(Me.tRefName)
        Me.TabControl.Controls.Add(Me.tRefAddr3)
        Me.TabControl.Controls.Add(Me.UltraLabel73)
        Me.TabControl.Controls.Add(Me.tRefCity)
        Me.TabControl.Controls.Add(Me.tRefZip)
        Me.TabControl.Controls.Add(Me.UltraLabel74)
        Me.TabControl.Controls.Add(Me.tRefState)
        Me.TabControl.Controls.Add(Me.UltraLabel75)
        Me.TabControl.Controls.Add(Me.UltraLabel76)
        Me.TabControl.Controls.Add(Me.tRefAddr2)
        Me.TabControl.Controls.Add(Me.UltraLabel77)
        Me.TabControl.Controls.Add(Me.tRefAddr1)
        Me.TabControl.Controls.Add(Me.UltraLabel78)
        Me.TabControl.Controls.Add(Me.tRefCompany)
        Me.TabControl.Controls.Add(Me.UltraLabel80)
        Me.TabControl.Controls.Add(Me.UltraLabel81)
        Me.TabControl.Controls.Add(Me.tDefThirdPartyName)
        Me.TabControl.Controls.Add(Me.cbDefThirdParty)
        Me.TabControl.Controls.Add(Me.tAcctOpen)
        Me.TabControl.Controls.Add(Me.cb5Perc)
        Me.TabControl.Controls.Add(Me.tSoldCustId)
        Me.TabControl.Controls.Add(Me.lSoldcounty)
        Me.TabControl.Controls.Add(Me.tSold_Name)
        Me.TabControl.Controls.Add(Me.bPhoneFind)
        Me.TabControl.Controls.Add(Me.tsold_phone1)
        Me.TabControl.Controls.Add(Me.lsold_addr3)
        Me.TabControl.Controls.Add(Me.lProvince)
        Me.TabControl.Controls.Add(Me.UltraLabel16)
        Me.TabControl.Controls.Add(Me.tCustId)
        Me.TabControl.Controls.Add(Me.UltraLabel18)
        Me.TabControl.Controls.Add(Me.UltraLabel19)
        Me.TabControl.Controls.Add(Me.lsold_fax)
        Me.TabControl.Controls.Add(Me.lsold_phone2)
        Me.TabControl.Controls.Add(Me.lsold_zip)
        Me.TabControl.Controls.Add(Me.Label1)
        Me.TabControl.Controls.Add(Me.lsold_state)
        Me.TabControl.Controls.Add(Me.lsold_city)
        Me.TabControl.Controls.Add(Me.lsold_addr2)
        Me.TabControl.Controls.Add(Me.lSold_addr1)
        Me.TabControl.Controls.Add(Me.UltraLabel8)
        Me.TabControl.Controls.Add(Me.UltraLabel9)
        Me.TabControl.Controls.Add(Me.UltraLabel6)
        Me.TabControl.Controls.Add(Me.UltraLabel5)
        Me.TabControl.Controls.Add(Me.lReferral)
        Me.TabControl.Controls.Add(Me.UltraLabel40)
        Me.TabControl.Controls.Add(Me.DefaultPage)
        Me.TabControl.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.TabControl.Location = New System.Drawing.Point(2, 34)
        Me.TabControl.Name = "TabControl"
        Me.TabControl.Size = New System.Drawing.Size(1485, 677)
        '
        'pContJump
        '
        Me.pContJump.BackgroundImageLayout = System.Windows.Forms.ImageLayout.Stretch
        Me.pContJump.Image = CType(resources.GetObject("pContJump.Image"),System.Drawing.Image)
        Me.pContJump.InitialImage = Nothing
        Me.pContJump.Location = New System.Drawing.Point(250, 12)
        Me.pContJump.Name = "pContJump"
        Me.pContJump.Size = New System.Drawing.Size(28, 24)
        Me.pContJump.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage
        Me.pContJump.TabIndex = 174
        Me.pContJump.TabStop = false
        Me.pContJump.Tag = ""
        '
        'pContRefresh
        '
        Me.pContRefresh.BackgroundImageLayout = System.Windows.Forms.ImageLayout.Stretch
        Me.pContRefresh.Enabled = false
        Me.pContRefresh.Image = CType(resources.GetObject("pContRefresh.Image"),System.Drawing.Image)
        Me.pContRefresh.InitialImage = Nothing
        Me.pContRefresh.Location = New System.Drawing.Point(142, 12)
        Me.pContRefresh.Name = "pContRefresh"
        Me.pContRefresh.Size = New System.Drawing.Size(28, 24)
        Me.pContRefresh.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage
        Me.pContRefresh.TabIndex = 173
        Me.pContRefresh.TabStop = false
        Me.pContRefresh.Tag = "edit"
        '
        'UltraButton6
        '
        Me.UltraButton6.ButtonStyle = Infragistics.Win.UIElementButtonStyle.FlatBorderless
        Me.UltraButton6.Location = New System.Drawing.Point(259, 489)
        Me.UltraButton6.Name = "UltraButton6"
        Me.UltraButton6.Size = New System.Drawing.Size(39, 28)
        Me.UltraButton6.TabIndex = 134
        '
        'tSoldCounty
        '
        Me.tSoldCounty.Enabled = false
        Me.tSoldCounty.Location = New System.Drawing.Point(96, 342)
        Me.tSoldCounty.Name = "tSoldCounty"
        Me.tSoldCounty.ReadOnly = true
        Me.tSoldCounty.Size = New System.Drawing.Size(192, 25)
        Me.tSoldCounty.TabIndex = 97
        Me.tSoldCounty.Tag = "edit;ord_sold_county"
        '
        'pContacts
        '
        Me.pContacts.BackgroundImageLayout = System.Windows.Forms.ImageLayout.Stretch
        Me.pContacts.Enabled = false
        Me.pContacts.Image = CType(resources.GetObject("pContacts.Image"),System.Drawing.Image)
        Me.pContacts.InitialImage = Nothing
        Me.pContacts.Location = New System.Drawing.Point(96, 3)
        Me.pContacts.Name = "pContacts"
        Me.pContacts.Size = New System.Drawing.Size(38, 34)
        Me.pContacts.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage
        Me.pContacts.TabIndex = 172
        Me.pContacts.TabStop = false
        Me.pContacts.Tag = "edit"
        '
        'tsold_cell
        '
        Me.tsold_cell.Enabled = false
        Me.tsold_cell.Location = New System.Drawing.Point(96, 462)
        Me.tsold_cell.Name = "tsold_cell"
        Me.tsold_cell.ReadOnly = true
        Me.tsold_cell.Size = New System.Drawing.Size(192, 24)
        Me.tsold_cell.TabIndex = 14
        Me.tsold_cell.Tag = "edit;ord_sold_cell"
        '
        'tOrdContSerial
        '
        Me.tOrdContSerial.Enabled = false
        Me.tOrdContSerial.Location = New System.Drawing.Point(121, 591)
        Me.tOrdContSerial.Name = "tOrdContSerial"
        Me.tOrdContSerial.Size = New System.Drawing.Size(167, 25)
        Me.tOrdContSerial.TabIndex = 170
        Me.tOrdContSerial.Tag = "edit;ord_cont_serial;nm"
        Me.tOrdContSerial.Text = "0"
        '
        'tsold_fax
        '
        Me.tsold_fax.Enabled = false
        Me.tsold_fax.Location = New System.Drawing.Point(96, 434)
        Me.tsold_fax.Name = "tsold_fax"
        Me.tsold_fax.ReadOnly = true
        Me.tsold_fax.Size = New System.Drawing.Size(192, 24)
        Me.tsold_fax.TabIndex = 13
        Me.tsold_fax.Tag = "edit;ord_sold_fax"
        '
        'UltraLabel169
        '
        Me.UltraLabel169.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel169.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel169.Location = New System.Drawing.Point(10, 592)
        Me.UltraLabel169.Name = "UltraLabel169"
        Me.UltraLabel169.Size = New System.Drawing.Size(124, 18)
        Me.UltraLabel169.TabIndex = 171
        Me.UltraLabel169.Text = "Contact Serial"
        Me.UltraLabel169.Visible = false
        '
        'tsold_phone2
        '
        Me.tsold_phone2.Enabled = false
        Me.tsold_phone2.Location = New System.Drawing.Point(96, 406)
        Me.tsold_phone2.Name = "tsold_phone2"
        Me.tsold_phone2.ReadOnly = true
        Me.tsold_phone2.Size = New System.Drawing.Size(192, 24)
        Me.tsold_phone2.TabIndex = 12
        Me.tsold_phone2.Tag = "edit;ord_sold_phone2"
        '
        'cbEmailOSRShipments
        '
        Appearance98.FontData.BoldAsString = "True"
        Me.cbEmailOSRShipments.Appearance = Appearance98
        Me.cbEmailOSRShipments.BackColor = System.Drawing.Color.AliceBlue
        Me.cbEmailOSRShipments.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.cbEmailOSRShipments.Enabled = false
        Me.cbEmailOSRShipments.Location = New System.Drawing.Point(96, 541)
        Me.cbEmailOSRShipments.Name = "cbEmailOSRShipments"
        Me.cbEmailOSRShipments.Size = New System.Drawing.Size(211, 17)
        Me.cbEmailOSRShipments.TabIndex = 169
        Me.cbEmailOSRShipments.Tag = "edit;ord_email_osr_shipment;cb"
        Me.cbEmailOSRShipments.Text = "Email OSR Ship Notifications"
        '
        'tsold_addr3
        '
        Me.tsold_addr3.Enabled = false
        Me.tsold_addr3.Location = New System.Drawing.Point(96, 231)
        Me.tsold_addr3.Name = "tsold_addr3"
        Me.tsold_addr3.ReadOnly = true
        Me.tsold_addr3.Size = New System.Drawing.Size(192, 25)
        Me.tsold_addr3.TabIndex = 7
        Me.tsold_addr3.Tag = "edit;ord_sold_addr3"
        '
        'cbEmailShipment
        '
        Appearance24.FontData.BoldAsString = "True"
        Me.cbEmailShipment.Appearance = Appearance24
        Me.cbEmailShipment.BackColor = System.Drawing.Color.AliceBlue
        Me.cbEmailShipment.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.cbEmailShipment.Enabled = false
        Me.cbEmailShipment.Location = New System.Drawing.Point(96, 517)
        Me.cbEmailShipment.Name = "cbEmailShipment"
        Me.cbEmailShipment.Size = New System.Drawing.Size(211, 18)
        Me.cbEmailShipment.TabIndex = 168
        Me.cbEmailShipment.Tag = "edit;ord_email_shipment;cb"
        Me.cbEmailShipment.Text = "Email Ship Notifications"
        '
        'tProvince
        '
        Me.tProvince.Enabled = false
        Me.tProvince.Location = New System.Drawing.Point(96, 369)
        Me.tProvince.Name = "tProvince"
        Me.tProvince.ReadOnly = true
        Me.tProvince.Size = New System.Drawing.Size(192, 25)
        Me.tProvince.TabIndex = 11
        Me.tProvince.Tag = "edit;ord_sold_province"
        '
        'bContFind
        '
        Appearance99.AlphaLevel = CType(100,Short)
        Appearance99.BackColor = System.Drawing.Color.FromArgb(CType(CType(192,Byte),Integer), CType(CType(192,Byte),Integer), CType(CType(255,Byte),Integer))
        Appearance99.BackColor2 = System.Drawing.Color.AliceBlue
        Appearance99.BackColorAlpha = Infragistics.Win.Alpha.UseAlphaLevel
        Appearance99.BackGradientStyle = Infragistics.Win.GradientStyle.Vertical
        Appearance99.ForegroundAlpha = Infragistics.Win.Alpha.Opaque
        Me.bContFind.Appearance = Appearance99
        Me.bContFind.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.bContFind.Enabled = false
        Me.bContFind.Location = New System.Drawing.Point(317, 434)
        Me.bContFind.Name = "bContFind"
        Appearance100.BackColor = System.Drawing.Color.Yellow
        Me.bContFind.PressedAppearance = Appearance100
        Me.bContFind.Size = New System.Drawing.Size(249, 28)
        Me.bContFind.TabIndex = 167
        Me.bContFind.Tag = "Edit"
        Me.bContFind.Text = "Find"
        Me.bContFind.UseOsThemes = Infragistics.Win.DefaultableBoolean.[False]
        '
        'tCountry
        '
        Me.tCountry.CalcManager = Me.UltraCalcManager1
        Me.tCountry.CheckedListSettings.CheckStateMember = ""
        Me.tCountry.DropDownStyle = Infragistics.Win.UltraWinGrid.UltraComboStyle.DropDownList
        Me.tCountry.Enabled = false
        Me.tCountry.Location = New System.Drawing.Point(96, 148)
        Me.tCountry.Name = "tCountry"
        Me.tCountry.ReadOnly = true
        Me.tCountry.Size = New System.Drawing.Size(192, 26)
        Me.tCountry.TabIndex = 4
        Me.tCountry.Tag = "edit;ord_sold_country"
        '
        'bAddOther
        '
        Appearance101.AlphaLevel = CType(100,Short)
        Appearance101.BackColor = System.Drawing.Color.FromArgb(CType(CType(192,Byte),Integer), CType(CType(192,Byte),Integer), CType(CType(255,Byte),Integer))
        Appearance101.BackColor2 = System.Drawing.Color.AliceBlue
        Appearance101.BackColorAlpha = Infragistics.Win.Alpha.UseAlphaLevel
        Appearance101.BackGradientStyle = Infragistics.Win.GradientStyle.Vertical
        Appearance101.ForegroundAlpha = Infragistics.Win.Alpha.Opaque
        Me.bAddOther.Appearance = Appearance101
        Me.bAddOther.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.bAddOther.Enabled = false
        Me.bAddOther.Location = New System.Drawing.Point(317, 397)
        Me.bAddOther.Name = "bAddOther"
        Appearance102.BackColor = System.Drawing.Color.Yellow
        Me.bAddOther.PressedAppearance = Appearance102
        Me.bAddOther.Size = New System.Drawing.Size(249, 28)
        Me.bAddOther.TabIndex = 166
        Me.bAddOther.Tag = "Edit"
        Me.bAddOther.Text = "Find Other"
        Me.bAddOther.UseOsThemes = Infragistics.Win.DefaultableBoolean.[False]
        '
        'tSold_City
        '
        Me.tSold_City.CalcManager = Me.UltraCalcManager1
        Me.tSold_City.CheckedListSettings.CheckStateMember = ""
        Me.tSold_City.Enabled = false
        Me.tSold_City.Location = New System.Drawing.Point(96, 286)
        Me.tSold_City.Name = "tSold_City"
        Me.tSold_City.ReadOnly = true
        Me.tSold_City.Size = New System.Drawing.Size(192, 26)
        Me.tSold_City.TabIndex = 9
        Me.tSold_City.Tag = "edit;ord_sold_city"
        '
        'bAddHVAC
        '
        Appearance103.AlphaLevel = CType(100,Short)
        Appearance103.BackColor = System.Drawing.Color.FromArgb(CType(CType(192,Byte),Integer), CType(CType(192,Byte),Integer), CType(CType(255,Byte),Integer))
        Appearance103.BackColor2 = System.Drawing.Color.AliceBlue
        Appearance103.BackColorAlpha = Infragistics.Win.Alpha.UseAlphaLevel
        Appearance103.BackGradientStyle = Infragistics.Win.GradientStyle.Vertical
        Appearance103.ForegroundAlpha = Infragistics.Win.Alpha.Opaque
        Me.bAddHVAC.Appearance = Appearance103
        Me.bAddHVAC.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.bAddHVAC.Enabled = false
        Me.bAddHVAC.Location = New System.Drawing.Point(317, 369)
        Me.bAddHVAC.Name = "bAddHVAC"
        Appearance104.BackColor = System.Drawing.Color.Yellow
        Me.bAddHVAC.PressedAppearance = Appearance104
        Me.bAddHVAC.Size = New System.Drawing.Size(249, 28)
        Me.bAddHVAC.TabIndex = 165
        Me.bAddHVAC.Tag = "Edit"
        Me.bAddHVAC.Text = "Find HVAC"
        Me.bAddHVAC.UseOsThemes = Infragistics.Win.DefaultableBoolean.[False]
        '
        'tsold_email
        '
        Me.tsold_email.Enabled = false
        Me.tsold_email.Location = New System.Drawing.Point(96, 489)
        Me.tsold_email.Name = "tsold_email"
        Me.tsold_email.ReadOnly = true
        Me.tsold_email.Size = New System.Drawing.Size(163, 25)
        Me.tsold_email.TabIndex = 15
        Me.tsold_email.Tag = "edit;ord_sold_email"
        '
        'bAddInst
        '
        Appearance105.AlphaLevel = CType(100,Short)
        Appearance105.BackColor = System.Drawing.Color.FromArgb(CType(CType(192,Byte),Integer), CType(CType(192,Byte),Integer), CType(CType(255,Byte),Integer))
        Appearance105.BackColor2 = System.Drawing.Color.AliceBlue
        Appearance105.BackColorAlpha = Infragistics.Win.Alpha.UseAlphaLevel
        Appearance105.BackGradientStyle = Infragistics.Win.GradientStyle.Vertical
        Appearance105.ForegroundAlpha = Infragistics.Win.Alpha.Opaque
        Me.bAddInst.Appearance = Appearance105
        Me.bAddInst.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.bAddInst.Enabled = false
        Me.bAddInst.Location = New System.Drawing.Point(317, 342)
        Me.bAddInst.Name = "bAddInst"
        Appearance106.BackColor = System.Drawing.Color.Yellow
        Me.bAddInst.PressedAppearance = Appearance106
        Me.bAddInst.Size = New System.Drawing.Size(249, 27)
        Me.bAddInst.TabIndex = 164
        Me.bAddInst.Tag = "Edit"
        Me.bAddInst.Text = "Find Installer"
        Me.bAddInst.UseOsThemes = Infragistics.Win.DefaultableBoolean.[False]
        '
        'tsold_zip
        '
        Me.tsold_zip.Enabled = false
        Me.tsold_zip.Location = New System.Drawing.Point(96, 258)
        Me.tsold_zip.Name = "tsold_zip"
        Me.tsold_zip.ReadOnly = true
        Me.tsold_zip.Size = New System.Drawing.Size(192, 25)
        Me.tsold_zip.TabIndex = 8
        Me.tsold_zip.Tag = "edit;ord_sold_zip"
        '
        'bAddBuilder
        '
        Appearance107.AlphaLevel = CType(100,Short)
        Appearance107.BackColor = System.Drawing.Color.FromArgb(CType(CType(192,Byte),Integer), CType(CType(192,Byte),Integer), CType(CType(255,Byte),Integer))
        Appearance107.BackColor2 = System.Drawing.Color.AliceBlue
        Appearance107.BackColorAlpha = Infragistics.Win.Alpha.UseAlphaLevel
        Appearance107.BackGradientStyle = Infragistics.Win.GradientStyle.Vertical
        Appearance107.ForegroundAlpha = Infragistics.Win.Alpha.Opaque
        Me.bAddBuilder.Appearance = Appearance107
        Me.bAddBuilder.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.bAddBuilder.Enabled = false
        Me.bAddBuilder.Location = New System.Drawing.Point(317, 314)
        Me.bAddBuilder.Name = "bAddBuilder"
        Appearance108.BackColor = System.Drawing.Color.Yellow
        Me.bAddBuilder.PressedAppearance = Appearance108
        Me.bAddBuilder.Size = New System.Drawing.Size(249, 28)
        Me.bAddBuilder.TabIndex = 163
        Me.bAddBuilder.Tag = "Edit"
        Me.bAddBuilder.Text = "Find Builder"
        Me.bAddBuilder.UseOsThemes = Infragistics.Win.DefaultableBoolean.[False]
        '
        'tsold_state
        '
        Me.tsold_state.CharacterCasing = System.Windows.Forms.CharacterCasing.Upper
        Me.tsold_state.Enabled = false
        Me.tsold_state.Location = New System.Drawing.Point(96, 314)
        Me.tsold_state.Name = "tsold_state"
        Me.tsold_state.ReadOnly = true
        Me.tsold_state.Size = New System.Drawing.Size(192, 25)
        Me.tsold_state.TabIndex = 10
        Me.tsold_state.Tag = "edit;ord_sold_state"
        '
        'bAddArch
        '
        Appearance109.AlphaLevel = CType(100,Short)
        Appearance109.BackColor = System.Drawing.Color.FromArgb(CType(CType(192,Byte),Integer), CType(CType(192,Byte),Integer), CType(CType(255,Byte),Integer))
        Appearance109.BackColor2 = System.Drawing.Color.AliceBlue
        Appearance109.BackColorAlpha = Infragistics.Win.Alpha.UseAlphaLevel
        Appearance109.BackGradientStyle = Infragistics.Win.GradientStyle.Vertical
        Appearance109.ForegroundAlpha = Infragistics.Win.Alpha.Opaque
        Me.bAddArch.Appearance = Appearance109
        Me.bAddArch.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.bAddArch.Enabled = false
        Me.bAddArch.Location = New System.Drawing.Point(317, 286)
        Me.bAddArch.Name = "bAddArch"
        Appearance110.BackColor = System.Drawing.Color.Yellow
        Me.bAddArch.PressedAppearance = Appearance110
        Me.bAddArch.Size = New System.Drawing.Size(249, 28)
        Me.bAddArch.TabIndex = 162
        Me.bAddArch.Tag = "Edit"
        Me.bAddArch.Text = "Find Architect"
        Me.bAddArch.UseOsThemes = Infragistics.Win.DefaultableBoolean.[False]
        '
        'tsold_addr2
        '
        Me.tsold_addr2.Enabled = false
        Me.tsold_addr2.Location = New System.Drawing.Point(96, 203)
        Me.tsold_addr2.Name = "tsold_addr2"
        Me.tsold_addr2.ReadOnly = true
        Me.tsold_addr2.Size = New System.Drawing.Size(192, 25)
        Me.tsold_addr2.TabIndex = 6
        Me.tsold_addr2.Tag = "edit;ord_sold_addr2"
        '
        'gContacts
        '
        Me.gContacts.CalcManager = Me.UltraCalcManager1
        Me.gContacts.DisplayLayout.AutoFitStyle = Infragistics.Win.UltraWinGrid.AutoFitStyle.ResizeAllColumns
        UltraGridBand1.ColHeadersVisible = false
        UltraGridColumn1.Header.VisiblePosition = 0
        UltraGridColumn1.Width = 208
        UltraGridColumn2.CellActivation = Infragistics.Win.UltraWinGrid.Activation.NoEdit
        UltraGridColumn2.Header.VisiblePosition = 1
        UltraGridColumn2.MaxWidth = 20
        UltraGridColumn2.Style = Infragistics.Win.UltraWinGrid.ColumnStyle.CheckBox
        UltraGridColumn2.Width = 20
        UltraGridBand1.Columns.AddRange(New Object() {UltraGridColumn1, UltraGridColumn2})
        Me.gContacts.DisplayLayout.BandsSerializer.Add(UltraGridBand1)
        Me.gContacts.DisplayLayout.MaxColScrollRegions = 1
        Me.gContacts.DisplayLayout.MaxRowScrollRegions = 1
        Me.gContacts.DisplayLayout.Override.AllowAddNew = Infragistics.Win.UltraWinGrid.AllowAddNew.No
        Me.gContacts.DisplayLayout.Override.AllowDelete = Infragistics.Win.DefaultableBoolean.[True]
        Me.gContacts.DisplayLayout.Override.AllowUpdate = Infragistics.Win.DefaultableBoolean.[False]
        Me.gContacts.DisplayLayout.Override.RowSelectors = Infragistics.Win.DefaultableBoolean.[True]
        Me.gContacts.DisplayLayout.Override.SelectTypeCell = Infragistics.Win.UltraWinGrid.SelectType.[Single]
        Me.gContacts.DisplayLayout.Override.SelectTypeCol = Infragistics.Win.UltraWinGrid.SelectType.None
        Me.gContacts.DisplayLayout.Override.SelectTypeRow = Infragistics.Win.UltraWinGrid.SelectType.[Single]
        Me.gContacts.DisplayLayout.ScrollBounds = Infragistics.Win.UltraWinGrid.ScrollBounds.ScrollToFill
        Me.gContacts.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.gContacts.Location = New System.Drawing.Point(317, 37)
        Me.gContacts.Name = "gContacts"
        Me.gContacts.Size = New System.Drawing.Size(249, 249)
        Me.gContacts.TabIndex = 161
        Me.gContacts.Tag = "NOEDIT"
        Me.gContacts.Text = "Contacts"
        '
        'tsold_addr1
        '
        Me.tsold_addr1.Enabled = false
        Me.tsold_addr1.Location = New System.Drawing.Point(96, 175)
        Me.tsold_addr1.Name = "tsold_addr1"
        Me.tsold_addr1.ReadOnly = true
        Me.tsold_addr1.Size = New System.Drawing.Size(192, 25)
        Me.tsold_addr1.TabIndex = 5
        Me.tsold_addr1.Tag = "edit;ord_sold_addr1"
        '
        'pContact
        '
        Me.pContact.BackColor = System.Drawing.Color.AliceBlue
        Me.pContact.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
        Me.pContact.Controls.Add(Me.tContEmail)
        Me.pContact.Controls.Add(Me.UltraLabel100)
        Me.pContact.Controls.Add(Me.tContFax)
        Me.pContact.Controls.Add(Me.UltraLabel101)
        Me.pContact.Controls.Add(Me.tContCell)
        Me.pContact.Controls.Add(Me.UltraLabel102)
        Me.pContact.Controls.Add(Me.tContPhone2)
        Me.pContact.Controls.Add(Me.UltraLabel103)
        Me.pContact.Controls.Add(Me.tContAddr1)
        Me.pContact.Controls.Add(Me.tContType)
        Me.pContact.Controls.Add(Me.UltraLabel85)
        Me.pContact.Controls.Add(Me.tContPayee)
        Me.pContact.Controls.Add(Me.tContName)
        Me.pContact.Controls.Add(Me.tContAddr3)
        Me.pContact.Controls.Add(Me.UltraLabel20)
        Me.pContact.Controls.Add(Me.tContCity)
        Me.pContact.Controls.Add(Me.tContPhone1)
        Me.pContact.Controls.Add(Me.UltraLabel17)
        Me.pContact.Controls.Add(Me.tContState)
        Me.pContact.Controls.Add(Me.UltraLabel27)
        Me.pContact.Controls.Add(Me.UltraLabel28)
        Me.pContact.Controls.Add(Me.UltraLabel57)
        Me.pContact.Controls.Add(Me.tContCompany)
        Me.pContact.Controls.Add(Me.tContAddr2)
        Me.pContact.Controls.Add(Me.UltraLabel11)
        Me.pContact.Controls.Add(Me.tContNote)
        Me.pContact.Controls.Add(Me.tContZip)
        Me.pContact.Controls.Add(Me.UltraLabel54)
        Me.pContact.Controls.Add(Me.UltraLabel30)
        Me.pContact.Controls.Add(Me.UltraLabel29)
        Me.pContact.Controls.Add(Me.UltraLabel21)
        Me.pContact.Location = New System.Drawing.Point(882, 37)
        Me.pContact.Name = "pContact"
        Me.pContact.Size = New System.Drawing.Size(288, 591)
        Me.pContact.TabIndex = 160
        '
        'tContEmail
        '
        Me.tContEmail.CharacterCasing = System.Windows.Forms.CharacterCasing.Upper
        Me.tContEmail.Location = New System.Drawing.Point(86, 369)
        Me.tContEmail.Name = "tContEmail"
        Me.tContEmail.ReadOnly = true
        Me.tContEmail.Size = New System.Drawing.Size(192, 25)
        Me.tContEmail.TabIndex = 216
        Me.tContEmail.Tag = ""
        '
        'UltraLabel100
        '
        Me.UltraLabel100.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel100.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel100.Location = New System.Drawing.Point(8, 369)
        Me.UltraLabel100.Name = "UltraLabel100"
        Me.UltraLabel100.Size = New System.Drawing.Size(116, 19)
        Me.UltraLabel100.TabIndex = 220
        Me.UltraLabel100.Text = "Email"
        '
        'tContFax
        '
        Me.tContFax.CharacterCasing = System.Windows.Forms.CharacterCasing.Upper
        Me.tContFax.Location = New System.Drawing.Point(86, 342)
        Me.tContFax.Name = "tContFax"
        Me.tContFax.ReadOnly = true
        Me.tContFax.Size = New System.Drawing.Size(192, 25)
        Me.tContFax.TabIndex = 215
        Me.tContFax.Tag = ""
        '
        'UltraLabel101
        '
        Me.UltraLabel101.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel101.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel101.Location = New System.Drawing.Point(8, 342)
        Me.UltraLabel101.Name = "UltraLabel101"
        Me.UltraLabel101.Size = New System.Drawing.Size(116, 18)
        Me.UltraLabel101.TabIndex = 219
        Me.UltraLabel101.Text = "Fax"
        '
        'tContCell
        '
        Me.tContCell.CharacterCasing = System.Windows.Forms.CharacterCasing.Upper
        Me.tContCell.Location = New System.Drawing.Point(86, 314)
        Me.tContCell.Name = "tContCell"
        Me.tContCell.ReadOnly = true
        Me.tContCell.Size = New System.Drawing.Size(192, 25)
        Me.tContCell.TabIndex = 214
        Me.tContCell.Tag = ""
        '
        'UltraLabel102
        '
        Me.UltraLabel102.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel102.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel102.Location = New System.Drawing.Point(8, 314)
        Me.UltraLabel102.Name = "UltraLabel102"
        Me.UltraLabel102.Size = New System.Drawing.Size(116, 18)
        Me.UltraLabel102.TabIndex = 218
        Me.UltraLabel102.Text = "Cell"
        '
        'tContPhone2
        '
        Me.tContPhone2.CharacterCasing = System.Windows.Forms.CharacterCasing.Upper
        Me.tContPhone2.Location = New System.Drawing.Point(86, 286)
        Me.tContPhone2.Name = "tContPhone2"
        Me.tContPhone2.ReadOnly = true
        Me.tContPhone2.Size = New System.Drawing.Size(192, 25)
        Me.tContPhone2.TabIndex = 213
        Me.tContPhone2.Tag = ""
        '
        'UltraLabel103
        '
        Me.UltraLabel103.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel103.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel103.Location = New System.Drawing.Point(8, 286)
        Me.UltraLabel103.Name = "UltraLabel103"
        Me.UltraLabel103.Size = New System.Drawing.Size(116, 19)
        Me.UltraLabel103.TabIndex = 217
        Me.UltraLabel103.Text = "Phone 2"
        '
        'tContAddr1
        '
        Me.tContAddr1.Location = New System.Drawing.Point(86, 92)
        Me.tContAddr1.Name = "tContAddr1"
        Me.tContAddr1.ReadOnly = true
        Me.tContAddr1.Size = New System.Drawing.Size(192, 25)
        Me.tContAddr1.TabIndex = 175
        Me.tContAddr1.Tag = ""
        '
        'tContType
        '
        Me.tContType.Location = New System.Drawing.Point(86, 9)
        Me.tContType.Name = "tContType"
        Me.tContType.ReadOnly = true
        Me.tContType.Size = New System.Drawing.Size(192, 25)
        Me.tContType.TabIndex = 163
        Me.tContType.Tag = ""
        '
        'UltraLabel85
        '
        Me.UltraLabel85.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel85.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel85.Location = New System.Drawing.Point(10, 9)
        Me.UltraLabel85.Name = "UltraLabel85"
        Me.UltraLabel85.Size = New System.Drawing.Size(115, 19)
        Me.UltraLabel85.TabIndex = 162
        Me.UltraLabel85.Text = "Type"
        '
        'tContPayee
        '
        Me.tContPayee.BackColor = System.Drawing.Color.AliceBlue
        Me.tContPayee.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.tContPayee.Enabled = false
        Me.tContPayee.Location = New System.Drawing.Point(86, 406)
        Me.tContPayee.Name = "tContPayee"
        Me.tContPayee.Size = New System.Drawing.Size(144, 23)
        Me.tContPayee.TabIndex = 173
        Me.tContPayee.Tag = "Edit"
        Me.tContPayee.Text = "Is a Payee"
        '
        'tContName
        '
        Me.tContName.Location = New System.Drawing.Point(86, 37)
        Me.tContName.Name = "tContName"
        Me.tContName.ReadOnly = true
        Me.tContName.Size = New System.Drawing.Size(192, 25)
        Me.tContName.TabIndex = 164
        Me.tContName.Tag = ""
        '
        'tContAddr3
        '
        Me.tContAddr3.Location = New System.Drawing.Point(86, 148)
        Me.tContAddr3.Name = "tContAddr3"
        Me.tContAddr3.ReadOnly = true
        Me.tContAddr3.Size = New System.Drawing.Size(192, 25)
        Me.tContAddr3.TabIndex = 168
        Me.tContAddr3.Tag = ""
        '
        'UltraLabel20
        '
        Me.UltraLabel20.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel20.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel20.Location = New System.Drawing.Point(10, 148)
        Me.UltraLabel20.Name = "UltraLabel20"
        Me.UltraLabel20.Size = New System.Drawing.Size(115, 18)
        Me.UltraLabel20.TabIndex = 156
        Me.UltraLabel20.Text = "Addr3"
        '
        'tContCity
        '
        Me.tContCity.CalcManager = Me.UltraCalcManager1
        Me.tContCity.CheckedListSettings.CheckStateMember = ""
        Me.tContCity.Location = New System.Drawing.Point(86, 203)
        Me.tContCity.Name = "tContCity"
        Me.tContCity.ReadOnly = true
        Me.tContCity.Size = New System.Drawing.Size(192, 26)
        Me.tContCity.TabIndex = 170
        Me.tContCity.Tag = ""
        '
        'tContPhone1
        '
        Me.tContPhone1.CharacterCasing = System.Windows.Forms.CharacterCasing.Upper
        Me.tContPhone1.Location = New System.Drawing.Point(86, 258)
        Me.tContPhone1.Name = "tContPhone1"
        Me.tContPhone1.ReadOnly = true
        Me.tContPhone1.Size = New System.Drawing.Size(192, 25)
        Me.tContPhone1.TabIndex = 172
        Me.tContPhone1.Tag = ""
        '
        'UltraLabel17
        '
        Me.UltraLabel17.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel17.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel17.Location = New System.Drawing.Point(10, 258)
        Me.UltraLabel17.Name = "UltraLabel17"
        Me.UltraLabel17.Size = New System.Drawing.Size(115, 19)
        Me.UltraLabel17.TabIndex = 157
        Me.UltraLabel17.Text = "Phone 1"
        '
        'tContState
        '
        Me.tContState.CharacterCasing = System.Windows.Forms.CharacterCasing.Upper
        Me.tContState.Location = New System.Drawing.Point(86, 231)
        Me.tContState.Name = "tContState"
        Me.tContState.ReadOnly = true
        Me.tContState.Size = New System.Drawing.Size(192, 25)
        Me.tContState.TabIndex = 171
        Me.tContState.Tag = ""
        '
        'UltraLabel27
        '
        Me.UltraLabel27.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel27.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel27.Location = New System.Drawing.Point(10, 231)
        Me.UltraLabel27.Name = "UltraLabel27"
        Me.UltraLabel27.Size = New System.Drawing.Size(115, 18)
        Me.UltraLabel27.TabIndex = 154
        Me.UltraLabel27.Text = "State"
        '
        'UltraLabel28
        '
        Me.UltraLabel28.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel28.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel28.Location = New System.Drawing.Point(10, 203)
        Me.UltraLabel28.Name = "UltraLabel28"
        Me.UltraLabel28.Size = New System.Drawing.Size(115, 19)
        Me.UltraLabel28.TabIndex = 153
        Me.UltraLabel28.Text = "City"
        '
        'UltraLabel57
        '
        Me.UltraLabel57.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel57.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel57.Location = New System.Drawing.Point(10, 37)
        Me.UltraLabel57.Name = "UltraLabel57"
        Me.UltraLabel57.Size = New System.Drawing.Size(115, 18)
        Me.UltraLabel57.TabIndex = 143
        Me.UltraLabel57.Text = "Name"
        '
        'tContCompany
        '
        Me.tContCompany.Location = New System.Drawing.Point(86, 65)
        Me.tContCompany.Name = "tContCompany"
        Me.tContCompany.ReadOnly = true
        Me.tContCompany.Size = New System.Drawing.Size(192, 25)
        Me.tContCompany.TabIndex = 165
        Me.tContCompany.Tag = ""
        '
        'tContAddr2
        '
        Me.tContAddr2.Location = New System.Drawing.Point(86, 120)
        Me.tContAddr2.Name = "tContAddr2"
        Me.tContAddr2.ReadOnly = true
        Me.tContAddr2.Size = New System.Drawing.Size(192, 25)
        Me.tContAddr2.TabIndex = 167
        Me.tContAddr2.Tag = ""
        '
        'UltraLabel11
        '
        Me.UltraLabel11.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel11.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel11.Location = New System.Drawing.Point(10, 434)
        Me.UltraLabel11.Name = "UltraLabel11"
        Me.UltraLabel11.Size = New System.Drawing.Size(67, 46)
        Me.UltraLabel11.TabIndex = 159
        Me.UltraLabel11.Text = "Notes"
        '
        'tContNote
        '
        Me.tContNote.CharacterCasing = System.Windows.Forms.CharacterCasing.Upper
        Me.tContNote.Enabled = false
        Me.tContNote.Location = New System.Drawing.Point(86, 434)
        Me.tContNote.MaxLength = 500
        Me.tContNote.Multiline = true
        Me.tContNote.Name = "tContNote"
        Me.tContNote.Scrollbars = System.Windows.Forms.ScrollBars.Vertical
        Me.tContNote.Size = New System.Drawing.Size(192, 138)
        Me.tContNote.TabIndex = 174
        Me.tContNote.Tag = "Edit"
        '
        'tContZip
        '
        Me.tContZip.Location = New System.Drawing.Point(86, 175)
        Me.tContZip.Name = "tContZip"
        Me.tContZip.ReadOnly = true
        Me.tContZip.Size = New System.Drawing.Size(192, 25)
        Me.tContZip.TabIndex = 169
        Me.tContZip.Tag = ""
        '
        'UltraLabel54
        '
        Me.UltraLabel54.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel54.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel54.Location = New System.Drawing.Point(10, 65)
        Me.UltraLabel54.Name = "UltraLabel54"
        Me.UltraLabel54.Size = New System.Drawing.Size(115, 18)
        Me.UltraLabel54.TabIndex = 147
        Me.UltraLabel54.Text = "Company"
        '
        'UltraLabel30
        '
        Me.UltraLabel30.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel30.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel30.Location = New System.Drawing.Point(10, 92)
        Me.UltraLabel30.Name = "UltraLabel30"
        Me.UltraLabel30.Size = New System.Drawing.Size(115, 19)
        Me.UltraLabel30.TabIndex = 151
        Me.UltraLabel30.Text = "Addr1"
        '
        'UltraLabel29
        '
        Me.UltraLabel29.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel29.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel29.Location = New System.Drawing.Point(10, 120)
        Me.UltraLabel29.Name = "UltraLabel29"
        Me.UltraLabel29.Size = New System.Drawing.Size(115, 18)
        Me.UltraLabel29.TabIndex = 152
        Me.UltraLabel29.Text = "Addr2"
        '
        'UltraLabel21
        '
        Me.UltraLabel21.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel21.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel21.Location = New System.Drawing.Point(10, 175)
        Me.UltraLabel21.Name = "UltraLabel21"
        Me.UltraLabel21.Size = New System.Drawing.Size(115, 19)
        Me.UltraLabel21.TabIndex = 155
        Me.UltraLabel21.Text = "Zip"
        '
        'tsold_company
        '
        Me.tsold_company.Enabled = false
        Me.tsold_company.Location = New System.Drawing.Point(96, 120)
        Me.tsold_company.Name = "tsold_company"
        Me.tsold_company.ReadOnly = true
        Me.tsold_company.Size = New System.Drawing.Size(192, 25)
        Me.tsold_company.TabIndex = 3
        Me.tsold_company.Tag = "edit;ord_sold_company"
        '
        'cbIsSplit
        '
        Appearance111.FontData.BoldAsString = "True"
        Me.cbIsSplit.Appearance = Appearance111
        Me.cbIsSplit.BackColor = System.Drawing.Color.AliceBlue
        Me.cbIsSplit.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.cbIsSplit.Enabled = false
        Me.cbIsSplit.Location = New System.Drawing.Point(845, 646)
        Me.cbIsSplit.Name = "cbIsSplit"
        Me.cbIsSplit.Size = New System.Drawing.Size(153, 19)
        Me.cbIsSplit.TabIndex = 138
        Me.cbIsSplit.Tag = "show;ord_is_split;cb"
        Me.cbIsSplit.Text = "Order is Split"
        Me.cbIsSplit.Visible = false
        '
        'UltraLabel89
        '
        Me.UltraLabel89.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel89.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel89.Location = New System.Drawing.Point(595, 351)
        Me.UltraLabel89.Name = "UltraLabel89"
        Me.UltraLabel89.Size = New System.Drawing.Size(67, 46)
        Me.UltraLabel89.TabIndex = 137
        Me.UltraLabel89.Text = "Special Handling"
        '
        'tRefSpecialNote
        '
        Me.tRefSpecialNote.CharacterCasing = System.Windows.Forms.CharacterCasing.Upper
        Me.tRefSpecialNote.Enabled = false
        Me.tRefSpecialNote.Location = New System.Drawing.Point(672, 351)
        Me.tRefSpecialNote.MaxLength = 500
        Me.tRefSpecialNote.Multiline = true
        Me.tRefSpecialNote.Name = "tRefSpecialNote"
        Me.tRefSpecialNote.Scrollbars = System.Windows.Forms.ScrollBars.Vertical
        Me.tRefSpecialNote.Size = New System.Drawing.Size(192, 138)
        Me.tRefSpecialNote.TabIndex = 136
        Me.tRefSpecialNote.Tag = "edit;ord_ref_note"
        '
        'UltraTextEditor2
        '
        Me.UltraTextEditor2.CharacterCasing = System.Windows.Forms.CharacterCasing.Upper
        Me.UltraTextEditor2.Enabled = false
        Me.UltraTextEditor2.Location = New System.Drawing.Point(672, 295)
        Me.UltraTextEditor2.Name = "UltraTextEditor2"
        Me.UltraTextEditor2.Size = New System.Drawing.Size(192, 25)
        Me.UltraTextEditor2.TabIndex = 118
        Me.UltraTextEditor2.Tag = "edit;ord_ref_phone"
        '
        'UltraLabel83
        '
        Me.UltraLabel83.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel83.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel83.Location = New System.Drawing.Point(595, 295)
        Me.UltraLabel83.Name = "UltraLabel83"
        Me.UltraLabel83.Size = New System.Drawing.Size(115, 19)
        Me.UltraLabel83.TabIndex = 132
        Me.UltraLabel83.Text = "Phone"
        '
        'UltraLabel79
        '
        Me.UltraLabel79.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel79.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel79.Location = New System.Drawing.Point(595, 323)
        Me.UltraLabel79.Name = "UltraLabel79"
        Me.UltraLabel79.Size = New System.Drawing.Size(58, 19)
        Me.UltraLabel79.TabIndex = 130
        Me.UltraLabel79.Text = "Percent"
        '
        'tRefPerc
        '
        Me.tRefPerc.CalcManager = Me.UltraCalcManager1
        Me.tRefPerc.CheckedListSettings.CheckStateMember = ""
        Me.tRefPerc.Enabled = false
        Me.tRefPerc.LimitToList = true
        Me.tRefPerc.Location = New System.Drawing.Point(672, 323)
        Me.tRefPerc.Name = "tRefPerc"
        Me.tRefPerc.Size = New System.Drawing.Size(106, 26)
        Me.tRefPerc.TabIndex = 119
        Me.tRefPerc.Tag = "edit;ord_ref_perc;nm"
        '
        'tRefName
        '
        Me.tRefName.CalcManager = Me.UltraCalcManager1
        Me.tRefName.CheckedListSettings.CheckStateMember = ""
        Me.tRefName.Enabled = false
        Me.tRefName.Location = New System.Drawing.Point(672, 74)
        Me.tRefName.Name = "tRefName"
        Me.tRefName.Size = New System.Drawing.Size(192, 26)
        Me.tRefName.TabIndex = 110
        Me.tRefName.Tag = "edit;ord_ref_serial;nm"
        '
        'tRefAddr3
        '
        Me.tRefAddr3.Enabled = false
        Me.tRefAddr3.Location = New System.Drawing.Point(672, 185)
        Me.tRefAddr3.Name = "tRefAddr3"
        Me.tRefAddr3.Size = New System.Drawing.Size(192, 25)
        Me.tRefAddr3.TabIndex = 114
        Me.tRefAddr3.Tag = "edit;ord_ref_addr3"
        '
        'UltraLabel73
        '
        Me.UltraLabel73.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel73.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel73.Location = New System.Drawing.Point(595, 185)
        Me.UltraLabel73.Name = "UltraLabel73"
        Me.UltraLabel73.Size = New System.Drawing.Size(115, 18)
        Me.UltraLabel73.TabIndex = 127
        Me.UltraLabel73.Text = "Addr3"
        '
        'tRefCity
        '
        Me.tRefCity.CalcManager = Me.UltraCalcManager1
        Me.tRefCity.CheckedListSettings.CheckStateMember = ""
        Me.tRefCity.Enabled = false
        Me.tRefCity.Location = New System.Drawing.Point(672, 240)
        Me.tRefCity.Name = "tRefCity"
        Me.tRefCity.Size = New System.Drawing.Size(192, 26)
        Me.tRefCity.TabIndex = 116
        Me.tRefCity.Tag = "edit;ord_ref_city"
        '
        'tRefZip
        '
        Me.tRefZip.Enabled = false
        Me.tRefZip.Location = New System.Drawing.Point(672, 212)
        Me.tRefZip.Name = "tRefZip"
        Me.tRefZip.Size = New System.Drawing.Size(192, 25)
        Me.tRefZip.TabIndex = 115
        Me.tRefZip.Tag = "edit;ord_ref_zip"
        '
        'UltraLabel74
        '
        Me.UltraLabel74.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel74.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel74.Location = New System.Drawing.Point(595, 212)
        Me.UltraLabel74.Name = "UltraLabel74"
        Me.UltraLabel74.Size = New System.Drawing.Size(115, 19)
        Me.UltraLabel74.TabIndex = 126
        Me.UltraLabel74.Text = "Zip"
        '
        'tRefState
        '
        Me.tRefState.CharacterCasing = System.Windows.Forms.CharacterCasing.Upper
        Me.tRefState.Enabled = false
        Me.tRefState.Location = New System.Drawing.Point(672, 268)
        Me.tRefState.Name = "tRefState"
        Me.tRefState.Size = New System.Drawing.Size(192, 25)
        Me.tRefState.TabIndex = 117
        Me.tRefState.Tag = "edit;ord_ref_state"
        '
        'UltraLabel75
        '
        Me.UltraLabel75.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel75.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel75.Location = New System.Drawing.Point(595, 268)
        Me.UltraLabel75.Name = "UltraLabel75"
        Me.UltraLabel75.Size = New System.Drawing.Size(115, 18)
        Me.UltraLabel75.TabIndex = 125
        Me.UltraLabel75.Text = "State"
        '
        'UltraLabel76
        '
        Me.UltraLabel76.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel76.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel76.Location = New System.Drawing.Point(595, 240)
        Me.UltraLabel76.Name = "UltraLabel76"
        Me.UltraLabel76.Size = New System.Drawing.Size(115, 18)
        Me.UltraLabel76.TabIndex = 124
        Me.UltraLabel76.Text = "City"
        '
        'tRefAddr2
        '
        Me.tRefAddr2.Enabled = false
        Me.tRefAddr2.Location = New System.Drawing.Point(672, 157)
        Me.tRefAddr2.Name = "tRefAddr2"
        Me.tRefAddr2.Size = New System.Drawing.Size(192, 25)
        Me.tRefAddr2.TabIndex = 113
        Me.tRefAddr2.Tag = "edit;ord_ref_addr2"
        '
        'UltraLabel77
        '
        Me.UltraLabel77.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel77.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel77.Location = New System.Drawing.Point(595, 157)
        Me.UltraLabel77.Name = "UltraLabel77"
        Me.UltraLabel77.Size = New System.Drawing.Size(115, 18)
        Me.UltraLabel77.TabIndex = 123
        Me.UltraLabel77.Text = "Addr2"
        '
        'tRefAddr1
        '
        Me.tRefAddr1.Enabled = false
        Me.tRefAddr1.Location = New System.Drawing.Point(672, 129)
        Me.tRefAddr1.Name = "tRefAddr1"
        Me.tRefAddr1.Size = New System.Drawing.Size(192, 25)
        Me.tRefAddr1.TabIndex = 112
        Me.tRefAddr1.Tag = "edit;ord_ref_addr1"
        '
        'UltraLabel78
        '
        Me.UltraLabel78.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel78.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel78.Location = New System.Drawing.Point(595, 129)
        Me.UltraLabel78.Name = "UltraLabel78"
        Me.UltraLabel78.Size = New System.Drawing.Size(115, 19)
        Me.UltraLabel78.TabIndex = 121
        Me.UltraLabel78.Text = "Addr1"
        '
        'tRefCompany
        '
        Me.tRefCompany.Enabled = false
        Me.tRefCompany.Location = New System.Drawing.Point(672, 102)
        Me.tRefCompany.Name = "tRefCompany"
        Me.tRefCompany.Size = New System.Drawing.Size(192, 25)
        Me.tRefCompany.TabIndex = 111
        Me.tRefCompany.Tag = "edit;ord_ref_company"
        '
        'UltraLabel80
        '
        Me.UltraLabel80.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel80.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel80.Location = New System.Drawing.Point(595, 102)
        Me.UltraLabel80.Name = "UltraLabel80"
        Me.UltraLabel80.Size = New System.Drawing.Size(115, 18)
        Me.UltraLabel80.TabIndex = 115
        Me.UltraLabel80.Text = "Company"
        '
        'UltraLabel81
        '
        Me.UltraLabel81.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel81.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel81.Location = New System.Drawing.Point(595, 74)
        Me.UltraLabel81.Name = "UltraLabel81"
        Me.UltraLabel81.Size = New System.Drawing.Size(115, 18)
        Me.UltraLabel81.TabIndex = 113
        Me.UltraLabel81.Text = "Name"
        '
        'tDefThirdPartyName
        '
        Me.tDefThirdPartyName.Enabled = false
        Me.tDefThirdPartyName.Location = New System.Drawing.Point(336, 618)
        Me.tDefThirdPartyName.Name = "tDefThirdPartyName"
        Me.tDefThirdPartyName.Size = New System.Drawing.Size(192, 25)
        Me.tDefThirdPartyName.TabIndex = 109
        Me.tDefThirdPartyName.Tag = ""
        Me.tDefThirdPartyName.Visible = false
        '
        'cbDefThirdParty
        '
        Me.cbDefThirdParty.Location = New System.Drawing.Point(336, 582)
        Me.cbDefThirdParty.Name = "cbDefThirdParty"
        Me.cbDefThirdParty.Size = New System.Drawing.Size(192, 18)
        Me.cbDefThirdParty.TabIndex = 108
        Me.cbDefThirdParty.Text = "Third Party Billing"
        Me.cbDefThirdParty.Visible = false
        '
        'tAcctOpen
        '
        Me.tAcctOpen.Enabled = false
        Me.tAcctOpen.Location = New System.Drawing.Point(336, 545)
        Me.tAcctOpen.Name = "tAcctOpen"
        Me.tAcctOpen.Size = New System.Drawing.Size(192, 25)
        Me.tAcctOpen.TabIndex = 107
        Me.tAcctOpen.Tag = "show;ord_acct_open;dt"
        Me.tAcctOpen.Visible = false
        '
        'cb5Perc
        '
        Appearance112.FontData.BoldAsString = "True"
        Me.cb5Perc.Appearance = Appearance112
        Me.cb5Perc.BackColor = System.Drawing.Color.AliceBlue
        Me.cb5Perc.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.cb5Perc.Enabled = false
        Me.cb5Perc.Location = New System.Drawing.Point(686, 591)
        Me.cb5Perc.Name = "cb5Perc"
        Me.cb5Perc.Size = New System.Drawing.Size(154, 19)
        Me.cb5Perc.TabIndex = 103
        Me.cb5Perc.Tag = "show;ord_appl_5_perc;cb"
        Me.cb5Perc.Text = "Apply 5% Discount"
        Me.cb5Perc.Visible = false
        '
        'tSoldCustId
        '
        Me.tSoldCustId.Location = New System.Drawing.Point(672, 545)
        Me.tSoldCustId.Name = "tSoldCustId"
        Me.tSoldCustId.Size = New System.Drawing.Size(192, 25)
        Me.tSoldCustId.TabIndex = 102
        Me.tSoldCustId.Tag = "edit;ord_sold_cust_id"
        Me.tSoldCustId.Visible = false
        '
        'lSoldcounty
        '
        Me.lSoldcounty.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.lSoldcounty.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.lSoldcounty.Location = New System.Drawing.Point(10, 342)
        Me.lSoldcounty.Name = "lSoldcounty"
        Me.lSoldcounty.Size = New System.Drawing.Size(124, 18)
        Me.lSoldcounty.TabIndex = 98
        Me.lSoldcounty.Text = "County"
        '
        'tSold_Name
        '
        Me.tSold_Name.CalcManager = Me.UltraCalcManager1
        Me.tSold_Name.CheckedListSettings.CheckStateMember = ""
        Me.tSold_Name.Enabled = false
        Me.tSold_Name.Location = New System.Drawing.Point(96, 92)
        Me.tSold_Name.Name = "tSold_Name"
        Me.tSold_Name.ReadOnly = true
        Me.tSold_Name.Size = New System.Drawing.Size(192, 26)
        Me.tSold_Name.TabIndex = 2
        Me.tSold_Name.Tag = "edit;ord_sold_name"
        '
        'bPhoneFind
        '
        Me.bPhoneFind.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.bPhoneFind.Enabled = false
        Me.bPhoneFind.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.bPhoneFind.Location = New System.Drawing.Point(286, 3)
        Me.bPhoneFind.Name = "bPhoneFind"
        Me.bPhoneFind.Size = New System.Drawing.Size(38, 28)
        Me.bPhoneFind.TabIndex = 73
        Me.bPhoneFind.Tag = "edit"
        Me.bPhoneFind.Text = "?"
        Me.bPhoneFind.Visible = false
        '
        'tsold_phone1
        '
        Me.tsold_phone1.Enabled = false
        Me.tsold_phone1.Location = New System.Drawing.Point(96, 37)
        Me.tsold_phone1.Name = "tsold_phone1"
        Me.tsold_phone1.ReadOnly = true
        Me.tsold_phone1.Size = New System.Drawing.Size(192, 24)
        Me.tsold_phone1.TabIndex = 0
        Me.tsold_phone1.Tag = "edit;ord_sold_phone1"
        '
        'lsold_addr3
        '
        Me.lsold_addr3.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.lsold_addr3.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.lsold_addr3.Location = New System.Drawing.Point(10, 231)
        Me.lsold_addr3.Name = "lsold_addr3"
        Me.lsold_addr3.Size = New System.Drawing.Size(124, 18)
        Me.lsold_addr3.TabIndex = 66
        Me.lsold_addr3.Text = "Addr3"
        '
        'lProvince
        '
        Me.lProvince.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.lProvince.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.lProvince.Location = New System.Drawing.Point(10, 369)
        Me.lProvince.Name = "lProvince"
        Me.lProvince.Size = New System.Drawing.Size(124, 19)
        Me.lProvince.TabIndex = 64
        Me.lProvince.Text = "Province"
        '
        'UltraLabel16
        '
        Me.UltraLabel16.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel16.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel16.Location = New System.Drawing.Point(10, 37)
        Me.UltraLabel16.Name = "UltraLabel16"
        Me.UltraLabel16.Size = New System.Drawing.Size(124, 18)
        Me.UltraLabel16.TabIndex = 62
        Me.UltraLabel16.Text = "Phone1"
        '
        'tCustId
        '
        Me.tCustId.CalcManager = Me.UltraCalcManager1
        Me.tCustId.CheckedListSettings.CheckStateMember = ""
        UltraGridColumn3.Header.VisiblePosition = 0
        UltraGridColumn3.Hidden = true
        UltraGridColumn4.Header.Caption = "Cust ID"
        UltraGridColumn4.Header.VisiblePosition = 1
        UltraGridColumn5.Header.Caption = "Customer Name"
        UltraGridColumn5.Header.VisiblePosition = 2
        UltraGridColumn5.MaxWidth = 100
        UltraGridColumn5.MinWidth = 50
        UltraGridBand2.Columns.AddRange(New Object() {UltraGridColumn3, UltraGridColumn4, UltraGridColumn5})
        Me.tCustId.DisplayLayout.BandsSerializer.Add(UltraGridBand2)
        Me.tCustId.Enabled = false
        Me.tCustId.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.tCustId.LimitToList = true
        Me.tCustId.Location = New System.Drawing.Point(96, 65)
        Me.tCustId.Name = "tCustId"
        Me.tCustId.ReadOnly = true
        Me.tCustId.Size = New System.Drawing.Size(192, 26)
        Me.tCustId.TabIndex = 1
        Me.tCustId.Tag = "edit;ord_sold_cust_serial;nm"
        '
        'UltraLabel18
        '
        Me.UltraLabel18.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel18.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel18.Location = New System.Drawing.Point(10, 489)
        Me.UltraLabel18.Name = "UltraLabel18"
        Me.UltraLabel18.Size = New System.Drawing.Size(124, 19)
        Me.UltraLabel18.TabIndex = 29
        Me.UltraLabel18.Text = "Email"
        '
        'UltraLabel19
        '
        Me.UltraLabel19.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel19.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel19.Location = New System.Drawing.Point(10, 462)
        Me.UltraLabel19.Name = "UltraLabel19"
        Me.UltraLabel19.Size = New System.Drawing.Size(124, 18)
        Me.UltraLabel19.TabIndex = 27
        Me.UltraLabel19.Text = "Cell Phone"
        '
        'lsold_fax
        '
        Me.lsold_fax.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.lsold_fax.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.lsold_fax.Location = New System.Drawing.Point(10, 434)
        Me.lsold_fax.Name = "lsold_fax"
        Me.lsold_fax.Size = New System.Drawing.Size(124, 18)
        Me.lsold_fax.TabIndex = 25
        Me.lsold_fax.Text = "Fax"
        '
        'lsold_phone2
        '
        Me.lsold_phone2.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.lsold_phone2.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.lsold_phone2.Location = New System.Drawing.Point(10, 406)
        Me.lsold_phone2.Name = "lsold_phone2"
        Me.lsold_phone2.Size = New System.Drawing.Size(124, 19)
        Me.lsold_phone2.TabIndex = 23
        Me.lsold_phone2.Text = "Phone2"
        '
        'lsold_zip
        '
        Me.lsold_zip.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.lsold_zip.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.lsold_zip.Location = New System.Drawing.Point(10, 258)
        Me.lsold_zip.Name = "lsold_zip"
        Me.lsold_zip.Size = New System.Drawing.Size(124, 19)
        Me.lsold_zip.TabIndex = 19
        Me.lsold_zip.Text = "Zip"
        '
        'Label1
        '
        Me.Label1.BackColor = System.Drawing.Color.AliceBlue
        Me.Label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.Label1.Location = New System.Drawing.Point(0, 9)
        Me.Label1.Name = "Label1"
        Me.Label1.Size = New System.Drawing.Size(278, 28)
        Me.Label1.TabIndex = 18
        Me.Label1.Text = "Sold To:"
        '
        'lsold_state
        '
        Me.lsold_state.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.lsold_state.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.lsold_state.Location = New System.Drawing.Point(10, 314)
        Me.lsold_state.Name = "lsold_state"
        Me.lsold_state.Size = New System.Drawing.Size(124, 18)
        Me.lsold_state.TabIndex = 16
        Me.lsold_state.Text = "State"
        '
        'lsold_city
        '
        Me.lsold_city.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.lsold_city.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.lsold_city.Location = New System.Drawing.Point(10, 286)
        Me.lsold_city.Name = "lsold_city"
        Me.lsold_city.Size = New System.Drawing.Size(124, 19)
        Me.lsold_city.TabIndex = 14
        Me.lsold_city.Text = "City"
        '
        'lsold_addr2
        '
        Me.lsold_addr2.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.lsold_addr2.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.lsold_addr2.Location = New System.Drawing.Point(10, 203)
        Me.lsold_addr2.Name = "lsold_addr2"
        Me.lsold_addr2.Size = New System.Drawing.Size(124, 19)
        Me.lsold_addr2.TabIndex = 12
        Me.lsold_addr2.Text = "Addr2"
        '
        'lSold_addr1
        '
        Me.lSold_addr1.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.lSold_addr1.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.lSold_addr1.Location = New System.Drawing.Point(10, 175)
        Me.lSold_addr1.Name = "lSold_addr1"
        Me.lSold_addr1.Size = New System.Drawing.Size(124, 19)
        Me.lSold_addr1.TabIndex = 10
        Me.lSold_addr1.Text = "Addr1"
        '
        'UltraLabel8
        '
        Me.UltraLabel8.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel8.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel8.Location = New System.Drawing.Point(10, 148)
        Me.UltraLabel8.Name = "UltraLabel8"
        Me.UltraLabel8.Size = New System.Drawing.Size(124, 18)
        Me.UltraLabel8.TabIndex = 8
        Me.UltraLabel8.Text = "Country"
        '
        'UltraLabel9
        '
        Me.UltraLabel9.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel9.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel9.Location = New System.Drawing.Point(10, 120)
        Me.UltraLabel9.Name = "UltraLabel9"
        Me.UltraLabel9.Size = New System.Drawing.Size(124, 18)
        Me.UltraLabel9.TabIndex = 6
        Me.UltraLabel9.Text = "Company"
        '
        'UltraLabel6
        '
        Me.UltraLabel6.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel6.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel6.Location = New System.Drawing.Point(10, 92)
        Me.UltraLabel6.Name = "UltraLabel6"
        Me.UltraLabel6.Size = New System.Drawing.Size(124, 19)
        Me.UltraLabel6.TabIndex = 4
        Me.UltraLabel6.Text = "Name"
        '
        'UltraLabel5
        '
        Me.UltraLabel5.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel5.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel5.Location = New System.Drawing.Point(10, 65)
        Me.UltraLabel5.Name = "UltraLabel5"
        Me.UltraLabel5.Size = New System.Drawing.Size(124, 18)
        Me.UltraLabel5.TabIndex = 2
        Me.UltraLabel5.Text = "Cust ID"
        '
        'lReferral
        '
        Me.lReferral.BackColor = System.Drawing.Color.AliceBlue
        Me.lReferral.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
        Me.lReferral.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.lReferral.Location = New System.Drawing.Point(586, 37)
        Me.lReferral.Name = "lReferral"
        Me.lReferral.Size = New System.Drawing.Size(288, 471)
        Me.lReferral.TabIndex = 128
        Me.lReferral.Text = "Referral"
        '
        'UltraLabel40
        '
        Me.UltraLabel40.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.UltraLabel40.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel40.Location = New System.Drawing.Point(893, 406)
        Me.UltraLabel40.Name = "UltraLabel40"
        Me.UltraLabel40.Size = New System.Drawing.Size(125, 19)
        Me.UltraLabel40.TabIndex = 106
        Me.UltraLabel40.Text = "DefaultTab "
        '
        'DefaultPage
        '
        Me.DefaultPage.BackColor = System.Drawing.Color.AliceBlue
        Me.DefaultPage.BackColorInternal = System.Drawing.Color.AliceBlue
        Me.DefaultPage.BorderStyle = Infragistics.Win.UIElementBorderStyle.None
        ValueListItem30.DataValue = "C"
        ValueListItem30.DisplayText = "Contact Page"
        ValueListItem31.DataValue = "Q"
        ValueListItem31.DisplayText = "Latest Quote"
        ValueListItem32.DataValue = "O"
        ValueListItem32.DisplayText = "Latest Order"
        Me.DefaultPage.Items.AddRange(New Infragistics.Win.ValueListItem() {ValueListItem30, ValueListItem31, ValueListItem32})
        Me.DefaultPage.Location = New System.Drawing.Point(931, 425)
        Me.DefaultPage.Name = "DefaultPage"
        Me.DefaultPage.Size = New System.Drawing.Size(163, 64)
        Me.DefaultPage.TabIndex = 105
        '
        'UltraTabPageControl2
        '
        Me.UltraTabPageControl2.Controls.Add(Me.TabItems)
        Me.UltraTabPageControl2.Enabled = false
        Me.UltraTabPageControl2.Location = New System.Drawing.Point(-10000, -10000)
        Me.UltraTabPageControl2.Name = "UltraTabPageControl2"
        Me.UltraTabPageControl2.Size = New System.Drawing.Size(1485, 677)
        '
        'TabItems
        '
        Appearance114.BackColor = System.Drawing.Color.LightGoldenrodYellow
        Appearance114.FontData.BoldAsString = "True"
        Me.TabItems.ActiveTabAppearance = Appearance114
        Me.TabItems.Anchor = CType((((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom)  _
            Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Appearance115.BackColor = System.Drawing.Color.PaleGoldenrod
        Appearance115.BackGradientAlignment = Infragistics.Win.GradientAlignment.Container
        Appearance115.BackGradientStyle = Infragistics.Win.GradientStyle.None
        Appearance115.BorderColor = System.Drawing.Color.Silver
        Appearance115.BorderColor3DBase = System.Drawing.Color.Silver
        Me.TabItems.Appearance = Appearance115
        Me.TabItems.BackColorInternal = System.Drawing.Color.FromArgb(CType(CType(255,Byte),Integer), CType(CType(255,Byte),Integer), CType(CType(192,Byte),Integer))
        Appearance116.BackColor = System.Drawing.Color.FromArgb(CType(CType(255,Byte),Integer), CType(CType(255,Byte),Integer), CType(CType(192,Byte),Integer))
        Me.TabItems.ClientAreaAppearance = Appearance116
        Me.TabItems.Controls.Add(Me.UltraTabSharedControlsPage2)
        Me.TabItems.Controls.Add(Me.tTotal)
        Me.TabItems.Controls.Add(Me.UltraTabPageControl4)
        Me.TabItems.Controls.Add(Me.UltraTabPageControl5)
        Me.TabItems.Controls.Add(Me.UltraTabPageControl6)
        Me.TabItems.Controls.Add(Me.UltraTabPageControl7)
        Me.TabItems.Controls.Add(Me.UltraTabPageControl8)
        Me.TabItems.Controls.Add(Me.UltraTabPageControl1)
        Me.TabItems.Controls.Add(Me.UltraTabPageControl11)
        Me.TabItems.Controls.Add(Me.UltraTabPageControl12)
        Me.TabItems.Controls.Add(Me.UltraTabPageControl13)
        Me.TabItems.Controls.Add(Me.UltraTabPageControl14)
        Me.TabItems.Controls.Add(Me.UltraTabPageControl19)
        Me.TabItems.Controls.Add(Me.UltraTabPageControl22)
        Me.TabItems.Font = New System.Drawing.Font("Microsoft Sans Serif", 10!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.TabItems.ImageList = Me.ImageList1
        Me.TabItems.Location = New System.Drawing.Point(0, 0)
        Me.TabItems.MinTabWidth = 90
        Me.TabItems.Name = "TabItems"
        Me.TabItems.SharedControlsPage = Me.UltraTabSharedControlsPage2
        Me.TabItems.Size = New System.Drawing.Size(1482, 674)
        Me.TabItems.TabIndex = 0
        Me.TabItems.TabPadding = New System.Drawing.Size(0, 0)
        Appearance117.BackColor = System.Drawing.Color.LightGoldenrodYellow
        UltraTab8.ActiveAppearance = Appearance117
        Appearance118.BackColor = System.Drawing.Color.LightGoldenrodYellow
        UltraTab8.ClientAreaAppearance = Appearance118
        UltraTab8.Key = "Items"
        UltraTab8.TabPage = Me.tTotal
        UltraTab8.Text = "Items"
        Appearance119.BackColor = System.Drawing.Color.LightGoldenrodYellow
        UltraTab9.ActiveAppearance = Appearance119
        Appearance120.BackColor = System.Drawing.Color.LightGoldenrodYellow
        UltraTab9.ClientAreaAppearance = Appearance120
        UltraTab9.Key = "General"
        UltraTab9.TabPage = Me.UltraTabPageControl4
        UltraTab9.Text = "General"
        Appearance121.BackColor = System.Drawing.Color.LightGoldenrodYellow
        UltraTab10.ActiveAppearance = Appearance121
        Appearance122.BackColor = System.Drawing.Color.LightGoldenrodYellow
        UltraTab10.ClientAreaAppearance = Appearance122
        UltraTab10.Key = "Shipping"
        UltraTab10.TabPage = Me.UltraTabPageControl13
        UltraTab10.Text = "Ship To"
        Appearance123.BackColor = System.Drawing.Color.LightGoldenrodYellow
        UltraTab11.ActiveAppearance = Appearance123
        Appearance124.BackColor = System.Drawing.Color.LightGoldenrodYellow
        UltraTab11.ClientAreaAppearance = Appearance124
        UltraTab11.Key = "Ship"
        UltraTab11.TabPage = Me.UltraTabPageControl11
        UltraTab11.Text = "Alternate Ship"
        Appearance125.BackColor = System.Drawing.Color.LightGoldenrodYellow
        UltraTab12.ActiveAppearance = Appearance125
        Appearance126.BackColor = System.Drawing.Color.LightGoldenrodYellow
        UltraTab12.ClientAreaAppearance = Appearance126
        UltraTab12.Key = "Payments"
        UltraTab12.TabPage = Me.UltraTabPageControl5
        UltraTab12.Text = "Payments"
        UltraTab12.Visible = false
        Appearance127.BackColor = System.Drawing.Color.LightGoldenrodYellow
        UltraTab13.ActiveAppearance = Appearance127
        Appearance128.BackColor = System.Drawing.Color.LightGoldenrodYellow
        UltraTab13.ClientAreaAppearance = Appearance128
        UltraTab13.Key = "Shipments"
        UltraTab13.TabPage = Me.UltraTabPageControl6
        UltraTab13.Text = "Tracking"
        UltraTab13.Visible = false
        Appearance129.BackColor = System.Drawing.Color.LightGoldenrodYellow
        UltraTab14.ActiveAppearance = Appearance129
        Appearance130.BackColor = System.Drawing.Color.LightGoldenrodYellow
        UltraTab14.ClientAreaAppearance = Appearance130
        UltraTab14.Key = "Notes"
        UltraTab14.TabPage = Me.UltraTabPageControl7
        UltraTab14.Text = "Notes/Emails"
        Appearance131.BackColor = System.Drawing.Color.LightGoldenrodYellow
        UltraTab15.ActiveAppearance = Appearance131
        Appearance132.BackColor = System.Drawing.Color.LightGoldenrodYellow
        UltraTab15.ClientAreaAppearance = Appearance132
        UltraTab15.Key = "Drawings"
        UltraTab15.TabPage = Me.UltraTabPageControl8
        UltraTab15.Text = "Documents"
        Appearance133.BackColor = System.Drawing.Color.LightGoldenrodYellow
        UltraTab16.ActiveAppearance = Appearance133
        Appearance134.BackColor = System.Drawing.Color.LightGoldenrodYellow
        UltraTab16.ClientAreaAppearance = Appearance134
        UltraTab16.Key = "Forecast"
        UltraTab16.TabPage = Me.UltraTabPageControl1
        UltraTab16.Text = "Forecast"
        Appearance135.BackColor = System.Drawing.Color.LightGoldenrodYellow
        UltraTab17.ActiveAppearance = Appearance135
        Appearance136.BackColor = System.Drawing.Color.LightGoldenrodYellow
        UltraTab17.ClientAreaAppearance = Appearance136
        UltraTab17.Key = "UP"
        UltraTab17.TabPage = Me.UltraTabPageControl12
        UltraTab17.Text = "Up Sell"
        Appearance137.BackColor = System.Drawing.Color.FromArgb(CType(CType(255,Byte),Integer), CType(CType(192,Byte),Integer), CType(CType(192,Byte),Integer))
        UltraTab18.ActiveAppearance = Appearance137
        Appearance138.BackColor = System.Drawing.Color.FromArgb(CType(CType(255,Byte),Integer), CType(CType(192,Byte),Integer), CType(CType(192,Byte),Integer))
        UltraTab18.Appearance = Appearance138
        Appearance139.BackColor = System.Drawing.Color.FromArgb(CType(CType(255,Byte),Integer), CType(CType(192,Byte),Integer), CType(CType(192,Byte),Integer))
        UltraTab18.ClientAreaAppearance = Appearance139
        UltraTab18.Key = "RepReq"
        UltraTab18.TabPage = Me.UltraTabPageControl14
        UltraTab18.Text = "Replace Req"
        Appearance140.BackColor = System.Drawing.Color.LightGoldenrodYellow
        UltraTab19.ActiveAppearance = Appearance140
        Appearance141.BackColor = System.Drawing.Color.LightGoldenrodYellow
        UltraTab19.ClientAreaAppearance = Appearance141
        UltraTab19.Key = "Prod"
        UltraTab19.TabPage = Me.UltraTabPageControl19
        UltraTab19.Text = "Production"
        Appearance193.BackColor = System.Drawing.Color.LightGoldenrodYellow
        UltraTab24.ActiveAppearance = Appearance193
        Appearance194.BackColor = System.Drawing.Color.LightGoldenrodYellow
        UltraTab24.ClientAreaAppearance = Appearance194
        UltraTab24.Key = "Diag"
        UltraTab24.TabPage = Me.UltraTabPageControl22
        UltraTab24.Text = "Diagnostics"
        UltraTab24.Visible = false
        Me.TabItems.Tabs.AddRange(New Infragistics.Win.UltraWinTabControl.UltraTab() {UltraTab8, UltraTab9, UltraTab10, UltraTab11, UltraTab12, UltraTab13, UltraTab14, UltraTab15, UltraTab16, UltraTab17, UltraTab18, UltraTab19, UltraTab24})
        Me.TabItems.TabSize = New System.Drawing.Size(100, 0)
        Me.TabItems.Tag = "Q0"
        Me.TabItems.UseOsThemes = Infragistics.Win.DefaultableBoolean.[False]
        '
        'UltraTabSharedControlsPage2
        '
        Me.UltraTabSharedControlsPage2.Location = New System.Drawing.Point(-10000, -10000)
        Me.UltraTabSharedControlsPage2.Name = "UltraTabSharedControlsPage2"
        Me.UltraTabSharedControlsPage2.Size = New System.Drawing.Size(1478, 645)
        '
        'ImageList1
        '
        Me.ImageList1.ImageStream = CType(resources.GetObject("ImageList1.ImageStream"),System.Windows.Forms.ImageListStreamer)
        Me.ImageList1.TransparentColor = System.Drawing.Color.Transparent
        Me.ImageList1.Images.SetKeyName(0, "")
        Me.ImageList1.Images.SetKeyName(1, "")
        Me.ImageList1.Images.SetKeyName(2, "")
        Me.ImageList1.Images.SetKeyName(3, "")
        Me.ImageList1.Images.SetKeyName(4, "")
        Me.ImageList1.Images.SetKeyName(5, "")
        Me.ImageList1.Images.SetKeyName(6, "")
        Me.ImageList1.Images.SetKeyName(7, "")
        Me.ImageList1.Images.SetKeyName(8, "")
        Me.ImageList1.Images.SetKeyName(9, "")
        Me.ImageList1.Images.SetKeyName(10, "")
        '
        'UltraDataSource1
        '
        Me.UltraDataSource1.Band.Columns.AddRange(New Object() {UltraDataColumn2, UltraDataColumn3, UltraDataColumn4, UltraDataColumn5, UltraDataColumn6, UltraDataColumn7, UltraDataColumn8, UltraDataColumn9, UltraDataColumn10, UltraDataColumn11, UltraDataColumn12, UltraDataColumn13, UltraDataColumn14, UltraDataColumn15, UltraDataColumn16, UltraDataColumn17, UltraDataColumn18, UltraDataColumn19, UltraDataColumn20, UltraDataColumn21, UltraDataColumn22, UltraDataColumn23, UltraDataColumn24, UltraDataColumn25, UltraDataColumn26, UltraDataColumn27, UltraDataColumn28, UltraDataColumn29, UltraDataColumn30, UltraDataColumn31, UltraDataColumn32, UltraDataColumn33, UltraDataColumn34, UltraDataColumn35, UltraDataColumn36, UltraDataColumn37, UltraDataColumn38, UltraDataColumn39, UltraDataColumn40, UltraDataColumn41, UltraDataColumn42, UltraDataColumn43, UltraDataColumn44, UltraDataColumn45, UltraDataColumn46, UltraDataColumn47, UltraDataColumn48, UltraDataColumn49, UltraDataColumn50, UltraDataColumn51, UltraDataColumn52, UltraDataColumn53, UltraDataColumn54, UltraDataColumn55, UltraDataColumn56, UltraDataColumn57, UltraDataColumn58, UltraDataColumn59, UltraDataColumn60, UltraDataColumn61, UltraDataColumn62, UltraDataColumn63, UltraDataColumn64, UltraDataColumn65, UltraDataColumn66, UltraDataColumn67, UltraDataColumn68, UltraDataColumn69, UltraDataColumn70, UltraDataColumn71, UltraDataColumn72, UltraDataColumn73, UltraDataColumn74, UltraDataColumn75, UltraDataColumn76})
        Me.UltraDataSource1.Band.Key = "ord_itm"
        '
        'UltraTextEditor1
        '
        Me.UltraTextEditor1.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.UltraTextEditor1.AutoSize = false
        Me.UltraTextEditor1.Enabled = false
        Me.UltraTextEditor1.Location = New System.Drawing.Point(748, 0)
        Me.UltraTextEditor1.Name = "UltraTextEditor1"
        Me.UltraTextEditor1.Size = New System.Drawing.Size(476, 24)
        Me.UltraTextEditor1.TabIndex = 19
        Me.UltraTextEditor1.Tag = "edit;ord_for2"
        '
        'MenuItem1
        '
        Me.MenuItem1.Index = 0
        Me.MenuItem1.MenuItems.AddRange(New System.Windows.Forms.MenuItem() {Me.MenuItem2, Me.MenuItem3, Me.MenuItem7, Me.MenuItem6, Me.MenuItem23, Me.MenuItem4, Me.MenuItem5, Me.MenuItem21, Me.MenuItem8, Me.MenuItem11, Me.MenuItem18, Me.MenuItem22})
        Me.MenuItem1.Text = "Print"
        '
        'MenuItem2
        '
        Me.MenuItem2.Index = 0
        Me.MenuItem2.Text = "By Group"
        '
        'MenuItem3
        '
        Me.MenuItem3.Index = 1
        Me.MenuItem3.Text = "For Faxing"
        '
        'MenuItem7
        '
        Me.MenuItem7.Index = 2
        Me.MenuItem7.Text = "For IWA"
        '
        'MenuItem6
        '
        Me.MenuItem6.Index = 3
        Me.MenuItem6.Text = "No Pricing"
        '
        'MenuItem23
        '
        Me.MenuItem23.Index = 4
        Me.MenuItem23.Text = "Packing List"
        '
        'MenuItem4
        '
        Me.MenuItem4.Index = 5
        Me.MenuItem4.Text = "Quote Without Upsell"
        '
        'MenuItem5
        '
        Me.MenuItem5.Index = 6
        Me.MenuItem5.Text = "Retail and Base Quotes"
        '
        'MenuItem21
        '
        Me.MenuItem21.Index = 7
        Me.MenuItem21.Text = "With Available Margin"
        '
        'MenuItem8
        '
        Me.MenuItem8.Index = 8
        Me.MenuItem8.Text = "With Line Shipping"
        '
        'MenuItem11
        '
        Me.MenuItem11.Index = 9
        Me.MenuItem11.Text = "With Total Only"
        '
        'MenuItem18
        '
        Me.MenuItem18.Index = 10
        Me.MenuItem18.Text = "With Weights and Dims"
        '
        'MenuItem22
        '
        Me.MenuItem22.Index = 11
        Me.MenuItem22.Text = "Print Upsells"
        '
        'MainMenu1
        '
        Me.MainMenu1.MenuItems.AddRange(New System.Windows.Forms.MenuItem() {Me.MenuItem1, Me.mnFunctions, Me.MenuItem16, Me.MenuItem20, Me.MenuItem17})
        '
        'mnFunctions
        '
        Me.mnFunctions.Index = 1
        Me.mnFunctions.MenuItems.AddRange(New System.Windows.Forms.MenuItem() {Me.MenuItem9, Me.MenuItem24, Me.MenuItem19, Me.MenuItem10, Me.MenuItem13, Me.MenuItem12})
        Me.mnFunctions.MergeType = System.Windows.Forms.MenuMerge.MergeItems
        Me.mnFunctions.Text = "Quote/Order Functions"
        '
        'MenuItem9
        '
        Me.MenuItem9.Index = 0
        Me.MenuItem9.Text = "Cancel / Uncancel Order"
        '
        'MenuItem24
        '
        Me.MenuItem24.Index = 1
        Me.MenuItem24.Text = "Credit Card Portal Email"
        '
        'MenuItem19
        '
        Me.MenuItem19.Index = 2
        Me.MenuItem19.Text = "Get Orders from Web"
        '
        'MenuItem10
        '
        Me.MenuItem10.Index = 3
        Me.MenuItem10.Text = "Override Tax"
        '
        'MenuItem13
        '
        Me.MenuItem13.Index = 4
        Me.MenuItem13.MenuItems.AddRange(New System.Windows.Forms.MenuItem() {Me.mnCreateDate, Me.mnCreateUser, Me.MenuItem14})
        Me.MenuItem13.Text = "Show Columns"
        '
        'mnCreateDate
        '
        Me.mnCreateDate.Index = 0
        Me.mnCreateDate.Text = "Create Date"
        '
        'mnCreateUser
        '
        Me.mnCreateUser.Index = 1
        Me.mnCreateUser.Text = "Create User"
        '
        'MenuItem14
        '
        Me.MenuItem14.Index = 2
        Me.MenuItem14.Text = "Discounts"
        '
        'MenuItem12
        '
        Me.MenuItem12.Index = 5
        Me.MenuItem12.Text = "Update Installer"
        '
        'MenuItem16
        '
        Me.MenuItem16.Index = 2
        Me.MenuItem16.Text = "Update Forecast"
        '
        'MenuItem20
        '
        Me.MenuItem20.Index = 3
        Me.MenuItem20.Text = "Update Source Code"
        '
        'MenuItem17
        '
        Me.MenuItem17.Index = 4
        Me.MenuItem17.MenuItems.AddRange(New System.Windows.Forms.MenuItem() {Me.MenuItem15})
        Me.MenuItem17.Text = "Quote/Order General"
        '
        'MenuItem15
        '
        Me.MenuItem15.Index = 0
        Me.MenuItem15.Text = "Show Customer Discounts"
        '
        'bReplacement
        '
        Me.bReplacement.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Appearance142.BackColor = System.Drawing.Color.MistyRose
        Appearance142.BackColor2 = System.Drawing.Color.LightCoral
        Appearance142.BackGradientAlignment = Infragistics.Win.GradientAlignment.Element
        Appearance142.BackGradientStyle = Infragistics.Win.GradientStyle.Vertical
        Appearance142.FontData.BoldAsString = "True"
        Me.bReplacement.Appearance = Appearance142
        Me.bReplacement.Enabled = false
        Me.bReplacement.Location = New System.Drawing.Point(1271, 0)
        Me.bReplacement.Name = "bReplacement"
        Me.bReplacement.Size = New System.Drawing.Size(104, 27)
        Me.bReplacement.TabIndex = 26
        Me.bReplacement.Tag = "Edit"
        Me.bReplacement.Text = "Replacement"
        Me.bReplacement.UseOsThemes = Infragistics.Win.DefaultableBoolean.[False]
        Me.bReplacement.Visible = false
        '
        'UltraLabel4
        '
        Me.UltraLabel4.BackColorInternal = System.Drawing.Color.Silver
        Me.UltraLabel4.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel4.Location = New System.Drawing.Point(220, 0)
        Me.UltraLabel4.Name = "UltraLabel4"
        Me.UltraLabel4.Size = New System.Drawing.Size(96, 18)
        Me.UltraLabel4.TabIndex = 23
        Me.UltraLabel4.Text = "Primary Ref"
        '
        'tord_for
        '
        Me.tord_for.Enabled = false
        Me.tord_for.Location = New System.Drawing.Point(316, 0)
        Me.tord_for.Name = "tord_for"
        Me.tord_for.Size = New System.Drawing.Size(288, 24)
        Me.tord_for.TabIndex = 18
        Me.tord_for.Tag = "edit;ord_for"
        '
        'bAddQuote
        '
        Me.bAddQuote.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Appearance143.BackColor = System.Drawing.Color.PaleGoldenrod
        Appearance143.BackColor2 = System.Drawing.Color.Gold
        Appearance143.BackGradientAlignment = Infragistics.Win.GradientAlignment.Element
        Appearance143.BackGradientStyle = Infragistics.Win.GradientStyle.Vertical
        Me.bAddQuote.Appearance = Appearance143
        Me.bAddQuote.Enabled = false
        Me.bAddQuote.Font = New System.Drawing.Font("Arial", 8.25!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.bAddQuote.Location = New System.Drawing.Point(1236, 0)
        Me.bAddQuote.Name = "bAddQuote"
        Me.bAddQuote.Size = New System.Drawing.Size(89, 27)
        Me.bAddQuote.TabIndex = 22
        Me.bAddQuote.Tag = "Edit"
        Me.bAddQuote.Text = "Add Quote"
        Me.bAddQuote.UseOsThemes = Infragistics.Win.DefaultableBoolean.[False]
        Me.bAddQuote.Visible = false
        '
        'bAddOrder
        '
        Me.bAddOrder.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Appearance144.BackColor = System.Drawing.Color.LightGreen
        Appearance144.BackColor2 = System.Drawing.Color.Green
        Appearance144.BackGradientAlignment = Infragistics.Win.GradientAlignment.Element
        Appearance144.BackGradientStyle = Infragistics.Win.GradientStyle.Vertical
        Appearance144.FontData.BoldAsString = "True"
        Me.bAddOrder.Appearance = Appearance144
        Me.bAddOrder.Enabled = false
        Me.bAddOrder.Font = New System.Drawing.Font("Arial", 8.25!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.bAddOrder.Location = New System.Drawing.Point(1325, 0)
        Me.bAddOrder.Name = "bAddOrder"
        Me.bAddOrder.Size = New System.Drawing.Size(85, 27)
        Me.bAddOrder.TabIndex = 21
        Me.bAddOrder.Tag = "Edit"
        Me.bAddOrder.Text = "Add Order"
        Me.bAddOrder.UseOsThemes = Infragistics.Win.DefaultableBoolean.[False]
        Me.bAddOrder.Visible = false
        '
        'Tab1
        '
        Appearance145.FontData.BoldAsString = "True"
        Me.Tab1.ActiveTabAppearance = Appearance145
        Me.Tab1.Anchor = CType((((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom)  _
            Or System.Windows.Forms.AnchorStyles.Left)  _
            Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Appearance146.BackColor = System.Drawing.Color.DarkSalmon
        Appearance146.BackGradientStyle = Infragistics.Win.GradientStyle.Horizontal
        Appearance146.BorderColor = System.Drawing.Color.Silver
        Appearance146.BorderColor3DBase = System.Drawing.Color.Silver
        Me.Tab1.Appearance = Appearance146
        Me.Tab1.BackColorInternal = System.Drawing.Color.Silver
        Me.Tab1.Controls.Add(Me.UltraTabSharedControlsPage1)
        Me.Tab1.Controls.Add(Me.TabControl)
        Me.Tab1.Controls.Add(Me.UltraTabPageControl2)
        Me.Tab1.Font = New System.Drawing.Font("Microsoft Sans Serif", 12!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.Tab1.ImageList = Me.ImageList1
        Me.Tab1.Location = New System.Drawing.Point(0, 30)
        Me.Tab1.Name = "Tab1"
        Me.Tab1.SharedControlsPage = Me.UltraTabSharedControlsPage1
        Me.Tab1.Size = New System.Drawing.Size(1489, 713)
        Me.Tab1.TabIndex = 20
        Appearance147.BackColor = System.Drawing.Color.AliceBlue
        UltraTab20.Appearance = Appearance147
        UltraTab20.Key = "C"
        UltraTab20.TabPage = Me.TabControl
        UltraTab20.Text = "Contact"
        Appearance148.BackColor = System.Drawing.Color.LemonChiffon
        UltraTab21.Appearance = Appearance148
        UltraTab21.Key = "Q0"
        UltraTab21.TabPage = Me.UltraTabPageControl2
        UltraTab21.Text = "Quote 0"
        Me.Tab1.Tabs.AddRange(New Infragistics.Win.UltraWinTabControl.UltraTab() {UltraTab20, UltraTab21})
        Me.Tab1.TabStop = false
        Me.Tab1.UseOsThemes = Infragistics.Win.DefaultableBoolean.[False]
        '
        'UltraTabSharedControlsPage1
        '
        Me.UltraTabSharedControlsPage1.Location = New System.Drawing.Point(-10000, -10000)
        Me.UltraTabSharedControlsPage1.Name = "UltraTabSharedControlsPage1"
        Me.UltraTabSharedControlsPage1.Size = New System.Drawing.Size(1485, 677)
        '
        'tOrd
        '
        Me.tOrd.AlwaysInEditMode = true
        Me.tOrd.Enabled = false
        Me.tOrd.Location = New System.Drawing.Point(76, 0)
        Me.tOrd.Name = "tOrd"
        Me.tOrd.Size = New System.Drawing.Size(124, 24)
        Me.tOrd.TabIndex = 16
        Me.tOrd.Tag = "key;ord_serial;nm"
        '
        'UltraLabel1
        '
        Me.UltraLabel1.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel1.Location = New System.Drawing.Point(0, 0)
        Me.UltraLabel1.Name = "UltraLabel1"
        Me.UltraLabel1.Size = New System.Drawing.Size(115, 18)
        Me.UltraLabel1.TabIndex = 17
        Me.UltraLabel1.Text = "Quote ID:"
        '
        'UltraLabel46
        '
        Me.UltraLabel46.BackColorInternal = System.Drawing.Color.Silver
        Me.UltraLabel46.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.5!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.UltraLabel46.Location = New System.Drawing.Point(614, 0)
        Me.UltraLabel46.Name = "UltraLabel46"
        Me.UltraLabel46.Size = New System.Drawing.Size(125, 18)
        Me.UltraLabel46.TabIndex = 25
        Me.UltraLabel46.Text = "Secondary Details"
        '
        'UltraButton4
        '
        Me.UltraButton4.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Me.UltraButton4.Enabled = false
        Me.UltraButton4.Location = New System.Drawing.Point(1153, 0)
        Me.UltraButton4.Name = "UltraButton4"
        Me.UltraButton4.Size = New System.Drawing.Size(77, 27)
        Me.UltraButton4.TabIndex = 27
        Me.UltraButton4.Tag = "edit"
        Me.UltraButton4.Text = "Forecast"
        '
        'bCopyItems
        '
        Me.bCopyItems.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right),System.Windows.Forms.AnchorStyles)
        Appearance149.BackColor = System.Drawing.Color.PaleTurquoise
        Appearance149.BackColor2 = System.Drawing.Color.DarkCyan
        Appearance149.BackGradientAlignment = Infragistics.Win.GradientAlignment.Element
        Appearance149.BackGradientStyle = Infragistics.Win.GradientStyle.Vertical
        Appearance149.FontData.BoldAsString = "True"
        Me.bCopyItems.Appearance = Appearance149
        Me.bCopyItems.Enabled = false
        Me.bCopyItems.Font = New System.Drawing.Font("Arial", 8.25!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
        Me.bCopyItems.Location = New System.Drawing.Point(1409, 0)
        Me.bCopyItems.Name = "bCopyItems"
        Me.bCopyItems.Size = New System.Drawing.Size(85, 27)
        Me.bCopyItems.TabIndex = 28
        Me.bCopyItems.Tag = "Edit"
        Me.bCopyItems.Text = "Copy Itms"
        Me.bCopyItems.UseOsThemes = Infragistics.Win.DefaultableBoolean.[False]
        '
        'Panel1
        '
        Me.Panel1.Controls.Add(Me.bCopyItems)
        Me.Panel1.Controls.Add(Me.bAddOrder)
        Me.Panel1.Controls.Add(Me.bAddQuote)
        Me.Panel1.Controls.Add(Me.bReplacement)
        Me.Panel1.Controls.Add(Me.tOrd)
        Me.Panel1.Controls.Add(Me.Tab1)
        Me.Panel1.Controls.Add(Me.UltraLabel1)
        Me.Panel1.Controls.Add(Me.tord_for)
        Me.Panel1.Controls.Add(Me.UltraLabel4)
        Me.Panel1.Controls.Add(Me.UltraButton4)
        Me.Panel1.Controls.Add(Me.UltraTextEditor1)
        Me.Panel1.Controls.Add(Me.UltraLabel46)
        Me.Panel1.Dock = System.Windows.Forms.DockStyle.Fill
        Me.Panel1.Location = New System.Drawing.Point(0, 0)
        Me.Panel1.Name = "Panel1"
        Me.Panel1.Size = New System.Drawing.Size(1494, 744)
        Me.Panel1.TabIndex = 29
        '
        'ToolTip1
        '
        Me.ToolTip1.UseAnimation = false
        '
        'fmEstOrd2
        '
        Me.AutoScaleBaseSize = New System.Drawing.Size(6, 15)
        Me.BackColor = System.Drawing.Color.Silver
        Me.ClientSize = New System.Drawing.Size(1494, 744)
        Me.Controls.Add(Me.Panel1)
        Me.KeyPreview = true
        Me.Menu = Me.MainMenu1
        Me.Name = "fmEstOrd2"
        Me.Text = "Quote/Order"
        Me.UltraTabPageControl9.ResumeLayout(false)
        Me.UltraTabPageControl9.PerformLayout
        CType(Me.tSpecialNotes,System.ComponentModel.ISupportInitialize).EndInit
        Me.UltraTabPageControl10.ResumeLayout(false)
        CType(Me.GridRef,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.UltraCalcManager1,System.ComponentModel.ISupportInitialize).EndInit
        Me.UltraTabPageControl3.ResumeLayout(false)
        Me.UltraTabPageControl20.ResumeLayout(false)
        CType(Me.GridNotes,System.ComponentModel.ISupportInitialize).EndInit
        Me.UltraTabPageControl21.ResumeLayout(false)
        CType(Me.gEmails,System.ComponentModel.ISupportInitialize).EndInit
        Me.UltraTabPageControl23.ResumeLayout(false)
        CType(Me.ugDesignNotes,System.ComponentModel.ISupportInitialize).EndInit
        Me.UltraTabPageControl15.ResumeLayout(false)
        Me.pRR1.ResumeLayout(false)
        Me.pRR1.PerformLayout
        CType(Me.rrProvince,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.rrCountry,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.rrCity,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.rrEmail,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.rrZip,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.rrState,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.rrAddr2,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.rrAddr1,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.rrCompany,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.rrCounty,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.rrName,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.rrAddr3,System.ComponentModel.ISupportInitialize).EndInit
        Me.UltraTabPageControl16.ResumeLayout(false)
        Me.UltraTabPageControl16.PerformLayout
        CType(Me.tRFCondition,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tRFItemsReturned,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tRFNameOnReturn,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.dtRFReturnedDate,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.rbRFCredit,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tRFTracking,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tRFCarrier,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.rbRFClaim,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.rbRFQC,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.rbRFCreditCard,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.rbRFShipping,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.rbRFRestocking,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.rbRFSendingReplacement,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.rbRFSendImmediately,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tRFShipping,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tRFRestocking,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.UltraGrid1,System.ComponentModel.ISupportInitialize).EndInit
        Me.tTotal.ResumeLayout(false)
        Me.tTotal.PerformLayout
        Me.pDiscount.ResumeLayout(false)
        Me.pDiscount.PerformLayout
        CType(Me.oDiscountType,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDiscMatl,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tdiscProdType,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDiscVal,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDefLacq,System.ComponentModel.ISupportInitialize).EndInit
        Me.Panel2.ResumeLayout(false)
        Me.Panel2.PerformLayout
        CType(Me.tOrdMod,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.Grid1,System.ComponentModel.ISupportInitialize).EndInit
        Me.pTotal.ResumeLayout(false)
        Me.pTotal.PerformLayout
        CType(Me.tTotal2,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tShipTotal,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tTaxTotal,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tGrandTotal,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDefFinish,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDefStain,System.ComponentModel.ISupportInitialize).EndInit
        Me.pItem.ResumeLayout(false)
        Me.pItem.PerformLayout
        CType(Me.tShipVal,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDepth,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tHeight,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tWidth,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tLacqAdd,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tStainAdd,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tProdType,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tShipUnit,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tMaterial,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tMPF,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDisc,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tUnitBase,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tBase,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tFixture,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tSalesCat,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tShipFlat,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tTaxable,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tGenMaterial,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tForecastOveride,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tMF,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tLineNotes,System.ComponentModel.ISupportInitialize).EndInit
        Me.UltraTabPageControl4.ResumeLayout(false)
        Me.UltraTabPageControl4.PerformLayout
        CType(Me.tConsultType,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.UltraDataSource2,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tFieldConsultant,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tCCSource,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.GridStatus,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tPCASignOffRecDate,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tPCASignOffRecBy,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbPCAsignOffRec,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tPCASignOffSentDate,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tPCASignOffSentBy,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbPCASignOffSent,System.ComponentModel.ISupportInitialize).EndInit
        Me.gbPropCommit.ResumeLayout(false)
        Me.gbPropCommit.PerformLayout
        CType(Me.pcReport,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.pcDate,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.pcNotes,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.pcDays,System.ComponentModel.ISupportInitialize).EndInit
        Me.gbOrder.ResumeLayout(false)
        CType(Me.oCustWTerms,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbCustWTerms,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tPropStage,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tRackHeight,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tPriorityNote,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tBottles,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tCustOrd,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tFloating,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tTerr,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDesignAuto,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tCreateBy,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDesType,System.ComponentModel.ISupportInitialize).EndInit
        Me.gbCheckOff.ResumeLayout(false)
        Me.gbCheckOff.PerformLayout
        CType(Me.cbDesigner,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.ddDesignStatus,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tInstallDate,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tInstallUser,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbFactoryInstallReq,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbFactoryInstall,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tCADate,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tCAUser,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbCellarArt,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbToArt,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDesDate,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDesUser,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbDesReq,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tISRDate,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tISRUser,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbISR,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.oHistory,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbResponsible,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tStageDate,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tShipDate,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tBilledDate,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tSource,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tGenFinish,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tPO,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDesigner,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tUpBy,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tUpOn,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tCreate,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDispDate,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tOutside,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tInside,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tRefFee,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.UltraTabControl1,System.ComponentModel.ISupportInitialize).EndInit
        Me.UltraTabControl1.ResumeLayout(false)
        CType(Me.tStatus,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tTabTitle,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbPriority,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbAddon,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbAddOnNoEmail,System.ComponentModel.ISupportInitialize).EndInit
        Me.UltraTabPageControl13.ResumeLayout(false)
        Me.UltraTabPageControl13.PerformLayout
        CType(Me.oShipToType,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.gsShipHold,System.ComponentModel.ISupportInitialize).EndInit
        Me.pShipping.ResumeLayout(false)
        Me.pShipping.PerformLayout
        CType(Me.gsShipNotify,System.ComponentModel.ISupportInitialize).EndInit
        Me.pShipHold.ResumeLayout(false)
        CType(Me.gsState,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.gsAddr2,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.gsAddr1,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.gsCompany,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.gsName,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.gsCounty,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.gsCountry,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.gsAddr3,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.gsProvince,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.gsCity,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.gsCustId,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.gsEmail,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.gsZip,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.gsShipTaxPerc,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.gsTaxInstalls,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.gsTaxExempt,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.gsExemptNo,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.gsTaxRate,System.ComponentModel.ISupportInitialize).EndInit
        Me.GroupBox1.ResumeLayout(false)
        Me.GroupBox1.PerformLayout
        CType(Me.ddThirdPartyFill,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tThirdPartyShipVia,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tThirdPartyAcct,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tShipPromo,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbShipActive,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbShipWhiteGlove,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbShipCustPickup,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbCollect,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tSkids,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbIntlShip,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbOvernite,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tShipDiscount,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tThirdPartyName,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbThirdParty,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tCallPhone,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tCallName,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbCall,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tTurns,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tSteps,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbSteps,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbTurns,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbLiftGate,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbAlert,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbSmallTruck,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbTwoMan,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbInside,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbGated,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tShipExtra,System.ComponentModel.ISupportInitialize).EndInit
        Me.UltraTabPageControl11.ResumeLayout(false)
        Me.pAltShip.ResumeLayout(false)
        CType(Me.tAltShipCounty,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tAltShipCountry,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tAltShipAddr3,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tAltShipProvince,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tAltShipCity,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tAltShipCustId,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tAltShipEmail,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tAltShipZip,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tAltShipState,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tAltShipAddr2,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tAltShipAddr1,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tAltShipCompany,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tAltShipName,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.chUseAltShip,System.ComponentModel.ISupportInitialize).EndInit
        Me.UltraTabPageControl5.ResumeLayout(false)
        Me.UltraTabPageControl5.PerformLayout
        CType(Me.tPayOrdTot,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tPayTot,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tBalance,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.PayGrid,System.ComponentModel.ISupportInitialize).EndInit
        Me.UltraTabPageControl6.ResumeLayout(false)
        Me.UltraTabPageControl6.PerformLayout
        CType(Me.tShipTot,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.ShipGrid,System.ComponentModel.ISupportInitialize).EndInit
        Me.UltraTabPageControl7.ResumeLayout(false)
        Me.UltraTabPageControl7.PerformLayout
        CType(Me.tabNotes,System.ComponentModel.ISupportInitialize).EndInit
        Me.tabNotes.ResumeLayout(false)
        Me.pOrdMod.ResumeLayout(false)
        CType(Me.tNote,System.ComponentModel.ISupportInitialize).EndInit
        Me.UltraTabPageControl8.ResumeLayout(false)
        Me.UltraTabPageControl1.ResumeLayout(false)
        Me.UltraTabPageControl1.PerformLayout
        CType(Me.tForecastNote,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tForecastPerc,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tForecastDate,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tLostDate,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tLostReason,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tForecast,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.UltraMonthViewMulti1,System.ComponentModel.ISupportInitialize).EndInit
        Me.UltraTabPageControl12.ResumeLayout(false)
        Me.UltraTabPageControl12.PerformLayout
        CType(Me.tUpSellSqFt,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.UpType,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.UpTree,System.ComponentModel.ISupportInitialize).EndInit
        Me.UltraTabPageControl14.ResumeLayout(false)
        CType(Me.tabRepReq,System.ComponentModel.ISupportInitialize).EndInit
        Me.tabRepReq.ResumeLayout(false)
        Me.UltraTabPageControl19.ResumeLayout(false)
        Me.UltraTabPageControl19.PerformLayout
        Me.pProduction.ResumeLayout(false)
        Me.pProduction.PerformLayout
        CType(Me.tpCellarComp_note,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpCellarComp_by,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpCellarComp_date,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpFactComp_Note,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpFactComp_By,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpFactComp_Date,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpCDRDown_note,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpCDRDown_by,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpCDRDown_date,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpKitDown_note,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpKitDown_by,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpKitDown_date,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpProdNote,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpOKBillEarly,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tEstCompleteCalc,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpSignedStain_By,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpMustship_By,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpCommitted_By,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpArt_By,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpEstComp_By,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tInstallerDate,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tStatus2,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpToFactory_Note,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpToFactory_By,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpToFactory_Date,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpDesignComplete_Note,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpDesignComplete_By,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpDesignComplete_Date,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpDesignStart_Note,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpDesignStart_By,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpDesignStart_Date,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpAllClear_Note,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpAllClear_By,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpAllClear_Date,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpSignoffRec_Note,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpSignoffRec_By,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpSignoffRec_Date,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpWaitingSignoff_Note,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpWaitingSignoff_By,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpWaitingSignoff_Date,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpRoomRevision_Note,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpRoomRevision_By,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpRoomRevision_Date,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpRoomNotReady_Note,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpRoomNotReady_By,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpRoomNotReady_Date,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpSignOffSent_Note,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpSignOffSent_By,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpSignOffSent_Date,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpSignStainDt,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tInstallNotes,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpArt,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpEstComp,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpCommitted,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpMustShip,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.grInstallServiceCalls,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpArtNote,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpEstCompNote,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpCommittedNote,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tpMustShipNote,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tInstaller,System.ComponentModel.ISupportInitialize).EndInit
        Me.UltraTabPageControl22.ResumeLayout(false)
        Me.UltraTabPageControl22.PerformLayout
        CType(Me.tDiagNote,System.ComponentModel.ISupportInitialize).EndInit
        Me.pDiag.ResumeLayout(false)
        Me.pDiag0.ResumeLayout(false)
        Me.pDiag0.PerformLayout
        CType(Me.tDiagStatus,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDiagEISR,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDiagEOSR,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDiagEShipTo,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDiagESoldTo,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDiagDenNote,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDiagAccNote,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDiagNextSend,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDiagDenDate,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDiagDenBy,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDiagAccDate,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDiagAccBy,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDiagDen,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDiagAcc,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDiagRec,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDiagEmail,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDiagRecDate,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDiagRecBy,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDiagSent,System.ComponentModel.ISupportInitialize).EndInit
        Me.TabControl.ResumeLayout(false)
        Me.TabControl.PerformLayout
        CType(Me.pContJump,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.pContRefresh,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tSoldCounty,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.pContacts,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tOrdContSerial,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbEmailOSRShipments,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tsold_addr3,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbEmailShipment,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tProvince,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tCountry,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tSold_City,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tsold_email,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tsold_zip,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tsold_state,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tsold_addr2,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.gContacts,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tsold_addr1,System.ComponentModel.ISupportInitialize).EndInit
        Me.pContact.ResumeLayout(false)
        Me.pContact.PerformLayout
        CType(Me.tContEmail,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tContFax,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tContCell,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tContPhone2,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tContAddr1,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tContType,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tContPayee,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tContName,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tContAddr3,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tContCity,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tContPhone1,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tContState,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tContCompany,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tContAddr2,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tContNote,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tContZip,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tsold_company,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbIsSplit,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tRefSpecialNote,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.UltraTextEditor2,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tRefPerc,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tRefName,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tRefAddr3,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tRefCity,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tRefZip,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tRefState,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tRefAddr2,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tRefAddr1,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tRefCompany,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tDefThirdPartyName,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cbDefThirdParty,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tAcctOpen,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.cb5Perc,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tSoldCustId,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tSold_Name,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tCustId,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.DefaultPage,System.ComponentModel.ISupportInitialize).EndInit
        Me.UltraTabPageControl2.ResumeLayout(false)
        CType(Me.TabItems,System.ComponentModel.ISupportInitialize).EndInit
        Me.TabItems.ResumeLayout(false)
        CType(Me.UltraDataSource1,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.UltraTextEditor1,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.tord_for,System.ComponentModel.ISupportInitialize).EndInit
        CType(Me.Tab1,System.ComponentModel.ISupportInitialize).EndInit
        Me.Tab1.ResumeLayout(false)
        CType(Me.tOrd,System.ComponentModel.ISupportInitialize).EndInit
        Me.Panel1.ResumeLayout(false)
        Me.Panel1.PerformLayout
        Me.ResumeLayout(false)

End Sub

#End Region

    Private Sub fmEstOrd_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        Dim cmd As New SqlCommand("", cnn)
        Dim dr As SqlDataReader

        Me.Table = "ord_file"
        Me.Key1 = "ord_serial"
        Me.FocusField = "tord_for"
        Me.EditMode = ""
        Me.KeyValue1 = "-1"

        tCustId.DataSource = dsCustFile
        tCustId.DisplayMember = "cust_id"
        tCustId.ValueMember = "cust_serial"

        gsCustId.DataSource = dsCustFile
        gsCustId.DisplayMember = "cust_id"
        gsCustId.ValueMember = "cust_serial"

        tAltShipCustId.DataSource = dsCustFile
        tAltShipCustId.DisplayMember = "cust_id"
        tAltShipCustId.ValueMember = "cust_serial"

        DefaultPage.Value = GetSetting("Jcom", "Settings", "DefPage", "C")

        'tInside.DataSource = dsUsrFile
        'tInside.DisplayMember = "usr_name"
        'tInside.ValueMember = "usr_serial"

        'PopulateValueList_Parts()

        LoadParts()
        PopulateStain()
        PopulateLacquer()
        '********MPF
        'LoadDD(tMaterial, dsMat, "mat_file", "mat_code", "mat_code", "mat_code,mat_desc")
        'LoadDD2(tGenMaterial, "mat_file", "mat_code", "mat_code", "mat_code", "mat_iswood=1")

        LoadDD2(tDefStain, "stain_file", "stain_serial", "stain_name", "stain_serial, stain_name, stain_desc")
        tDefStain.DisplayLayout.Bands(0).Columns(0).Hidden = True
        tDefStain.DisplayLayout.Bands(0).Columns(1).Header.Caption = "Stain"
        tDefStain.DisplayLayout.Bands(0).Columns(2).Header.Caption = "Description"

        LoadDD2(tDefFinish, "finish_file", "finish_serial", "finish_name", "finish_serial, finish_name, finish_desc")
        tDefFinish.DisplayLayout.Bands(0).Columns(0).Hidden = True
        tDefFinish.DisplayLayout.Bands(0).Columns(1).Header.Caption = "Finish"
        tDefFinish.DisplayLayout.Bands(0).Columns(2).Header.Caption = "Description"

        LoadDD2(tFieldConsultant, "field_consultant", "fc_serial", "fc_full_name_last", )
        LoadDD(tCountry, dsCountry, "country_file", "country_code", "country_code", "country_code,country")
        LoadDD(gsCountry, dsCountry, "country_file", "country_code", "country_code", "country_code,country")
        LoadDD2(tAltShipCountry, "country_file", "country_code", "country_code", "country_code,country")
        'LoadDD(tProdType, dsProdType, "itm_prod_type", "itm_prod_type_type", "itm_prod_type_type", "itm_prod_type_type,itm_prod_type_desc")
        LoadDD(tSalesCat, dsSalesCat, "sales_cat", "sales_cat_cat", "sales_cat_cat", "sales_cat_cat,sales_cat_desc")
        LoadDD(tForecast, dsforecast, "forecast_file", "forecast_desc", "forecast_desc", "forecast_desc", , True, "forecast_order")
        LoadDD(tForecastOveride, dsforecastOveride, "forecast_file", "forecast_desc", "forecast_desc", "forecast_desc", , True, "forecast_order")
        LoadDD(tLostReason, dsLostReason, "forecast_reason", "forecast_reason_desc", "forecast_reason_desc", "forecast_reason_desc", , True, "forecast_reason_order")
        LoadDD(tInside, dsInside, "rep_file", "rep_code", "rep_name", , "rep_type='I' and rep_active=1", , "rep_name")
        'LoadDD(tOutside, dsOutside, "rep_file", "rep_code", "rep_name", , "rep_type='O' and rep_active=1", , "rep_name")
        LoadDD2(tOutside, "rep_file", "rep_code", "rep_name", , "rep_type='O' and rep_active=1", False)
        LoadDD2(tFloating, "rep_file", "rep_code", "rep_name", , "rep_type='F' and rep_active=1", True)
        LoadDD(tTerr, dsTerr, "territory", "territory", "territory")
        LoadDD(tDesigner, dsDesigner, "rep_file", "rep_code", "rep_name", , "(rep_type='D' or rep_type='C' or rep_type='I') and rep_active=1", , "rep_name")
        LoadDD(tSource, dsSource, "ord_src", "ord_src", "ord_src_desc", , "ord_src_inactive=0", , "ord_src")
        'LoadDD2(tCCSource, "ord_cc_src", "ord_cc_src", "ord_cc_src")
        LoadDD2(tCCSource, "rep_file", "rep_code", "rep_code", , "(rep_type='P') and rep_active=1")
        tSource.DisplayLayout.Bands(0).Columns(0).Width = 150
        tSource.DisplayLayout.Bands(0).Columns(1).Width = 400
        LoadDD2(tDiscMatl, "mat_file", "mat_code", "mat_code", "mat_code,mat_desc")
        LoadDD(tdiscProdType, dsProdType, "itm_prod_type", "itm_prod_type_type", "itm_prod_type_type", "itm_prod_type_type,itm_prod_type_desc")
        LoadDD(tDesType, dsDesignType, "des_type", "des_type", "des_type", , , , "des_type")
        LoadDD2(tRefName, "ref_file", "ref_serial", "ref_name")
        LoadDD(tRefPerc, dsRefPerc, "ref_perc", "ref_perc", "ref_perc", , , , "ref_perc")
        LoadDD2(tShipPromo, "ship_promo", "ship_promo_serial", "ship_promo", , "ship_promo_inactive<>1")
        LoadDD2(tThirdPartyShipVia, "ship_via", "ship_via_code", "ship_via_code", , "ship_via_inactive<>1")
        LoadItems("-1")
        pContact.Left = lReferral.Left
        LoadContacts()
        LoadDD2(ddDesignStatus, "des_status", "des_status", "des_status", , , True)
        ddDesignStatus.DisplayLayout.Bands(0).Columns(0).Width = 400
        LoadDD2(tInstaller, "installer_file", "installer_serial", "installer_name")

        Dim dtTable As New DataTable
        dtTable.Columns.Add("ConsultType")
        dtTable.Rows.Add("Field Measure")
        dtTable.Rows.Add("Referral")
        Me.tConsultType.DataSource = dtTable
        Me.tConsultType.DataBind()

        BindFields()

        UltraMonthViewMulti1.FirstMonth = UltraMonthViewMulti1.CalendarInfo.GetMonth(Today)
        oHistory.Value = "Status"
        Grid1.CalcManager = UltraCalcManager1
        bDocList.Text = GetSetting("Jcom", "Settings", "DocList", "List All Revs")
        tPicture.Left = tTotal.Width - 196
        If UserGroup <> "Admins" And User <> "melissab" And User <> "ericah" And User <> "terrif" _
        And User <> "kristid" And User <> "kellyg" And User <> "christysmallz" And User <> "daianas" _
        And UCase(User) <> "JULIEO" And User <> "donnas" Then mnFunctions.Visible = False

        ' ----------   Todd 2015-06-17 ---------- 
        If User = "nickb" Or User = "nickf" Or User = "oscara" Or User = "arelish" _
        Or User = "fabians" Or User = "jimw" Or User = "jordann" Or User = "diegos" _
        Or User = "tiffanyh" Or User = "lidiaa" Or User = "dalec" Or User = "luisr" Or User = "davide" _
        Or User = "chrism" Or User = "kristaw" Or User = "guillermon" Or User = "issish" _
        Or User = "melissab" Or User = "daianas" _
        Or User = "jenniferb" Or User = "ronaldc" Or User = "chrisb" Or User = "scottr" Or User = "sama" Then
            mnFunctions.Visible = True
            MenuItem9.Visible = False
            MenuItem10.Visible = False
            MenuItem12.Visible = False
            MenuItem13.Visible = False
            MenuItem19.Visible = False
            MenuItem24.Visible = True
        End If
        If User = "melissab" Then MenuItem9.Visible = True ' slight modification to big group above
        If User = "kellyg" Then
            MenuItem9.Visible = False
            MenuItem10.Visible = True
            MenuItem13.Visible = False
            MenuItem12.Visible = False
        End If
        If User = "christysmallz" Then
            MenuItem9.Visible = False
            MenuItem10.Visible = False
            MenuItem13.Visible = False
            MenuItem12.Visible = False
        End If
        If User = "jamiem" Then
            MenuItem19.Visible = True
            mnFunctions.Visible = True
            MenuItem9.Visible = False
            MenuItem12.Visible = False
            MenuItem10.Visible = False
            MenuItem13.Visible = False
            MenuItem24.Visible = False
        End If
        If UCase(User) = "JULIEO" Then
            MenuItem19.Visible = True
            mnFunctions.Visible = True
            MenuItem9.Visible = True
            MenuItem12.Visible = True
            MenuItem10.Visible = True
            MenuItem13.Visible = True
            MenuItem24.Visible = True
        End If
        If UCase(User) = "VIVIANM" Then
            MenuItem19.Visible = True
            mnFunctions.Visible = True
            MenuItem9.Visible = True
            MenuItem12.Visible = True
            MenuItem10.Visible = True
            MenuItem13.Visible = True
            MenuItem24.Visible = True
        End If

        If onDesignerLockDown > 0 Then
            MenuItem16.Visible = False
            MenuItem17.Visible = False
            UltraButton5.Visible = False
        End If
        cmd.CommandText = "select * from mas_file"
        cnn.Open()
        dr = cmd.ExecuteReader
        If dr.HasRows Then
            dr.Read()
            UpChargeForSpeed = dr("mas_def_percent_up_speed")
            UpChargeForNonSpeed = dr("mas_def_percent_up_nonspeed")
            UpChargeTableTopOnlyLacq = dr("mas_table_top_lacq_percent")
        End If
        cnn.Close()

        gbOrder.Top = gbCheckOff.Top
        gbOrder.Left = gbCheckOff.Left

        'If UserGroup = "Admins" Then bEditSignoff.Visible = True

        'Me.bEmailInstallNote.Parent = UltraTabPageControl4
        'Me.bEmailInstallNote.Left = gbOrder.Left + 110
        'Me.bEmailInstallNote.BackColor = Color.PaleGoldenrod
        'Me.bEmailInstallNote.BringToFront()
        AcceptOrd()
        MenuItem23.Visible = True
    End Sub
    Private Sub LoadContacts()
        Try
            Dim dr As DataRow
            Dim onOrd As String = tOrd.Text
            If onOrd = "" Then onOrd = "-1"
            Dim cmd As New SqlCommand("", cnn)
            Dim da As New SqlDataAdapter(cmd)
            Dim dcs() As DataColumn

            dsCont.Clear()

            cmd.CommandText = "select ord_cont.*,cont_file.* from ord_cont left outer join cont_file on ord_cont_serial=cont_serial where ord_cont_ord_serial = -1"
            cnn.Open()
            da.Fill(dsCont, "ord_cont")

            dr = dsCont.Tables(0).NewRow
            dr("cont_type") = "Referral"
            dsCont.Tables(0).Rows.InsertAt(dr, 0)

            cmd.CommandText = "select ord_cont.*,cont_file.* from ord_cont left outer join cont_file on ord_cont_cont_serial=cont_serial where ord_cont_ord_serial=" + onOrd
            da.Fill(dsCont, "ord_cont")
            cnn.Close()

            'dcs(0) = dsCont.Tables(0).Columns(0)
            'dsCont.Tables(0).PrimaryKey = dcs

            gContacts.DataSource = dsCont.Tables(0)
            gContacts.DataBind()

            Dim cl As Infragistics.Win.UltraWinGrid.UltraGridColumn
            For Each cl In gContacts.DisplayLayout.Bands(0).Columns
                If cl.Key <> "cont_type" Then cl.Hidden = True
            Next
            Dim gr As Infragistics.Win.UltraWinGrid.UltraGridRow
            For Each gr In gContacts.Rows
                If nz(gr.Cells("ord_cont_payee").Value, False) = True Then gr.Appearance.BackColor = Color.LightGreen
            Next

            gContacts.Rows(0).Selected = True
        Catch
            DoError(Err, Me)
        End Try
    End Sub
    Private Sub PopulateValueList_Parts()
        If Grid1.DisplayLayout.ValueLists.Exists("parts") Then Exit Sub
        Dim objValueList As Infragistics.Win.ValueList
        Dim cmd As New SqlCommand
        Dim da As New SqlDataAdapter
        Dim ds As New DataSet

        cmd.Connection = cnn
        cmd.CommandText = "select itm_serial,itm_code,itm_desc from itm_file where inactive=0 order by itm_code"
        da.SelectCommand = cmd
        If cnn.State = ConnectionState.Closed Then cnn.Open()
        da.Fill(ds, "parts")
        cnn.Close()

        objValueList = Grid1.DisplayLayout.ValueLists.Add("parts")
        Dim i As Integer
        For i = 0 To ds.Tables("parts").Rows.Count - 1
            If Not ds.Tables("parts").Rows(i).Item("itm_code") Is DBNull.Value Then
                objValueList.ValueListItems.Add(Trim(ds.Tables("parts").Rows(i).Item("itm_code")), Trim(ds.Tables("parts").Rows(i).Item("itm_code")))
            End If
        Next
        Grid1.DisplayLayout.Bands(0).Columns("ord_itm_item_code").ValueList = Grid1.DisplayLayout.ValueLists("parts")
    End Sub
    Private Sub PopulateStain()
        Dim objValueList As Infragistics.Win.ValueList
        Dim cmd As New SqlCommand
        Dim da As New SqlDataAdapter

        Dim dd As New Infragistics.Win.UltraWinGrid.UltraDropDown

        cmd.Connection = cnn
        cmd.CommandText = "select stain_serial,stain_name,stain_desc from stain_file order by stain_name"
        da.SelectCommand = cmd
        If cnn.State = ConnectionState.Closed Then cnn.Open()
        da.Fill(dsStain, "stain")
        dd.Width = 500
        dd.DataSource = dsStain
        dd.ValueMember = "stain_serial"
        dd.DisplayMember = "stain_name"
        dd.DisplayLayout.Bands(0).Columns(0).Hidden = True
        dd.DisplayLayout.Bands(0).Columns(1).Header.Caption = "Stain"
        dd.DisplayLayout.Bands(0).Columns(2).Header.Caption = "Description"
        dd.DataBind()
        Grid1.DisplayLayout.Bands(0).Columns("ord_itm_stain_serial").ValueList = dd

        dd = New Infragistics.Win.UltraWinGrid.UltraDropDown

        cmd.CommandText = "select finish_serial,finish_name,finish_desc from finish_file order by finish_name"
        da.SelectCommand = cmd
        da.Fill(dsFinish, "finish")
        dd.Width = 500
        dd.DataSource = dsFinish
        dd.ValueMember = "finish_serial"
        dd.DisplayMember = "finish_name"
        dd.DisplayLayout.Bands(0).Columns(0).Hidden = True
        dd.DisplayLayout.Bands(0).Columns(1).Header.Caption = "Finish"
        dd.DisplayLayout.Bands(0).Columns(2).Header.Caption = "Description"
        dd.DataBind()
        Grid1.DisplayLayout.Bands(0).Columns("ord_itm_finish_serial").ValueList = dd

        cnn.Close()
    End Sub
    Private Sub PopulateLacquer()
        Try
            Dim objValueList As Infragistics.Win.ValueList
            Dim dt As New DataTable
            Dim dr As DataRow

            Dim dd As New Infragistics.Win.UltraWinGrid.UltraDropDown

            dt.Columns.Add("lacq_value")
            dt.Columns.Add("lacq_desc")

            dr = dt.NewRow
            dr("lacq_value") = " "
            dr("lacq_desc") = "None"
            dt.Rows.Add(dr)

            dr = dt.NewRow
            dr("lacq_value") = "1"
            dr("lacq_desc") = "1 Coat"
            dt.Rows.Add(dr)

            dr = dt.NewRow
            dr("lacq_value") = "3"
            dr("lacq_desc") = "3 Coat"
            dt.Rows.Add(dr)

            dd.Width = 500

            dd.DataSource = dt
            dd.ValueMember = "lacq_value"
            dd.DisplayMember = "lacq_desc"
            dd.DisplayLayout.Bands(0).Columns(0).Header.Caption = "Value"
            dd.DisplayLayout.Bands(0).Columns(1).Header.Caption = "Description"
            dd.DataBind()
            Grid1.DisplayLayout.Bands(0).Columns("ord_itm_lacq3").ValueList = dd

            tDefLacq.DataSource = dt
            tDefLacq.ValueMember = "lacq_value"
            tDefLacq.DisplayMember = "lacq_desc"
            tDefLacq.DisplayLayout.Bands(0).Columns(0).Header.Caption = "Value"
            tDefLacq.DisplayLayout.Bands(0).Columns(1).Header.Caption = "Description"
            tDefLacq.DataBind()

        Catch
            DoError(Err, Me)
        End Try

    End Sub
    Private Sub LoadParts()
        Dim objValueList As Infragistics.Win.ValueList
        Dim cmd As New SqlCommand
        Dim da As New SqlDataAdapter

        Dim dd As New Infragistics.Win.UltraWinGrid.UltraDropDown

        cmd.Connection = cnn
        cmd.CommandText = "select itm_code,itm_desc from itm_file where inactive=0 order by itm_code"
        da.SelectCommand = cmd
        If cnn.State = ConnectionState.Closed Then cnn.Open()
        da.Fill(dsParts, "parts")
        cnn.Close()
        dd.DropDownWidth = 700
        dd.Width = 680
        
        dd.DataSource = dsParts
        dd.ValueMember = "itm_code"
        dd.DisplayMember = "itm_code"
        dd.DataBind()
        dd.DisplayLayout.Bands(0).Columns(0).Width = 200
        dd.DisplayLayout.Bands(0).Columns(1).Width = 480
        Grid1.DisplayLayout.Bands(0).Columns("ord_itm_item_code").ValueList = dd

    End Sub
    Private Sub Tab1_SelectedTabChanged(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinTabControl.SelectedTabChangedEventArgs) Handles Tab1.SelectedTabChanged
        Try
            Dim cmd As New SqlCommand("", cnn)
            'keylog(Tab1.ActiveTab.Text)
            Cursor.Current = System.Windows.Forms.Cursors.WaitCursor
            If Grid1.Selected.Rows.Count > 0 And Not Grid1.ActiveRow Is Nothing Then Grid1.ActiveRow.Selected = False
            Select Case Mid(Tab1.ActiveTab.Key, 1, 1)
                Case "Q"
                    DVItems.RowFilter = "ord_itm_type='Q' and ord_itm_rev=" + Mid(Tab1.ActiveTab.Key, 2) + ""
                    DVGen.RowFilter = "ord_gen_type='Q' and ord_gen_rev=" + Mid(Tab1.ActiveTab.Key, 2) + ""
                    BindingContext(DVGen).ResumeBinding()
                    DVAltShip.RowFilter = "ord_alt_ship_type='Q' and ord_alt_ship_rev=" + Mid(Tab1.ActiveTab.Key, 2) + ""
                    'DVOrdProd.RowFilter = "ord_prod_type='Q' and ord_prod_rev=" + Mid(Tab1.ActiveTab.Key, 2) + ""
                    'DVOrdProdISC.RowFilter = "ord_prod_isc_type='Q' and ord_prod_isc_rev=" + Mid(Tab1.ActiveTab.Key, 2) + ""
                    Grid1.DataSource = DVItems
                    Grid1.DataBind()
                    dsItems.Tables("ord_itm").Columns("ord_itm_type").DefaultValue = "Q"
                    dsItems.Tables("ord_itm").Columns("ord_itm_rev").DefaultValue = Mid(Tab1.ActiveTab.Key, 2)
                    dsItems.Tables("ord_itm").Columns("ord_itm_acct_lock").DefaultValue = False
                    dsItems.Tables("ord_itm").Columns("ord_itm_stain_bottles_add").DefaultValue = 0
                    dsItems.Tables("ord_itm").Columns("ord_itm_lacq_bottles_add").DefaultValue = 0
                    dsItems.Tables("ord_itm").Columns("ord_itm_ship_value").DefaultValue = 0
                    dsItems.Tables("ord_itm").Columns("ord_itm_lacq3").DefaultValue = " "
                    dsGen.Tables("ord_gen").Columns("ord_gen_type").DefaultValue = "Q"
                    dsGen.Tables("ord_gen").Columns("ord_gen_rev").DefaultValue = Mid(Tab1.ActiveTab.Key, 2)
                    dsGen.Tables("ord_gen").Columns("ord_gen_alt_ship").DefaultValue = False
                    dsGen.Tables("ord_gen").Columns("ord_gen_acct_lock").DefaultValue = False
                    dsGen.Tables("ord_gen").Columns("ord_gen_def_lacquer").DefaultValue = False
                    dsGen.Tables("ord_gen").Columns("ord_gen_ship_active").DefaultValue = True
                    dsGen.Tables("ord_gen").Columns("ord_gen_upsell_sqft").DefaultValue = "0"
                    dsGen.Tables("ord_gen").Columns("ord_gen_tax_exempt").DefaultValue = False
                    dsGen.Tables("ord_gen").Columns("ord_gen_tax_installs").DefaultValue = False

                   
                    TabItems.Parent = Tab1.ActiveTab.TabPage
                    TabItems.BackColor = Color.Gold
                    TabItems.Tabs.TabControl.ActiveTabAppearance.BackColor = Color.Gold
                    TabItems.Tabs("Shipments").Visible = False
                    TabItems.Tabs("Payments").Visible = False
                    TabItems.Tabs("Forecast").Visible = True
                    TabItems.Tabs("Ship").Visible = False
                    TabItems.Tabs("RepReq").Visible = False
                    TabItems.Tabs("Prod").Visible = False
                    lShipVal.Visible = False
                    tShipVal.Visible = False
                    'LoadDD(tStatus, dsStat, "stat_file", "stat_stat", "stat_stat", "", "stat_type='Q'", True)
                    Label8.Text = nz(DVGen(0).Item("ord_gen_designer_grade"))
                    If DVGen.Count > 0 Then
                        tStatus.Text = DVGen(0).Item("ord_gen_status")
                        tSalesCat.Text = DVGen(0).Item("ord_gen_sales_cat")
                        If Mid(Tab1.ActiveTab.Key, 2) = "0" And onOrdSource <> "" Then
                            DVGen(0).Item("ord_gen_src") = onOrdSource
                        End If
                    End If
                    If tOrdContSerial.Text <> "" And (tCCSource.Text = "" Or tCCSource.Text = "0") And EditMode = "Add" Then  '
                        cmd.CommandText = "select cont_call_center_rep_code from cont_file where cont_serial=" + tOrdContSerial.Text + " and cont_last_contact>='" + CStr(DateAdd(DateInterval.Day, -90, Today)) + "'"
                        cnn.Open()
                        'dsGen.Tables("ord_gen").Columns("ord_gen_ccsrc").DefaultValue = nz(cmd.ExecuteScalar)
                        'tCCSource.Text = nz(cmd.ExecuteScalar)
                        tCCSource.Value = nz(cmd.ExecuteScalar)
                        cnn.Close()
                    End If

                    'tCreate.Value = DVGen(0).Item("ord_gen_create_date")
                    cbShipActive.Enabled = False
                    Grid1.Height = Me.Height - 246
                    tOrdMod.Visible = False
                    CheckForWineZone()
                Case "O"
                    DVItems.RowFilter = "ord_itm_type='O' and ord_itm_rev=" + Mid(Tab1.ActiveTab.Key, 2)
                    DVGen.RowFilter = "ord_gen_type='O' and ord_gen_rev=" + Mid(Tab1.ActiveTab.Key, 2)
                    BindingContext(DVGen).ResumeBinding()
                    DVAltShip.RowFilter = "ord_alt_ship_type='O' and ord_alt_ship_rev=" + Mid(Tab1.ActiveTab.Key, 2)

                    DVOrdProd = New DataView(dsOrdProd.Tables("ord_prod"))
                    DVOrdProd.RowFilter = "ord_prod_type='O' and ord_prod_rev=" + Mid(Tab1.ActiveTab.Key, 2) + ""
                    DVOrdProdISC = New DataView(dsOrdProdISC.Tables("ord_prod_isc"))
                    DVOrdProdISC.RowFilter = "ord_prod_isc_type='O' and ord_prod_isc_rev=" + Mid(Tab1.ActiveTab.Key, 2) + ""

                    Grid1.DataSource = DVItems
                    Grid1.DataBind()
                    dsItems.Tables("ord_itm").Columns("ord_itm_type").DefaultValue = "O"
                    dsItems.Tables("ord_itm").Columns("ord_itm_rev").DefaultValue = Mid(Tab1.ActiveTab.Key, 2)
                    dsItems.Tables("ord_itm").Columns("ord_itm_acct_lock").DefaultValue = False
                    dsItems.Tables("ord_itm").Columns("ord_itm_stain_bottles_add").DefaultValue = 0
                    dsItems.Tables("ord_itm").Columns("ord_itm_lacq_bottles_add").DefaultValue = 0
                    dsItems.Tables("ord_itm").Columns("ord_itm_ship_value").DefaultValue = 0
                    dsItems.Tables("ord_itm").Columns("ord_itm_lacq3").DefaultValue = " "
                    dsGen.Tables("ord_gen").Columns("ord_gen_type").DefaultValue = "O"
                    dsGen.Tables("ord_gen").Columns("ord_gen_rev").DefaultValue = Mid(Tab1.ActiveTab.Key, 2)
                    dsGen.Tables("ord_gen").Columns("ord_gen_acct_lock").DefaultValue = False
                    dsGen.Tables("ord_gen").Columns("ord_gen_def_lacquer").DefaultValue = False
                    dsGen.Tables("ord_gen").Columns("ord_gen_upsell_sqft").DefaultValue = "0"
                   
                    dsRepReq.Tables("ord_rep_req").Columns("ord_rep_req_rev").DefaultValue = Mid(Tab1.ActiveTab.Key, 2)
                    dsOrdProd.Tables("ord_prod").Columns("ord_prod_rev").DefaultValue = Mid(Tab1.ActiveTab.Key, 2)
                    dsOrdProdISC.Tables("ord_prod_isc").Columns("ord_prod_isc_rev").DefaultValue = Mid(Tab1.ActiveTab.Key, 2)
                    dsOrdProd.Tables("ord_prod").Columns("ord_prod_type").DefaultValue = "O"
                    dsOrdProdISC.Tables("ord_prod_isc").Columns("ord_prod_isc_type").DefaultValue = "O"


                    TabItems.Parent = Tab1.ActiveTab.TabPage
                    TabItems.BackColor = Color.LightGreen
                    TabItems.Tabs.TabControl.ActiveTabAppearance.BackColor = Color.LightGreen
                    TabItems.Tabs("Shipments").Visible = True
                    TabItems.Tabs("Payments").Visible = True
                    TabItems.Tabs("Forecast").Visible = False
                    TabItems.Tabs("Ship").Visible = True
                    TabItems.Tabs("RepReq").Visible = False  'true
                    TabItems.Tabs("Prod").Visible = True
                    lShipVal.Visible = False
                    tShipVal.Visible = False
                    'LoadDD(tStatus, dsStat, "stat_file", "stat_stat", "stat_stat", "", "stat_type='O'", True)
                    tStatus.Text = DVGen(0).Item("ord_gen_status")
                    tSalesCat.Text = DVGen(0).Item("ord_gen_sales_cat")
                    cbShipActive.Enabled = cbInside.Enabled
                    TestOrdMod()

                    'If TabItems.ActiveTab.Key = "RepReq" Then
                    '    onRepReq = 0
                    '    LoadRepReq()
                    'End If
                    CheckForWineZone()
                    If tOrdContSerial.Text <> "" And (tCCSource.Text = "" Or tCCSource.Text = "0") And EditMode = "Add" Then
                        cmd.CommandText = "select cont_call_center_rep_code from cont_file where cont_serial=" + tOrdContSerial.Text + " and cont_last_contact>='" + CStr(DateAdd(DateInterval.Day, -90, Today)) + "'"
                        cnn.Open()
                        'tCCSource.Text = nz(cmd.ExecuteScalar)
                        tCCSource.Value = nz(cmd.ExecuteScalar)
                        cnn.Close()
                    End If
                Case "R"
                    DVItems.RowFilter = "ord_itm_type='R' and ord_itm_rev=" + Mid(Tab1.ActiveTab.Key, 2) + ""
                    dsItems.Tables("ord_itm").Columns("ord_itm_acct_lock").DefaultValue = False
                    DVGen.RowFilter = "ord_gen_type='R' and ord_gen_rev=" + Mid(Tab1.ActiveTab.Key, 2) + ""
                    BindingContext(DVGen).ResumeBinding()
                    DVAltShip.RowFilter = "ord_alt_ship_type='R' and ord_alt_ship_rev=" + Mid(Tab1.ActiveTab.Key, 2) + ""

                    DVOrdProd = New DataView(dsOrdProd.Tables("ord_prod"))
                    DVOrdProd.RowFilter = "ord_prod_type='R' and ord_prod_rev=" + Mid(Tab1.ActiveTab.Key, 2) + ""
                    DVOrdProdISC = New DataView(dsOrdProdISC.Tables("ord_prod_isc"))
                    DVOrdProdISC.RowFilter = "ord_prod_isc_type='R' and ord_prod_isc_rev=" + Mid(Tab1.ActiveTab.Key, 2) + ""

                    Grid1.DataSource = DVItems
                    Grid1.DataBind()
                    dsItems.Tables("ord_itm").Columns("ord_itm_type").DefaultValue = "R"
                    dsItems.Tables("ord_itm").Columns("ord_itm_rev").DefaultValue = Mid(Tab1.ActiveTab.Key, 2)
                    dsItems.Tables("ord_itm").Columns("ord_itm_stain_bottles_add").DefaultValue = 0
                    dsItems.Tables("ord_itm").Columns("ord_itm_lacq_bottles_add").DefaultValue = 0
                    dsItems.Tables("ord_itm").Columns("ord_itm_ship_value").DefaultValue = 0
                    dsItems.Tables("ord_itm").Columns("ord_itm_lacq3").DefaultValue = " "
                    dsGen.Tables("ord_gen").Columns("ord_gen_type").DefaultValue = "R"
                    dsGen.Tables("ord_gen").Columns("ord_gen_rev").DefaultValue = Mid(Tab1.ActiveTab.Key, 2)
                    dsGen.Tables("ord_gen").Columns("ord_gen_acct_lock").DefaultValue = False
                    dsGen.Tables("ord_gen").Columns("ord_gen_def_lacquer").DefaultValue = False
                    dsGen.Tables("ord_gen").Columns("ord_gen_upsell_sqft").DefaultValue = "0"
                  
                    dsOrdProd.Tables("ord_prod").Columns("ord_prod_rev").DefaultValue = Mid(Tab1.ActiveTab.Key, 2)
                    dsOrdProdISC.Tables("ord_prod_isc").Columns("ord_prod_isc_rev").DefaultValue = Mid(Tab1.ActiveTab.Key, 2)
                    dsOrdProd.Tables("ord_prod").Columns("ord_prod_type").DefaultValue = "R"
                    dsOrdProdISC.Tables("ord_prod_isc").Columns("ord_prod_isc_type").DefaultValue = "R"
                    TabItems.Parent = Tab1.ActiveTab.TabPage
                    TabItems.BackColor = Color.LightCoral
                    TabItems.Tabs.TabControl.ActiveTabAppearance.BackColor = Color.LightCoral
                    TabItems.Tabs("Shipments").Visible = True
                    TabItems.Tabs("Payments").Visible = False
                    TabItems.Tabs("Forecast").Visible = False
                    TabItems.Tabs("Ship").Visible = True
                    TabItems.Tabs("RepReq").Visible = False
                    TabItems.Tabs("Prod").Visible = True
                    lShipVal.Visible = True
                    tShipVal.Visible = True
                    'LoadDD(tStatus, dsStat, "stat_file", "stat_stat", "stat_stat", "", "stat_type='O'", True)
                    tStatus.Text = DVGen(0).Item("ord_gen_status")
                    tSalesCat.Text = DVGen(0).Item("ord_gen_sales_cat")
                    cbShipActive.Enabled = cbInside.Enabled
                    Grid1.Height = Me.Height - 246
                    tOrdMod.Visible = False
                    CheckForWineZone()
                    If tOrdContSerial.Text <> "" And (tCCSource.Text = "" Or tCCSource.Text = "0") And EditMode = "Add" Then
                        cmd.CommandText = "select cont_call_center_rep_code from cont_file where cont_serial=" + tOrdContSerial.Text + " and cont_last_contact>='" + CStr(DateAdd(DateInterval.Day, -90, Today)) + "'"
                        cnn.Open()
                        'tCCSource.Text = nz(cmd.ExecuteScalar)
                        tCCSource.Value = nz(cmd.ExecuteScalar)
                        cnn.Close()
                    End If
            End Select
            If Mid(Tab1.ActiveTab.Key, 1, 1) <> "C" Then
                TabItems.Height = Tab1.TabPageSize.Height
                TabItems.Width = Tab1.TabPageSize.Width
                DoTotal()
                CheckTabs()
                '****MPF
                If Mid(Tab1.ActiveTab.Key, 1, 1) = "R" Then
                    'Gold Wood
                    'LoadDD2(tMaterial, "mat_fac", "mat_fac_mat_code", "mat_fac_mat_code", "mat_fac_mat_code,mat_fac_is_wood")
                    LoadDD2(tGenMaterial, "mat_fac", "mat_fac_mat_code", "mat_fac_mat_code", "mat_fac_mat_code", "mat_fac_is_wood=1")
                Else
                    'Gold Wood
                    'LoadDD2(tMaterial, "mat_fac", "mat_fac_mat_code", "mat_fac_mat_code", "mat_fac_mat_code,mat_fac_is_wood", "mat_fac_start<='" + tCreate.Text + "' and mat_fac_end>='" + tCreate.Text + "'")
                    LoadDD2(tGenMaterial, "mat_fac", "mat_fac_mat_code", "mat_fac_mat_code", "mat_fac_mat_code", "mat_fac_is_wood=1 and mat_fac_start<='" + tCreate.Text + "' and mat_fac_end>='" + tCreate.Text + "'")
                End If
                'gold wood
                'tMaterial.DisplayLayout.Bands(0).Columns(0).Width = 250
                tGenMaterial.DisplayLayout.Bands(0).Columns(0).Width = 250
                If IsDate(tCreate.Text) = True Then
                    If tCreate.Value < CDate("5/27/2008") Then
                        TabItems.Tabs("UP").Visible = False
                    Else
                        TabItems.Tabs("UP").Visible = True
                    End If
                Else
                    TabItems.Tabs("UP").Visible = True
                End If

                If Not tabNotes.ActiveTab Is Nothing Then
                    If tabNotes.ActiveTab.Key = "Emails" Then LoadEmailsSent()
                End If

                CheckSourceCodeUpdated()
            End If
            SetAddButtons()
            If EditMode = "Edit" Then CheckAcctClosed()
            UpdateTabItems(TabItems.ActiveTab)
            GridHighlight()
            CheckAltShip()
            If UltraTabControl1.ActiveTab.Key = "Ref" Then LoadRef()
            If tDesignAuto.Text = "" And EditMode = "Edit" Then UpdateAutoDesignType()
            CheckMaterialSel()
            UpSellDirty = True
            If TabItems.ActiveTab.Key = "UP" Then LoadUpSells()



            'lDesReq.Text = Format(CDate(lDesReq.Text), "MM/dd/yyyy")
            Try
                If CDate(lDesReq.Text) = CDate("12/31/2120") Then lDesReq.Visible = False Else lDesReq.Visible = True
            Catch
                lDesReq.Visible = False
            End Try
        Catch
            DoError(Err, Me)
        Finally
            Cursor.Current = System.Windows.Forms.Cursors.Default
        End Try
    End Sub
    Private Sub CheckSourceCodeUpdated()
        If tOrd.Text = "" Then Exit Sub
        Dim dt As New DataTable
        Dim cmd As New SqlCommand("", cnn)
        Dim da As New SqlDataAdapter(cmd)

        cmd.CommandText = "select * from ord_gen_src_update where ord_gen_src_update_ord_serial=" + tOrd.Text + " and ord_gen_src_update_ord_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " and ord_gen_src_update_ord_type='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "'"
        da.Fill(dt)
        If dt.Rows.Count > 0 Then
            UltraLabel25.Appearance.BackColor = Color.Yellow

        End If
    End Sub
    Private Sub CheckForWineZone()
        If Mid(Tab1.ActiveTab.Key, 1, 1) = "Q" Or Mid(Tab1.ActiveTab.Key, 1, 1) = "C" Then
            TabItems.Tabs("Diag").Visible = False
        Else
            If DVItems.Count = 0 Then
                TabItems.Tabs("Diag").Visible = False
            Else
                cnn.Open()
                Dim x As Integer

                TabItems.Tabs("Diag").Visible = False
                For x = 0 To DVItems.Count - 1
                    If NeedsDiagnostic(DVItems(x).Item("ord_itm_item_code")) Then
                        TabItems.Tabs("Diag").Visible = True
                        Exit For
                    End If
                Next
                cnn.Close()
            End If
        End If
    End Sub
    Private Sub TestOrdMod()
        If Tab1.ActiveTab.Appearance.BackColor.ToArgb = Color.Yellow.ToArgb Then
            Dim cmd As New SqlCommand("select ord_note,ord_note_date,ord_note_user from ord_note where ord_note_ord_gen_serial=" + CStr(DVGen(0).Item("ord_gen_serial")) + " and ord_note_type='ORDMOD' order by ord_note_date desc", cnn)
            Dim dr As SqlDataReader
            cnn.Open()
            dr = cmd.ExecuteReader
            tOrdMod.Text = ""
            Do While dr.Read
                tOrdMod.Text += CStr(dr("ord_note_date")) + " " + dr("ord_note_user") + " : " + dr("ord_note") + vbCrLf
            Loop
            dr.Close()
            cnn.Close()
            Grid1.Height = Me.Height - 346
            tOrdMod.Visible = True
        Else
            Grid1.Height = Me.Height - 246
            tOrdMod.Visible = False
        End If
    End Sub
    Private Sub CheckAltShip()
        'If chUseAltShip.Checked Then
        If DVGen Is Nothing Then Exit Sub
        If DVGen.Count = 0 Then Exit Sub
        If nz(DVGen.Item(0)("ord_gen_alt_ship"), False) Then
            If DVAltShip.Count = 0 And Me.ActiveControl Is chUseAltShip Then
                Dim rw As DataRow
                rw = dsAltShip.Tables(0).NewRow
                rw("ord_alt_ship_rev") = CInt(Mid(Tab1.ActiveTab.Key, 2))
                rw("ord_alt_ship_type") = Mid(Tab1.ActiveTab.Key, 1, 1)
                rw("ord_alt_ship_country") = "USA"
                dsAltShip.Tables(0).Rows.Add(rw)
            End If
            TabItems.Tabs("ship").Appearance.Image = 8
            TabItems.Tabs("ship").FixedWidth = 140
            'If Tab1.ActiveTab.Key <> "C" Then Tab1.ActiveTab.Appearance.Image = 1
            'Tab1.ActiveTab.FixedWidth = 100
            'Tab1.ActiveTab.FixedWidth = 0
            pAltShip.Enabled = True And (EditMode <> "")
            If tAltShipCountry.Text = "" Then
                tAltShipCountry.Value = "USA"
            End If
        Else
            TabItems.Tabs("ship").Appearance.Image = Nothing
            TabItems.Tabs("ship").FixedWidth = 0
            'If Tab1.ActiveTab.Key <> "C" Then CheckActiveTabIcon()
            'Tab1.ActiveTab.FixedWidth = 0
            pAltShip.Enabled = False
        End If
        UpdateAltShipCountry()
        CheckActiveTabIcon()

        'If DVOrdProd.Count = 0 And Tab1.ActiveTab.Key <> "C" Then
        '    Dim rw As DataRow
        '    rw = dsOrdProd.Tables(0).NewRow
        '    rw("ord_prod_rev") = CInt(Mid(Tab1.ActiveTab.Key, 2))
        '    rw("ord_prod_type") = Mid(Tab1.ActiveTab.Key, 1, 1)
        '    dsOrdProd.Tables(0).Rows.Add(rw)
        'End If
    End Sub
    Private Sub CheckAcctClosed()
        If EditMode = "" Then Exit Sub
        If DVGen.Count = 0 Then Exit Sub
        If Mid(Tab1.ActiveTab.Key, 1, 1) <> "C" And Mid(Tab1.ActiveTab.Key, 1, 1) <> "Q" And nz(DVGen(0)("ord_gen_acct_lock"), False) = True Then
            LockCtr(Tab1.ActiveTab.TabPage.Controls)
            Grid1.DisplayLayout.Override.AllowUpdate = Infragistics.Win.DefaultableBoolean.False
            Grid1.DisplayLayout.Override.AllowDelete = Infragistics.Win.DefaultableBoolean.False
            Grid1.DisplayLayout.Override.AllowAddNew = Infragistics.Win.UltraWinGrid.AllowAddNew.No
            cbResponsible.Enabled = True  'False
            tDesType.Enabled = False
            chUseAltShip.Enabled = True
            CheckShipHold()
        Else
            If Mid(Tab1.ActiveTab.Key, 1, 1) <> "C" And Mid(Tab1.ActiveTab.Key, 1, 1) <> "Q" And tCreate.Value <= AcctClosed And EditMode = "Edit" And TabItems.ActiveTab.Text <> "Forecast" And CDate(IIf(IsDate(tAcctOpen.Text), tAcctOpen.Text, "1/1/1900")) <> Today Then
                LockCtr(Tab1.ActiveTab.TabPage.Controls)
                Grid1.DisplayLayout.Override.AllowUpdate = Infragistics.Win.DefaultableBoolean.False
                Grid1.DisplayLayout.Override.AllowDelete = Infragistics.Win.DefaultableBoolean.False
                Grid1.DisplayLayout.Override.AllowAddNew = Infragistics.Win.UltraWinGrid.AllowAddNew.No
                cbResponsible.Enabled = True
                tDesType.Enabled = True
                chUseAltShip.Enabled = True
                CheckShipHold()
            Else
                UnLockCtr(Tab1.ActiveTab.TabPage.Controls)
                Grid1.DisplayLayout.Override.AllowUpdate = Infragistics.Win.DefaultableBoolean.True
                Grid1.DisplayLayout.Override.AllowDelete = Infragistics.Win.DefaultableBoolean.True
                Grid1.DisplayLayout.Override.AllowAddNew = Infragistics.Win.UltraWinGrid.AllowAddNew.TemplateOnBottom
                If tCustId.Text = "" Then
                    tSalesCat.Enabled = True
                Else
                    tSalesCat.Enabled = False
                End If
                If CheckSecurity("Ship Promo") = 0 Then bShipPromoAdd.Enabled = False
            End If
        End If
    End Sub
    Public Overrides Sub find()
        Try
            If onDesignerLockDown > 0 Then
                MsgBox("You do not have permission to this function.", MsgBoxStyle.Information, "Permission?")
                Exit Sub
            End If
            'keylog("[Find]")
            If fmOSearch Is Nothing Then fmOSearch = New fmOrdSearch
            fmOSearch.Height = Me.Height * 0.95
            fmOSearch.Width = Me.Width * 0.8
            fmOSearch.frm = Me
            fmOSearch.ShowDialog()
            If KeyValue1 > 0 Then
                tOrd.Text = KeyValue1
                UpdateModeLog("View")
                LoadPage()
            End If
            Exit Sub


            Dim fm As New fmFind
            Dim flds As jFld
            fm.frm = Me
            fm.Sort = "ord_serial desc"
            fm.ShowHasOrders = True
            fm.Joinx = "left outer join ord_gen on ord_serial=ord_gen_ord_serial"

            fm.flds = New Collection

            flds = New jFld
            flds.Field = "ord_serial"
            flds.FieldName = "Quote/Order No"
            flds.FieldType = "Numeric"
            flds.Searchable = True
            fm.flds.Add(flds)

            flds = New jFld
            flds.Field = "ord_for"
            flds.FieldName = "For"
            flds.FieldType = "String"
            flds.Searchable = True
            flds.SearchAll = False
            fm.flds.Add(flds)

            flds = New jFld
            flds.Field = "ord_sold_name"
            flds.FieldName = "Sold To Name"
            flds.FieldType = "String"
            flds.Searchable = True
            flds.SearchAll = False
            fm.flds.Add(flds)

            fm.ShowDialog()
            If tOrd.Text <> "" Then
                LoadPage()
            End If

        Catch
            DoError(Err, Me)
        Finally
        End Try
    End Sub
    Public Sub LoadPage()
        If Not IsNumeric(tOrd.Text) Then Exit Sub
        If Val(tOrd.Text) <= 0 Then Exit Sub
        'LoadDD(tSalesCat, dsSalesCat, "sales_cat", "sales_cat_cat", "sales_cat_cat", "sales_cat_cat,sales_cat_desc")
        Dim cmd As New SqlCommand("", cnn)

        cnn.Open()
        If onDesignerLockDown > 0 Then
            cmd.CommandText = "select ord_gen_ord_serial from ord_gen where ord_gen_type='Q' and (ord_gen_co_desreq=1 and ord_gen_co_designer=0) and ord_gen_ord_serial=" + tOrd.Text
            If nz(cmd.ExecuteScalar, 0) = 0 Then
                MsgBox("You do not have access to this Quote/Order", MsgBoxStyle.Information, "No Access?")
                cnn.Close()
                ClearTabs()
                ClearFields(Me.Controls, False)
                Exit Sub
            End If
        End If

        If UserOSR <> "" And LCase(UserOSR) <> "chrism" And LCase(UserOSR) <> "brettn" And LCase(UserOSR) <> "erik" And LCase(UserOSR) <> "erikk" Then
            Dim onOSR As String
            cmd.CommandText = "select ord_gen_outside from ord_gen where ord_gen_ord_serial=" + tOrd.Text + " order by ord_gen_serial desc"
            onOSR = nz(cmd.ExecuteScalar, "")
            If onOSR <> UserOSR Then
                MsgBox("This is not one of your Quotes or Orders." + IIf(onOSR = "", "", " It belongs to " + onOSR), MsgBoxStyle.Information, "No Access?")
                cnn.Close()
                ClearTabs()
                ClearFields(Me.Controls, False)
                Exit Sub
            End If
        End If

        If LCase(Jcom.User) = "ericf" Then
            Dim dtt As New DataTable
            Dim da As New SqlClient.SqlDataAdapter
            da.SelectCommand = cmd
            cmd.CommandText = "SELECT ord_gen_type, ord_gen_inside, ord_gen_ord_serial, ord_gen_rev, ord_gen_from_rev FROM ord_gen WHERE ord_gen_ord_serial =" + tOrd.Text + " order by ord_gen_type"
            da.Fill(dtt)
            Dim rw As DataRow
            Dim go As Boolean = False
            For Each rw In dtt.Rows
                If LCase(rw("ord_gen_inside")) = "ericf" Then  'rw("ord_gen_type") = "O" And
                    go = True
                    Exit For
                End If
            Next
            If go = False Then
                MsgBox("This is not one of your Orders.", MsgBoxStyle.Information, "No Access?")
                cnn.Close()
                ClearTabs()
                ClearFields(Me.Controls, False)
                Exit Sub
            End If
        End If

        cmd.CommandText = "select count(ord_recent_ord_serial) from ord_recent where ord_recent_ord_serial=" + tOrd.Text + " and ord_recent_user='" + User + "'"
        If cmd.ExecuteScalar = 0 Then
            cmd.CommandText = "delete from ord_recent where ord_recent_user='" + User + "' and ord_recent_no>19"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "update ord_recent set ord_recent_no = ord_recent_no + 1 where ord_recent_user='" + User + "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "insert into ord_recent (ord_recent_ord_serial,ord_recent_user,ord_recent_no,ord_recent_when) values (" + tOrd.Text + ",'" + User + "',1,'" + CStr(Now) + "')"
            cmd.ExecuteNonQuery()
        Else
            cmd.CommandText = "update ord_recent set ord_recent_no = ord_recent_no + 1 where ord_recent_user='" + User + "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "update ord_recent set ord_recent_no = 1,ord_recent_when='" + CStr(Now) + "' where ord_recent_ord_serial=" + tOrd.Text + " and ord_recent_user='" + User + "'"
            cmd.ExecuteNonQuery()
        End If
        cmd.CommandText = "select ord_cust_taxrate from ord_file where ord_serial=" + tOrd.Text
        lOldTaxRate.Text = "* Tax rate was " + Format(nz(cmd.ExecuteScalar, 0) * 100, "#0.00") + "%"
        cnn.Close()

        Tab1.Tabs("Q0").Enabled = True
        If LoadFields(Me) = True Then
            EditButtons("Idle")
            LoadItems()
            'LoadTabs()
            UpdateCountry()
            AcceptOrd()

            Dim e As New Infragistics.Win.UltraWinTabControl.SelectedTabChangedEventArgs(Tab1.Tabs("Q0"), Tab1.Tabs("C"))
            Dim sender As Object
            Tab1_SelectedTabChanged(sender, e)
            Me.BindingContext.Item(DVGen).ResumeBinding()
            Me.BindingContext.Item(DVAltShip).ResumeBinding()
            Me.BindingContext.Item(DVOrdProd).ResumeBinding()
            'Me.BindingContext.Item(DVOrdProdISC).ResumeBinding()

            If tCustId.Text = "" Then
                LoadDD(tSalesCat, dsSalesCat, "sales_cat", "sales_cat_cat", "sales_cat_cat", "sales_cat_cat,sales_cat_desc", "sales_cat_selectable=1")
            Else
                LoadDD(tSalesCat, dsSalesCat, "sales_cat", "sales_cat_cat", "sales_cat_cat", "sales_cat_cat,sales_cat_desc")
            End If

            If DefaultPage.Value <> "C" Then
                Application.DoEvents()
                Dim Rev As Integer = -1
                Dim tb As Infragistics.Win.UltraWinTabControl.UltraTab
                Select Case DefaultPage.Value
                    Case "Q"
                        For Each tb In Tab1.Tabs
                            If Mid(tb.Key, 1, 1) = "Q" Then
                                If CInt(Mid(tb.Key, 2)) > Rev Then Rev = CInt(Mid(tb.Key, 2))
                            End If
                        Next
                        If Rev >= 0 Then Tab1.Tabs("Q" + CStr(Rev)).Selected = True
                    Case "O"
                        For Each tb In Tab1.Tabs
                            If Mid(tb.Key, 1, 1) = "O" Then
                                If CInt(Mid(tb.Key, 2)) > Rev Then Rev = CInt(Mid(tb.Key, 2))
                            End If
                        Next
                        If Rev >= 0 Then Tab1.Tabs("O" + CStr(Rev)).Selected = True
                End Select
            End If
        Else
        End If
        tNote.Text = ""
        LoadContacts()
        UpSellDirty = True
        'bEditSignoff.Text = "Edit Signoff"
        If tCustId.Text = "WE" Then tpOKBillEarly.Visible = True Else tpOKBillEarly.Visible = False

        dsDiag = New DataSet
        daDiag.SelectCommand = cmd
        cmd.CommandText = "select * from diag_file where diag_ord_serial=" + tOrd.Text + " order by diag_ord_serial,diag_type,diag_rev,diag_sent_date"
        daDiag.Fill(dsDiag, "diag_file")

        If tCustId.Text = "" Then
            cbDefThirdParty.Checked = False
            tDefThirdPartyName.Text = ""
        Else
            cmd.CommandText = "select * from cust_file where cust_id='" + tCustId.Text + "'"
            Dim dr As SqlDataReader
            cnn.Open()
            dr = cmd.ExecuteReader
            If dr.HasRows Then
                dr.Read()
                cbDefThirdParty.Checked = nz(dr("cust_thirdparty"), False)
                tDefThirdPartyName.Text = nz(dr("cust_thirdpartyname"))
            End If
            dr = Nothing
            cnn.Close()
        End If
        
    End Sub
    Private Sub bAddQuote_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bAddQuote.Click
        Try
            Dim tb As Infragistics.Win.UltraWinTabControl.UltraTab
            Dim Rev As Integer = 0
            Dim CurRev As Integer = 0
            Dim onOutside, onInside, onSource, onSpecial, onPO, onSalesCat As String
            Dim onMPF, onMF As Double
            Dim obj(99) As Object
            Dim ctl As Control
            Dim cnt As Integer
            Dim ctl2 As Infragistics.Win.UltraWinEditors.UltraCheckEditor
            Dim ctl3 As Infragistics.Win.UltraWinEditors.UltraTextEditor
            Dim ctl4 As Infragistics.Win.UltraWinEditors.UltraNumericEditor
            Dim ctl5 As Infragistics.Win.UltraWinEditors.UltraCurrencyEditor
            Dim drNew As DataRow
            Dim cmd As New SqlCommand("", cnn)
            'Dim ActColor As String = ""

            TabItems.Tabs("items").Selected = True

            drNew = dsGen.Tables("ord_gen").NewRow
            drNew.ItemArray = DVGen(0).Row.ItemArray

            For Each tb In Tab1.Tabs
                If Mid(tb.Key, 1, 1) = "Q" Then
                    If CInt(Mid(tb.Key, 2)) > Rev Then Rev = CInt(Mid(tb.Key, 2))
                End If
            Next
            If Rev = 99 Then
                MsgBox("Maximum number of REVs has been reached.")
                Exit Sub
            End If



            CurRev = CInt(Mid(Tab1.ActiveTab.Key, 2))
            Select Case MsgBox("Do you want to copy the items from REV " + CStr(CurRev) + " to the new revision?", MsgBoxStyle.YesNoCancel, "Copy Items?")
                Case MsgBoxResult.Cancel
                    Exit Sub
                Case MsgBoxResult.Yes
                    Dim dr, dr2 As DataRow
                    Dim tbl As New DataTable
                    Dim col, col2 As DataColumn

                    ' ''cnn.Open()
                    ' ''Dim g
                    ' ''cmd.CommandText = "SELECT  ord_gen_ord_serial FROM ord_gen where ord_gen_ord_serial =" + tOrd.Text + " and ord_gen_type='Q' and ord_gen_rev=" + (Rev + 1).ToString
                    ' ''g = CInt(nz(cmd.ExecuteScalar, -1))
                    ' ''cnn.Close()
                    ' ''If g <> -1 Then
                    ' ''    MsgBox("A quote with the revision  (" + (Rev + 1).ToString + ") already exists. Please refresh your screen and review the latest Quote added.")
                    ' ''    Exit Sub
                    ' ''End If


                    For Each col In dsItems.Tables("ord_itm").Columns
                        col2 = New DataColumn(col.ColumnName, col.DataType)
                        tbl.Columns.Add(col2)
                    Next
                    'ord_gen_ccsrc
                    cnn.Open()
                    For Each dr In dsItems.Tables(0).Rows
                        If dr("ord_itm_type") = "Q" And dr("ord_itm_rev") = CurRev And dr("ord_itm_item_code") <> "INSTALL" Then
                            dr2 = tbl.NewRow
                            dr2.ItemArray = dr.ItemArray
                            dr2("ord_itm_rev") = Rev + 1
                            dr2("ord_itm_group") = dr("ord_itm_group")
                            tbl.Rows.Add(dr2)
                        End If
                    Next
                    cnn.Close()

                    For Each dr In tbl.Rows
                        dr2 = dsItems.Tables("ord_itm").NewRow
                        dr2.ItemArray = dr.ItemArray
                        dsItems.Tables("ord_itm").Rows.Add(dr2)
                    Next
                    DVGen(0).Item("ord_gen_forecast") = "Revised"
                Case MsgBoxResult.No
                    drNew("ord_gen_ship_inside") = 0
                    drNew("ord_gen_ship_collect") = 0
                    drNew("ord_gen_ship_white_glove") = 0
                    drNew("ord_gen_ship_cust_pickup") = 0
                    drNew("ord_gen_ship_gated") = 0
                    drNew("ord_gen_ship_smalltruck") = 0
                    drNew("ord_gen_ship_call") = 0
                    drNew("ord_gen_ship_callname") = 0
                    drNew("ord_gen_ship_callphone") = 0
                    drNew("ord_gen_ship_twoman") = 0
                    drNew("ord_gen_ship_liftgate") = 0
                    drNew("ord_gen_ship_steps") = 0
                    drNew("ord_gen_ship_numsteps") = 0
                    drNew("ord_gen_ship_turns") = 0
                    drNew("ord_gen_ship_numturns") = 0
                    drNew("ord_gen_ship_thirdparty") = 0
                    drNew("ord_gen_ship_thirdpartyname") = 0
                    drNew("ord_gen_ship_alert") = 0
                    drNew("ord_gen_ship_overnite") = 0
                    drNew("ord_gen_ship_skids") = 0
                    drNew("ord_gen_ship_numskids") = 0
                    drNew("ord_gen_ship_intlship") = 0
                    drNew("ord_gen_ship_disc") = 0
                    drNew("ord_gen_ship_extra") = 0
                    drNew("ord_gen_ship_promo_serial") = DBNull.Value
            End Select

            drNew("ord_gen_from_rev") = CurRev
            drNew("ord_gen_rev") = Rev + 1
            drNew("ord_gen_type") = "Q"
            drNew("ord_gen_status") = "NEW"
            drNew("ord_gen_show_date") = Today
            drNew("ord_gen_create_date") = Now
            drNew("ord_gen_create_by") = User
            drNew("ord_gen_update_date") = Now
            drNew("ord_gen_update_by") = User
            If nz(drNew("ord_gen_forecast")) <> "Forecasted" And nz(drNew("ord_gen_forecast")) <> "" Then
                drNew("ord_gen_forecast") = "Forecasted"
                drNew("ord_gen_forecast_date") = DBNull.Value
            End If
            drNew("ord_gen_designer") = DBNull.Value
            drNew("ord_gen_des_status") = DBNull.Value
            drNew("ord_gen_upsell_sqft") = DBNull.Value
            drNew("ord_gen_co_isr") = False
            drNew("ord_gen_co_isruser") = ""
            drNew("ord_gen_co_isrdate") = CDate("1/1/1900")
            'drNew("ord_gen_co_desreq") = IIf(UserType = "D", 1, 0)
            drNew("ord_gen_co_desreq") = 0
            drNew("ord_gen_co_designer") = False
            drNew("ord_gen_co_desuser") = ""
            drNew("ord_gen_co_desdate") = CDate("1/1/1900")
            drNew("ord_gen_co_ca") = False
            drNew("ord_gen_co_factoryinstall_req") = False
            drNew("ord_gen_co_factoryinstall") = False
            drNew("ord_gen_co_factoryinstall_user") = ""
            drNew("ord_gen_co_factoryinstall_date") = CDate("1/1/1900")
            drNew("ord_gen_co_toart") = False
            drNew("ord_gen_co_causer") = ""
            drNew("ord_gen_co_cadate") = CDate("1/1/1900")
            drNew("ord_gen_design_required") = CDate("12/31/2120")
            drNew("ord_gen_start_design") = CDate("1/1/1900")
            drNew("ord_gen_ship_hold") = 0
            drNew("ord_gen_priority_note") = ""
            drNew("ord_gen_co_priority") = False
            drNew("ord_gen_tax_override") = 0
            drNew("ord_gen_tax_override_perc") = 0

            drNew("ord_gen_designer_grade") = ""

            If UCase(tCCSource.Text) = "ERICF" Then
                drNew("ord_gen_ccsrc") = "ERICF"
            ElseIf UCase(tCCSource.Text) = "ERICFL" Then
                drNew("ord_gen_ccsrc") = "ERICFL"
            Else
                If tOrdContSerial.Text <> "" Then
                    cmd.CommandText = "select cont_call_center_rep_code from cont_file where cont_serial=" + tOrdContSerial.Text + " and cont_last_contact>='" + CStr(DateAdd(DateInterval.Day, -90, Today)) + "'"
                    cnn.Open()
                    drNew("ord_gen_ccsrc") = nz(cmd.ExecuteScalar)
                    cnn.Close()
                End If
            End If
            

            If cbDefThirdParty.Checked = True Then
                drNew("ord_gen_ship_thirdparty") = 1
                drNew("ord_gen_ship_thirdpartyname") = tDefThirdPartyName.Text
            Else
                drNew("ord_gen_ship_thirdparty") = 0
                drNew("ord_gen_ship_thirdpartyname") = ""
            End If
            'If nz(drNew("ord_gen_outside"), "NONE") = "NONE" And tSoldCustId.Text = "" Then
            '    cmd.CommandText = "select rep_code from rep_file where rep_type='F' and rep_active=1"
            '    cnn.Open()
            '    drNew("ord_gen_floating") = nz(cmd.ExecuteScalar, "<None>")
            '    cnn.Close()
            '    If drNew("ord_gen_floating") <> "<None>" Then drNew("ord_gen_resp_rep") = "F"
            'End If
            dsGen.Tables("ord_gen").Rows.Add(drNew)

            If DVGen(0).Item("ord_gen_alt_ship") = True Then
                drNew = dsAltShip.Tables(0).NewRow
                drNew.ItemArray = DVAltShip(0).Row.ItemArray
                drNew("ord_alt_ship_rev") = Rev + 1
                drNew("ord_alt_ship_type") = "Q"
                dsAltShip.Tables(0).Rows.Add(drNew)
            End If


            tb = Tab1.Tabs.Add("Q" + CStr(Rev + 1), "Quote " + CStr(Rev + 1))
            'tb.Selected = True
            tb.Reposition(Tab1.Tabs("Q" + CStr(Rev)), Infragistics.Win.RelativePosition.Before)
            tb.Appearance.BackColor = System.Drawing.Color.LightGoldenrodYellow
            TabItems.Parent = tb.TabPage
            tb.Selected = True

            'UpdatePrices2()
            UpdatePriceAllByRow(False)
            'DoTotal()

            'Dim fm As New fmForecastStatus
            'fm.fm = Me
            'fm.ShowDialog()

            'If ActColor <> "" Then
            '    MsgBox("Color(s) " + Mid(ActColor, 1, Len(ActColor) - 2) + " are not currently active.  You must review the colors selected or add an upcharge.", MsgBoxStyle.Exclamation, "Colors?")
            'End If
            Grid1.DataBind()
            GetGenTaxRate()
        Catch
            DoError(Err, Me)
        End Try
    End Sub

    Private Sub bAddOrder_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bAddOrder.Click
        SplitOMatic()
        'AddOrderOld()
    End Sub
    'Rem on 6/25/2008
    'Private Sub AddOrderOld()

    '    Try
    '        Dim tb As Infragistics.Win.UltraWinTabControl.UltraTab
    '        Dim Rev As Integer = -1
    '        Dim CurRev As Integer = 0
    '        Dim CurType As String
    '        Dim onOutside, onInside, onSource, onSpecial, onPO, onSalesCat As String
    '        Dim obj(99) As Object
    '        Dim ctl As Control
    '        Dim cnt As Integer
    '        Dim ctl2 As Infragistics.Win.UltraWinEditors.UltraCheckEditor
    '        Dim ctl3 As Infragistics.Win.UltraWinEditors.UltraTextEditor
    '        Dim ctl4 As Infragistics.Win.UltraWinEditors.UltraNumericEditor
    '        Dim ctl5 As Infragistics.Win.UltraWinEditors.UltraCurrencyEditor
    '        Dim drNew As DataRow
    '        Dim cmd As New SqlCommand("", cnn)

    '        TabItems.Tabs("items").Selected = True

    '        drNew = dsGen.Tables("ord_gen").NewRow
    '        drNew.ItemArray = DVGen(0).Row.ItemArray
    '        DVGen(0).Item("ord_gen_forecast") = "Ordered"
    '        DVGen(0).Item("ord_gen_co_isr") = True
    '        DVGen(0).Item("ord_gen_co_isruser") = "Ordered"
    '        DVGen(0).Item("ord_gen_co_isrdate") = Now

    '        Dim dvQuotes As New DataView(dsGen.Tables(0), "ord_gen_type='Q' and ord_gen_forecast<>'Ordered'", "ord_gen_serial", DataViewRowState.CurrentRows)
    '        If dvQuotes.Count > 0 Then
    '            If MsgBox("Do you want to set all other quotes forecast to 'REVISED'?", MsgBoxStyle.YesNo, "Revised?") = MsgBoxResult.Yes Then
    '                For cnt = 0 To dvQuotes.Count - 1
    '                    dvQuotes(cnt).Item("ord_gen_forecast") = "Revised"
    '                    dvQuotes(cnt).Item("ord_gen_co_isr") = True
    '                    dvQuotes(cnt).Item("ord_gen_co_isruser") = "Revised"
    '                    dvQuotes(cnt).Item("ord_gen_co_isrdate") = Now
    '                Next
    '            End If
    '        End If

    '        For Each tb In Tab1.Tabs
    '            If Mid(tb.Key, 1, 1) = "O" Then
    '                If CInt(Mid(tb.Key, 2)) > Rev Then Rev = CInt(Mid(tb.Key, 2))
    '            End If
    '        Next
    '        If Rev = 99 Then
    '            MsgBox("Maximum number of REVs has been reached.")
    '            Exit Sub
    '        End If
    '        CurRev = CInt(Mid(Tab1.ActiveTab.Key, 2))
    '        CurType = Mid(Tab1.ActiveTab.Key, 1, 1)
    '        Select Case MsgBox("Do you want to copy the items from " + Tab1.ActiveTab.Text + " to the new revision?", MsgBoxStyle.YesNoCancel, "Copy Items?")
    '            Case MsgBoxResult.Cancel
    '                Exit Sub
    '            Case MsgBoxResult.Yes
    '                Dim dr, dr2 As DataRow
    '                Dim tbl As New DataTable
    '                Dim col, col2 As DataColumn
    '                For Each col In dsItems.Tables("ord_itm").Columns
    '                    col2 = New DataColumn(col.ColumnName, col.GetType())
    '                    tbl.Columns.Add(col2)
    '                Next
    '                'Tot = 0

    '                cnn.Open()
    '                For Each dr In dsItems.Tables(0).Rows
    '                    If dr("ord_itm_type") = CurType And dr("ord_itm_rev") = CurRev Then
    '                        dr2 = tbl.NewRow
    '                        dr2.ItemArray = dr.ItemArray
    '                        dr2("ord_itm_rev") = Rev + 1
    '                        dr2("ord_itm_type") = "O"
    '                        If cb5Perc.Checked = True And (nz(dr("ord_itm_prod_type"), "") = "TOP" Or nz(dr("ord_itm_prod_type"), "") = "BUD" Or nz(dr("ord_itm_prod_type"), "") = "GOLD") And Mid(Tab1.ActiveTab.Key, 1, 1) = "Q" Then
    '                            dr2("ord_itm_disc") = Math.Round((nz(dr("ord_itm_unt_sell"), 0) * nz(dr("ord_itm_qty"), 0) * 0.05 * -1) + 0.00001, 2)
    '                        End If
    '                        'cmd.CommandText = "select mat_color_act_color from mat_color_act where mat_color_act_mat_code='" + nz(dr2("ord_itm_mat_code")) + "' and mat_color_act_start<='" + CStr(Today) + "' and mat_color_act_end>='" + CStr(Today) + "'"
    '                        'dr2("ord_itm_mat_color") = nz(cmd.ExecuteScalar)
    '                        tbl.Rows.Add(dr2)
    '                        'Tot = Tot + (nz(dr("ord_itm_qty"), 1) * nz(dr("ord_itm_unt_sell"), 0)) - nz(dr("ord_itm_disc"), 0)
    '                    End If
    '                Next
    '                cnn.Close()

    '                For Each dr In tbl.Rows
    '                    dr2 = dsItems.Tables("ord_itm").NewRow
    '                    dr2.ItemArray = dr.ItemArray
    '                    dsItems.Tables("ord_itm").Rows.Add(dr2)
    '                Next
    '        End Select

    '        drNew("ord_gen_from_rev") = CurRev
    '        drNew("ord_gen_rev") = Rev + 1
    '        drNew("ord_gen_type") = "O"
    '        drNew("ord_gen_status") = "NEW"
    '        drNew("ord_gen_show_date") = Today
    '        drNew("ord_gen_create_date") = Now
    '        drNew("ord_gen_create_by") = User
    '        drNew("ord_gen_update_date") = Now
    '        drNew("ord_gen_update_by") = User
    '        dsGen.Tables("ord_gen").Rows.Add(drNew)

    '        If DVGen(0).Item("ord_gen_alt_ship") = True Then
    '            drNew = dsAltShip.Tables(0).NewRow
    '            drNew.ItemArray = DVAltShip(0).Row.ItemArray
    '            drNew("ord_alt_ship_rev") = Rev + 1
    '            drNew("ord_alt_ship_type") = "O"
    '            dsAltShip.Tables(0).Rows.Add(drNew)
    '        End If

    '        tb = Tab1.Tabs.Add("O" + CStr(Rev + 1), "Order " + CStr(CurRev) + "-" + CStr(Rev + 1))
    '        tb.Reposition(Tab1.Tabs(0), Infragistics.Win.RelativePosition.After)
    '        tb.Appearance.BackColor = System.Drawing.Color.LightGreen
    '        TabItems.Parent = tb.TabPage
    '        tb.Selected = True

    '        UpdateTaxOnOrd()
    '        DoTotal()
    '    Catch
    '        DoError(Err, Me)
    '    End Try
    'End Sub
    Public Function SplitOMatic(Optional ByVal CopyItems As Boolean = True) As String
        Try
            If cbOvernite.Checked = True Then
                MsgBox("Overnite is checked on the General Tab.  This is not ready for the Split-O-Matic and will be fixed soon.  Please uncheck it and add the cost in additional shipping and add a note.", MsgBoxStyle.Information, "Overnite?")
                Exit Function
            End If
            DoTotal()

            Dim tb As Infragistics.Win.UltraWinTabControl.UltraTab
            Dim Rev As Integer = -1
            Dim CurRev As Integer = 0
            Dim CurType As String
            Dim onOutside, onInside, onSource, onSpecial, onPO, onSalesCat As String
            Dim obj(99) As Object
            Dim ctl As Control
            Dim ctl2 As Infragistics.Win.UltraWinEditors.UltraCheckEditor
            Dim ctl3 As Infragistics.Win.UltraWinEditors.UltraTextEditor
            Dim ctl4 As Infragistics.Win.UltraWinEditors.UltraNumericEditor
            Dim ctl5 As Infragistics.Win.UltraWinEditors.UltraCurrencyEditor
            Dim drNew As DataRow
            Dim cmd As New SqlCommand("", cnn)
            Dim ordNos As New ArrayList
            Dim v, w, x, y, z, cnt As Integer
            Dim itm As DataRow
            Dim hasCustom As Boolean
            Dim CustomArray(99) As Boolean
            Dim ShipCostRev As Integer = -1
            Dim onTotal As Double = DVGen(0).Item("ord_gen_total")
            Dim tmp As New ArrayList
            Dim DiscArray As New ArrayList
            Dim SubArray As New ArrayList
            Dim MainTotal, SubTotal As Double
            Dim dr, dr2, dr3 As DataRow
            Dim tbl As New DataTable
            Dim tblStain As New DataTable
            Dim tblDisc As New DataTable
            'Dim tblTemp As New DataTable
            Dim col, col2 As DataColumn
            Dim SubTot(99, 99) As Double
            Dim TotProfit As Double
            Dim OrigItems As New DataView(dsItems.Tables(0), DVItems.RowFilter, DVItems.Sort, DVItems.RowStateFilter)
            Dim CopiedItems As Boolean = True
            Dim ArtOnRevs As New ArrayList
            Dim OrigNote As String = ""
            Dim onBasePrice As Double
            Dim CheckTotal As Boolean = True
            Dim PercDiscTotal As Double = 0
            Dim ProposedCommitDate As Date = CDate("1/1/1900")
            Dim DoIt As Boolean

            Dim rws As Infragistics.Win.UltraWinGrid.UltraGridRow
            Dim hasCORK As Boolean = False
            Dim hasCORKPOST As Boolean = False
            For Each rws In Grid1.Rows
                If rws.Selected = True Or Grid1.Selected.Rows.Count = 0 Then
                    rws.Cells("ord_itm_group_do").Value = True
                    If Mid(rws.Cells("ord_itm_item_code").Value, 1, 7) = "CORKFLO" Then hasCORK = True
                    If rws.Cells("ord_itm_item_code").Value = "CORKPOST" Then hasCORKPOST = True
                Else
                    rws.Cells("ord_itm_group_do").Value = False
                    CheckTotal = False
                End If
            Next
            If hasCORK = True And hasCORKPOST = False Then
                MsgBox("You must select CORKPOST if you are going to have CORKFLOOR selected", MsgBoxStyle.Critical, "Cork?")
                Exit Function
            End If

            'If QuietMode = False Then  Remmed by Jon on 10/13/2010
            'If QuietModeForIWA added by Jon on 11/02/2010
            If QuietModeForIWA = False Then
                DVGen(0).Item("ord_gen_forecast") = "Ordered"
                DVGen(0).Item("ord_gen_co_isr") = True
                DVGen(0).Item("ord_gen_co_isruser") = "Ordered"
                DVGen(0).Item("ord_gen_co_isrdate") = Now
                'End If
            End If
            ProposedCommitDate = nz(DVGen(0).Item("ord_gen_pc_date"), CDate("1/1/1900"))
            DVGen(0).Item("ord_gen_pc_report") = False
            pcReport.Checked = False

            Dim dvQuotes As New DataView(dsGen.Tables(0), "ord_gen_type='Q' and ord_gen_forecast<>'Ordered'", "ord_gen_serial", DataViewRowState.CurrentRows)
            If dvQuotes.Count > 0 Then
                DoIt = False
                If QuietMode Then
                    DoIt = True
                Else
                    If MsgBox("Do you want to set all other quotes forecast to 'REVISED'?", MsgBoxStyle.YesNo, "Revised?") = MsgBoxResult.Yes Then DoIt = True
                End If
                If QuietModeForIWA Then DoIt = False
                If DoIt Then
                    For cnt = 0 To dvQuotes.Count - 1
                        dvQuotes(cnt).Item("ord_gen_forecast") = "Revised"
                        dvQuotes(cnt).Item("ord_gen_co_isr") = True
                        dvQuotes(cnt).Item("ord_gen_co_isruser") = "Revised"
                        dvQuotes(cnt).Item("ord_gen_co_isrdate") = Now
                    Next
                End If
            End If

            For Each tb In Tab1.Tabs
                If Mid(tb.Key, 1, 1) = "O" Then
                    If CInt(Mid(tb.Key, 2)) > Rev Then Rev = CInt(Mid(tb.Key, 2))
                End If
            Next
            If Rev = 99 Then
                MsgBox("Maximum number of REVs has been reached.")
                Exit Function
            End If
            CurRev = CInt(Mid(Tab1.ActiveTab.Key, 2))
            CurType = Mid(Tab1.ActiveTab.Key, 1, 1)

            BindingContext(DVItems).EndCurrentEdit()

            For x = 0 To DVItems.Count - 1
                itm = DVItems(x).Row
                If itm("ord_itm_group_do") = True Then
                    If ordNos.Contains(itm("ord_itm_group")) = False Then
                        ordNos.Add(itm("ord_itm_group"))
                    End If
                End If

            Next
            If ordNos.Count = 1 Then
                If ordNos(0) = 0 Then ordNos(0) = 1
            End If
            ordNos.Sort()

            Dim Result As Microsoft.VisualBasic.MsgBoxResult

            If CopyItems Then
                If QuietMode Then
                    Result = MsgBoxResult.Yes
                Else
                    Result = MsgBox("Do you want to copy the items from " + Tab1.ActiveTab.Text + " to the new revision?", MsgBoxStyle.YesNoCancel, "Copy Items?")
                End If
            Else
                Result = MsgBoxResult.No
            End If
            Select Case Result
                Case MsgBoxResult.Cancel
                    Exit Function
                Case MsgBoxResult.Yes

                    'cnn.Open()
                    'Dim g
                    'cmd.CommandText = "SELECT  ord_gen_ord_serial FROM ord_gen where ord_gen_ord_serial =" + tOrd.Text + " and ord_gen_type='O' and ord_gen_rev=" + (Rev + 1).ToString
                    'g = CInt(nz(cmd.ExecuteScalar, -1))
                    'cnn.Close()
                    'If g <> -1 Then
                    '    MsgBox("An order with the revision  (" + (Rev + 1).ToString + ") already exists. Please refresh your screen and review the latest Order added.")
                    '    Exit Function
                    'End If

                    cbIsSplit.Checked = True
                    For Each col In dsItems.Tables("ord_itm").Columns
                        col2 = New DataColumn(col.ColumnName, col.DataType)
                        tbl.Columns.Add(col2)
                        col2 = New DataColumn(col.ColumnName, col.DataType)
                        tblStain.Columns.Add(col2)
                        col2 = New DataColumn(col.ColumnName, col.DataType)
                        tblDisc.Columns.Add(col2)
                        'col2 = New DataColumn(col.ColumnName, col.DataType)
                        'tblTemp.Columns.Add(col2)
                    Next
                    'Tot = 0

                    cnn.Open()

                    For z = 0 To DVItems.Count - 1
                        dr = DVItems(z).Row
                        If dr("ord_itm_bottle_search") = "L" Or dr("ord_itm_bottle_search") = "S" Then
                            dr2 = tblStain.NewRow
                            dr2.ItemArray = dr.ItemArray
                            dr2("ord_itm_rev") = Rev + 1
                            dr2("ord_itm_type") = "O"
                            If cb5Perc.Checked = True And (nz(dr("ord_itm_prod_type"), "") = "TOP" Or nz(dr("ord_itm_prod_type"), "") = "BUD" Or nz(dr("ord_itm_prod_type"), "") = "GOLD") Then 'And Mid(Tab1.ActiveTab.Key, 1, 1) = "Q" Then
                                dr2("ord_itm_disc") = Math.Round((nz(dr("ord_itm_unt_sell"), 0) * nz(dr("ord_itm_qty"), 0) * 0.05 * -1) + 0.00001, 2)
                                PercDiscTotal = PercDiscTotal + dr2("ord_itm_disc")
                            End If
                            tblStain.Rows.Add(dr2)
                        End If
                        If dr("ord_itm_is_disc") = True Or dr("ord_itm_is_up") = True Then
                            dr2 = tblDisc.NewRow
                            dr2.ItemArray = dr.ItemArray
                            dr2("ord_itm_rev") = Rev + 1
                            dr2("ord_itm_type") = "O"
                            dr2("ord_itm_disc_type") = "D"
                            dr2("ord_itm_disc_val") = Math.Round(dr2("ord_itm_qty") * dr2("ord_itm_unt_sell"), 2)
                            tblDisc.Rows.Add(dr2)
                        End If
                    Next

                    For Each dr In tblDisc.Rows
                        MainTotal = 0
                        For z = 0 To DVItems.Count - 1
                            dr3 = DVItems(z).Row
                            If dr3("ord_itm_base_price") = 0 Then
                                onBasePrice = dr3("ord_itm_unt_sell")
                            Else
                                onBasePrice = dr3("ord_itm_base_price")
                            End If

                            If dr3("ord_itm_is_up") = False And dr3("ord_itm_is_disc") = False Then 'And dr3("ord_itm_is_perc_price") = False Then
                                'MainTotal = Math.Round(MainTotal + dr3("ord_itm_qty") * (dr3("ord_itm_unt_sell") - dr3("ord_itm_base_price")), 2)
                                If dr("ord_itm_disc_prod") = "" And dr("ord_itm_disc_matl") = "" Then MainTotal = Math.Round(MainTotal + dr3("ord_itm_qty") * (dr3("ord_itm_unt_sell") - onBasePrice), 2)
                                If dr("ord_itm_disc_prod") <> "" And dr("ord_itm_disc_prod") = dr3("ord_itm_prod_type") And dr("ord_itm_disc_matl") = "" Then MainTotal = Math.Round(MainTotal + dr3("ord_itm_qty") * (dr3("ord_itm_unt_sell") - onBasePrice), 2)
                                If dr("ord_itm_disc_prod") = "" And dr("ord_itm_disc_matl") <> "" And dr("ord_itm_disc_matl") = dr3("ord_itm_mat_code") Then MainTotal = Math.Round(MainTotal + dr3("ord_itm_qty") * (dr3("ord_itm_unt_sell") - onBasePrice), 2)
                                If dr("ord_itm_disc_prod") <> "" And dr("ord_itm_disc_prod") = dr3("ord_itm_prod_type") And dr("ord_itm_disc_matl") <> "" And dr("ord_itm_disc_matl") = dr3("ord_itm_mat_code") Then MainTotal = Math.Round(MainTotal + dr3("ord_itm_qty") * (dr3("ord_itm_unt_sell") - onBasePrice), 2)
                            End If
                        Next
                        DiscArray.Add(MainTotal)
                    Next

                    cnt = 0
                    For Each y In ordNos
                        If y <> 0 Then
                            hasCustom = False
                            'tblTemp.Clear()
                            SubTotal = 0
                            For z = 0 To DVItems.Count - 1
                                dr = DVItems(z).Row
                                If dr("ord_itm_group_do") = True Then
                                    If (dr("ord_itm_group") = y Or (dr("ord_itm_group") = 0 And cnt = 0)) And dr("ord_itm_bottle_search") <> "L" And dr("ord_itm_bottle_search") <> "S" And dr("ord_itm_is_disc") = False And dr("ord_itm_is_up") = False Then
                                        dr2 = tbl.NewRow
                                        dr2.ItemArray = dr.ItemArray
                                        dr2("ord_itm_rev") = Rev + 1 + cnt
                                        dr2("ord_itm_type") = "O"
                                        If dr2("ord_itm_item_code") = "AUTOPROCESS" Then
                                            dr2("ord_itm_item_code") = "PROCESS"
                                            dr2("ord_itm_is_perc_price") = False
                                        End If
                                        If dr2("ord_itm_item_code") = "DESIGNFEE-AUTO" Then
                                            dr2("ord_itm_item_code") = "DESIGNFEE-LOCK"
                                            dr2("ord_itm_is_perc_price") = False
                                        End If
                                        SubTotal = Math.Round(SubTotal + dr2("ord_itm_qty") * (dr2("ord_itm_unt_sell") - dr2("ord_itm_base_price")), 2)
                                        w = 0
                                        If dr2("ord_itm_is_perc_price") = False And dr2("ord_itm_prod_type") <> "IN" Then
                                            For Each dr3 In tblDisc.Rows
                                                If dr3("ord_itm_disc_prod") = "" And dr3("ord_itm_disc_matl") = "" Then SubTot(cnt, w) = Math.Round(SubTot(cnt, w) + dr2("ord_itm_qty") * (dr2("ord_itm_unt_sell") - dr2("ord_itm_base_price")), 2)
                                                If dr3("ord_itm_disc_prod") <> "" And dr3("ord_itm_disc_prod") = dr("ord_itm_prod_type") And dr3("ord_itm_disc_matl") = "" Then SubTot(cnt, w) = Math.Round(SubTot(cnt, w) + dr2("ord_itm_qty") * (dr2("ord_itm_unt_sell") - dr2("ord_itm_base_price")), 2)
                                                If dr3("ord_itm_disc_prod") = "" And dr3("ord_itm_disc_matl") <> "" And dr3("ord_itm_disc_matl") = dr("ord_itm_mat_code") Then SubTot(cnt, w) = Math.Round(SubTot(cnt, w) + dr2("ord_itm_qty") * (dr2("ord_itm_unt_sell") - dr2("ord_itm_base_price")), 2)
                                                If dr3("ord_itm_disc_prod") <> "" And dr3("ord_itm_disc_prod") = dr("ord_itm_prod_type") And dr3("ord_itm_disc_matl") <> "" And dr3("ord_itm_disc_matl") = dr("ord_itm_mat_code") Then SubTot(cnt, w) = Math.Round(SubTot(cnt, w) + dr2("ord_itm_qty") * (dr2("ord_itm_unt_sell") - dr2("ord_itm_base_price")), 2)
                                                w += 1
                                            Next
                                        End If

                                        'Test for Art note to be placed on the first order "Additiona Art is on Rev..."
                                        If dr("ord_itm_prod_type") = "ARCH" And dr2("ord_itm_rev") <> Rev + 1 Then
                                            cmd.CommandText = "select itm_additional_art from itm_file where itm_code='" + dr("ord_itm_item_code") + "'"
                                            If cmd.ExecuteScalar = True Then
                                                If ArtOnRevs.Contains(dr2("ord_itm_rev")) = False Then ArtOnRevs.Add(dr2("ord_itm_rev"))
                                            End If
                                        End If

                                        If cb5Perc.Checked = True And (nz(dr("ord_itm_prod_type"), "") = "TOP" Or nz(dr("ord_itm_prod_type"), "") = "BUD" Or nz(dr("ord_itm_prod_type"), "") = "GOLD") Then 'And Mid(Tab1.ActiveTab.Key, 1, 1) = "Q" Then
                                            dr2("ord_itm_disc") = Math.Round((nz(dr("ord_itm_unt_sell"), 0) * nz(dr("ord_itm_qty"), 0) * 0.05 * -1) + 0.00001, 2)
                                            PercDiscTotal = PercDiscTotal + dr2("ord_itm_disc")
                                        End If

                                        tbl.Rows.Add(dr2)
                                        If ShipCostRev = -1 And Custom.Contains(nz(dr("ord_itm_prod_type"))) Then ShipCostRev = Rev + 1 + cnt

                                        If (dr2("ord_itm_prod_type") = "BUD" Or dr2("ord_itm_prod_type") = "TOP" Or dr2("ord_itm_prod_type") = "GOLD" Or dr2("ord_itm_prod_type") = "ARCH") And tCustId.Text = "WE" Then
                                            hasCustom = True
                                        End If
                                    End If
                                End If
                            Next
                            SubArray.Add(SubTotal)
                            CustomArray(y) = hasCustom
                            For Each dr In tblStain.Rows
                                dr2 = tbl.NewRow
                                dr2.ItemArray = dr.ItemArray
                                dr2("ord_itm_rev") = Rev + 1 + cnt
                                dr2("ord_itm_type") = "O"
                                If cb5Perc.Checked = True And (nz(dr("ord_itm_prod_type"), "") = "TOP" Or nz(dr("ord_itm_prod_type"), "") = "BUD" Or nz(dr("ord_itm_prod_type"), "") = "GOLD") Then 'And Mid(Tab1.ActiveTab.Key, 1, 1) = "Q" Then
                                    dr2("ord_itm_disc") = Math.Round((nz(dr("ord_itm_unt_sell"), 0) * nz(dr("ord_itm_qty"), 0) * 0.05 * -1) + 0.00001, 2)
                                    PercDiscTotal = PercDiscTotal + dr2("ord_itm_disc")
                                End If
                                tbl.Rows.Add(dr2)
                            Next

                            cnt += 1
                        End If
                    Next
                    cnn.Close()
                    If ShipCostRev = -1 Then ShipCostRev = Rev + 1

                    For Each dr In tbl.Rows
                        dr2 = dsItems.Tables("ord_itm").NewRow
                        dr2.ItemArray = dr.ItemArray
                        dsItems.Tables("ord_itm").Rows.Add(dr2)
                    Next
                Case MsgBoxResult.No
                    ordNos.Clear()
                    ordNos.Add(1)
                    ShipCostRev = Rev + 1
                    CopiedItems = False
            End Select

            cnt = 0
            w = 0
            For Each y In ordNos
                If y <> 0 Then
                    drNew = dsGen.Tables("ord_gen").NewRow
                    drNew.ItemArray = DVGen(0).Row.ItemArray
                    drNew("ord_gen_from_rev") = CurRev
                    drNew("ord_gen_rev") = Rev + 1 + cnt
                    drNew("ord_gen_type") = "O"
                    drNew("ord_gen_status") = "NEW"
                    drNew("ord_gen_show_date") = Today
                    drNew("ord_gen_create_date") = Now
                    drNew("ord_gen_create_by") = User
                    drNew("ord_gen_update_date") = Now
                    drNew("ord_gen_update_by") = User
                    drNew("ord_gen_design_required") = CDate("12/31/2120")
                    drNew("ord_gen_start_design") = CDate("1/1/1900")
                    drNew("ord_gen_designer_grade") = ""
                    Label8.Text = ""

                    If tOrdContSerial.Text <> "" Then
                        cmd.CommandText = "select cont_call_center_rep_code from cont_file where cont_serial=" + tOrdContSerial.Text + " and cont_last_contact>='" + CStr(DateAdd(DateInterval.Day, -90, Today)) + "'"
                        cnn.Open()
                        drNew("ord_gen_ccsrc") = nz(cmd.ExecuteScalar)
                        cnn.Close()
                    End If

                    If Rev + 1 + cnt = ShipCostRev Then
                        drNew("ord_gen_ship_active") = True
                        If drNew("ord_gen_ship_white_glove") = True Then
                            drNew("ord_gen_ship_white_glove_override") = Math.Round(drNew("ord_gen_ship") - (drNew("ord_gen_ship") / 1.5), 2)
                        End If
                        If drNew("ord_gen_ship_overnite") = True Then
                            drNew("ord_gen_ship_overnite_override") = OverNiteOverRide
                        End If
                    Else
                        drNew("ord_gen_ship_active") = False
                        drNew("ord_gen_ship_extra") = 0
                        drNew("ord_gen_ship_disc") = 0
                        drNew("ord_gen_ship_inside") = 0
                        drNew("ord_gen_ship_gated") = 0
                        drNew("ord_gen_ship_smalltruck") = 0
                        drNew("ord_gen_ship_call") = 0
                        drNew("ord_gen_ship_callname") = ""
                        drNew("ord_gen_ship_callphone") = ""
                        drNew("ord_gen_ship_twoman") = 0
                        drNew("ord_gen_ship_liftgate") = 0
                        drNew("ord_gen_ship_steps") = 0
                        drNew("ord_gen_ship_numsteps") = 0
                        drNew("ord_gen_ship_turns") = 0
                        drNew("ord_gen_ship_numturns") = 0
                        drNew("ord_gen_ship_thirdparty") = 0
                        drNew("ord_gen_ship_thirdpartyname") = ""
                        drNew("ord_gen_ship_alert") = 0
                        drNew("ord_gen_ship_overnite") = 0
                        drNew("ord_gen_ship_skids") = 0
                        drNew("ord_gen_ship_numskids") = 0
                        drNew("ord_gen_ship_intlship") = 0
                        drNew("ord_gen_ship_collect") = 0
                        drNew("ord_gen_ship_cust_pickup") = 0
                        drNew("ord_gen_ship_white_glove") = 0
                    End If
                    drNew("ord_gen_ok_to_bill_early") = CustomArray(y)
                    If OrigNote = "" Then OrigNote = nz(drNew("ord_gen_special_notes"))
                    If ArtOnRevs.Count > 0 And drNew("ord_gen_rev") = Rev + 1 Then
                        If nz(drNew("ord_gen_special_notes")) <> "" Then drNew("ord_gen_special_notes") += vbCrLf
                        drNew("ord_gen_special_notes") += "Additional Art is on Rev(s) "
                        For Each x In ArtOnRevs
                            drNew("ord_gen_special_notes") += CStr(x) + ", "
                        Next
                        drNew("ord_gen_special_notes") = Mid(drNew("ord_gen_special_notes"), 1, Len(drNew("ord_gen_special_notes")) - 2)
                    Else
                        drNew("ord_gen_special_notes") = OrigNote
                    End If

                    If UCase(tCCSource.Text) = "ERICF" Then
                        drNew("ord_gen_ccsrc") = "ERICF"
                    End If

                    dsGen.Tables("ord_gen").Rows.Add(drNew)

                    If nz(DVGen(0).Item("ord_gen_alt_ship"), False) = True Then
                        drNew = dsAltShip.Tables(0).NewRow
                        drNew.ItemArray = DVAltShip(0).Row.ItemArray
                        drNew("ord_alt_ship_rev") = Rev + 1 + cnt
                        drNew("ord_alt_ship_type") = "O"
                        dsAltShip.Tables(0).Rows.Add(drNew)
                    End If

                    tb = Tab1.Tabs.Add("O" + CStr(Rev + 1 + cnt), "Order " + CStr(CurRev) + "-" + CStr(Rev + 1 + cnt))
                    tb.Reposition(Tab1.Tabs(0), Infragistics.Win.RelativePosition.After)
                    tb.Appearance.BackColor = System.Drawing.Color.LightGreen
                    TabItems.Parent = tb.TabPage
                    tb.Selected = True
                    SplitOMatic = tOrd.Text + "-" + CStr(CurRev) + "-" + CStr(Rev + 1 + cnt)

                    'Shipping Tab Todo - update tax on order creation
                    'UpdateTaxOnOrd()
                    GetGenTaxRate(False)
                    DoTotal()
                    DVGen(0).Item("ord_gen_balance") = DVGen(0).Item("ord_gen_total")
                    tb.Appearance.Image = Nothing

                    v = 0
                    For Each dr In tblDisc.Rows
                        'If dr("ord_itm_disc_prod") = "" And dr("ord_itm_disc_matl") = "" Then
                        '    SubTotal = 0
                        '    For z = 0 To DVItems.Count - 1
                        '        dr3 = DVItems(z).Row
                        '        If dr3("ord_itm_is_up") = False And dr3("ord_itm_is_up") = False Then
                        '            'SubTotal = Math.Round(SubTotal + (dr3("ord_itm_qty") * dr3("ord_itm_unt_sell") + dr3("ord_itm_disc") + dr3("ord_itm_disc_amt")), 2)
                        '            SubTotal = Math.Round(SubTotal + dr3("ord_itm_disc_amt"), 2)
                        '        End If
                        '    Next
                        'End If
                        'If SubArray(w) <> 0 Then

                        SubTotal = 0
                        For x = 0 To DVItems.Count - 1
                            dr3 = DVItems(x).Row
                            If dr3("ord_itm_bottle_search") = "L" Or dr3("ord_itm_bottle_search") = "S" Then
                                'SubTotal = Math.Round(SubTotal + dr3("ord_itm_qty") * (dr3("ord_itm_unt_sell") - dr3("ord_itm_base_price")), 2)
                                If dr("ord_itm_disc_prod") = "" And dr("ord_itm_disc_matl") = "" Then SubTotal = Math.Round(SubTotal + dr3("ord_itm_qty") * (dr3("ord_itm_unt_sell") - dr3("ord_itm_base_price")), 2)
                                If dr("ord_itm_disc_prod") <> "" And dr("ord_itm_disc_prod") = dr3("ord_itm_prod_type") And dr("ord_itm_disc_matl") = "" Then SubTotal = Math.Round(SubTotal + dr3("ord_itm_qty") * (dr3("ord_itm_unt_sell") - dr3("ord_itm_base_price")), 2)
                                If dr("ord_itm_disc_prod") = "" And dr("ord_itm_disc_matl") <> "" And dr("ord_itm_disc_matl") = dr3("ord_itm_mat_code") Then SubTotal = Math.Round(SubTotal + dr3("ord_itm_qty") * (dr3("ord_itm_unt_sell") - dr3("ord_itm_base_price")), 2)
                                If dr("ord_itm_disc_prod") <> "" And dr("ord_itm_disc_prod") = dr3("ord_itm_prod_type") And dr("ord_itm_disc_matl") <> "" And dr("ord_itm_disc_matl") = dr3("ord_itm_mat_code") Then SubTotal = Math.Round(SubTotal + dr3("ord_itm_qty") * (dr3("ord_itm_unt_sell") - dr3("ord_itm_base_price")), 2)
                            End If
                        Next
                        TotProfit = 0
                        For x = 0 To OrigItems.Count - 1
                            dr3 = OrigItems(x).Row
                            If dr3("ord_itm_is_disc") = False And dr3("ord_itm_is_up") = False And dr3("ord_itm_prod_type") <> "IN" Then
                                If dr("ord_itm_disc_prod") = "" And dr("ord_itm_disc_matl") = "" Then TotProfit = Math.Round(TotProfit + dr3("ord_itm_qty") * (dr3("ord_itm_unt_sell") - dr3("ord_itm_base_price")), 2)
                                If dr("ord_itm_disc_prod") <> "" And dr("ord_itm_disc_prod") = dr3("ord_itm_prod_type") And dr("ord_itm_disc_matl") = "" Then TotProfit = Math.Round(TotProfit + dr3("ord_itm_qty") * (dr3("ord_itm_unt_sell") - dr3("ord_itm_base_price")), 2)
                                If dr("ord_itm_disc_prod") = "" And dr("ord_itm_disc_matl") <> "" And dr("ord_itm_disc_matl") = dr3("ord_itm_mat_code") Then TotProfit = Math.Round(TotProfit + dr3("ord_itm_qty") * (dr3("ord_itm_unt_sell") - dr3("ord_itm_base_price")), 2)
                                If dr("ord_itm_disc_prod") <> "" And dr("ord_itm_disc_prod") = dr3("ord_itm_prod_type") And dr("ord_itm_disc_matl") <> "" And dr("ord_itm_disc_matl") = dr3("ord_itm_mat_code") Then TotProfit = Math.Round(TotProfit + dr3("ord_itm_qty") * (dr3("ord_itm_unt_sell") - dr3("ord_itm_base_price")), 2)
                            End If
                        Next
                        If SubTot(w, v) <> 0 Then
                            dr2 = dsItems.Tables(0).NewRow
                            dr2.ItemArray = dr.ItemArray
                            dr2("ord_itm_rev") = Rev + 1 + cnt
                            dr2("ord_itm_type") = "O"
                            dr2("ord_itm_qty") = 1
                            If nz(dr2("ord_itm_is_disc"), False) = False Then
                                dr2("ord_itm_disc_val") = Math.Round(dr2("ord_itm_disc_val") * (SubTot(w, v) + SubTotal) / TotProfit, 2)  'DiscArray(v)
                                dr2("ord_itm_unt_sell") = dr2("ord_itm_disc_val")
                                If InStr(dr2("ord_itm_desc"), "Upcharge of ") > 0 Then
                                    dr2("ord_itm_desc") = Mid(dr2("ord_itm_desc"), 1, InStr(dr2("ord_itm_desc"), "Upcharge of ") - 1)
                                End If
                                If InStr(dr2("ord_itm_desc"), "Total to match") > 0 Then
                                    dr2("ord_itm_desc") = Mid(dr2("ord_itm_desc"), 1, InStr(dr2("ord_itm_desc"), "Total to match") - 1)
                                End If
                                dr2("ord_itm_desc") += "Upcharge of " + FormatCurrency(dr2("ord_itm_disc_val"))
                            Else
                                dr2("ord_itm_disc_val") = Math.Round(dr2("ord_itm_disc_val") * (SubTot(w, v) + SubTotal) / TotProfit * -1, 2)   '(DiscArray(v))
                                dr2("ord_itm_unt_sell") = dr2("ord_itm_disc_val") * -1
                                dr2("ord_itm_desc") = "Discount of " + FormatCurrency(dr2("ord_itm_disc_val"))
                            End If
                            dsItems.Tables(0).Rows.Add(dr2)
                        Else
                            If w = 0 Then
                                dr2 = dsItems.Tables(0).NewRow
                                dr2.ItemArray = dr.ItemArray
                                dr2("ord_itm_rev") = Rev + 1 + cnt
                                dr2("ord_itm_type") = "O"
                                dr2("ord_itm_qty") = 1
                                If dr2("ord_itm_disc_val") > 0 Then
                                    dr2("ord_itm_disc_val") = Math.Round(dr2("ord_itm_disc_val"), 2)  'DiscArray(v)
                                    dr2("ord_itm_unt_sell") = dr2("ord_itm_disc_val")
                                    If InStr(dr2("ord_itm_desc"), "Upcharge of ") > 0 Then
                                        dr2("ord_itm_desc") = Mid(dr2("ord_itm_desc"), 1, InStr(dr2("ord_itm_desc"), "Upcharge of ") - 2)
                                    End If
                                    If InStr(dr2("ord_itm_desc"), "Total to match") > 0 Then
                                        dr2("ord_itm_desc") = Mid(dr2("ord_itm_desc"), 1, InStr(dr2("ord_itm_desc"), "Total to match") - 2)
                                    End If
                                    dr2("ord_itm_desc") += "Upcharge of " + FormatCurrency(dr2("ord_itm_disc_val"))
                                Else
                                    dr2("ord_itm_disc_val") = Math.Round(dr2("ord_itm_disc_val") * -1, 2)    '(DiscArray(v))
                                    dr2("ord_itm_unt_sell") = dr2("ord_itm_disc_val") * -1
                                    dr2("ord_itm_desc") = "Discount of " + FormatCurrency(dr2("ord_itm_disc_val"))
                                End If
                                dsItems.Tables(0).Rows.Add(dr2)
                            End If
                        End If
                        v += 1
                    Next
                    'Shipping Tab ToDo
                    'UpdateTaxOnOrd()
                    GetGenTaxRate(False)
                    DoTotal()
                    DVGen(0).Item("ord_gen_balance") = DVGen(0).Item("ord_gen_total")
                    tmp.Add(DVGen(0).Item("ord_gen_total"))
                    onTotal = Math.Round(onTotal - DVGen(0).Item("ord_gen_total"), 2)
                    cnt += 1
                    w += 1

                    LoadProduction()
                    If ProposedCommitDate > CDate("1/1/1900") Then
                        DVOrdProd(0).Item("ord_prod_committed") = ProposedCommitDate
                        DVOrdProd(0).Item("ord_prod_committed_by") = User
                        DVOrdProd(0).Item("ord_prod_committed_note") = "Proposed commit date"
                    End If
                    If nz(DVGen(0).Item("ord_gen_pca_signoffsent"), False) = True Then
                        DVOrdProd(0).Item("ord_prod_signoff") = True
                        DVOrdProd(0).Item("ord_prod_signoff_by") = DVGen(0).Item("ord_gen_pca_signoffsent_by")
                        DVOrdProd(0).Item("ord_prod_signoff_date") = DVGen(0).Item("ord_gen_pca_signoffsent_date")
                    End If
                    If nz(DVGen(0).Item("ord_gen_pca_signoffrec"), False) = True Then
                        DVOrdProd(0).Item("ord_prod_signoffrec") = True
                        DVOrdProd(0).Item("ord_prod_signoffrec_by") = DVGen(0).Item("ord_gen_pca_signoffrec_by")
                        DVOrdProd(0).Item("ord_prod_signoffrec_date") = DVGen(0).Item("ord_gen_pca_signoffrec_date")
                    End If
                End If
            Next
            If Tab1.Tabs.Exists("O" + CStr(ShipCostRev)) Then Tab1.Tabs("O" + CStr(ShipCostRev)).Selected = True
            onTotal += PercDiscTotal
            If onTotal <> 0 And CopiedItems And CheckTotal Then
                If Math.Abs(onTotal) <= 0.02 Then
                    Dim desc As String
                    For x = 0 To DVItems.Count - 1
                        If nz(DVItems(x)("ord_itm_is_disc"), False) Or nz(DVItems(x)("ord_itm_is_up"), False) Then
                            DVItems(x)("ord_itm_disc_type") = "T"
                            DVItems(x)("ord_itm_disc_val") = Math.Round(DVGen(0).Item("ord_gen_total") + onTotal, 2)

                            If InStr(DVItems(x)("ord_itm_desc"), "Total to match") > 0 Then
                                DVItems(x)("ord_itm_desc") = Mid(DVItems(x)("ord_itm_desc"), 1, InStr(DVItems(x)("ord_itm_desc"), "Total to match") - 2)
                            End If
                            If InStr(DVItems(x)("ord_itm_desc"), "Upcharge of ") > 0 Then
                                DVItems(x)("ord_itm_desc") = Mid(DVItems(x)("ord_itm_desc"), 1, InStr(DVItems(x)("ord_itm_desc"), "Upcharge of ") - 2)
                            End If
                            'desc = "Total to match " + FormatCurrency(DVItems(x)("ord_itm_disc_val"), 2)
                            DVItems(x)("ord_itm_desc") += "Total to match " + FormatCurrency(DVItems(x)("ord_itm_disc_val"), 2)   'desc
                            Exit For
                        End If
                    Next
                    DoTotal()
                    DVGen(0).Item("ord_gen_balance") = DVGen(0).Item("ord_gen_total")
                Else
                    MsgBox("Order totals are different than the quote by " + FormatCurrency(onTotal) + ".  Please make sure to adjust your orders accordingly.", MsgBoxStyle.Critical, "Total?")
                End If
            End If

           
        Catch
            DoError(Err, Me)
        End Try
    End Function
    Private Sub tCustId_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles tCustId.Enter
        If tCustId.Value Is Nothing Then
            onCust = -1
        Else
            onCust = tCustId.Value
        End If
    End Sub
    Private Function ForceForecasting() As Boolean
        ForceForecasting = True
        If tCustId.Text <> "" Then
            Dim cmd As New SqlCommand("select cust_force_forecasting from cust_file where cust_id='" + tCustId.Text + "'", cnn2)
            cnn2.Open()
            ForceForecasting = nz(cmd.ExecuteScalar, False)
            cnn2.Close()
        End If
    End Function
    Private Sub tCustId_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tCustId.Leave
        Try
            Dim cmd As New SqlCommand("", cnn)

            CustSalesCat = ""
            If tCustId.Text = "" Then
                LoadDD(tSalesCat, dsSalesCat, "sales_cat", "sales_cat_cat", "sales_cat_cat", "sales_cat_cat,sales_cat_desc", "sales_cat_selectable=1")
                tSalesCat.Enabled = True
                tSalesCat.Text = "RET"
                tCustId.LimitToList = False
                cb5Perc.Checked = False
            Else
                LoadDD(tSalesCat, dsSalesCat, "sales_cat", "sales_cat_cat", "sales_cat_cat", "sales_cat_cat,sales_cat_desc")
                tSalesCat.Enabled = False
                tCustId.LimitToList = True
                cmd.CommandText = "select cust_sales_cat from cust_file where cust_id='" + tCustId.Text + "'"
                Dim dr As DataRow
                Dim SalesCat As String
                cnn.Open()
                SalesCat = cmd.ExecuteScalar
                cnn.Close()
                CustSalesCat = SalesCat

                For Each dr In dsGen.Tables(0).Rows
                    dr("ord_gen_sales_cat") = SalesCat
                Next
            End If
            If nz(tCustId.Value, -1) <> onCust Then
                'If tsold_zip.Text <> "" Then
                If DVGen.Count = 0 Then
                    UpdateSalesRep()
                Else
                    If QuietMode Or nz(DVGen(0)("ord_gen_inside")) = "" Then
                        UpdateSalesRep()
                    Else
                        If MsgBox("Do you want to update the Sales Reps?", MsgBoxStyle.YesNo, "Sales Reps?") = MsgBoxResult.Yes Then
                            Dim dr As DataRow
                            For Each dr In dsGen.Tables(0).Rows
                                dr("ord_gen_inside") = ""
                                dr("ord_gen_outside") = ""
                            Next
                            UpdateSalesRep()
                        End If
                    End If
                End If
                'End If
                If dsItems.Tables(0).Rows.Count <> 0 And Not QuietMode Then
                    If MsgBox("Changing the customer will recalculate all of you prices.  Do you want to continue?", MsgBoxStyle.YesNo, "Change Customer?") = MsgBoxResult.No Then
                        tCustId.Value = onCust
                        Exit Sub
                    End If
                End If
                Dim drx As DataRow
                If tCustId.Text <> "" Then
                    Dim dr As SqlClient.SqlDataReader
                    Dim row As DataRow
                    Dim TaxExemptno As String

                    cmd.CommandText = "select * from cust_file where cust_id='" + tCustId.Text + "'"
                    cmd.Connection = cnn
                    If cnn.State = ConnectionState.Closed Then cnn.Open()
                    dr = cmd.ExecuteReader
                    If dr.HasRows Then
                        dr.Read()
                        tSold_Name.Text = Convert.ToString(dr("cust_name"))
                        tsold_company.Text = Convert.ToString(dr("cust_company"))
                        tCountry.Text = Convert.ToString(dr("cust_country"))
                        UpdateCountry()
                        tsold_addr1.Text = nz(dr("cust_addr1"))
                        tsold_addr2.Text = nz(dr("cust_addr2"))
                        tsold_addr3.Text = nz(dr("cust_addr3"))
                        tSold_City.Text = nz(dr("cust_city"))
                        tsold_state.Text = nz(dr("cust_state"))
                        tSoldCounty.Text = nz(dr("cust_county"))
                        tProvince.Text = nz(dr("cust_province"))
                        tsold_zip.Text = nz(dr("cust_zip"))
                        tsold_phone1.Text = nz(dr("cust_phone1"))
                        tsold_phone2.Text = nz(dr("cust_phone2"))
                        tsold_cell.Text = nz(dr("cust_cell"))
                        tsold_fax.Text = nz(dr("cust_fax"))
                        tsold_email.Text = nz(dr("cust_email"))
                        For Each drx In dsGen.Tables(0).Rows
                            drx("ord_gen_sales_cat") = nz(dr("cust_sales_cat"))
                        Next
                        tSalesCat.Value = Convert.ToString(dr("cust_sales_cat"))
                        cb5Perc.Checked = nz(dr("cust_appl_5_perc"), False)
                        cbDefThirdParty.Checked = nz(dr("cust_thirdparty"), False)
                        tDefThirdPartyName.Text = nz(dr("cust_thirdpartyname"), "")
                        If cbDefThirdParty.Checked = True Then
                            For Each row In dsGen.Tables(0).Rows
                                row("ord_gen_ship_thirdparty") = 1
                                row("ord_gen_ship_thirdpartyname") = tDefThirdPartyName.Text
                            Next
                        Else
                            For Each row In dsGen.Tables(0).Rows
                                row("ord_gen_ship_thirdparty") = 0
                                row("ord_gen_ship_thirdpartyname") = ""
                            Next
                        End If

                        For Each row In dsGen.Tables(0).Rows
                            row("ord_gen_special_notes") = nz(dr("cust_special_notes"))
                        Next

                        If nz(dr("cust_tax_exempt"), False) = True Then
                            TaxExemptno = nz(dr("cust_tax_ex_no"))
                            dr.Close()
                            For Each row In dsGen.Tables(0).Rows
                                row("ord_gen_tax_exempt") = 1
                                row("ord_gen_tax_exempt_no") = TaxExemptno

                                cmd.CommandText = "select * from tax_cert where tax_cert_no='" + TaxExemptno + "'"
                                dr = cmd.ExecuteReader
                                If dr.HasRows Then
                                    dr.Read()
                                    row("ord_gen_tax_exempt_addr") = nz(dr("tax_cust_name")) + vbCrLf + nz(dr("tax_cert_addr")) + vbCrLf + nz(dr("tax_cert_city")) + ", " + nz(dr("tax_cert_state")) + "  " + nz(dr("tax_cert_zip"))
                                Else
                                    row("ord_gen_tax_exempt_addr") = "Not on File"
                                End If
                                dr.Close()

                            Next
                        Else
                            dr.Close()
                        End If

                    End If
                    cnn.Close()

                    LoadDD(tSold_Name, dsContacts, "cust_cont", "cust_cont_name", "cust_cont_name", "cust_cont_name,cust_cont_type,cust_cont_email,cust_cont_alt_sold_to", "cust_cont_cust_serial=" + CStr(tCustId.Value))
                    LoadDD2(ddThirdPartyFill, "cust_ship", "cust_ship_name", "cust_ship_name", "cust_ship_name,cust_ship_via,cust_ship_acct,cust_ship_default", "cust_ship_cust_serial=" + CStr(tCustId.Value))
                    Dim rw As Infragistics.Win.UltraWinGrid.UltraGridRow
                    For Each rw In ddThirdPartyFill.Rows
                        If rw.Cells("cust_ship_default").Value = True Then
                            For Each drx In dsGen.Tables(0).Rows
                                drx("ord_gen_ship_thirdparty") = True
                                drx("ord_gen_ship_thirdpartyname") = rw.Cells("cust_ship_name").Text
                                drx("ord_gen_ship_thirdpartyshipvia") = rw.Cells("cust_ship_via").Text
                                drx("ord_gen_ship_thirdpartyacct") = rw.Cells("cust_ship_acct").Text
                            Next
                            Exit For
                        Else
                            For Each drx In dsGen.Tables(0).Rows
                                drx("ord_gen_ship_thirdparty") = False
                                drx("ord_gen_ship_thirdpartyname") = ""
                                drx("ord_gen_ship_thirdpartyshipvia") = ""
                                drx("ord_gen_ship_thirdpartyacct") = ""
                            Next
                            Exit For
                        End If
                    Next
                Else
                    Dim x As Integer = 0
                    Dim tb As New Infragistics.Win.UltraWinTabControl.UltraTab

                    cbDefThirdParty.Checked = False
                    tDefThirdPartyName.Text = ""

                    For Each tb In Tab1.Tabs
                        If Mid(tb.Key, 1, 1) = "Q" Then
                            If CInt(Mid(tb.Key, 2)) > x Then x = CInt(Mid(tb.Key, 2))
                        End If
                    Next
                    For Each drx In dsGen.Tables(0).Rows
                        If drx("ord_gen_type") = "Q" And drx("ord_gen_rev") = x Then drx("ord_gen_sales_cat") = "RET"
                        drx("ord_gen_ship_thirdparty") = False
                        drx("ord_gen_ship_thirdpartyname") = ""
                        drx("ord_gen_ship_thirdpartyshipvia") = ""
                        drx("ord_gen_ship_thirdpartyacct") = ""
                    Next
                    cbThirdParty.Checked = False
                    tThirdPartyName.Text = ""
                    tThirdPartyShipVia.Text = ""
                    tThirdPartyAcct.Text = ""
                End If
                UpdatePrices("All")
                tsold_state_ValueChanged(sender, e)
                If tCustId.Text = "WE" Then tpOKBillEarly.Visible = True Else tpOKBillEarly.Visible = False
            End If
        Catch
            DoError(Err, Me)
        End Try
    End Sub
    Private Sub UpdatePrices(Optional ByVal TabKey As String = "All")
        If dsItems.Tables(0).Rows.Count = 0 Then Exit Sub
        Dim tb As New Infragistics.Win.UltraWinTabControl.UltraTab
        Dim x As Integer = 0
        For Each tb In Tab1.Tabs
            If Mid(tb.Key, 1, 1) = "Q" Then
                If CInt(Mid(tb.Key, 2)) > x Then x = CInt(Mid(tb.Key, 2))
            End If
        Next

        CheckPic = False
        Tab1.Tabs("Q" + CStr(x)).Selected = True
        TabItems.Tabs(0).Selected = True
        If tShipUnit.Enabled Then
            UpdatePriceAllByRow(False)

            'For x = 0 To Grid1.Rows.Count - 1
            '    Grid1.Focus()
            '    Grid1.Rows(x).Activate()
            '    Grid1.ActiveRow.Cells("ord_itm_item_code").Activate()
            '    Application.DoEvents()
            '    LoadPrice()
            '    PriceCalc()
            'Next
        End If
        CheckPic = True
        If TabKey = "All" Then Tab1.Tabs("C").Selected = True
    End Sub
    Private Sub UpdatePrices2()
        If Grid1.Rows.Count = 0 Then Exit Sub

        Dim x As Integer
        CheckPic = False
        For x = 0 To Grid1.Rows.Count - 1
            Grid1.Focus()
            Grid1.Rows(x).Activate()
            Grid1.ActiveRow.Cells("ord_itm_item_code").Activate()
            Application.DoEvents()
            LoadPrice(True, True)
        Next
        Grid1.Rows(0).Activate()
        CheckPic = True

    End Sub
    Public Sub UpdatePriceAllByRow(Optional ByVal UpdateStainLacq As Boolean = True, Optional ByVal ForceRetail As Boolean = False)
        Dim dr As DataRow
        Dim x As Integer
        Dim Stains As New ArrayList
        Dim Stain As Long

        Cursor.Current = Cursors.WaitCursor
        BindingContext(DVGen).EndCurrentEdit()
        For x = 0 To DVItems.Count - 1
            dr = DVItems.Item(x).Row
            If dr.RowState <> DataRowState.Deleted Then
                LoadPriceByRow(dr, , UpdateStainLacq, ForceRetail)
                If Stains.Contains(dr("ord_itm_stain_serial")) = False Then Stains.Add(dr("ord_itm_stain_serial"))
            End If
        Next

        Grid1.DataBind()

        If Stains.Count > 0 Then
            For Each Stain In Stains
                CheckStainLines(Stain)
            Next
        End If

        'If tDefStain.Value <> 0 Then CheckStainLines(tDefStain.Value)
        CheckLacquerLines()
        DoTotal(ForceRetail)
        Cursor.Current = Cursors.Default
    End Sub
    Private Function GetPriceForSalesCat(ByVal SalesCat As String) As Double

        '********* Start Here 2009/5/6



        Dim dt As New DataTable
        Dim dr As DataRow
        Dim dr2 As DataRow
        Dim x As Integer

        For x = 0 To DVItems.Count - 1
            dr = DVItems.Item(x).Row
            If dr.RowState <> DataRowState.Deleted Then
                dr2 = dt.NewRow
                dr2.ItemArray = dr.ItemArray
                'LoadPriceByRow(dr2, , False)
            End If
        Next
    End Function
    Public Overrides Sub save_before()
        If Me.ActiveControl Is tpEstComp Then
            If CheckEstCompDate(tpEstComp.Value) = False Then
                SaveCanceled = True
                Exit Sub
            End If
        End If
        Try
            'KeyLog("[Save]")
            Dim dr As DataRow
            Dim dr2 As DataRow
            Dim drChk As DataRow
            Dim key As String
            Dim ctl As Control
            Dim x, y, z As Integer
            Dim dv As New DataView(dsGen.Tables(0))
            Dim di As New DataView(dsItems.Tables(0))
            Dim drv As DataRowView
            Dim div, dvr As DataRow
            Dim DoIt As Boolean
            Dim cmdTemp As New SqlCommand("", cnn)

            If tOrd.Text <> onOrd Then
                MsgBox("The order number does not match the order number you started with when you added/edited this order.  Please notify the database administrator.  This Quote/Order will not save.", MsgBoxStyle.Exclamation, "Number?")
                SaveCanceled = True
                Exit Sub
            End If

            If Me.OrdLinesHaveWrongParentNumber = True Then
                EditCanceled = True
                Exit Sub
            End If

            If lMarginBelow0.Visible Then
                If Not nz(DVGen(0).Item("ord_gen_web_order"), 0) > 0 Then
                    MsgBox("Cannot save until discounts are fixed", MsgBoxStyle.Critical, "Margin?")
                    SaveCanceled = True
                    Exit Sub
                End If
            End If

            If nz(DVGen(0).Item("ord_gen_ship_promo_serial"), 0) = 0 And nz(DVGen(0).Item("ord_gen_ship_disc"), 0) <> 0 Then
                If nz(DVGen(0).Item("ord_gen_web_order"), 0) = 0 Then
                    MsgBox("Cannot save until a shipping Promo Code has been added", MsgBoxStyle.Critical, "Promo?")
                    SaveCanceled = True
                    Exit Sub
                End If
            End If

            If (InStr(tord_for.Text, "#") > 0) Or (InStr(tord_for.Text, "/") > 0) Or (InStr(tord_for.Text, "\") > 0) Or (InStr(tord_for.Text, ".") > 0) Or (InStr(tord_for.Text, "~") > 0) Then
                MsgBox("Primary Reference can not contain # \ . ~ / characters.", MsgBoxStyle.Critical, "Primary Reference?")
                SaveCanceled = True
                tord_for.Focus()
                Exit Sub
            End If

            lstShipHolds.Clear()
            If Not IsNumeric(tRefPerc.Text) Then tRefPerc.Value = 0
            For Each dr In dsGen.Tables("ord_gen").Rows
                di.RowFilter = "ord_itm_type='" + dr("ord_gen_type") + "' and ord_itm_rev=" + CStr(dr("ord_gen_rev"))
                di.RowStateFilter = DataViewRowState.Added Or DataViewRowState.ModifiedCurrent
                If di.Count > 0 Then
                    dr("ord_gen_update_date") = Now
                    dr("ord_gen_update_by") = User
                End If
            Next

            Dim gr As Infragistics.Win.UltraWinGrid.UltraGridRow
            Dim cnt As Integer = 1
            For Each gr In Grid1.Rows
                gr.Cells("ord_itm_line").Value = cnt
                cnt += 1
            Next

            di.RowFilter = ""
            di.RowStateFilter = DataViewRowState.Added Or DataViewRowState.ModifiedCurrent
            If di.Count > 0 Then
                For x = 0 To di.Count - 1
                    di.Item(x)("ord_itm_updated") = Now
                    di.Item(x)("ord_itm_user") = User
                Next
            End If

            'tDispDate.Text = Today
            'MsgBox("1-" + tTotal2.Text + " " + CStr(dsGen.Tables(0).Rows(0)("ord_gen_line_total")))
            BindingContext(DVItems).EndCurrentEdit()
            BindingContext(dsItems, "ord_itm").EndCurrentEdit()
            BindingContext(DVGen).EndCurrentEdit()
            BindingContext(DVAltShip).EndCurrentEdit()
            'BindingContext(DVRepReq).EndCurrentEdit()
            BindingContext(DVOrdProd).EndCurrentEdit()
            'BindingContext(DVOrdProdISC).EndCurrentEdit()
            BindingContext(dsGen, "ord_gen").EndCurrentEdit()
            BindingContext(dsCont, "ord_cont").EndCurrentEdit()
            'MsgBox("2-" + tTotal2.Text + " " + CStr(dsGen.Tables(0).Rows(0)("ord_gen_line_total")))
            If (tCountry.Text = "USA" Or tCountry.Text = "") Then
                If (nz(tsold_zip.Text, "") = "") Or (nz(tsold_state.Text, "") = "") Or (nz(tSold_City.Text, "") = "") Then
                    MsgBox("There must be a Sold To Address.", MsgBoxStyle.Information, "Sold To Address?")
                    Tab1.Tabs("C").Selected = True
                    tsold_zip.Focus()
                    SaveCanceled = True
                    Exit Sub
                End If
            End If

            If tRefName.Text <> "" Then
                If CheckField(tRefAddr1, "Referral Address", "C") = False Then Exit Sub
                If CheckField(tRefCity, "Referral City", "C") = False Then Exit Sub
                If CheckField(tRefState, "Referral State", "C") = False Then Exit Sub
                If CheckField(tRefZip, "Referral Zip", "C") = False Then Exit Sub
                If CheckField(tRefPerc, "Referral Percentage", "C") = False Then Exit Sub
            End If


            'di.RowStateFilter = DataViewRowState.ModifiedCurrent
            'If di.Count > 0 Then
            '    Dim ds As New DataSet
            '    Dim cmd As New SqlClient.SqlCommand("select * from ord_itm_hist where ord_itm_serial=-1", cnn2)
            '    Dim da As New SqlClient.SqlDataAdapter(cmd)
            '    Dim cb As New SqlClient.SqlCommandBuilder(da)
            '    Dim row, row2 As DataRow
            '    Dim col As DataColumn
            '    da.Fill(ds)
            '    For x = 0 To di.Count - 1
            '        row = ds.Tables(0).NewRow
            '        row2 = di.Item(x).Row
            '        For y = 1 To row.Table.Columns.Count - 1
            '            row(y) = row2(y - 1, DataRowVersion.Original)
            '        Next
            '        ds.Tables(0).Rows.Add(row)
            '    Next
            '    da.Update(ds)
            'End If

            If (tOrdContSerial.Text = "" Or tOrdContSerial.Text = "0") And tSoldCustId.Text = "" And QuietMode = False Then
                MsgBox("There must be a Contact choosen for this order.", MsgBoxStyle.Information, "Contact?")
                SaveCanceled = True
                Exit Sub
            End If


            '*****added by dale 5/29/12 - to verify if a rev already exists
            'If tOrd.Text <> "" Then
            '    Dim cmd As New SqlCommand("", cnn)
            '    cnn.Open()
            '    For Each drChk In dsGen.Tables(0).Rows
            '        If drChk.RowState = DataRowState.Added Then
            '            cmd.CommandText = "SELECT  ord_gen_ord_serial FROM ord_gen where ord_gen_ord_serial =" + drChk("ord_gen_ord_serial").ToString + " and ord_gen_type='" + drChk("ord_gen_type").ToString + "' and ord_gen_rev=" + drChk("ord_gen_rev").ToString
            '            If CInt(nz(cmd.ExecuteScalar, -1)) <> -1 Then
            '                MsgBox("A record with the revision (" + drChk("ord_gen_type").ToString + drChk("ord_gen_rev").ToString + ") already exists. Please refresh your screen and review the latest added.")
            '                SaveCanceled = True
            '                cnn.Close()
            '                Exit Sub
            '            End If
            '        End If
            '    Next
            '    cnn.Close()
            'End If

            ' ''Dim stainautotype = False
            ' ''Dim stains = ""
            cnn.Open()
            For Each dr In dsItems.Tables("ord_itm").Rows
                If dr.RowState <> DataRowState.Deleted Then
                    ' ''If (Not InStr(nz(dr("ord_itm_item_code"), ""), "STN") And Not InStr(nz(dr("ord_itm_item_code"), ""), "AUTO")) Or (Not InStr(nz(dr("ord_itm_item_code"), ""), "STN") And Not InStr(nz(dr("ord_itm_item_code"), ""), "FREE")) Then
                    ' ''    If nz(dr("ord_itm_stain_serial"), 0) > 0 And nz(dr("ord_itm_stain_bottles"), 0) > 0 Then
                    ' ''        'stainexists = True
                    ' ''        If InStr(stains, dr("ord_itm_stain_serial").ToString) = 0 Then
                    ' ''            stains += dr("ord_itm_stain_serial").ToString + "|"
                    ' ''            For Each dr2 In dsItems.Tables("ord_itm").Rows
                    ' ''                If dr2.RowState <> DataRowState.Deleted Then
                    ' ''                    If (InStr(nz(dr2("ord_itm_item_code"), ""), "STN") > 0 And InStr(nz(dr2("ord_itm_item_code"), ""), "AUTO") > 0) Then
                    ' ''                        If nz(dr2("ord_itm_stain_serial"), 0) = nz(dr("ord_itm_stain_serial"), -1) Then
                    ' ''                            stainautotype = True
                    ' ''                        End If
                    ' ''                    End If
                    ' ''                End If
                    ' ''            Next
                    ' ''            If stainautotype = True Then stains += "Y," Else stains += "N,"
                    ' ''            stainautotype = False
                    ' ''        End If
                    ' ''    End If
                    ' ''End If


                    If nz(dr("ord_itm_qty"), 0) = 0 And nz(dr("ord_itm_item_code")) = "" Then
                        'dr.RejectChanges()
                    Else
                        If CheckAcctDateFromItem(nz(dr("ord_itm_ord_serial"), -1), nz(dr("ord_itm_rev"), -1), nz(dr("ord_itm_type"), "")) = True Then
                            '******MPF
                            If nz(dr("ord_itm_mat_code")) = "" And (dr.RowState = DataRowState.Added Or dr.RowState = DataRowState.Modified) Then
                                MsgBox("Must have a Material Code for each Item.", MsgBoxStyle.Information, "Material Code?")
                                key = dr("ord_itm_type") + CStr(dr("ord_itm_rev"))
                                Tab1.Tabs(key).Selected = True
                                TabItems.Tabs("items").Selected = True
                                SaveCanceled = True
                                cnn.Close()
                                Exit Sub
                            End If
                            If nz(dr("ord_itm_prod_type")) = "" Then
                                MsgBox("Must have a Product Type for each Item.", MsgBoxStyle.Information, "Product Type?")
                                key = dr("ord_itm_type") + CStr(dr("ord_itm_rev"))
                                Tab1.Tabs(key).Selected = True
                                TabItems.Tabs("items").Selected = True
                                SaveCanceled = True
                                cnn.Close()
                                Exit Sub
                            End If
                        End If
                        If dr("ord_itm_change_base") = True And dr("ord_itm_base_price") = 0 And dr("ord_itm_type") <> "R" And dr("ord_itm_unt_sell") <> 0 Then
                            cmdTemp.CommandText = "select itm_change_base_price from itm_file where itm_code='" + dr("ord_itm_item_code") + "'"
                            dr("ord_itm_change_base") = cmdTemp.ExecuteScalar
                            If dr("ord_itm_change_base") = True Then
                                MsgBox("Must have a Base Price for each Item.", MsgBoxStyle.Information, "Base Price?")
                                key = dr("ord_itm_type") + CStr(dr("ord_itm_rev"))
                                Tab1.Tabs(key).Selected = True
                                TabItems.Tabs("items").Selected = True
                                Dim rw As Infragistics.Win.UltraWinGrid.UltraGridRow
                                For Each rw In Grid1.Selected.Rows
                                    rw.Selected = False
                                Next
                                For Each rw In Grid1.Rows
                                    If rw.Cells("ord_itm_item_code").Value = dr("ord_itm_item_code") And rw.Cells("ord_itm_base_price").Value = 0 Then Exit For
                                Next
                                If rw.Cells("ord_itm_item_code").Value = dr("ord_itm_item_code") Then
                                    rw.Selected = True
                                    rw.Activate()
                                    tBase.Enabled = True
                                    tBase.Focus()
                                    tBase.SelectAll()
                                End If
                                SaveCanceled = True
                                cnn.Close()
                                Exit Sub
                            End If
                        End If

                        If dr("ord_itm_type") <> "Q" Then
                            If NeedsDiagnostic(dr("ord_itm_item_code")) Then
                                Dim hasEmail As Boolean = False
                                DVDiag = New DataView(dsDiag.Tables(0), "diag_rev=" + CStr(dr("ord_itm_rev")) + " and diag_type='" + dr("ord_itm_type") + "'", "diag_sent_date", DataViewRowState.CurrentRows)
                                If DVDiag.Count = 0 Then
                                    CreateBlankDiag(dr("ord_itm_rev"), dr("ord_itm_type"))
                                End If
                                If InStr(nz(DVDiag(0).Item("diag_email")), "@") > 0 Then
                                    hasEmail = True
                                Else
                                    Dim dvGenTemp As DataView
                                    dvGenTemp = New DataView(dsGen.Tables(0), "ord_gen_rev=" + CStr(dr("ord_itm_rev")) + " and ord_gen_type='" + dr("ord_itm_type") + "'", "", DataViewRowState.CurrentRows)
                                    If DVDiag(0).Item("diag_email_soldto") Then
                                        If InStr(tsold_email.Text, "@") > 0 Then
                                            hasEmail = True
                                        End If
                                    End If
                                    If hasEmail = False And DVDiag(0).Item("diag_email_shipto") Then
                                        If InStr(nz(dvGenTemp(0).Item("ord_gen_ship_email")), "@") > 0 Then
                                            hasEmail = True
                                        End If
                                    End If
                                    If hasEmail = False And DVDiag(0).Item("diag_email_osr") Then
                                        cmdTemp.CommandText = "select rep_email from rep_file where rep_code='" + nz(dvGenTemp(0).Item("ord_gen_outside")) + "'"
                                        If InStr(nz(cmdTemp.ExecuteScalar), "@") > 0 Then
                                            hasEmail = True
                                        End If
                                    End If
                                    If hasEmail = False And nz(DVDiag(0).Item("diag_email_isr"), False) Then
                                        cmdTemp.CommandText = "select rep_email from rep_file where rep_code='" + nz(dvGenTemp(0).Item("ord_gen_inside")) + "'"
                                        If InStr(nz(cmdTemp.ExecuteScalar), "@") > 0 Then
                                            hasEmail = True
                                        End If
                                    End If
                                End If
                                If hasEmail = False Then
                                    MsgBox("You must have at least on email address on the diagnostics tab", MsgBoxStyle.Critical, "Email diagnostic?")
                                    SaveCanceled = True
                                    cnn.Close()
                                    Exit Sub
                                End If
                            End If
                        End If
                    End If
                End If
            Next
            cnn.Close()

            'If InStr(stains, "N") > 0 Then
            '    MsgBox("You must have at least one STN - AUTO line for each type of stain.", MsgBoxStyle.Critical, "Stain Auto Detect?")
            '    SaveCanceled = True
            '    Exit Sub
            'End If


            Dim ThirdPartyUnchecked As Boolean = False
            For Each dr In dsGen.Tables("ord_gen").Rows
                If dr.HasVersion(DataRowVersion.Original) And (dr.RowState <> DataRowState.Deleted) Then
                    If nz(dr("ord_gen_ship_hold", DataRowVersion.Current), False) = False And nz(dr("ord_gen_ship_hold", DataRowVersion.Original), False) = True And dr("ord_gen_type") = "O" Then
                        lstShipHolds.Add("O" + CStr(dr("ord_gen_rev")))
                    End If
                End If
                If dr.RowState <> DataRowState.Deleted And CheckAcctDateFromItem(nz(dr("ord_gen_ord_serial"), -1), nz(dr("ord_gen_rev"), -1), nz(dr("ord_gen_type"), "")) = True Then
                    If dr("ord_gen_create_date") > AcctClosed Then
                        If nz(dr("ord_gen_ship_thirdparty"), False) = False Then ThirdPartyUnchecked = True
                        If (dr("ord_gen_sales_cat") Is DBNull.Value) Then dr("ord_gen_sales_cat") = ""

                        If nz(dr("ord_gen_resp_rep")) = "" Then
                            MsgBox("Must have a responsible rep", MsgBoxStyle.Critical, "Responsible?")
                            SaveCanceled = True
                            Exit Sub
                        End If

                        If dr("ord_gen_sales_cat") = "" And dr("ord_gen_type") <> "R" Then
                            MsgBox("Must have a Sales Category.", MsgBoxStyle.Information, "Sales Category?")
                            key = dr("ord_gen_type") + CStr(dr("ord_gen_rev"))
                            Tab1.Tabs(key).Selected = True
                            TabItems.Tabs("items").Selected = True
                            tSalesCat.Focus()
                            SaveCanceled = True
                            Exit Sub
                        End If

                        If (dr("ord_gen_inside") Is DBNull.Value) Then dr("ord_gen_inside") = ""
                        If (dr("ord_gen_inside") = "" Or dr("ord_gen_inside") = "NONE") And dr("ord_gen_type") <> "R" Then
                            If Not nz(DVGen(0).Item("ord_gen_web_order"), 0) > 0 Then
                                MsgBox("Must have an Inside Rep for each Quote/Order.", MsgBoxStyle.Information, "Inside Rep?")
                                key = dr("ord_gen_type") + CStr(dr("ord_gen_rev"))
                                Tab1.Tabs(key).Selected = True
                                TabItems.Tabs("general").Selected = True
                                tInside.Focus()
                                SaveCanceled = True
                                Exit Sub
                            End If
                        End If

                        If (dr("ord_gen_outside") Is DBNull.Value) Then dr("ord_gen_outside") = ""
                        If dr("ord_gen_outside") = "" And dr("ord_gen_type") <> "R" And CustSalesCat <> "CAT" Then
                            If Not nz(DVGen(0).Item("ord_gen_web_order"), 0) > 0 Then
                                MsgBox("Must have an Outside Rep for each Quote/Order.", MsgBoxStyle.Information, "Outside Rep?")
                                key = dr("ord_gen_type") + CStr(dr("ord_gen_rev"))
                                Tab1.Tabs(key).Selected = True
                                TabItems.Tabs("general").Selected = True
                                tOutside.Focus()
                                SaveCanceled = True
                                Exit Sub
                            End If
                        End If

                        If (dr("ord_gen_terr") Is DBNull.Value) Then dr("ord_gen_terr") = ""
                        If dr("ord_gen_terr") = "" Then
                            MsgBox("Must have an Territory for each Quote/Order.", MsgBoxStyle.Information, "Territory?")
                            key = dr("ord_gen_type") + CStr(dr("ord_gen_rev"))
                            Tab1.Tabs(key).Selected = True
                            TabItems.Tabs("general").Selected = True
                            tTerr.Focus()
                            SaveCanceled = True
                            Exit Sub
                        End If

                        If nz(dr("ord_gen_shiptotype")) = "" And (UserType = "I" Or UserType = "O") And (nz(dr("ord_gen_ship_cust_pickup"), False) = False) Then
                            MsgBox("Must choose a ship to type on the Ship To tab.  You may have to look at previous revision.", MsgBoxStyle.Information, "Ship To Type?")
                            key = dr("ord_gen_type") + CStr(dr("ord_gen_rev"))
                            Tab1.Tabs(key).Selected = True
                            TabItems.Tabs("shipping").Selected = True
                            oShipToType.Focus()
                            SaveCanceled = True
                            Exit Sub
                        End If

                        If (tCustId.Text = "") Then
                            If (dr("ord_gen_src") Is DBNull.Value) Then dr("ord_gen_src") = ""
                            If dr("ord_gen_src") = "" Then
                                MsgBox("Must have a Source Code for each Order.", MsgBoxStyle.Information, "Source?")
                                key = dr("ord_gen_type") + CStr(dr("ord_gen_rev"))
                                Tab1.Tabs(key).Selected = True
                                TabItems.Tabs("general").Selected = True
                                tSource.Focus()
                                SaveCanceled = True
                                Exit Sub
                            End If
                        End If

                        dr("ord_gen_ship") = Math.Round(dr("ord_gen_ship"), 2)
                        If dr("ord_gen_ship") < 0 And dr("ord_gen_line_total") > 0 Then
                            MsgBox("Shipping can not be below $0.00.", MsgBoxStyle.Information, "Shipping?")
                            key = dr("ord_gen_type") + CStr(dr("ord_gen_rev"))
                            Tab1.Tabs(key).Selected = True
                            SaveCanceled = True
                            Exit Sub
                        End If

                        If (dr("ord_gen_ship_roundoff") > 0.05 Or dr("ord_gen_ship_roundoff") < -0.05) And dr("ord_gen_create_date") = Today Then
                            MsgBox("Shipping roundoff is too high.  Please logout and try again.  If this happens again, call Todd Witteride or Jon Jansen", MsgBoxStyle.Information, "Shipping Roundoff?")
                            key = dr("ord_gen_type") + CStr(dr("ord_gen_rev"))
                            Tab1.Tabs(key).Selected = True
                            SaveCanceled = True
                            Exit Sub
                        End If
                    End If
                End If
                If nz(dr("ord_gen_des_type")) = "" And dr("ord_gen_create_date") >= CDate("1/10/2007") And dr.RowState <> DataRowState.Deleted And dr("ord_gen_type") <> "R" Then
                    MsgBox("Must have a Design Type", MsgBoxStyle.Information, "Design Type?")
                    key = dr("ord_gen_type") + CStr(dr("ord_gen_rev"))
                    Tab1.Tabs(key).Selected = True
                    TabItems.Tabs("general").Selected = True
                    tDesType.Focus()
                    SaveCanceled = True
                    Exit Sub
                End If
                If (nz(dr("ord_gen_ship_zip")) = "" Or nz(dr("ord_gen_ship_city")) = "" Or nz(dr("ord_gen_ship_state")) = "" Or nz(dr("ord_gen_ship_country")) = "") And nz(dr("ord_gen_ship_country")) = "USA" Then
                    MsgBox("You must have a ship to City, State, Zip and Country before you save", MsgBoxStyle.Critical, "Shipping?")
                    key = dr("ord_gen_type") + CStr(dr("ord_gen_rev"))
                    Tab1.Tabs(key).Selected = True
                    TabItems.Tabs("shipping").Selected = True
                    SaveCanceled = True
                    Exit Sub
                End If
                DoIt = False
                If dr.RowState = DataRowState.Added Then
                    DoIt = True
                Else
                    If dr.RowState = DataRowState.Modified Then
                        If nz(dr("ord_gen_tax_exempt", DataRowVersion.Current), False) <> nz(dr("ord_gen_tax_exempt", DataRowVersion.Original), False) Then DoIt = True
                    End If
                End If
                If DoIt Then
                    If nz(dr("ord_gen_tax_exempt"), False) = True And dr("ord_gen_status") <> "SHIPPED" And dr("ord_gen_status") <> "CANCELED" And dr("ord_gen_type") <> "R" Then
                        'Shipping Tab - check for valid tax exempt no   
                        If nz(dr("ord_gen_tax_exempt_addr")) = "" Or nz(dr("ord_gen_tax_exempt_addr")) = "Not on File" Or nz(dr("ord_gen_tax_exempt_addr")) = "CA - Not on File" Then
                            MsgBox("You must enter a Tax Exempt Number or the number you have entered is not on file." + vbCrLf + "Note: Do not use spaces or hyphens", MsgBoxStyle.Information, "Tax Exempt?")
                            key = dr("ord_gen_type") + CStr(dr("ord_gen_rev"))
                            Tab1.Tabs(key).Selected = True
                            TabItems.Tabs("shipping").Selected = True
                            gsExemptNo.Focus()
                            SaveCanceled = True
                            Exit Sub
                        End If
                    End If
                End If
            Next
            If Me.cbDefThirdParty.Checked And ThirdPartyUnchecked = True Then
                If MsgBox("This customer has a Third Party Shipping number but some orders do not have Third Party billing checked.  Do you want to continue?", MsgBoxStyle.YesNo, "Third Party?") = MsgBoxResult.No Then
                    SaveCanceled = True
                    Exit Sub
                End If
            End If
            'MsgBox("3-" + tTotal2.Text + " " + CStr(dsGen.Tables(0).Rows(0)("ord_gen_line_total")))


            'tUpOn.Text = Now.ToString
            'tUpBy.Text = User
            Grid1.Update()
            Grid1.UpdateData()
            'BindingContext(DVItems).EndCurrentEdit()
            'BindingContext(dsItems, "ord_itm").EndCurrentEdit()
            BindingContext(DVGen).EndCurrentEdit()
            BindingContext(DVAltShip).EndCurrentEdit()
            BindingContext(DVOrdProd).EndCurrentEdit()
            'BindingContext(DVOrdProdISC).EndCurrentEdit()

            'BindingContext(dsGen, "ord_gen").EndCurrentEdit()
            'MsgBox("4-" + tTotal2.Text + " " + CStr(dsGen.Tables(0).Rows(0)("ord_gen_line_total")))

            dv.RowFilter = "(ord_gen_update_date>='1/1/07' and ord_gen_type='Q') or (ord_gen_create_date>='1/1/07' and ord_gen_type='O')"
            If dv.Count > 0 Then
                Dim cmd2 As New SqlCommand("", cnn)
                Dim hasCORK, hasCORKPOST As Boolean
                cnn.Open()
                di.RowStateFilter = DataViewRowState.CurrentRows
                For x = 0 To dv.Count - 1
                    drv = dv.Item(x)
                    dvr = dv.Item(x).Row
                    If dvr.HasVersion(DataRowVersion.Original) Then
                        If nz(dvr("ord_gen_total", DataRowVersion.Current), 0) <> nz(dvr("ord_gen_total", DataRowVersion.Original), 0) Then
                            DoIt = True
                        Else
                            DoIt = False
                        End If
                    Else
                        DoIt = True
                    End If
                    If DoIt Then
                        If drv("ord_gen_upsell_sqft") Is DBNull.Value And UserType = "D" Then
                            MsgBox("Must have a Square Foot value.", MsgBoxStyle.Information, "Square Foot?")
                            key = drv("ord_gen_type") + CStr(drv("ord_gen_rev"))
                            Tab1.Tabs(key).Selected = True
                            TabItems.Tabs("UP").Selected = True
                            tUpSellSqFt.Focus()
                            tUpSellSqFt.SelectAll()
                            cnn.Close()
                            SaveCanceled = True
                            Exit Sub
                        End If
                        di.RowFilter = "ord_itm_type='" + drv("ord_gen_type") + "' and ord_itm_rev=" + CStr(drv("ord_gen_rev")) '+ " and isnull(ord_itm_item_code,'')=''"
                        hasCORK = False
                        hasCORKPOST = False
                        If di.Count > 0 Then
                            For y = 0 To di.Count - 1
                                div = di.Item(y).Row
                                If div.RowState <> DataRowState.Deleted Then
                                    If nz(div("ord_itm_item_code"), "") = "" Then
                                        MsgBox("You may not use blank items codes.", MsgBoxStyle.Information, "Blank Item Codes")
                                        key = drv("ord_gen_type") + CStr(drv("ord_gen_rev"))
                                        Tab1.Tabs(key).Selected = True
                                        TabItems.Tabs("items").Selected = True
                                        SaveCanceled = True
                                        cnn.Close()
                                        Exit Sub
                                    End If
                                    If div("ord_itm_type") <> "O" Then
                                        If Mid(div("ord_itm_item_code"), 1, 7) = "CORKFLO" Then hasCORK = True
                                        If div("ord_itm_item_code") = "CORKPOST" Then hasCORKPOST = True
                                    End If

                                    '********************** turned off 7/31/2008, turned back on 2/3/2009   -jpj
                                    cmd2.CommandText = "select inactive from itm_file where itm_code='" + div("ord_itm_item_code") + "'"
                                    If nz(cmd2.ExecuteScalar, True) = True Then
                                        MsgBox("You may not use inactive items code '" + div("ord_itm_item_code") + "'", MsgBoxStyle.Information, "Inactive Item Codes")
                                        key = drv("ord_gen_type") + CStr(drv("ord_gen_rev"))
                                        cnn.Close()
                                        Tab1.Tabs(key).Selected = True
                                        TabItems.Tabs("items").Selected = True
                                        For z = 0 To Grid1.Rows.Count - 1
                                            If Grid1.Rows(z).Cells("ord_itm_item_code").Text = div("ord_itm_item_code") Then Exit For
                                        Next
                                        Grid1.Rows(z).Activate()
                                        Grid1.Rows(z).Cells("ord_itm_item_code").Selected = True
                                        SaveCanceled = True
                                        Exit Sub
                                    End If

                                    If div("ord_itm_base_price") = 0 And div("ord_itm_type") <> "R" And div("ord_itm_unt_sell") <> 0 Then
                                        cmdTemp.CommandText = "select itm_allow_0_base_price from itm_file where itm_code='" + div("ord_itm_item_code") + "'"
                                        If nz(cmdTemp.ExecuteScalar, False) = False Then
                                            cmdTemp.CommandText = "select itm_change_base_price from itm_file where itm_code='" + div("ord_itm_item_code") + "'"
                                            div("ord_itm_change_base") = nz(cmdTemp.ExecuteScalar, False)
                                            cnn.Close()
                                            MsgBox("Must have a Base Price for each Item.", MsgBoxStyle.Information, "Base Price?")
                                            key = div("ord_itm_type") + CStr(div("ord_itm_rev"))
                                            Tab1.Tabs(key).Selected = True
                                            TabItems.Tabs("items").Selected = True
                                            Dim rw As Infragistics.Win.UltraWinGrid.UltraGridRow
                                            For Each rw In Grid1.Selected.Rows
                                                rw.Selected = False
                                            Next
                                            For Each rw In Grid1.Rows
                                                If rw.Cells("ord_itm_item_code").Value = div("ord_itm_item_code") And rw.Cells("ord_itm_base_price").Value = 0 Then Exit For
                                            Next
                                            If rw.Cells("ord_itm_item_code").Value = div("ord_itm_item_code") Then
                                                rw.Selected = True
                                                rw.Activate()
                                                tBase.Enabled = True
                                                tBase.Focus()
                                                tBase.SelectAll()
                                            End If
                                            SaveCanceled = True
                                            Exit Sub
                                        End If
                                    End If
                                End If
                            Next
                            If hasCORK = True And hasCORKPOST = False Then
                                MsgBox("You must have CORKPOST on any order that has CORK", MsgBoxStyle.Critical, "CORKPOST?")
                                SaveCanceled = True
                                cnn.Close()
                                Exit Sub
                            End If
                        End If
                    End If 'DoIt

                    'Un-Rem when publishing Upsell Tab
                    If di.Count > 0 Then
                        For y = 0 To di.Count - 1
                            div = di.Item(y).Row
                            If dvr("ord_gen_create_date") >= CDate("5/26/2008") Then
                                If nz(div("ord_itm_width_req"), False) = True And nz(div("ord_itm_width"), 0) <= 0 Then
                                    MsgBox("A Width is required for part number " + div("ord_itm_item_code"), MsgBoxStyle.Critical, "Width?")
                                    key = div("ord_itm_type") + CStr(div("ord_itm_rev"))
                                    Tab1.Tabs(key).Selected = True
                                    TabItems.Tabs("items").Selected = True
                                    SaveCanceled = True
                                    cnn.Close()
                                    Exit Sub
                                End If
                                If nz(div("ord_itm_height_req"), False) = True And nz(div("ord_itm_height"), 0) <= 0 Then
                                    MsgBox("A Height is required for part number " + div("ord_itm_item_code"), MsgBoxStyle.Critical, "Height?")
                                    key = div("ord_itm_type") + CStr(div("ord_itm_rev"))
                                    Tab1.Tabs(key).Selected = True
                                    TabItems.Tabs("items").Selected = True
                                    SaveCanceled = True
                                    cnn.Close()
                                    Exit Sub
                                End If
                                If nz(div("ord_itm_depth_req"), False) = True And nz(div("ord_itm_depth"), 0) <= 0 Then
                                    MsgBox("A Depth is required for part number " + div("ord_itm_item_code"), MsgBoxStyle.Critical, "Depth?")
                                    key = div("ord_itm_type") + CStr(div("ord_itm_rev"))
                                    Tab1.Tabs(key).Selected = True
                                    TabItems.Tabs("items").Selected = True
                                    SaveCanceled = True
                                    cnn.Close()
                                    Exit Sub
                                End If
                            End If
                        Next
                    End If
                Next


                cnn.Close()
            End If

        Catch
            DoError(Err, Me)
        End Try
    End Sub
    Private Function CheckField(ByVal ctl As Control, ByVal nm As String, ByVal tb As String) As Boolean
        If ctl.Text = "" Then
            MsgBox("Must have a " + nm + ".", MsgBoxStyle.Information, nm + "?")
            Tab1.Tabs(tb).Selected = True
            ctl.Focus()
            SaveCanceled = True
            CheckField = False
        Else
            CheckField = True
        End If

    End Function
    Private Function CheckAcctDateFromItem(ByVal Ord As Long, ByVal Rev As Integer, ByVal Typ As String) As Boolean
        If tOrd.Text = "" Then
            CheckAcctDateFromItem = True
        Else
            Dim dr As DataRow
            CheckAcctDateFromItem = False
            For Each dr In dsGen.Tables(0).Rows
                If Ord = -1 Then
                    CheckAcctDateFromItem = True
                    Exit For
                Else
                    If Typ = "Q" Then
                        CheckAcctDateFromItem = True
                        Exit For
                    End If
                    If CDate(IIf(IsDate(tAcctOpen.Text), tAcctOpen.Text, "1/1/1900")) = Today Then
                        CheckAcctDateFromItem = True
                        Exit For
                    End If
                    If dr("ord_gen_ord_serial") = Ord And dr("ord_gen_rev") = Rev And dr("ord_gen_type") = Typ Then
                        If nz(dr("ord_gen_acct_lock"), False) = True Then
                            CheckAcctDateFromItem = False
                            Exit Function
                        End If
                        If dr("ord_gen_create_date") > AcctClosed Then CheckAcctDateFromItem = True
                        Exit For
                    End If
                End If
            Next
        End If
    End Function
    Public Overrides Sub Save_After()
        Try
            Dim x, y As Integer
            Dim cb As New SqlCommandBuilder(daItems)
            Dim UpdateFCSerial As String = ""
            Dim row, rw As DataRow
            Dim dv As DataView
            Dim RefFee, RefFeeLeft As Double
            Dim HasTaxOverride As Boolean = False
            Dim cmdTest As New SqlCommand("", cnn)
            Dim cmd As New SqlCommand("", cnn)
            Dim payments As Double

            tOrd.Text = KeyValue1

            If dsItems.Tables("ord_itm").Rows.Count > 0 Then
                x = 0
                Do
                    If dsItems.Tables("ord_itm").Rows(x).RowState <> DataRowState.Deleted Then
                        If nz(dsItems.Tables("ord_itm").Rows(x).Item("ord_itm_qty"), 0) = 0 And nz(dsItems.Tables("ord_itm").Rows(x).Item("ord_itm_item_code")) = "" Then
                            dsItems.Tables("ord_itm").Rows(x).Delete()
                            'x = x - 1
                        Else
                            If dsItems.Tables("ord_itm").Rows(x).RowState <> DataRowState.Deleted Then
                                dsItems.Tables("ord_itm").Rows(x).Item("ord_itm_ord_serial") = CLng(KeyValue1)
                                If dsItems.Tables("ord_itm").Rows(x).RowState = DataRowState.Added Then
                                    dsItems.Tables("ord_itm").Rows(x).Item("ord_itm_created") = Now
                                    dsItems.Tables("ord_itm").Rows(x).Item("ord_itm_created_by") = User
                                End If
                            End If
                        End If
                    End If
                    x = x + 1
                Loop Until x > dsItems.Tables("ord_itm").Rows.Count - 1
            End If

            'dsGen.Tables("ord_gen").Columns.Remove("ord_gen_status")
            cnn.Open()
            For x = 0 To dsGen.Tables("ord_gen").Rows.Count - 1
                If dsGen.Tables("ord_gen").Rows(x).RowState <> DataRowState.Deleted Then
                    dsGen.Tables("ord_gen").Rows(x).Item("ord_gen_ord_serial") = CLng(KeyValue1)
                    row = dsGen.Tables("ord_gen").Rows(x)
                    If row.HasVersion(DataRowVersion.Original) Then
                        If nz(row("ord_gen_forecast_date", DataRowVersion.Original), CDate("1/1/1900")) <> nz(row("ord_gen_forecast_date", DataRowVersion.Current), CDate("1/1/1900")) Then
                            UpdateFCSerial += CStr(row("ord_gen_serial")) + ","
                        End If
                        If nz(row("ord_gen_co_isr", DataRowVersion.Original), False) = True And nz(row("ord_gen_co_isr", DataRowVersion.Current), False) = False Then
                            cmdTest.CommandText = "insert into err_file (err_desc,err_source,err_user,err_date,err_ord_serial) values ('Lost ISR Checkoff " + row("ord_gen_type") + CStr(row("ord_gen_rev")) + "','CheckOff','" + User + "','" + CStr(Now) + "'," + CStr(row("ord_gen_ord_serial")) + ")"
                            cmdTest.ExecuteNonQuery()
                        End If

                    End If

                    If nz(row("ord_gen_serial"), 0) = 0 Then
                        payments = 0
                    Else
                        cmd.CommandText = "select sum(pay_itm_amt) as paysum from pay_itm where pay_itm_ord_gen_serial=" + CStr(nz(row("ord_gen_serial"), 0))
                        payments = nz(cmd.ExecuteScalar, 0)
                    End If
                    If row("ord_gen_type") = "R" Then
                        row("ord_gen_balance") = 0
                    Else
                        row("ord_gen_balance") = Math.Round(row("ord_gen_total") - payments, 2)
                    End If
                    If row.HasVersion(DataRowVersion.Original) Then
                        If nz(row("ord_gen_balance", DataRowVersion.Original), 0) = 0 And row("ord_gen_balance") <> 0 And row("ord_gen_type") = "O" Then
                            Dim email As New System.Net.Mail.MailMessage
                            Dim smtp As New SmtpClient("relay.appriver.com")
                            smtp.Port = 2525
                            email.To.Add("trishas@winecellarinnovations.com")
                            email.From = New MailAddress("tlarkin@winecellarinnovations.com")
                            email.Subject = "Balance Changed on " + CStr(nz(row("ord_gen_ord_serial"))) + "-" + CStr(nz(row("ord_gen_from_rev"))) + "-" + CStr(nz(row("ord_gen_rev")))
                            email.Body = "Balance changed from $0.00 to " + FormatCurrency(nz(row("ord_gen_total"), 0) - payments) + " at " + CStr(Now) + " by " + UCase(User)
                            Try
                                smtp.Send(email)
                            Catch ex As Exception
                                MsgBox(ex.Message)
                                MsgBox("unable to send email in save_after line 16232")
                            End Try
                        End If
                    End If
                End If

                If nz(row("ord_gen_design_required"), CDate("1/1/1900")) = CDate("1/1/1900") Then
                    row("ord_gen_design_required") = CDate("12/31/2120")
                End If
            Next

            For x = 0 To dsAltShip.Tables(0).Rows.Count - 1
                If dsAltShip.Tables(0).Rows(x).RowState <> DataRowState.Deleted Then
                    dsAltShip.Tables(0).Rows(x).Item("ord_alt_ship_ord_serial") = CLng(KeyValue1)
                End If
            Next

            If dsOrdProd.Tables(0).Rows.Count > 0 Then
                Dim dsProdHist As New DataSet
                cmd.CommandText = "select * from ord_prod_hist where ord_prod_serial=-1"
                Dim daProdHist As New SqlClient.SqlDataAdapter(cmd)
                Dim cbProdHist As New SqlClient.SqlCommandBuilder(daProdHist)
                Dim row2 As DataRow
                daProdHist.Fill(dsProdHist)
                For x = 0 To dsOrdProd.Tables(0).Rows.Count - 1
                    If dsOrdProd.Tables(0).Rows(x).RowState <> DataRowState.Deleted Then
                        If dsOrdProd.Tables(0).Rows(x).RowState = DataRowState.Modified Then
                            Dim rwProd As DataRow

                            row = dsProdHist.Tables(0).NewRow
                            row2 = dsOrdProd.Tables(0).Rows(x)
                            For y = 1 To row.Table.Columns.Count - 1
                                row(y) = row2(y, DataRowVersion.Original)
                            Next
                            dsProdHist.Tables(0).Rows.Add(row)
                        End If
                        dsOrdProd.Tables(0).Rows(x).Item("ord_prod_ord_serial") = CLng(KeyValue1)
                        dsOrdProd.Tables(0).Rows(x).Item("ord_prod_date") = Now
                        dsOrdProd.Tables(0).Rows(x).Item("ord_prod_who") = User
                    End If
                Next
                If dsProdHist.Tables(0).Rows.Count > 0 Then
                    daProdHist.Update(dsProdHist)
                End If
            End If
            cnn.Close()

            For x = 0 To dsOrdProdISC.Tables(0).Rows.Count - 1
                If dsOrdProdISC.Tables(0).Rows(x).RowState <> DataRowState.Deleted Then
                    dsOrdProdISC.Tables(0).Rows(x).Item("ord_prod_isc_ord_serial") = CLng(KeyValue1)
                    dsOrdProdISC.Tables(0).Rows(x).Item("ord_prod_isc_date") = Now
                    dsOrdProdISC.Tables(0).Rows(x).Item("ord_prod_isc_who") = User
                End If
            Next

            For x = 0 To dsRepReq.Tables(0).Rows.Count - 1
                If dsRepReq.Tables(0).Rows(x).RowState <> DataRowState.Deleted Then
                    dsRepReq.Tables(0).Rows(x).Item("ord_rep_req_ord_serial") = CLng(KeyValue1)
                    If dsRepReq.Tables(0).Rows(x).Item("ord_rep_serial") < 0 Then dsRepReq.Tables(0).Rows(x).Item("ord_rep_serial") = DBNull.Value
                End If
            Next

            For x = 0 To dsCont.Tables(0).Rows.Count - 1
                If dsCont.Tables(0).Rows(x).RowState <> DataRowState.Deleted Then
                    If dsCont.Tables(0).Rows(x).Item("cont_type") = "Referral" Then
                        dsCont.Tables(0).Rows(x).Item("ord_cont_ord_serial") = 0
                        dsCont.Tables(0).Rows(x).AcceptChanges()
                    Else
                        dsCont.Tables(0).Rows(x).Item("ord_cont_ord_serial") = CLng(KeyValue1)
                    End If
                End If
            Next

            If dsDiag.Tables.Count > 0 Then
                For x = 0 To dsDiag.Tables(0).Rows.Count - 1
                    If dsDiag.Tables(0).Rows(x).RowState <> DataRowState.Deleted Then
                        dsDiag.Tables(0).Rows(x).Item("diag_ord_serial") = CLng(KeyValue1)
                        '******to clear out diag_file orphaned records that do not diagnostics
                        If dsDiag.Tables(0).Rows(x).Item("diag_status") <> "ACCEPTED" And dsDiag.Tables(0).Rows(x).Item("diag_status") <> "DENIED" Then
                            Dim nDiag = False
                            Dim drx As DataRow
                            For Each drx In dsItems.Tables("ord_itm").Rows
                                If drx.RowState <> DataRowState.Deleted Then
                                    If drx("ord_itm_rev") = dsDiag.Tables(0).Rows(x).Item("diag_rev") And drx("ord_itm_type") = dsDiag.Tables(0).Rows(x).Item("diag_type") Then
                                        cnn.Open()
                                        If NeedsDiagnostic(drx("ord_itm_item_code")) Then
                                            nDiag = True
                                        End If
                                        cnn.Close()
                                    End If
                                End If
                            Next
                            If nDiag = False Then
                                Try
                                    dsDiag.Tables(0).Rows(x).Delete()
                                Catch
                                    'MsgBox(Err.Description.ToString + "   " + x.ToString)
                                End Try
                            End If
                        End If
                        '*********
                    End If
                Next
            End If

            JSaveRows(dsItems, "ord_itm", "ord_itm_serial")
            JSaveRows(dsGen, "ord_gen", "ord_gen_serial")
            JSaveRows(dsAltShip, "ord_alt_ship", "ord_alt_ship_serial")
            JSaveRows(dsOrdProd, "ord_prod", "ord_prod_serial")
            JSaveRows(dsOrdProdISC, "ord_prod_isc", "ord_prod_isc_serial")
            JSaveRows(dsRepReq, "ord_rep_req", "ord_rep_req_serial")
            If dsDiag.Tables.Count > 0 Then
                JSaveRows(dsDiag, "diag_file", "diag_serial")
            End If


            Dim col As DataColumn
            Dim tbl As New DataTable
            tbl.Columns.Add("ord_cont_serial")
            tbl.Columns.Add("ord_cont_ord_serial")
            tbl.Columns.Add("ord_cont_cont_serial")
            tbl.Columns.Add("ord_cont_payee")
            tbl.Columns.Add("ord_cont_note")
            JSaveRows(dsCont, "ord_cont", "ord_cont_serial", tbl.Columns)

            'If cnn.State = ConnectionState.Closed Then cnn.Open()
            'Dim cmd As New SqlCommand("select ord_gen_serial,ord_gen_balance,ord_gen_total from ord_gen where ord_gen_ord_serial=" + KeyValue1, cnn)
            'Dim dr As SqlDataReader
            'Dim cmd2 As New SqlCommand
            'cmd2.Connection = cnn2
            'cnn2.Open()
            'Dim payments As Double

            'dr = cmd.ExecuteReader
            'Do While dr.Read
            '    cmd2.CommandText = "select sum(pay_itm_amt) as paysum from pay_itm where pay_itm_ord_gen_serial=" + CStr(dr("ord_gen_serial"))
            '    If cmd2.ExecuteScalar Is DBNull.Value Then
            '        payments = 0
            '    Else
            '        payments = cmd2.ExecuteScalar
            '    End If
            '    cmd2.CommandText = "update ord_gen set ord_gen_balance=round(ord_gen_total - (" + CStr(payments) + "),2) where ord_gen_serial=" + CStr(dr("ord_gen_serial"))
            '    cmd2.ExecuteNonQuery()
            '    If nz(dr("ord_gen_balance"), 0) = 0 Then
            '        If nz(dr("ord_gen_total"), 0) - payments <> 0 Then
            '            Dim email As New System.Web.Mail.MailMessage
            '            Dim smtp As System.Web.Mail.SmtpMail
            '            email.To = "jon.jansen@jcom-inc.com"
            '            email.From = "tlarkin@winecellarinnovations.com"
            '            email.Subject = "Balance Changed on " + CStr(nz(dr("ord_gen_ord_serial"))) + "-" + CStr(nz(dr("ord_gen_from_rev"))) + "-" + CStr(nz(dr("ord_gen_rev")))
            '            email.Body = "Balance changed from $0.00 to " + FormatCurrency(nz(dr("ord_gen_total"), 0) - payments) + " at " + CStr(Now) + " by " + UCase(User)
            '            smtp.SmtpServer = "smtp.fuse.net"
            '            smtp.Send(email)
            '        End If
            '    End If
            'Loop
            'dr.Close()
            'cnn2.Close()

            cnn.Open()
            For Each row In dsGen.Tables("ord_gen").Rows
                If row.RowState <> DataRowState.Deleted Then
                    If ((nz(row("ord_gen_tax_override"), 0) <> 0) Or (nz(row("ord_gen_tax_override_perc"), 0) <> 0)) Then HasTaxOverride = True
                    If row("ord_gen_type") = "O" Then
                        'StatusCheck(tOrd.Text, "O", CStr(row("ord_gen_rev")), row("ord_gen_status"), "Order Save")
                        If tRefPerc.Value <> 0 Then CheckReferral(row("ord_gen_ord_serial"), row("ord_gen_rev"), row("ord_gen_type"))
                    End If

                    'update Custom Total and Stain Total
                    cmd.CommandText = "update ord_gen set ord_gen_cust_tot=(SELECT SUM(ord_itm_qty * ord_itm_unt_sell + ISNULL(ord_itm_disc, 0) + ISNULL(ord_itm_margin_factor, 0)) AS Expr1 FROM ord_itm WHERE (ord_itm_ord_serial = ord_gen.ord_gen_ord_serial) AND (ord_itm_rev = ord_gen.ord_gen_rev) AND (ord_itm_type = ord_gen.ord_gen_type) AND (ord_itm_prod_type IN ('TOP','BUD','GOLD'))), ord_gen_stain_tot=(SELECT SUM(ord_itm_qty * ord_itm_unt_sell + ISNULL(ord_itm_disc, 0) + ISNULL(ord_itm_margin_factor, 0)) AS Expr1 FROM ord_itm WHERE (ord_itm_ord_serial = ord_gen.ord_gen_ord_serial) AND (ord_itm_rev = ord_gen.ord_gen_rev) AND (ord_itm_type = ord_gen.ord_gen_type) AND (ord_itm_prod_type IN ('STAIN'))) where ord_gen_serial=" + CStr(row("ord_gen_serial"))
                    cmd.ExecuteNonQuery()

                    Try
                        If row("ord_gen_type") = "Q" And ((nz(row("ord_gen_outside"), "") <> "NONE") Or (tCustId.Text <> "")) Then
                            If (nz(row("ord_gen_co_isruser"), "") <> "Ordered") And (nz(row("ord_gen_co_isruser"), "") <> "Revised") Then  '(nz(row("ord_gen_co_isr"), False) = True) And 
                                If nz(row("ord_gen_co_isrdate"), CDate("1/1/1900")) > EditTime Then
                                    Dim ol As New Outlook.Application
                                    Dim mess As Outlook.MailItem
                                    mess = ol.CreateItem(Outlook.OlItemType.olMailItem)

                                    If tCustId.Text = "" Then
                                        If nz(row("ord_gen_resp_rep"), "") = "O" Then
                                            cmd.CommandText = "select rep_email from rep_file where rep_code='" + nz(row("ord_gen_outside"), "") + "'"
                                            mess.To = nz(cmd.ExecuteScalar, "")
                                            mess.Subject = tord_for.Text + ", Quote " + CStr(row("ord_gen_ord_serial")) + "-" + CStr(row("ord_gen_rev")) + " was released"
                                            mess.Body = "This quote can now be viewed on the Sales Portal at www.winecellarinnovations.com/portal" + vbCrLf + vbCrLf
                                            mess.Body = "Please remember to upload your proposal and CC your manager on the email when sent."
                                            mess.Send()
                                        End If
                                    Else
                                        If InStr(tsold_email.Text, "@") > 0 Then
                                            mess.To = tsold_email.Text
                                        Else
                                            cmd.CommandText = "select cust_email from cust_file where cust_id='" + tCustId.Text + "'"
                                            mess.To = nz(cmd.ExecuteScalar, "")
                                        End If
                                        cmd.CommandText = "select cust_email_ddp_to from cust_file where cust_id='" + tCustId.Text + "'"
                                        Dim em As String
                                        For Each em In Split(Replace(nz(cmd.ExecuteScalar, ""), ",", ";"), ";")
                                            If Trim(em) <> "" Then
                                                If InStr(mess.To, Trim(em)) = 0 Then mess.To += ";" + Trim(em)
                                            End If
                                        Next
                                        mess.Subject = tord_for.Text + ", Quote " + CStr(row("ord_gen_ord_serial")) + "-" + CStr(row("ord_gen_rev")) + " was released"
                                        mess.Body = "Here is your quote per your specifications.  Please don't hesitate to call if you have any questions." + vbCrLf + vbCrLf
                                        LookPDFDirEmail(PDFPath, 0, CStr(row("ord_gen_ord_serial")) + "-" + CStr(row("ord_gen_rev")), mess)
                                        mess.Display()
                                    End If

                                    row("ord_gen_co_emailsent") = Now
                                    cmd.CommandText = "update ord_gen set ord_gen_co_emailsent='" + CStr(row("ord_gen_co_emailsent")) + "' where ord_gen_serial=" + CStr(row("ord_gen_serial"))
                                    cmd.ExecuteNonQuery()
                                    ol = Nothing
                                End If
                            End If
                        End If
                    Catch
                        MsgBox("Email could not be sent for Quote " + CStr(row("ord_gen_ord_serial")) + "-" + CStr(row("ord_gen_rev")) + vbCrLf + vbCrLf + Err.Description, MsgBoxStyle.Critical)
                    End Try

                    'If row("ord_gen_type") = "O" Then
                    '    If tTaxExempt.Checked = False And tship_state.Text = "NY" Then
                    '        AddToDo("TAX-NOTIFY", "trishas", "Tax for NY on " + tord_for.Text + ".", CLng(tOrd.Text), row("ord_gen_rev"), row("ord_gen_type"), , tOrd.Text + "-" + CStr(row("ord_gen_from_rev")) + "-" + CStr(row("ord_gen_rev")), "Order")
                    '    End If
                    'End If

                    'If row("ord_gen_status") = "CANCELED" Then
                    '    If row("ord_gen_ref_paid") <> 0 Then
                    '        'These will be handled when the balance is trasfered  -jpj 5/1/2007
                    '        'UpdateRefLedger(row("ord_gen_ord_serial"), row("ord_gen_rev"), row("ord_gen_type"), "CANCELED", row("ord_gen_serial"), row("ord_gen_ref_paid") * -1)
                    '    Else
                    '        cmd.CommandText = "delete from to_do where to_do_ord_serial=" + CStr(row("ord_gen_ord_serial")) + " and to_do_ord_rev=" + CStr(row("ord_gen_rev")) + " and to_do_ord_type='" + row("ord_gen_type") + "'"
                    '        cmd.ExecuteNonQuery()
                    '    End If
                    'End If
                End If
                setMarginFactor(row("ord_gen_ord_serial"), row("ord_gen_rev"), row("ord_gen_type"))
                'Try
                '    If nz(row("ord_gen_designer")) = "LISAG" And nz(row("ord_gen_des_status")) = "DESIGN COMPLETE" And nz(row("ord_gen_create_date"), CDate("1/1/1900")) >= CDate("6/25/2009") Then
                '        cmd.CommandText = "select count(*) from emails_sent where es_type='Design Complete' and es_ord_serial=" + CStr(row("ord_gen_ord_serial")) + " and es_ord_rev=" + CStr(row("ord_gen_rev")) + " and es_ord_type='" + row("ord_gen_type") + "'"
                '        If cmd.ExecuteScalar = 0 Then
                '            Jcom.SendMail("tonyw@winecellarinnovations.com;dave@winecellarinnovations.com;jonj@jcom.cc", "toddw@winecellarinnovations.com", "Lisa has completed a design", CStr(row("ord_gen_ord_serial")) + "-" + CStr(row("ord_gen_rev")) + " has been completed.")
                '            cmd.CommandText = "insert into emails_sent (es_type,es_date,es_ord_serial,es_ord_rev,es_ord_type) values ('Design Complete','" + CStr(Now) + "'," + CStr(row("ord_gen_ord_serial")) + "," + CStr(row("ord_gen_rev")) + ",'" + row("ord_gen_type") + "')"
                '            cmd.ExecuteNonQuery()
                '        End If
                '    End If
                '    If tCustId.Text = "IWA" And nz(row("ord_gen_co_desreq"), False) = True And nz(row("ord_gen_create_date"), CDate("1/1/1900")) >= CDate("6/25/2009") Then
                '        cmd.CommandText = "select count(*) from emails_sent where es_type='Design Added' and es_ord_serial=" + CStr(row("ord_gen_ord_serial")) + " and es_ord_rev=" + CStr(row("ord_gen_rev")) + " and es_ord_type='" + row("ord_gen_type") + "'"
                '        If cmd.ExecuteScalar = 0 Then
                '            Jcom.SendMail("lisagraff@insightbb.com", "toddw@winecellarinnovations.com", "IWA needs a design", CStr(row("ord_gen_ord_serial")) + "-" + CStr(row("ord_gen_rev")) + " has been added and a design is required.")
                '            cmd.CommandText = "insert into emails_sent (es_type,es_date,es_ord_serial,es_ord_rev,es_ord_type) values ('Design Added','" + CStr(Now) + "'," + CStr(row("ord_gen_ord_serial")) + "," + CStr(row("ord_gen_rev")) + ",'" + row("ord_gen_type") + "')"
                '            cmd.ExecuteNonQuery()
                '        End If
                '    End If
                'Catch
                '    MsgBox("Email could not be sent. " + Err.Description, MsgBoxStyle.Critical, "Email?")
                'End Try
            Next

            If UpdateFCSerial <> "" Then
                cmd.CommandText = "update ord_gen set ord_gen_forecast_updated='" + CStr(Now) + "',ord_gen_forecast_updatedby='" + User + "' where ord_gen_serial in (" + Mid(UpdateFCSerial, 1, Len(UpdateFCSerial) - 1) + ")"
                cmd.ExecuteNonQuery()
            End If

            'If tTaxExempt.Checked = True Then
            '    If tSoldCustId.Text = "" Then
            '        cmd.CommandText = "select count(tax_cert_serial) from tax_cert where tax_cert_cust_id='" + tSoldCustId.Text + "' and tax_cert_no='" + tTaxExemptNo.Text + "' and tax_cert_state='" + tship_state.Text + "'"
            '    Else
            '        cmd.CommandText = "select count(tax_cert_serial) from tax_cert where tax_cert_cust_id='" + tSoldCustId.Text + "' and tax_cert_no='" + tTaxExemptNo.Text + "'"
            '    End If
            '    If cmd.ExecuteScalar <= 0 Then
            '        MsgBox("Tax exempt certificate does not match any on file.  Please correct ASAP", MsgBoxStyle.Information, "Tax Exempt?")

            '        Dim Inside, Manager As String
            '        Dim dvOrd As New DataView(dsGen.Tables(0), "ord_gen_type='O' and ord_gen_rev=0", "ord_gen_serial", DataViewRowState.CurrentRows)

            '        If dvOrd.Count = 0 Then
            '            dvOrd = New DataView(dsGen.Tables(0), "ord_gen_type='Q' and ord_gen_rev=0", "ord_gen_serial", DataViewRowState.CurrentRows)
            '        End If
            '        cmd.CommandText = "select rep_manager from rep_file where rep_code='" + dvOrd(0).Item("ord_gen_inside") + "'"
            '        Manager = nz(cmd.ExecuteScalar)

            '        AddToDo("TAX", dvOrd(0).Item("ord_gen_inside"), "Tax Certificate needed for " + tord_for.Text + " Cert#:" + tTaxExemptNo.Text + ".", CLng(tOrd.Text), , , , tOrd.Text, "Order")
            '        If Manager <> "" Then AddToDo("TAX", Manager, "Tax Certificate needed for " + tord_for.Text + " Cert#:" + tTaxExemptNo.Text + " for ISR " + dvOrd(0).Item("ord_gen_inside") + ".", CLng(tOrd.Text), , , , tOrd.Text, "Order")
            '    Else
            '        'cmd.CommandText = "update to_do set to_do_complete=1 where to_do_type='TAX' and to_do_ord_serial=" + tOrd.Text
            '        'cmd.ExecuteNonQuery()
            '    End If
            'End If


            Dim Order As String
            Dim DoIt As Boolean
            Dim dvArt As DataView
            Dim AllClear As Boolean

            For x = 0 To dsGen.Tables("ord_gen").Rows.Count - 1
                If dsGen.Tables("ord_gen").Rows(x).RowState <> DataRowState.Deleted Then
                    row = dsGen.Tables("ord_gen").Rows(x)
                    cmd.CommandText = "select ord_prod_allclear from ord_prod where ord_prod_ord_serial=" + CStr(row("ord_gen_ord_serial")) + " and ord_prod_rev=" + CStr(row("ord_gen_rev")) + " and ord_prod_type='" + row("ord_gen_type") + "'"
                    AllClear = nz(cmd.ExecuteScalar, False)
                    If row("ord_gen_type") = "O" And AllClear = True Then
                        dvArt = New DataView(dsItems.Tables(0), "ord_itm_type='" + row("ord_gen_type") + "' and ord_itm_rev=" + CStr(row("ord_gen_rev")) + " and ord_itm_prod_type='ARCH'", "ord_itm_serial", DataViewRowState.CurrentRows)
                        If dvArt.Count > 0 Then
                            DoIt = False
                            For y = 0 To dvArt.Count - 1
                                cmd.CommandText = "select itm_art_allclear from itm_file where itm_code='" + dvArt(y).Item("ord_itm_item_code") + "'"
                                If nz(cmd.ExecuteScalar, False) = True Then
                                    DoIt = True
                                    Exit For
                                End If
                            Next
                            If DoIt Then
                                Order = CStr(row("ord_gen_ord_serial")) + "-" + CStr(row("ord_gen_from_rev")) + "-" + CStr(row("ord_gen_rev"))
                                Jcom.AddToDo("ART-ALLCLEAR", "christyl", "Cellar art order going to the floor.", row("ord_gen_ord_serial"), row("ord_gen_rev"), row("ord_gen_type"), , Order, "Order")
                            End If
                        End If
                    End If
                End If
            Next

            cnn.Close()

            AcceptOrd()
            'BalanceCheck("Save_After EstOrd " + EditMode)
            TotalCheck(tOrd.Text, tOrd.Text + " - " + User)
            tRefFee.Visible = True
            tBase.Enabled = False

            UpdateModeLog("Save")
            CheckPrimaryDirectory()
            UpsellCheckboxes(True)

            If HasTaxOverride Then MsgBox("Some tax amounts have been manually entered.  Please make sure all tax amounts are correct", MsgBoxStyle.Information, "Tax Amounts?")

            'If UserGroup = "Admins" Then
            '    bEditSignoff.Visible = True
            'End If

            If lstShipHolds.Count > 0 Then
                Dim onGenSerial As String
                Dim fm As fmOrdShippingNotification
                For Each onGenSerial In lstShipHolds
                    Tab1.Tabs(onGenSerial).Selected = True
                    Application.DoEvents()
                    fm = New fmOrdShippingNotification
                    fm.fmEstOrd = Me
                    fm.bCancel.Enabled = False
                    fm.cbShippingAddrChange.Checked = True
                    fm.ShowDialog()
                Next
                fm = Nothing
            End If
            lstShipHolds.Clear()

            ShowCustDiscounts()

            tProdType.Enabled = False
        Catch
            DoError(Err, Me)
        End Try
    End Sub
    Private Sub ShowCustDiscounts()
        If QuietMode Then Exit Sub
        Dim dt As New DataTable
        Dim cmd As New SqlCommand("", cnn)
        Dim da As New SqlDataAdapter(cmd)
        cmd.CommandText = "select * from cust_disc where cust_disc_cust_id='" + Me.tSoldCustId.Text + "' and cust_disc_start<='" + CStr(Today) + " 0:00' and cust_disc_end>='" + CStr(Today) + " 23:59'"
        da.Fill(dt)
        If dt.Rows.Count > 0 Then
            Dim fm As New fmOrdCustDisc
            fm.Text += " for " + Me.tSoldCustId.Text
            fm.grDiscounts.DataSource = dt
            fm.grDiscounts.DataBind()
            dt = Nothing
            fm.ShowDialog()
        End If
    End Sub
    Private Sub LookPDFDirEmail(ByVal dirs As String, ByVal lev As Integer, ByVal Ord As String, ByVal mess As Outlook.MailItem)
        If IO.Directory.Exists(dirs) = False Then Exit Sub
        Dim dr As String
        Dim sp As String = "*"

        'If lev = 1 Then sp = Split(Ord, "-")(0) + "*"
        sp = Split(Ord, "-")(0) + "*"
        For Each dr In IO.Directory.GetDirectories(dirs, sp)
            'If lev = 1 Then
            LookPDFFilesEmail(dr, Ord, mess)
            'Else
            'If Microsoft.VisualBasic.Right(dr, 7) <> "Catalog" And lev < 1 Then LookPDFDirEmail(dr, lev + 1, Ord, mess)
            'End If
        Next

    End Sub
    Private Sub LookPDFFilesEmail(ByVal dr As String, ByVal Ord As String, ByVal mess As Outlook.MailItem)
        Dim fl As String
        Dim id As Integer = 1

        For Each fl In IO.Directory.GetFiles(dr, Ord + "*.PDF")
            mess.Attachments.Add(fl, , mess.Body.Length + 1, IO.Path.GetFileName(fl))
        Next
    End Sub
    Private Sub LoadItems(Optional ByVal Ord As String = "")
        Dim cmd As New SqlCommand("", cnn)
        Dim cnnState As ConnectionState = cnn.State
        Try
            If Ord = "" Then Ord = tOrd.Text
            dsItems.Clear()
            If Ord = "" Then Exit Sub

            Dim rw As DataRow
            Dim ToolTip, onTip As String

            daItems.SelectCommand = New SqlCommand("", cnn)
            daItems.SelectCommand.CommandText = "select  ord_itm_serial, ord_itm_ord_serial, ord_itm_rev, ord_itm_type, ord_itm_line, ord_itm_item_code, ord_itm_desc, ord_itm_qty, ord_itm_unt_sell, "
            daItems.SelectCommand.CommandText += "ord_itm_unt_ship, ord_itm_unt_base, ord_itm_mpf, ord_itm_markup, ord_itm_disc_perc, ord_itm_disc, ord_itm_base_price, ord_itm_taxable, ord_itm_fixture, "
            daItems.SelectCommand.CommandText += "ord_itm_sel_material, ord_itm_price_method, ord_itm_mat_code, ord_itm_fin_code, ord_itm_shipped, ord_itm_prod_type, ord_itm_from_ord_itm_serial, "
            daItems.SelectCommand.CommandText += "ord_itm_forecast_overide, ord_itm_order_id, ord_itm_note, ord_itm_mat_color, ord_itm_up_color, ord_itm_disc_type, ord_itm_disc_val, ord_itm_disc_amt, "
            daItems.SelectCommand.CommandText += "ord_itm_is_disc, ord_itm_is_up, ord_itm_disc_prod, ord_itm_disc_matl, ord_itm_is_perc_price, ord_itm_perc_price, ord_itm_perc_prodtypes, "
            daItems.SelectCommand.CommandText += "ord_itm_perc_itemcodes, ord_itm_user, ord_itm_updated, ord_itm_margin_factor, ord_itm_change_base, ord_itm_stain_bottles, ord_itm_lacq_bottles, "
            daItems.SelectCommand.CommandText += "ord_itm_bottle_search, ord_itm_wood_factor, ord_itm_ship_flat, ord_itm_bom_import, ord_itm_created, ord_itm_created_by, ord_itm_acct_lock, ord_itm_acct_total, "
            daItems.SelectCommand.CommandText += "ord_itm_stain_serial, ord_itm_finish_serial, ord_itm_lacquer_old, ord_itm_stain_bottles_add, ord_itm_lacq_bottles_add, ord_itm_ship_value, ord_itm_group, "
            daItems.SelectCommand.CommandText += "ord_itm_group_do, ord_itm_width, ord_itm_height, ord_itm_depth, ord_itm_width_req, ord_itm_height_req, ord_itm_depth_req, ord_itm_wizard_serial, "
            daItems.SelectCommand.CommandText += "ord_itm_install_min, ord_itm_install_use, ord_itm_class, ord_itm_price_track_inches, ord_itm_lacq3,itm_prod_tool_tip, ord_itm_retail"
            daItems.SelectCommand.CommandText += " from ord_itm left outer join itm_prod_type on ord_itm_prod_type=itm_prod_type_type where ord_itm_ord_serial=" + Ord + " order by ord_itm_line"
            Dim cb As SqlCommandBuilder = New SqlCommandBuilder(daItems)

            If cnn.State <> ConnectionState.Open Then cnn.Open()
            daItems.Fill(dsItems, "ord_itm")
            'DVItems = New DataView(dsItems.Tables("ord_itm"))
            dsItems.Tables("ord_itm").Columns("ord_itm_disc_type").DefaultValue = ""
            dsItems.Tables("ord_itm").Columns("ord_itm_disc_val").DefaultValue = 0
            dsItems.Tables("ord_itm").Columns("ord_itm_disc_amt").DefaultValue = 0
            dsItems.Tables("ord_itm").Columns("ord_itm_disc_prod").DefaultValue = ""
            dsItems.Tables("ord_itm").Columns("ord_itm_disc_matl").DefaultValue = ""
            dsItems.Tables("ord_itm").Columns("ord_itm_bom_import").DefaultValue = 0
            'dsItems.Tables("ord_itm").Columns("ord_itm_lacquer").DefaultValue = 0
            dsItems.Tables("ord_itm").Columns("ord_itm_stain_serial").DefaultValue = 0
            dsItems.Tables("ord_itm").Columns("ord_itm_lacq3").DefaultValue = " "

            daGen.SelectCommand = New SqlCommand("select * from ord_gen where ord_gen_ord_serial=" + Ord + " order by ord_gen_type,ord_gen_rev desc", cnn)
            Dim cb2 As SqlCommandBuilder = New SqlCommandBuilder(daGen)
            dsGen.Clear()
            daGen.Fill(dsGen, "ord_gen")
            'DVGen = New DataView(dsGen.Tables("ord_gen"))

            daAltShip.SelectCommand = New SqlCommand("select * from ord_alt_ship where ord_alt_ship_ord_serial=" + Ord, cnn)
            Dim cbAltShip As SqlCommandBuilder = New SqlCommandBuilder(daAltShip)
            dsAltShip.Clear()
            daAltShip.Fill(dsAltShip, "ord_alt_ship")

            daRepReq.SelectCommand = New SqlCommand("select * from ord_rep_req where ord_rep_req_ord_serial=" + Ord, cnn)
            Dim cbRepReq As SqlCommandBuilder = New SqlCommandBuilder(daRepReq)
            dsRepReq = New DataSet
            daRepReq.Fill(dsRepReq, "ord_rep_req")

            daOrdProd.SelectCommand = New SqlCommand("select * from ord_prod where ord_prod_ord_serial=" + Ord, cnn)
            Dim cbOrdProd As SqlCommandBuilder = New SqlCommandBuilder(daOrdProd)
            dsOrdProd = New DataSet
            daOrdProd.Fill(dsOrdProd, "ord_prod")

            daOrdProdisc.SelectCommand = New SqlCommand("select * from ord_prod_isc where ord_prod_isc_ord_serial=" + Ord, cnn)
            Dim cbOrdProdisc As SqlCommandBuilder = New SqlCommandBuilder(daOrdProdisc)
            dsOrdProdISC = New DataSet
            daOrdProdisc.Fill(dsOrdProdISC, "ord_prod_isc")

            If dsGen.Tables("ord_gen").Rows.Count = 0 Then
                'If dsGen.Tables("ord_gen").Rows.Count = 0 Then
                rw = dsGen.Tables("ord_gen").NewRow()
                If IsNumeric(tOrd.Text) Then rw("ord_gen_ord_serial") = CLng(tOrd.Text)
                rw("ord_gen_type") = "Q"
                rw("ord_gen_rev") = 0
                rw("ord_gen_create_date") = Now
                tCreate.Text = rw("ord_gen_create_date")
                rw("ord_gen_create_by") = User
                rw("ord_gen_show_date") = Today
                rw("ord_gen_total") = 0
                rw("ord_gen_line_total") = 0
                rw("ord_gen_ship_extra") = 0
                rw("ord_gen_ship_disc") = 0
                rw("ord_gen_ship_overnite") = 0
                rw("ord_gen_ship_inside") = 0
                rw("ord_gen_ship_collect") = 0
                rw("ord_gen_ship_white_glove") = 0
                rw("ord_gen_ship_cust_pickup") = 0
                rw("ord_gen_ship_twoman") = 0
                rw("ord_gen_ship_gated") = 0
                rw("ord_gen_ship_liftgate") = 0
                rw("ord_gen_ship_steps") = 0
                rw("ord_gen_ship_turns") = 0
                rw("ord_gen_ship_smalltruck") = 0
                rw("ord_gen_ship_call") = 0
                rw("ord_gen_ship_thirdparty") = 0
                rw("ord_gen_ship_alert") = 0
                rw("ord_gen_ship_numskids") = 0
                rw("ord_gen_ship_intlship") = 0
                rw("ord_gen_ship") = 0
                rw("ord_gen_tax") = 0
                rw("ord_gen_status") = "NEW"
                rw("ord_gen_ref_fee") = 0
                rw("ord_gen_ref_paid") = 0
                If tCustId.Text = "" Then
                    rw("ord_gen_sales_cat") = "RET"
                Else
                    cmd.CommandText = "select cust_sales_cat from cust_file where cust_id='" + tCustId.Text + "'"
                    rw("ord_gen_sales_cat") = cmd.ExecuteScalar
                    cmd = Nothing
                End If
                dsGen.Tables("ord_gen").Rows.Add(rw)

            End If

            ClearTabs()
            Tab1.Tabs("Q0").Enabled = True
            Dim dr As DataRow
            Dim tb As New Infragistics.Win.UltraWinTabControl.UltraTab
            Dim x, rev, HIrev As Integer
            For Each dr In dsGen.Tables("ord_gen").Rows
                Select Case dr("ord_gen_type")
                    Case "Q"
                        If dr("ord_gen_rev") <> 0 Then
                            rev = dr("ord_gen_rev")
                            If rev > HIrev Then HIrev = rev
                            tb = Tab1.Tabs.Add("Q" + CStr(rev), "Quote " + CStr(rev))
                            tb.Appearance.BackColor = Color.LemonChiffon
                            If Mid(Tab1.Tabs(1).Key, 1, 1) = "O" Then
                                tb.Reposition(Tab1.Tabs(2), Infragistics.Win.RelativePosition.Before)
                            Else
                                tb.Reposition(Tab1.Tabs(1), Infragistics.Win.RelativePosition.Before)
                            End If
                        Else
                            tb = Tab1.Tabs("Q0")
                        End If
                    Case "O"
                        If onDesignerLockDown = 0 Then
                            tb = Tab1.Tabs.Add("O" + CStr(dr("ord_gen_rev")), "Order " + CStr(nz(dr("ord_gen_from_rev"), 0)) + "-" + CStr(nz(dr("ord_gen_rev"), 0)))
                            tb.Appearance.BackColor = System.Drawing.Color.LightGreen
                            tb.Reposition(Tab1.Tabs("Q" + CStr(HIrev)), Infragistics.Win.RelativePosition.Before)

                            If cnn.State <> ConnectionState.Open Then cnn.Open()
                            cmd.CommandText = "select count(*) from ord_note where ord_note_ord_gen_serial=" + CStr(dr("ord_gen_serial")) + " and ord_note_type='OrdMod'"
                            If cmd.ExecuteScalar > 0 Then
                                tb.Appearance.ForeColor = Color.IndianRed
                                tb.Appearance.FontData.Bold = Infragistics.Win.DefaultableBoolean.True
                                tb.Appearance.BackColor = Color.Yellow
                            End If
                        End If
                    Case "R"
                        If onDesignerLockDown = 0 Then
                            tb = Tab1.Tabs.Add("R" + CStr(dr("ord_gen_rev")), "Replacement " + CStr(dr("ord_gen_from_quote")) + "-" + CStr(dr("ord_gen_from_rev")) + "-" + CStr(dr("ord_gen_rev")))
                            tb.Appearance.BackColor = System.Drawing.Color.LightCoral
                            tb.Reposition(Tab1.Tabs("Q" + CStr(HIrev)), Infragistics.Win.RelativePosition.Before)
                        End If
                End Select

                If dr("ord_gen_balance") Is DBNull.Value Then dr("ord_gen_balance") = 0
                If nz(dr.Item("ord_gen_addon"), False) = True Then
                    Tab1.ActiveTab.Appearance.BorderColor3DBase = Color.Yellow
                Else
                    Tab1.ActiveTab.Appearance.BorderColor3DBase = Nothing
                End If
                If dr.Item("ord_gen_type") = "O" Or dr.Item("ord_gen_type") = "R" Then
                    Select Case dr.Item("ord_gen_status")
                        Case "CANCELED"
                            tb.Appearance.BorderColor3DBase = Color.Red
                            tb.Appearance.FontData.Bold = Infragistics.Win.DefaultableBoolean.True
                            tb.Appearance.ForeColor = Color.Red
                            tb.Appearance.Image = 9
                        Case "SHIPPED"
                            If nz(dr.Item("ord_gen_alt_ship"), False) = True Then
                                tb.Appearance.Image = 7
                            Else
                                tb.Appearance.Image = 3
                            End If
                        Case "STAGED"
                            If dr("ord_gen_total") <> 0 And dr("ord_gen_balance") = 0 Then
                                If nz(dr.Item("ord_gen_alt_ship"), False) = True Then
                                    tb.Appearance.Image = 5
                                Else
                                    tb.Appearance.Image = 1
                                End If
                            Else
                                If nz(dr.Item("ord_gen_alt_ship"), False) = True Then
                                    tb.Appearance.Image = 5
                                Else
                                    tb.Appearance.Image = 1
                                End If
                            End If
                        Case Else
                            If dr("ord_gen_total") <> 0 Then
                                If dr("ord_gen_balance") = dr("ord_gen_total") Then
                                    If nz(dr.Item("ord_gen_alt_ship"), False) = True Then
                                        tb.Appearance.Image = 8
                                    Else
                                        tb.Appearance.Image = Nothing
                                    End If
                                Else
                                    If dr("ord_gen_balance") = 0 Then
                                        If nz(dr.Item("ord_gen_alt_ship"), False) = True Then
                                            tb.Appearance.Image = 6
                                        Else
                                            tb.Appearance.Image = 2
                                        End If
                                    Else
                                        If nz(dr.Item("ord_gen_alt_ship"), False) = True Then
                                            tb.Appearance.Image = 4
                                        Else
                                            tb.Appearance.Image = 0
                                        End If
                                    End If
                                End If
                            Else
                                If dr("ord_gen_balance") = 0 Then
                                    If nz(dr.Item("ord_gen_alt_ship"), False) = True Then
                                        tb.Appearance.Image = 8
                                    Else
                                        tb.Appearance.Image = Nothing
                                    End If
                                Else
                                    If nz(dr.Item("ord_gen_alt_ship"), False) = True Then
                                        tb.Appearance.Image = 4
                                    Else
                                        tb.Appearance.Image = 0
                                    End If
                                End If
                            End If
                    End Select
                Else
                    tb.Appearance.Image = Nothing
                End If
                'If nz(dr.Item("ord_gen_alt_ship"), False) = True Then
                '    tb.Appearance.Image = 1
                '    tb.FixedWidth = 100
                '    tb.FixedWidth = 0
                'End If
                If nz(dr("ord_gen_tab_title")) <> "" Then
                    tb.ToolTipText = "(" + dr("ord_gen_tab_title") + ") "
                Else
                    tb.ToolTipText = ""
                End If
                ToolTip = ""
                For Each rw In dsItems.Tables(0).Rows
                    If rw("ord_itm_rev") = dr("ord_gen_rev") And rw("ord_itm_type") = dr("ord_gen_type") Then
                        'Select Case rw("ord_itm_prod_type")
                        '    Case "BUD"
                        '        onTip = "Custom"
                        '    Case "TOP"
                        '        onTip = "Custom"
                        '    Case "GOLD"
                        '        onTip = "Custom"
                        '    Case "IN"
                        '        onTip = "Installation"
                        '    Case "DESKIT"
                        '        onTip = "Kits"
                        '    Case "KIT"
                        '        onTip = "Kits"
                        '    Case "FIX"
                        '        onTip = "CDR"
                        '    Case "ARCH"
                        '        onTip = "Art"
                        '    Case "SPL"
                        '        onTip = "Refrigeration"
                        '    Case "WHISP"
                        '        onTip = "Refrigeration"
                        '    Case Else
                        '        onTip = ""
                        'End Select
                        onTip = nz(rw("itm_prod_tool_tip"))
                        If onTip <> "" And InStr(ToolTip, onTip + ",") = 0 Then ToolTip += onTip + ", "
                    End If
                Next
                If ToolTip.Length > 2 Then ToolTip = Mid(ToolTip, 1, ToolTip.Length - 2)
                tb.ToolTipText += ToolTip
            Next
            dsItems.Tables(0).Columns.Remove("itm_prod_tool_tip")
        Catch
            DoError(Err, Me)
            MsgBox("Quote or Order did not load properly and will now close", MsgBoxStyle.Critical, "Error?")
            Me.Close()
        Finally
            If cnnState = ConnectionState.Closed Then cnn.Close()
        End Try
    End Sub
    'Private Sub LoadTabs()
    '    Exit Sub
    '    Try
    '        ClearTabs()
    '        If tOrd.Text = "" Then Exit Sub
    '        Dim cmd As New SqlCommand("select distinct ord_gen_type,ord_gen_rev,ord_gen_from_rev from ord_gen where ord_gen_ord_serial=" + tOrd.Text + " order by ord_gen_type,ord_gen_rev desc", cnn)
    '        Dim dr As SqlDataReader
    '        Dim tb As New Infragistics.Win.UltraWinTabControl.UltraTab
    '        Dim x, rev, HIrev As Integer

    '        If cnn.State = ConnectionState.Closed Then cnn.Open()
    '        dr = cmd.ExecuteReader
    '        HIrev = 0
    '        Do While dr.Read
    '            Select Case dr("ord_gen_type")
    '                Case "Q"
    '                    If dr("ord_gen_rev") <> 0 Then
    '                        rev = dr("ord_gen_rev")
    '                        If rev > HIrev Then HIrev = rev
    '                        tb = Tab1.Tabs.Add("Q" + CStr(rev), "Quote " + CStr(rev))
    '                        tb.Appearance.BackColor = Color.LemonChiffon
    '                        If Mid(Tab1.Tabs(1).Key, 1, 1) = "O" Then
    '                            tb.Reposition(Tab1.Tabs(2), Infragistics.Win.RelativePosition.Before)
    '                        Else
    '                            tb.Reposition(Tab1.Tabs(1), Infragistics.Win.RelativePosition.Before)
    '                        End If
    '                    End If
    '                Case "O"
    '                    tb = Tab1.Tabs.Add("O" + CStr(dr("ord_gen_rev")), "Order " + CStr(nz(dr("ord_gen_from_rev"), 0)) + "-" + CStr(nz(dr("ord_gen_rev"), 0)))
    '                    tb.Appearance.BackColor = System.Drawing.Color.LightGreen
    '                    tb.Reposition(Tab1.Tabs("Q" + CStr(HIrev)), Infragistics.Win.RelativePosition.Before)
    '                Case "R"
    '                    tb = Tab1.Tabs.Add("R" + CStr(dr("ord_gen_rev")), "Replacement " + CStr(dr("ord_gen_rev")))
    '                    tb.Appearance.BackColor = System.Drawing.Color.LightCoral
    '                    tb.Reposition(Tab1.Tabs("Q" + CStr(HIrev)), Infragistics.Win.RelativePosition.Before)
    '            End Select
    '        Loop
    '        cnn.Close()
    '        cmd = Nothing
    '        dr = Nothing
    '    Catch
    '        DoError(Err, Me.Name)
    '    End Try
    'End Sub

    Private Sub Grid1_InitializeRow(ByVal sender As Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeRowEventArgs) Handles Grid1.InitializeRow
        Try
            If Me.EditMode = "Edit" Or Me.EditMode = "Add" Then
                If e.Row.Cells("ord_itm_line").Value Is DBNull.Value Then
                    If e.Row.Index = 0 Then
                        e.Row.Cells("ord_itm_line").Value = 1
                    Else
                        Dim max As Integer = 0
                        Dim gr As Infragistics.Win.UltraWinGrid.UltraGridRow
                        Try
                            For Each gr In Grid1.Rows
                                If gr.Cells("ord_itm_line").Value > max Then max = gr.Cells("ord_itm_line").Value
                            Next
                        Catch
                        End Try
                        e.Row.Cells("ord_itm_line").Value = max + 1
                    End If
                End If
            End If
        Catch
            DoError(Err, Me)
        End Try

    End Sub
    Private Sub Grid1_AfterCellUpdate(ByVal sender As Object, ByVal e As Infragistics.Win.UltraWinGrid.CellEventArgs) Handles Grid1.AfterCellUpdate
        Try
            If e.Cell.Column.Header.Caption = "Total" Then Exit Sub
            If Me.EditMode <> "Add" And Me.EditMode <> "Edit" Then Exit Sub
            If Grid1.ActiveRow Is Nothing Then Exit Sub
            UpSellDirty = True
            If Grid1.ActiveRow.Cells("ord_itm_item_code").Text = "" Then
                tMPF.Value = 1
                tMF.Value = 1
                tDisc.Value = 0
                Grid1.ActiveRow.Cells("ord_itm_unt_sell").Activation = Infragistics.Win.UltraWinGrid.Activation.AllowEdit
                'Grid1.ActiveRow.Cells("ord_itm_desc").Activation = Infragistics.Win.UltraWinGrid.Activation.ActivateOnly
                'Grid1.ActiveRow.Cells("ord_itm_unt_sell").Activation = Infragistics.Win.UltraWinGrid.Activation.ActivateOnly
                'If e.Cell.Column.Header.Caption = "Unit Sell $" Then DoTotal()
                'MsgBox("Blank Part Numbers are NOT ALLOWED.", MsgBoxStyle.Information, "Part Number?")
                Exit Sub
            Else
                Grid1.ActiveRow.Cells("ord_itm_desc").Activation = Infragistics.Win.UltraWinGrid.Activation.AllowEdit
            End If
            If Not Grid1.Focus = True Then
                Exit Sub
            End If
            If ((e.Cell.Column.Header.Caption = "Item Code") Or (e.Cell.Column.Header.Caption = "Qty")) Then
                If e.Cell.Column.Header.Caption = "Item Code" Then
                    Grid1.ActiveRow.Cells("ord_itm_mat_code").Value = ""
                    tMaterial.Text = ""
                    tMaterial.Value = ""
                    Dim cmd As New SqlCommand("select inactive from itm_file where itm_code='" + Grid1.ActiveRow.Cells("ord_itm_item_code").Value + "'", cnn)
                    cnn.Open()
                    If nz(cmd.ExecuteScalar, False) = True Then
                        MsgBox(Grid1.ActiveRow.Cells("ord_itm_item_code").Value + " is inactive and not able to be used.", MsgBoxStyle.Critical, "Inactive")
                        Grid1.ActiveRow.Cells("ord_itm_item_code").Value = ""
                        Grid1.ActiveRow.Cells("ord_itm_item_code").Activated = True
                        cnn.Close()
                        Exit Sub
                    End If
                    cnn.Close()
                    If Mid(e.Cell.Value, 1, 2) = "WZ" And Mid(Tab1.ActiveTab.Key, 1, 1) <> "Q" Then TabItems.Tabs("Diag").Visible = True
                End If
                If LoadPrice() Then
                    If e.Cell.Column.Header.Caption = "Unit Sell $" Then

                        If e.Cell.Value < tBase.Value Then
                            MsgBox("Price CAN NOT be below Base Price", MsgBoxStyle.Exclamation, "Price?")
                            e.Cell.Value = tBase.Value
                        End If

                    End If
                    If Not Grid1.ActiveRow Is Nothing Then
                        If Grid1.ActiveRow.Cells("ord_itm_is_disc").Value = True Or Grid1.ActiveRow.Cells("ord_itm_is_up").Value = True Then
                            pDiscount.Visible = True
                            'pDiscount.Top = 0
                            pItem.Visible = False
                        Else
                            pDiscount.Visible = False
                            'pDiscount.Top = 400
                            pItem.Visible = True
                        End If
                    End If
                End If
                DoTotal()
                CheckShipFlat()
                CheckDims()
                LoadMaterials()
            End If
            If e.Cell.Column.Header.Caption = "Unit Sell $" Then
                DoTotal()
            End If
            If Not Grid1.ActiveCell Is Nothing Then
                If Grid1.ActiveCell.Column.Header.Caption = "Stain" Then
                    CheckStainLines(e.Cell.Value)
                End If
                If Grid1.ActiveCell.Column.Header.Caption = "Lacq" Then
                    CheckLacquerLines()
                End If
                If Grid1.ActiveCell.Column.Header.Caption = "Finish" Then
                    CheckFinishLines(e.Cell.Value)
                End If
            End If
        Catch
            DoError(Err, Me)
        End Try
    End Sub
    Public Sub CheckStainLines(ByVal Stain As Long)
        If UpdatingStain = True Then Exit Sub
        If Mid(Tab1.ActiveTab.Key, 1, 1) = "R" Then Exit Sub
        Try
            UpdatingStain = True
            If Stain <> 0 Then
                Dim cnt As Integer
                Dim HasStain As Boolean = False
                For cnt = 0 To DVItems.Count - 1
                    If nz(DVItems(cnt).Item("ord_itm_bottle_search")) = "S" And nz(DVItems(cnt).Item("ord_itm_stain_serial"), -1) = Stain Then
                        HasStain = True
                        Exit For
                    End If
                Next
                If HasStain = False Then
                    Dim row As DataRow
                    Dim cnn3 As New SqlConnection(cnn.ConnectionString + ";password='39201'")
                    Dim cmd As New SqlCommand("select itm_code from itm_file where itm_search_bottles='S' and itm_stain_serial=" + CStr(Stain), cnn3)
                    Dim onItem As String

                    cnn3.Open()
                    onItem = nz(cmd.ExecuteScalar)
                    cnn3.Close()

                    If onItem <> "" Then
                        row = dsItems.Tables("ord_itm").NewRow
                        row("ord_itm_item_code") = onItem
                        LoadPriceByRow(row)
                        dsItems.Tables(0).Rows.Add(row)
                    End If
                End If
            End If
            DoTotal()
            UpdatingStain = False
        Catch
            DoError(Err, Me)
        End Try
    End Sub
    Public Sub CheckFinishLines(ByVal Finish As Long)
        If UpdatingFinish = True Then Exit Sub
        If Mid(Tab1.ActiveTab.Key, 1, 1) = "R" Then Exit Sub
        Try
            UpdatingFinish = True
            If Finish <> 0 Then
                Dim cnt As Integer
                Dim HasFinish As Boolean = False
                For cnt = 0 To DVItems.Count - 1
                    If nz(DVItems(cnt).Item("ord_itm_bottle_search")) = "F" And nz(DVItems(cnt).Item("ord_itm_finish_serial"), -1) = Finish Then
                        HasFinish = True
                        Exit For
                    End If
                Next
                If HasFinish = False Then
                    Dim row As DataRow
                    Dim cnn3 As New SqlConnection(cnn.ConnectionString + ";password='39201'")
                    Dim cmd As New SqlCommand("select itm_code from itm_file where itm_search_bottles='F' and itm_finish_serial=" + CStr(Finish), cnn3)
                    Dim onItem As String

                    cnn3.Open()
                    onItem = nz(cmd.ExecuteScalar)
                    cnn3.Close()

                    If onItem <> "" Then
                        row = dsItems.Tables("ord_itm").NewRow
                        row("ord_itm_item_code") = onItem
                        LoadPriceByRow(row)
                        dsItems.Tables(0).Rows.Add(row)
                    End If
                End If
            End If
            DoTotal()
            UpdatingFinish = False
        Catch
            DoError(Err, Me)
        End Try
    End Sub
    Public Sub CheckLacquerLines()
        If UpdatingLacq = True Then Exit Sub
        If Mid(Tab1.ActiveTab.Key, 1, 1) = "R" Then Exit Sub
        Try
            UpdatingLacq = True
            Dim cnt As Integer
            Dim HasLacq As Boolean = False
            Dim NeedsLacq As Boolean = False
            For cnt = 0 To DVItems.Count - 1
                If nz(DVItems(cnt).Item("ord_itm_bottle_search")) = "L" Then
                    HasLacq = True
                End If
                'If nz(DVItems(cnt).Item("ord_itm_lacquer"), False) = True Then
                '    NeedsLacq = True
                'End If
                If DVItems(cnt).Item("ord_itm_lacq3") <> " " Then
                    NeedsLacq = True
                End If
            Next
            If NeedsLacq Then
                If HasLacq = False Then
                    Dim row As DataRow
                    Dim cnn3 As New SqlConnection(cnn.ConnectionString + ";password='39201'")
                    Dim cmd As New SqlCommand("select itm_code from itm_file where itm_search_bottles='L'", cnn3)
                    Dim onItem As String

                    cnn3.Open()
                    onItem = nz(cmd.ExecuteScalar)
                    cnn3.Close()

                    If onItem <> "" Then
                        row = dsItems.Tables("ord_itm").NewRow
                        row("ord_itm_item_code") = onItem
                        LoadPriceByRow(row)
                        DVItems.Table.Rows.Add(row)
                    End If
                End If
                DoTotal()
            End If
        Catch
            DoError(Err, Me)
        Finally
            UpdatingLacq = False
        End Try
    End Sub

    Public Function LoadPrice(Optional ByVal isUpdate As Boolean = False, Optional ByVal ForceUpdate As Boolean = False) As Boolean
        Try
            If Grid1.ActiveCell Is Nothing Then
                LoadPrice = False
                Exit Function
            End If
            If Not ForceUpdate Then
                If Not Grid1.ActiveCell Is Nothing Then
                    ForceUpdate = (Grid1.ActiveCell.Column.Header.Caption = "Item Code") Or (Grid1.ActiveCell.Column.Header.Caption = "Qty")
                End If
            End If
            If ForceUpdate = True Then
                Dim dr As SqlDataReader
                Dim cmd As New SqlCommand
                Dim nm, qty, onBase, UntShip, WoodFactor, MatFactor, Price As Double
                Dim cnnx As New SqlConnection(cnn.ConnectionString + ";password='39201'")
                Dim cmdx As New SqlCommand("", cnnx)

                LoadPrice = True

                cmd.Connection = cnn
                'cmd.CommandText = "select itm_desc,itm_material_sel,itm_material,itm_ship_cost,itm_prod_type,itm_taxable,itm_change_price,itm_up_color,itm_up_color_color,itm_up_color_perc,itm_up,itm_disc from itm_file where itm_code='" + Grid1.ActiveRow.Cells("ord_itm_item_code").Text + "'"
                If cnn.State = ConnectionState.Closed Then cnn.Open()

                cmd.CommandText = "select itm_price_price from itm_price where itm_price_itm_code='" + Grid1.ActiveRow.Cells("ord_itm_item_code").Text + "' and itm_price_type='SHIP' and itm_price_qty_from <= " + CStr(Grid1.ActiveRow.Cells("ord_itm_qty").Value) + " and itm_price_qty_to >= " + CStr(Grid1.ActiveRow.Cells("ord_itm_qty").Value) + " and itm_price_flat_rate=1 and itm_price_start<='" + tCreate.Text + "' and itm_price_end>='" + tCreate.Text + "'"
                Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_ship_flat").Value = nz(cmd.ExecuteScalar, 0)

                cmd.CommandText = "select * from itm_file where itm_code='" + Grid1.ActiveRow.Cells("ord_itm_item_code").Text + "'"
                dr = cmd.ExecuteReader
                If dr.HasRows = False Then
                    MsgBox("Part Not Found.", MsgBoxStyle.Exclamation, "Not Found")
                    dr.Close()
                    cnn.Close()
                    Grid1.ActiveRow.Cells("ord_itm_desc").Activation = Infragistics.Win.UltraWinGrid.Activation.NoEdit
                    Grid1.ActiveRow.Cells("ord_itm_unt_sell").Activation = Infragistics.Win.UltraWinGrid.Activation.NoEdit
                    LoadPrice = False
                    Grid1.ActiveRow.Cells("ord_itm_item_code").Value = ""
                    Grid1.ActiveRow.Cells("ord_itm_qty").Selected = True
                    Exit Function
                End If
                Grid1.ActiveRow.Cells("ord_itm_desc").Activation = Infragistics.Win.UltraWinGrid.Activation.AllowEdit
                'pDiscount.Visible = False
                pItem.Visible = True
                dr.Read()

                If Not isUpdate Then
                    If nz(Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_desc").Value) = "" Or onItem <> nz(Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_item_code").Value) Then Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_desc").Value = Trim(dr("itm_desc"))
                    Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_taxable").Value = nz(dr("itm_taxable"), False)
                    Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_up_color").Value = dr("itm_up_color")
                    Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_is_up").Value = nz(dr("itm_up"), False)
                    Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_is_disc").Value = nz(dr("itm_disc"), False)
                    Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_is_perc_price").Value = nz(dr("itm_is_perc_price"), False)
                    Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_change_base").Value = dr("itm_change_base_price")
                    Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_stain_bottles").Value = dr("itm_stain_bottles")
                    Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_lacq_bottles").Value = dr("itm_lacquer_bottles")
                    Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_bottle_search").Value = dr("itm_search_bottles")
                    Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_wood_factor").Value = dr("itm_wood_factor")
                    Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_width_req").Value = dr("itm_width_req")
                    Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_height_req").Value = dr("itm_height_req")
                    Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_depth_req").Value = dr("itm_depth_req")
                    Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_fixture").Value = nz(dr("itm_fixture"), False)
                    If nz(dr("itm_width"), 0) <> 0 Then Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_width").Value = dr("itm_width")
                    If nz(dr("itm_height"), 0) <> 0 Then Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_height").Value = dr("itm_height")
                    If nz(dr("itm_depth"), 0) <> 0 Then Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_depth").Value = dr("itm_depth")
                    Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_price_track_inches").Value = nz(dr("itm_price_track_inches"), 0)
                    Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_class").Value = dr("itm_class")
                    If Grid1.ActiveCell.Column.Header.Caption = "Item Code" Then
                        Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_stain_serial").Value = dr("itm_stain_serial")
                        If dr("itm_stain_serial") <> 0 Then
                            Dim cnt As Integer
                            For cnt = 0 To DVItems.Count - 1
                                If DVItems(cnt).Item("ord_itm_stain_serial") = 0 And DVItems(cnt).Item("ord_itm_stain_bottles") + nz(DVItems(cnt).Item("ord_itm_stain_bottles_add"), 0) > 0 Then
                                    DVItems(cnt).Item("ord_itm_stain_serial") = dr("itm_stain_serial")
                                End If
                            Next
                        Else
                            'If dr("itm_search_bottles") = "L" Then
                            '    Dim cnt As Integer
                            '    For cnt = 0 To DVItems.Count - 1
                            '        If DVItems(cnt).Item("ord_itm_lacq_bottles") + nz(DVItems(cnt).Item("ord_itm_lacq_bottles_add"), 0) > 0 Then
                            '            'DVItems(cnt).Item("ord_itm_lacquer") = True
                            '            DVItems(cnt).Item("ord_itm_lacq3") = "3"
                            '            'Lacq?
                            '        End If
                            '    Next
                            'End If
                            If Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_stain_bottles").Value + nz(Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_stain_bottles_add").Value, 0) > 0 Then
                                Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_stain_serial").Value = nz(tDefStain.Value, 0)
                            End If
                        End If
                        If Grid1.ActiveRow.Cells("ord_itm_lacq_bottles").Value + nz(Grid1.ActiveRow.Cells("ord_itm_lacq_bottles_add").Value, 0) > 0 Then
                            'Grid1.ActiveRow.Cells("ord_itm_lacquer").Value = tDefLacquer.Checked
                            Grid1.ActiveRow.Cells("ord_itm_lacq3").Value = tDefLacq.Value
                        End If


                        Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_finish_serial").Value = dr("itm_finish_serial")
                        If dr("itm_finish_serial") <> 0 Then
                            Dim cnt As Integer
                            For cnt = 0 To DVItems.Count - 1
                                If DVItems(cnt).Item("ord_itm_finish_serial") = 0 And DVItems(cnt).Item("ord_itm_stain_bottles") + nz(DVItems(cnt).Item("ord_itm_stain_bottles_add"), 0) > 0 Then
                                    DVItems(cnt).Item("ord_itm_finish_serial") = dr("itm_finish_serial")
                                End If
                            Next
                        Else
                            If Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_stain_bottles").Value + nz(Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_stain_bottles_add").Value, 0) > 0 Then
                                Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_finish_serial").Value = nz(tDefFinish.Value, 0)
                            End If
                        End If
                    End If

                    If Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_change_base").Value = True Then
                        tBase.Enabled = True
                    End If
                    If Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_is_perc_price").Value = True Then
                        Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_perc_price").Value = nz(dr("itm_perc_price"), 0)
                        Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_perc_prodtypes").Value = dr("itm_perc_prodtypes")
                        Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_perc_itemcodes").Value = dr("itm_perc_itemcodes")
                    End If
                    If Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_is_disc").Value = True Then
                        Grid1.Rows(Grid1.ActiveCell.Row.Index).Appearance.BackColor = Color.LightPink
                    Else
                        If Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_is_up").Value = True Then
                            Grid1.Rows(Grid1.ActiveCell.Row.Index).Appearance.BackColor = Color.LightGreen
                        Else
                            If Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_is_perc_price").Value = True Then
                                Grid1.Rows(Grid1.ActiveCell.Row.Index).Appearance.BackColor = Color.PaleTurquoise
                            Else
                                Grid1.Rows(Grid1.ActiveCell.Row.Index).Appearance.BackColor = Color.White
                            End If
                        End If
                    End If

                    If IsNumeric(nz(dr("itm_disc_def_perc"))) Then
                        If CDbl(dr("itm_disc_def_perc")) <> 0 Then
                            Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_disc_val").Value = CDbl(dr("itm_disc_def_perc"))
                            Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_disc_type").Value = "P"
                            oDiscountType.Value = "P"
                            tDiscVal.Value = CDbl(dr("itm_disc_def_perc"))
                        End If
                    End If
                    If nz(dr("itm_disc_def_prod")) <> "" Then tdiscProdType.Value = dr("itm_disc_def_prod")
                    If nz(dr("itm_disc_def_matl")) <> "" Then tDiscMatl.Value = dr("itm_disc_def_matl")
                    If IsNumeric(nz(dr("itm_up_def_perc"))) Then
                        If CDbl(dr("itm_up_def_perc")) <> 0 Then
                            oDiscountType.Value = "P"
                            tDiscVal.Value = CDbl(dr("itm_up_def_perc"))
                        End If
                    End If
                    If nz(dr("itm_up_def_prod")) <> "" Then tdiscProdType.Value = dr("itm_up_def_prod")
                    If nz(dr("itm_up_def_matl")) <> "" Then tDiscMatl.Value = dr("itm_up_def_matl")

                    If nz(dr("itm_change_price"), False) = True Then
                        Grid1.ActiveRow.Cells("ord_itm_unt_sell").Activation = Infragistics.Win.UltraWinGrid.Activation.AllowEdit
                    Else
                        Grid1.ActiveRow.Cells("ord_itm_unt_sell").Activation = Infragistics.Win.UltraWinGrid.Activation.ActivateOnly
                    End If

                    'If dr("itm_prod_type") = "BUD" Or dr("itm_prod_type") = "TOP" Then
                    '    Grid1.ActiveRow.Cells("ord_itm_sel_material").Value = True
                    'Else
                    If dr("itm_material_sel") Is DBNull.Value Then
                        Grid1.ActiveRow.Cells("ord_itm_sel_material").Value = False
                    Else
                        Grid1.ActiveRow.Cells("ord_itm_sel_material").Value = dr("itm_material_sel")
                    End If
                    'End If

                    '**************MPF
                    If tMaterial.Text = "" Then
                        cnnx.Open()
                        If nz(DVGen.Item(0)("ord_gen_material")) <> "" Then
                            'gold wood
                            'If dr("itm_prod_type") = "GOLD" And dr("itm_material") = "PREM" And DVGen.Item(0)("ord_gen_material") <> "PREM" Then
                            '    tMaterial.Value = "PREM"
                            '    MsgBox("Gold series can not be changed from PREM wood type.", MsgBoxStyle.Information, "Premium?")
                            If dr("itm_prod_type") = "GOLD" Then
                                Dim onWood As String = dr("itm_material")
                                cmdx.CommandText = "select mat_fac_is_gold_wood from mat_fac where mat_fac_mat_code='" + DVGen.Item(0)("ord_gen_material") + "' and mat_fac_start<='" + tCreate.Text + "' and mat_fac_end>='" + tCreate.Text + "'"
                                If nz(cmdx.ExecuteScalar, False) = False Then
                                    tMaterial.Value = onWood
                                    MsgBox("Gold series can not be changed from PREM wood type.", MsgBoxStyle.Information, "Premium?")
                                Else
                                    If Grid1.ActiveRow.Cells("ord_itm_sel_material").Value = True Then
                                        'cmdx.CommandText = "select mat_iswood from mat_file where mat_code='" + dr("itm_material") + "'"
                                        'If nz(cmdx.ExecuteScalar, True) = True Then
                                        tMaterial.Value = DVGen.Item(0)("ord_gen_material")
                                        'Else
                                        'tMaterial.Value = dr("itm_material")
                                        'End If
                                    Else
                                        If tMaterial.Value <> "" And (tMaterial.Value <> dr("itm_material")) Then
                                            MsgBox("Material can not be changed to " + DVGen.Item(0)("ord_gen_material"), MsgBoxStyle.Information, "Material?")
                                        End If
                                        tMaterial.Value = dr("itm_material")
                                    End If
                                End If
                            Else
                                'If dr("itm_prod_type") = "BUD" Or dr("itm_prod_type") = "TOP" Then
                                '    cmdx.CommandText = "select mat_iswood from mat_file where mat_code='" + dr("itm_material") + "'"
                                '    If nz(cmdx.ExecuteScalar, True) = True Then
                                '        tMaterial.Value = DVGen.Item(0)("ord_gen_material")
                                '    Else
                                '        tMaterial.Value = dr("itm_material")
                                '    End If
                                'Else
                                If Grid1.ActiveRow.Cells("ord_itm_sel_material").Value = True Then
                                    cmdx.CommandText = "select mat_iswood from mat_file where mat_code='" + dr("itm_material") + "'"
                                    If nz(cmdx.ExecuteScalar, True) = True Then
                                        tMaterial.Value = DVGen.Item(0)("ord_gen_material")
                                    Else
                                        tMaterial.Value = dr("itm_material")
                                    End If
                                Else
                                    If tMaterial.Value <> "" And (tMaterial.Value <> dr("itm_material")) Then
                                        MsgBox("Material can not be changed to " + DVGen.Item(0)("ord_gen_material"), MsgBoxStyle.Information, "Material?")
                                    End If
                                    tMaterial.Value = dr("itm_material")
                                End If
                                'End If
                            End If
                        Else
                            If dr("itm_material") Is DBNull.Value Then
                                tMaterial.Value = ""
                            Else
                                tMaterial.Value = dr("itm_material")
                            End If
                        End If
                    End If
                End If
                If cnnx.State <> ConnectionState.Open Then cnnx.Open()
                CheckMaterialSel()
                If tMaterial.Enabled = True Then
                    cmdx.CommandText = "select itm_wood_factor from itm_file where itm_code='" + dr("itm_code") + "'"
                    WoodFactor = nz(cmdx.ExecuteScalar, 1)
                    Select Case nz(dr("itm_prod_type"))
                        Case "BUD"
                            cmdx.CommandText = "select mat_fac_bud from mat_fac where mat_fac_mat_code='" + tMaterial.Value + "' and mat_fac_start<='" + tCreate.Text + "' and mat_fac_end>='" + tCreate.Text + "'"
                            MatFactor = nz(cmdx.ExecuteScalar, 0)
                            'Gold Wood
                        Case "GOLD"
                            cmdx.CommandText = "select mat_fac_gold from mat_fac where mat_fac_mat_code='" + tMaterial.Value + "' and mat_fac_start<='" + tCreate.Text + "' and mat_fac_end>='" + tCreate.Text + "'"
                            MatFactor = nz(cmdx.ExecuteScalar, 0)
                        Case Else '"TOP"
                            cmdx.CommandText = "select mat_fac_top from mat_fac where mat_fac_mat_code='" + tMaterial.Value + "' and mat_fac_start<='" + tCreate.Text + "' and mat_fac_end>='" + tCreate.Text + "'"
                            MatFactor = nz(cmdx.ExecuteScalar, 0)
                    End Select
                    tMPF.Value = 1 + Math.Round(MatFactor * WoodFactor, 4)
                    'tMPF.Value = 1 + Math.Round(MatFactor, 4)
                Else
                    tMPF.Value = 1
                End If
                cnnx.Close()
                '**************************

                'tMPF.Value = 1
                tMF.Value = 1
                tDisc.Value = 0

                If Grid1.ActiveRow.Cells("ord_itm_qty").Value Is DBNull.Value Then
                    qty = 1
                Else
                    qty = Grid1.ActiveRow.Cells("ord_itm_qty").Value
                End If
                If (Mid(Tab1.ActiveTab.Key, 1, 1) = "R") Then
                    tShipUnit.Value = 0
                    tShipFlat.Value = 0
                Else
                    UntShip = GetUnitShip(dr("itm_code"), qty, DVGen.Item(0)("ord_gen_create_date"))
                    If Grid1.ActiveCell.Column.Header.Caption = "Item Code" Then
                        tShipUnit.Value = UntShip
                    Else
                        If UntShip <> 0 Then tShipUnit.Value = UntShip
                    End If
                End If

                If Grid1.ActiveRow.Cells("ord_itm_fixture").Value = True Then
                    LoadDD(tProdType, dsProdType, "itm_prod_type", "itm_prod_type_type", "itm_prod_type_type", "itm_prod_type_type,itm_prod_type_desc", "itm_prod_type_type='" + nz(dr("itm_prod_type")) + "' or itm_prod_type_type = 'FIX'")
                    tProdType.Enabled = True
                Else
                    LoadDD(tProdType, dsProdType, "itm_prod_type", "itm_prod_type_type", "itm_prod_type_type", "itm_prod_type_type,itm_prod_type_desc")
                    tProdType.Enabled = False
                End If
                If dr("itm_prod_type") Is DBNull.Value Then
                    tProdType.Value = ""
                Else
                    tProdType.Value = dr("itm_prod_type")
                End If

                onBase = Grid1.ActiveRow.Cells("ord_itm_base_price").Value
                If Mid(Tab1.ActiveTab.Key, 1, 1) = "R" Then
                    tUnitBase.Value = 0
                Else
                    If Not IsDate(tCreate.Text) Then tCreate.Text = CStr(Now)
                    'If WoodFactor = 1 Then
                    tUnitBase.Value = GetPrice(Trim(CStr(tCustId.Value)), Trim(Grid1.ActiveRow.Cells("ord_itm_item_code").Text), qty, tProdType.Text, tMaterial.Text, CDate(tCreate.Text))
                    'Else
                    '    Price = GetPrice(Trim(CStr(tCustId.Value)), Trim(Grid1.ActiveRow.Cells("ord_itm_item_code").Text), qty, tProdType.Text, tMaterial.Text, CDate(tCreate.Text))
                    '    price=math.Round((price*tmpf.Value)
                    '    tUnitBase.Value = Price
                    'End If
                End If

                tProdType.Value = nz(dr("itm_prod_type"), "")

                dr.Close()

                cmd.CommandText = "select itm_price_price from itm_price where itm_price_itm_code='" + Trim(Grid1.ActiveRow.Cells("ord_itm_item_code").Text) + "' and itm_price_qty_from<=" + CStr(qty) + " and itm_price_qty_to>=" + CStr(qty) + " and itm_price_start<='" + tCreate.Text + "' and itm_price_end>='" + tCreate.Text + "' and itm_price_type='RET'"
                Grid1.ActiveRow.Cells("ord_itm_retail").Value = nz(cmd.ExecuteScalar, 0)

                If Not isUpdate Then
                    Dim onGroup As String
                    'cmd.CommandText = "select ord_group_no from itm_file,ord_group where itm_code=ord_group_itm_code and itm_code='" + Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_item_code").Value + "'"
                    cmd.CommandText = "select itm_group from itm_file where itm_code='" + Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_item_code").Value + "'"
                    onGroup = nz(cmd.ExecuteScalar, "")
                    'Per Todd 11/4/2009
                    'If onGroup = "" Then
                    '    'cmd.CommandText = "select ord_group_no from itm_file,ord_group where itm_com_prod_type=ord_group_prod_type and itm_code='" + Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_item_code").Value + "'"
                    '    cmd.CommandText = "select itm_prod_type_group from itm_file,itm_prod_type where itm_com_prod_type=itm_prod_type_type and itm_code='" + Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_item_code").Value + "'"
                    '    onGroup = nz(cmd.ExecuteScalar, "")
                    'End If
                    If onGroup = "" Then
                        'cmd.CommandText = "select ord_group_no from itm_file,ord_group where itm_prod_type=ord_group_prod_type and itm_code='" + Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_item_code").Value + "'"
                        cmd.CommandText = "select itm_prod_type_group from itm_file,itm_prod_type where itm_prod_type=itm_prod_type_type and itm_code='" + Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_item_code").Value + "'"
                        onGroup = nz(cmd.ExecuteScalar, "")
                    End If
                    If Not IsNumeric(onGroup) Then onGroup = "0"
                    Grid1.Rows(Grid1.ActiveCell.Row.Index).Cells("ord_itm_group").Value = CInt(onGroup)
                End If

                If Grid1.ActiveRow.Cells("ord_itm_change_base").Value = True Then tBase.Value = onBase

                PriceCalc()
                cnn.Close()
                dr = Nothing
                cmd = Nothing
                BindingContext(DVItems).EndCurrentEdit()
                CheckStainLines(Grid1.ActiveRow.Cells("ord_itm_stain_serial").Value)
            End If
        Catch
            DoError(Err, Me)
        End Try
    End Function
    Public Sub LoadPriceByRow(ByVal row As DataRow, Optional ByVal OverwriteMaterial As Boolean = False, Optional ByVal UpdateStainLacq As Boolean = True, Optional ByVal ForceRetail As Boolean = False)
        Try
            Dim dr As SqlDataReader
            Dim cnn3 As New SqlConnection(cnn.ConnectionString + ";password='39201'")
            Dim cmd As New SqlCommand
            Dim cmd2 As New SqlCommand("", cnn2)
            Dim nm, qty As Double
            Dim pType As String
            Dim WoodFactor, MatFactor, UnitShip As Double

            cmd.Connection = cnn3
            cmd.CommandText = "select * from itm_file where itm_code='" + row("ord_itm_item_code") + "'"
            If cnn3.State = ConnectionState.Closed Then cnn3.Open()
            dr = cmd.ExecuteReader
            If dr.HasRows = False Then
                dr.Close()
                cnn3.Close()
                If row("ord_itm_item_code") <> "" Then
                    MsgBox("Part Not Found - " + row("ord_itm_item_code"), MsgBoxStyle.Exclamation, "Not Found")
                End If
                Exit Sub
            End If
            dr.Read()

            If nz(row("ord_itm_desc")) = "" Then row("ord_itm_desc") = Trim(dr("itm_desc"))
            row("ord_itm_taxable") = nz(dr("itm_taxable"), False)
            row("ord_itm_sel_material") = nz(dr("itm_material_sel"), 1)
            row("ord_itm_mpf") = 1
            row("ord_itm_markup") = 1
            row("ord_itm_disc") = 0
            qty = nz(row("ord_itm_qty"), 1)
            If GetUnitShipFlatRate(row("ord_itm_item_code"), qty, Today) = True Then
                UnitShip = GetUnitShip(row("ord_itm_item_code"), qty, Today)
                If UnitShip = 0 Then
                    UnitShip = nz(row("ord_itm_ship_flat"))
                End If
                row("ord_itm_ship_flat") = UnitShip
            Else
                UnitShip = GetUnitShip(row("ord_itm_item_code"), qty, Today)
                If UnitShip = 0 Then
                    UnitShip = nz(row("ord_itm_unt_ship"))
                End If
                row("ord_itm_unt_ship") = UnitShip
            End If
            If nz(row("ord_itm_mat_code")) = "" Then row("ord_itm_mat_code") = nz(dr("itm_material"), "")
            row("ord_itm_prod_type") = nz(dr("itm_prod_type"), "")
            row("ord_itm_price_method") = ""
            row("ord_itm_is_up") = nz(dr("itm_up"), False)
            row("ord_itm_is_disc") = nz(dr("itm_disc"), False)
            row("ord_itm_stain_bottles") = dr("itm_stain_bottles")
            row("ord_itm_lacq_bottles") = dr("itm_lacquer_bottles")
            row("ord_itm_bottle_search") = dr("itm_search_bottles")
            row("ord_itm_wood_factor") = dr("itm_wood_factor")
            row("ord_itm_width_req") = dr("itm_width_req")
            row("ord_itm_height_req") = dr("itm_height_req")
            row("ord_itm_depth_req") = dr("itm_depth_req")
            If nz(dr("itm_width"), 0) <> 0 Then row("ord_itm_width") = dr("itm_width")
            If nz(dr("itm_height"), 0) <> 0 Then row("ord_itm_height") = dr("itm_height")
            If nz(dr("itm_depth"), 0) <> 0 Then row("ord_itm_depth") = dr("itm_depth")
            row("ord_itm_price_track_inches") = nz(dr("itm_price_track_inches"), 0)

            cmd2.CommandText = "select itm_price_price from itm_price where itm_price_itm_code='" + row("ord_itm_item_code") + "' and itm_price_qty_from<=" + CStr(qty) + " and itm_price_qty_to>=" + CStr(qty) + " and itm_price_start<='" + tCreate.Text + "' and itm_price_end>='" + tCreate.Text + "' and itm_price_type='RET'"
            cnn2.Open()
            row("ord_itm_retail") = nz(cmd2.ExecuteScalar, 0)
            cnn2.Close()

            If UpdateStainLacq = True Then
                If nz(row("ord_itm_stain_bottles"), 0) + nz(row("ord_itm_stain_bottles_add"), 0) > 0 Then
                    If nz(DVGen.Item(0)("ord_gen_def_stain_serial"), 0) = 0 Then
                        If nz(row("ord_itm_stain_serial"), 0) = 0 Then row("ord_itm_stain_serial") = dr("itm_stain_serial")
                    Else
                        row("ord_itm_stain_serial") = DVGen.Item(0)("ord_gen_def_stain_serial")
                    End If
                Else
                    row("ord_itm_stain_serial") = nz(dr("itm_stain_serial"), 0)
                End If

                If nz(row("ord_itm_stain_bottles"), 0) + nz(row("ord_itm_stain_bottles_add"), 0) > 0 Then
                    If nz(DVGen.Item(0)("ord_gen_def_finish_serial"), 0) = 0 Then
                        If nz(row("ord_itm_finish_serial"), 0) = 0 Then row("ord_itm_finish_serial") = dr("itm_finish_serial")
                    Else
                        row("ord_itm_finish_serial") = DVGen.Item(0)("ord_gen_def_finish_serial")
                    End If
                Else
                    row("ord_itm_finish_serial") = nz(dr("itm_finish_serial"), 0)
                End If

                If nz(row("ord_itm_lacq_bottles"), 0) + nz(row("ord_itm_lacq_bottles_add"), 0) > 0 Then
                    row("ord_itm_lacq3") = nz(DVGen.Item(0)("ord_gen_def_lacq3"), 0)
                Else
                    row("ord_itm_lacq3") = " "
                End If
            End If

            If IsNumeric(nz(dr("itm_disc_def_perc"))) Then
                If CDbl(dr("itm_disc_def_perc")) <> 0 Then
                    row("ord_itm_disc_type") = "P"
                    row("ord_itm_disc_val") = CDbl(dr("itm_disc_def_perc"))
                End If
            End If
            If nz(dr("itm_disc_def_prod")) <> "" Then row("ord_itm_disc_prod") = dr("itm_disc_def_prod")
            If nz(dr("itm_disc_def_matl")) <> "" Then row("ord_itm_disc_matl") = dr("itm_disc_def_matl")
            If IsNumeric(nz(dr("itm_up_def_perc"))) Then
                If CDbl(dr("itm_up_def_perc")) <> 0 Then
                    row("ord_itm_disc_type") = "P"
                    row("ord_itm_disc_val") = CDbl(dr("itm_up_def_perc"))
                End If
            End If
            If nz(dr("itm_up_def_prod")) <> "" Then row("ord_itm_disc_prod") = dr("itm_up_def_prod")
            If nz(dr("itm_up_def_matl")) <> "" Then row("ord_itm_disc_matl") = dr("itm_up_def_matl")

            If nz(dr("itm_is_perc_price"), False) = True Then
                row("ord_itm_is_perc_price") = True
                row("ord_itm_perc_price") = nz(dr("itm_perc_price"), 0)
                row("ord_itm_perc_prodtypes") = nz(dr("itm_perc_prodtypes"))
                row("ord_itm_perc_itemcodes") = nz(dr("itm_perc_itemcodes"))
            End If

            If row("ord_itm_mat_code") = "" Or OverwriteMaterial Then
                If nz(DVGen.Item(0)("ord_gen_material")) <> "" Then
                    'gold wood
                    'If row("ord_itm_prod_type") = "GOLD" And row("ord_itm_mat_code") = "PREM" And DVGen.Item(0)("ord_gen_material") <> "PREM" And row("ord_itm_sel_material") = False Then
                    '    MsgBox("Gold series can not be changed from PREM wood type.", MsgBoxStyle.Information, "Premium?")
                    If dr("itm_prod_type") = "GOLD" Then
                        Dim onWood As String = dr("itm_material")
                        cmd2.CommandText = "select mat_fac_is_gold_wood from mat_fac where mat_fac_mat_code='" + DVGen.Item(0)("ord_gen_material") + "' and mat_fac_start<='" + tCreate.Text + "' and mat_fac_end>='" + tCreate.Text + "'"
                        cnn2.Open()
                        If nz(cmd2.ExecuteScalar, False) = False Then
                            tMaterial.Value = onWood
                            MsgBox("Gold series can not be changed from GOLD wood type.", MsgBoxStyle.Information, "Wood?")
                        End If
                        cnn2.Close()
                    Else
                        cmd2.CommandText = "select mat_iswood from mat_file where mat_code='" + row("ord_itm_mat_code") + "'"
                        cnn2.Open()
                        If nz(cmd2.ExecuteScalar, True) = True Then
                            If dr("itm_material_sel") = True Then  'dr("itm_prod_type") = "BUD" Or dr("itm_prod_type") = "TOP" Or
                                row("ord_itm_mat_code") = DVGen.Item(0)("ord_gen_material")
                            End If
                        End If
                        cnn2.Close()
                    End If
                End If
            End If


            If dr("itm_material_sel") = True = True Then  'dr("itm_prod_type") = "BUD" Or dr("itm_prod_type") = "TOP" Or
                dr.Close()
                cmd.CommandText = "select itm_wood_factor from itm_file where itm_code='" + row("ord_itm_item_code") + "'"
                WoodFactor = nz(cmd.ExecuteScalar, 1)
                Select Case nz(row("ord_itm_prod_type"))
                    Case "BUD"
                        cmd.CommandText = "select mat_fac_bud from mat_fac where mat_fac_mat_code='" + row("ord_itm_mat_code") + "' and mat_fac_start<='" + tCreate.Text + "' and mat_fac_end>='" + tCreate.Text + "'"
                        MatFactor = nz(cmd.ExecuteScalar, 0)
                        row("ord_itm_mpf") = 1 + Math.Round(MatFactor * WoodFactor, 4)
                    Case "GOLD"  'Gold Wood
                        cmd.CommandText = "select mat_fac_gold from mat_fac where mat_fac_mat_code='" + row("ord_itm_mat_code") + "' and mat_fac_start<='" + tCreate.Text + "' and mat_fac_end>='" + tCreate.Text + "'"
                        MatFactor = nz(cmd.ExecuteScalar, 0)
                        row("ord_itm_mpf") = 1 + Math.Round(MatFactor * WoodFactor, 4)
                    Case Else '"TOP"
                        cmd.CommandText = "select mat_fac_top from mat_fac where mat_fac_mat_code='" + row("ord_itm_mat_code") + "' and mat_fac_start<='" + tCreate.Text + "' and mat_fac_end>='" + tCreate.Text + "'"
                        MatFactor = nz(cmd.ExecuteScalar, 0)
                        row("ord_itm_mpf") = 1 + Math.Round(MatFactor * WoodFactor, 4)
                End Select
            Else
                dr.Close()
                row("ord_itm_mpf") = 1
            End If

            If Mid(Tab1.ActiveTab.Key, 1, 1) = "R" Then
                row("ord_itm_unt_base") = 0
            Else
                If ForceRetail Then
                    row("ord_itm_unt_base") = GetPrice("", row("ord_itm_item_code"), qty, row("ord_itm_price_method"), row("ord_itm_mat_code"), Today, row, True)
                Else
                    row("ord_itm_unt_base") = GetPrice(tCustId.Text, row("ord_itm_item_code"), qty, row("ord_itm_price_method"), row("ord_itm_mat_code"), Today, row, False)
                End If
            End If

            Dim onGroup As String
            cmd.CommandText = "select itm_group from itm_file where itm_code='" + row("ord_itm_item_code") + "'"
            onGroup = nz(cmd.ExecuteScalar, "")
            'Turn off per Todd 11/4/2009
            'If onGroup = "" Then
            '    cmd.CommandText = "select itm_prod_type_group from itm_file,itm_prod_type where itm_com_prod_type=itm_prod_type_type and itm_code='" + row("ord_itm_item_code") + "'"
            '    onGroup = nz(cmd.ExecuteScalar, "")
            'End If
            If onGroup = "" Then
                cmd.CommandText = "select itm_prod_type_group from itm_file,itm_prod_type where itm_prod_type=itm_prod_type_type and itm_code='" + row("ord_itm_item_code") + "'"
                onGroup = nz(cmd.ExecuteScalar, "")
            End If
            If Not IsNumeric(onGroup) Then onGroup = "0"
            row("ord_itm_group") = CInt(onGroup)

            PriceCalcByRow(row)

            If row("ord_itm_item_code") = "LACQUER-AUTO" Then
                Dim Classes As New ArrayList
                Dim cnt As Integer
                For cnt = 0 To DVItems.Count - 1
                    If nz(DVItems(cnt).Item("ord_itm_lacq3"), " ") <> " " Then
                        If Classes.Contains(nz(DVItems(cnt).Item("ord_itm_class"))) = False Then Classes.Add(nz(DVItems(cnt).Item("ord_itm_class")))
                    End If
                Next
                If Classes.Contains("TABLETOP") And Classes.Count = 1 Then
                    row("ord_itm_unt_sell") = Math.Round(row("ord_itm_unt_base") * (1 + UpChargeTableTopOnlyLacq), 2)
                End If
            End If

            cnn3.Close()
            dr = Nothing
            cmd = Nothing
            'BindingContext(DVItems).EndCurrentEdit()
        Catch
            DoError(Err, Me)
        End Try
    End Sub
    Public Function GetPriceByCat(ByVal Cat As String, ByVal ProdType As String, ByVal Itm As String, ByVal Qty As Double) As Double
        Try
            tSalesCat.Text = DVGen(0).Item("ord_gen_sales_cat")
            If Qty = 0 Then Qty = 1
            Dim cmd As New SqlCommand
            Dim tBase As Double
            cmd.Connection = cnn2
            cnn2.Open()

            cmd.CommandText = "select itm_price_price from itm_price where itm_price_itm_code='" + Itm + "' and itm_price_type='BASE' and itm_price_qty_from<=" + CStr(Qty) + " and itm_price_qty_to>=" + CStr(Qty) + " and itm_price_start<='" + CStr(Date.Today) + "' and itm_price_end>='" + CStr(Date.Today) + "'"
            tBase = nz(cmd.ExecuteScalar, 0)
            If tBase = 0 Then
                'MsgBox("Base Price not found.  Not able to continue price calculation.", MsgBoxStyle.Critical, "Base Price?")
                'Exit Function
            End If
            cmd.CommandText = "select itm_flat_rate from itm_file where itm_code='" + Itm + "'"
            If cmd.ExecuteScalar = True Then
                GetPriceByCat = tBase
                cnn2.Close()
                Exit Function
            End If

            cmd.CommandText = "select sales_cat_prod_mar_mar from sales_cat_prod_mar where sales_cat_prod_mar_type='" + ProdType + "' and sales_cat_prod_mar_cat='" + Cat + "' and sales_cat_prod_mar_from<=" + CStr(Qty) + " and sales_cat_prod_mar_to>=" + CStr(Qty) + " and sales_cat_prod_mar_start<='" + CStr(Date.Today) + "' and sales_cat_prod_mar_end>='" + CStr(Date.Today) + "'"
            GetPriceByCat = cmd.ExecuteScalar
            If GetPriceByCat <> 0 Then
                GetPriceByCat = tBase * GetPriceByCat * Qty
            Else
                GetPriceByCat = -1
            End If

            'cmd.CommandText = "select itm_surcharge from itm_file where itm_code='" + Itm + "'"
            'If cmd.ExecuteScalar = True Then
            'Dim rate As Double
            'cmd.CommandText = "select itm_surcharge_rate from itm_surcharge where itm_surcharge_from<=" + CStr(Qty) + " and itm_surcharge_to>=" + CStr(Qty)
            'rate = cmd.ExecuteScalar
            'If rate <> 0 Then GetPrice = GetPrice() * rate
            'End If

            cnn2.Close()
        Catch
            DoError(Err, Me)
        End Try
    End Function
    Public Function GetPrice(ByVal CustID As String, ByVal Itm As String, ByVal Qty As Double, ByRef pType As String, ByVal mType As String, ByVal onDate As Date, Optional ByVal row As DataRow = Nothing, Optional ByVal ForceRetail As Boolean = False) As Double
        Try
            If Qty = 0 Then Qty = 1
            Qty = Math.Abs(Qty)
            Dim cmd As New SqlCommand
            Dim onCust As Long
            Dim dr As SqlDataReader
            Dim BasePrice As Double = 0
            Dim WoodFactor, MatFactor As Double
            Dim ProdType As String = ""
            Dim SelMaterial As Boolean = False
            Dim FlatRate As Boolean = False

            CheckMaterialSel()
            If row Is Nothing Then
                SelMaterial = tMaterial.Enabled 'Or tProdType.Text = "TOP" Or tProdType.Text = "BUD"
            Else
                SelMaterial = row("ord_itm_sel_material") 'Or row("ord_itm_prod_type") = "TOP" Or row("ord_itm_prod_type") = "BUD"
            End If
            If tCustId.Value = Nothing Or CustID = "" Then
                onCust = -1
            Else
                onCust = tCustId.Value
            End If
            cmd.Connection = cnn2
            cnn2.Open()

            onDate = onDate.ToShortDateString

            cmd.CommandText = "select itm_price_price from itm_price where itm_price_itm_code='" + Itm + "' and itm_price_qty_from<=" + CStr(Qty) + " and itm_price_qty_to>=" + CStr(Qty) + " and itm_price_start<='" + CStr(onDate) + "' and itm_price_end>='" + CStr(onDate) + "' and itm_price_type='Base'"
            GetPrice = nz(cmd.ExecuteScalar, -1)
            If GetPrice = -1 Then
                cmd.CommandText = "select itm_price_price from itm_price where itm_price_itm_code='" + Itm + "' and itm_price_qty_from<=" + CStr(Qty) + " and itm_price_qty_to>=" + CStr(Qty) + " and itm_price_start<='" + CStr(Today) + "' and itm_price_end>='" + CStr(Today) + "' and itm_price_type='Base'"
                GetPrice = nz(cmd.ExecuteScalar, -999999)
                If GetPrice <> -1 Then onDate = Today
            End If
            If row Is Nothing Then
                GetPrice = Math.Round(GetPrice * tMPF.Value, 2)
            Else
                GetPrice = Math.Round(GetPrice * row("ord_itm_mpf"), 2)
            End If

            cmd.CommandText = "select itm_prod_type from itm_file where itm_code='" + Itm + "'"
            ProdType = nz(cmd.ExecuteScalar, "")
            If GetPrice <> -999999 Then
                '******************MPF Old
                If SelMaterial = True Then
                    cmd.CommandText = "select itm_wood_factor from itm_file where itm_code='" + Itm + "'"
                    WoodFactor = nz(cmd.ExecuteScalar, 1)
                    Select Case ProdType
                        Case "BUD"
                            cmd.CommandText = "select mat_fac_bud from mat_fac where mat_fac_mat_code='" + mType + "' and mat_fac_start<='" + tCreate.Text + "' and mat_fac_end>='" + tCreate.Text + "'"
                            MatFactor = nz(cmd.ExecuteScalar, 0)
                        Case "GOLD"
                            cmd.CommandText = "select mat_fac_gold from mat_fac where mat_fac_mat_code='" + mType + "' and mat_fac_start<='" + tCreate.Text + "' and mat_fac_end>='" + tCreate.Text + "'"
                            MatFactor = nz(cmd.ExecuteScalar, 0)
                        Case Else '"TOP"
                            cmd.CommandText = "select mat_fac_top from mat_fac where mat_fac_mat_code='" + mType + "' and mat_fac_start<='" + tCreate.Text + "' and mat_fac_end>='" + tCreate.Text + "'"
                            MatFactor = nz(cmd.ExecuteScalar, 0)
                    End Select
                Else
                    MatFactor = 0
                End If
                '****************

                If row Is Nothing Then
                    tBase.Value = GetPrice
                Else
                    If row("ord_itm_change_base") Then
                        If row("ord_itm_base_price") = 0 Then row("ord_itm_base_price") = GetPrice
                    Else
                        row("ord_itm_base_price") = GetPrice
                    End If
                End If
                BasePrice = GetPrice
            Else
                MsgBox("Base Price not found for " + Itm + ".  Not able to continue price calculation.", MsgBoxStyle.Critical, "Base Price?")
                cnn2.Close()
                Exit Function
            End If
            cmd.CommandText = "select itm_flat_rate from itm_file where itm_code='" + Itm + "'"
            If cmd.ExecuteScalar = True Then
                FlatRate = True
            End If
            pType = ""

            If ForceRetail = False Then
                cmd.CommandText = "select cust_itm_price_price from cust_itm_price where cust_itm_price_itm_code='" + Itm + "' and cust_itm_price_cust_serial=" + CStr(onCust) + " and cust_itm_price_from<=" + CStr(Qty) + " and cust_itm_price_to>=" + CStr(Qty) + " and cust_itm_price_start<='" + CStr(onDate) + "' and cust_itm_price_end>='" + CStr(onDate) + "'"
            Else
                cmd.CommandText = "select cust_itm_price_price from cust_itm_price where cust_itm_price_serial=-1"
            End If
            dr = cmd.ExecuteReader
            If dr.HasRows Then
                dr.Read()
                GetPrice = nz(dr.Item(0), 0)
                GetPrice = GetPrice + (GetPrice * WoodFactor * MatFactor)
                dr.Close()
                pType = "Customer Item Price"
            Else
                dr.Close()
                If FlatRate Then
                    GetPrice = BasePrice
                    cnn2.Close()
                    pType = "Base Price"
                    Exit Function
                Else
                    cmd.CommandText = "select itm_prod_type from itm_file where itm_code='" + Itm + "'"
                    dr = cmd.ExecuteReader
                    If Not dr.HasRows Then
                        MsgBox("Product Type NOT FOUND for item " + Itm + ".  Pricing not able to calculate.")
                        dr.Close()
                        Exit Function
                    Else
                        dr.Read()
                        ProdType = nz(dr.Item(0), "")
                        dr.Close()
                        If ForceRetail = False Then
                            cmd.CommandText = "select cust_prod_mar_margin from cust_prod_mar where cust_prod_mar_type='" + ProdType + "' and cust_prod_mar_cust_serial=" + CStr(onCust) + " and cust_prod_mar_from<=" + CStr(Qty) + " and cust_prod_mar_to>=" + CStr(Qty) + " and cust_prod_mar_start<='" + CStr(onDate) + "' and cust_prod_mar_end>='" + CStr(onDate) + "'"
                        Else
                            cmd.CommandText = "select cust_prod_mar_margin from cust_prod_mar where cust_prod_mar_serial=-1"
                        End If
                        dr = cmd.ExecuteReader
                        If dr.HasRows Then
                            dr.Read()
                            GetPrice = nz(dr.Item(0), 0)
                            dr.Close()
                            GetPrice = BasePrice * GetPrice
                            pType = "Customer Product Margin"
                        Else
                            dr.Close()
                            If ForceRetail Then
                                cmd.CommandText = "select itm_price_price from itm_price where itm_price_itm_code='" + Itm + "' and itm_price_type='RET' and itm_price_qty_from<=" + CStr(Qty) + " and itm_price_qty_to>=" + CStr(Qty) + " and itm_price_start<='" + CStr(onDate) + "' and itm_price_end>='" + CStr(onDate) + "'"
                            Else
                                cmd.CommandText = "select itm_price_price from itm_price where itm_price_itm_code='" + Itm + "' and itm_price_type='" + tSalesCat.Text + "' and itm_price_qty_from<=" + CStr(Qty) + " and itm_price_qty_to>=" + CStr(Qty) + " and itm_price_start<='" + CStr(onDate) + "' and itm_price_end>='" + CStr(onDate) + "'"
                            End If
                            dr = cmd.ExecuteReader
                            If dr.HasRows Then
                                dr.Read()
                                GetPrice = nz(dr.Item(0), 0)
                                GetPrice = GetPrice + (GetPrice * WoodFactor * MatFactor)
                                dr.Close()
                                pType = "Sales Category Item Price"
                            Else
                                dr.Close()
                                If ForceRetail Then
                                    cmd.CommandText = "select sales_cat_prod_mar_mar from sales_cat_prod_mar where sales_cat_prod_mar_type='" + ProdType + "' and sales_cat_prod_mar_cat='RET' and sales_cat_prod_mar_from<=" + CStr(Qty) + " and sales_cat_prod_mar_to>=" + CStr(Qty) + " and sales_cat_prod_mar_start<='" + CStr(onDate) + "' and sales_cat_prod_mar_end>='" + CStr(onDate) + "'"
                                Else
                                    cmd.CommandText = "select sales_cat_prod_mar_mar from sales_cat_prod_mar where sales_cat_prod_mar_type='" + ProdType + "' and sales_cat_prod_mar_cat='" + tSalesCat.Text + "' and sales_cat_prod_mar_from<=" + CStr(Qty) + " and sales_cat_prod_mar_to>=" + CStr(Qty) + " and sales_cat_prod_mar_start<='" + CStr(onDate) + "' and sales_cat_prod_mar_end>='" + CStr(onDate) + "'"
                                End If
                                dr = cmd.ExecuteReader
                                If dr.HasRows Then
                                    dr.Read()
                                    GetPrice = nz(dr.Item(0), 0)
                                    dr.Close()
                                    GetPrice = BasePrice * GetPrice
                                    pType = "Sales Category Product Type"
                                Else
                                    GetPrice = BasePrice
                                    pType = "Base Price Method"
                                    dr.Close()
                                End If
                            End If
                        End If
                    End If
                End If
            End If
            tPriceCalc.Text = pType
            GetPrice = Math.Round(GetPrice + 0.00001, 2)

            cmd.CommandText = "select itm_surcharge from itm_file where itm_code='" + Itm + "'"
            If nz(cmd.ExecuteScalar, False) = True Then
                Dim rate As Double
                cmd.CommandText = "select itm_surcharge_rate from itm_surcharge where itm_surcharge_from<=" + CStr(Qty) + " and itm_surcharge_to>=" + CStr(Qty)
                rate = nz(cmd.ExecuteScalar, 0)
                If rate <> 0 Then GetPrice = GetPrice * rate
            End If
            GetPrice = Math.Round(GetPrice + 0.00001, 2)

            If row Is Nothing Then
                If cb5Perc.Checked = True And (nz(tProdType.Value, "") = "TOP" Or nz(tProdType.Value, "") = "BUD" Or nz(tProdType.Value, "") = "GOLD") And Mid(Tab1.ActiveTab.Key, 1, 1) = "O" Then
                    tDisc.Value = Math.Round((GetPrice * Qty * 0.05) + 0.00001, 2)
                End If
            Else
                If cb5Perc.Checked = True And (nz(row("ord_itm_prod_type"), "") = "TOP" Or nz(row("ord_itm_prod_type"), "") = "BUD" Or nz(row("ord_itm_prod_type"), "") = "GOLD") And Mid(Tab1.ActiveTab.Key, 1, 1) = "O" Then
                    row("ord_itm_disc") = Math.Round((GetPrice * Qty * 0.05 * -1) + 0.00001, 2)
                End If
            End If

            cnn2.Close()
        Catch
            DoError(Err, Me)
        End Try
    End Function
    Public Overrides Sub Add_Before()
        'KeyLog("[Delete]")
        LoadItems("-1")
        ClearTabs()
        Tab1.Tabs("Q0").Enabled = True
        TabItems.Tabs(0).Selected = True
        Tab1.Tabs(0).Selected = True
        KeyValue1 = -1
        tOrd.Text = ""
        tOrd.Enabled = False
        cb5Perc.Checked = False
        cbResponsible.CheckedIndex = -1
        tRefFee.Visible = False
        dsNote.Clear()
        If dsNote.Tables.Count > 0 Then dsNote.Tables.Clear()
        dsDiag.Clear()
        If dsDiag.Tables.Count > 0 Then dsDiag.Tables.Clear()
        EditTime = Now
        onOrd = tOrd.Text
        onOrdSource = ""
        UpSellDirty = True
        cbEmailShipment.Checked = False
        SaveCanceled = False
    End Sub

    Public Sub PriceCalc()
        Try
            If Grid1.ActiveRow Is Nothing Then Exit Sub
            Dim Price As Double
            If nz(tUnitBase.Value, 0) = 0 And Grid1.ActiveRow.Cells("ord_itm_unt_sell").Activation = Infragistics.Win.UltraWinGrid.Activation.AllowEdit Then
                Price = nz(Grid1.ActiveRow.Cells("ord_itm_unt_sell").Value)
            Else
                Price = nz(tUnitBase.Value, 0)
                'Price = Price * nz(tMPF.Value, 1)
                Price = Price * nz(tMF.Value, 1)
                'Price = Price - tDisc.Value
            End If

            Grid1.ActiveRow.Cells("ord_itm_unt_sell").Value = Math.Round(Price, 2)
        Catch
            DoError(Err, Me)
        End Try
    End Sub
    Private Sub PriceCalcByRow(ByVal row As DataRow)
        Try
            Dim Price As Double
            If nz(row("ord_itm_unt_base"), 0) = 0 Then
                Price = nz(row("ord_itm_unt_sell"), 0)
            Else
                Price = nz(row("ord_itm_unt_base"), 0)
                'Price = Price * nz(row("ord_itm_mpf"), 1)
                Price = Price * nz(row("ord_itm_markup"), 1)
            End If

            row("ord_itm_unt_sell") = Math.Round(Price, 2)
        Catch
            DoError(Err, Me)
        End Try
    End Sub

    Public Overrides Sub Print(Optional ByVal Output As String = "")

        If tCustId.Text = "DUKE" And Mid(Tab1.ActiveTab.Key, 1, 1) = "Q" And Output = "PDF" Then
            Dim fm As New fmOrdPrintDuke

            fm.fm = Me
            fm.Show()
            Application.DoEvents()
            fm.DoIt()
            TabItems.Tabs("Drawings").Selected = True
            Exit Sub
        End If
        If tCustId.Text = "IWA" And Mid(Tab1.ActiveTab.Key, 1, 1) = "Q" And Output = "PDF" Then
            Dim fm As New fmOrdPrintRetailBase

            fm.fm = Me
            fm.Show()
            Application.DoEvents()
            fm.DoIWA()
            TabItems.Tabs("Drawings").Selected = True
            Exit Sub
        End If

        Cursor.Current = System.Windows.Forms.Cursors.WaitCursor
        If Output = "PDF" Then
            Select Case Mid(Tab1.ActiveTab.Key, 1, 1)
                Case "Q"
                    If Me.tCustId.Text = "" Then
                        Output = PDFPath + tOrd.Text + " (" + tord_for.Text + ")\" + tOrd.Text + "-" + Mid(Tab1.ActiveTab.Key, 2) + " (" + tord_for.Text + ") QUOTE - " + tSalesCat.Text + ".pdf"
                    Else
                        Dim cmd As New SqlCommand("select cust_auto_pdf_ret from cust_file where cust_id='" + Me.tCustId.Text + "'", cnn)
                        cnn.Open()
                        If cmd.ExecuteScalar = True Then
                            cnn.Close()
                            Dim fm As New fmOrdPrintRetailBase

                            fm.fm = Me
                            fm.PDFit = True
                            fm.Show()
                            Application.DoEvents()
                            fm.DoIt()
                            TabItems.Tabs("Drawings").Selected = True
                            Exit Sub
                        Else
                            cnn.Close()
                            Output = PDFPath + tOrd.Text + " (" + tord_for.Text + ")\" + tOrd.Text + "-" + Mid(Tab1.ActiveTab.Key, 2) + " (" + tord_for.Text + ") QUOTE - " + tSalesCat.Text + ".pdf"
                        End If
                    End If

                Case "O"
                        Output = PDFPath + tOrd.Text + " (" + tord_for.Text + ")\" + tOrd.Text + "-" + Mid(Tab1.ActiveTab.Text, 7) + " (" + tord_for.Text + ") ORDER.pdf"
                Case "R"
                        Output = PDFPath + tOrd.Text + " (" + tord_for.Text + ")\" + tOrd.Text + "-" + Mid(Tab1.ActiveTab.Key, 2) + " (" + tord_for.Text + ") REPLACEMENT.pdf"
            End Select
        End If
        Select Case Mid(Tab1.ActiveTab.Key, 1, 1)
            Case "O"
                Select Case TabItems.ActiveTab.Key
                    Case "Notes"
                        DisplayReport("quote notes", "{ord_file.ord_serial} = " + tOrd.Text, True, 1, , , False, False)
                    Case "Shipments"
                        DisplayReport("Order Shipping", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_gen.ord_gen_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='O'", True, 1, , , False, False)
                    Case "Payments"
                        DisplayReport("Order Payments", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_gen.ord_gen_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='O'", True, 1, , , False, False)
                    Case Else
                        DisplayReport("quote landscape", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_gen.ord_gen_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='O'", True, 1, True, , False, False, , , Output)
                End Select
            Case "R"
                Select Case TabItems.ActiveTab.Key
                    Case "Notes"
                        DisplayReport("quote notes", "{ord_file.ord_serial} = " + tOrd.Text, True, 1, , , False, False)
                    Case "Shipments"
                        DisplayReport("Order Shipping", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_gen.ord_gen_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='R'", True, 1, , , False, False)
                    Case Else
                        DisplayReport("quote landscape", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_gen.ord_gen_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='R'", True, 1, True, , False, False, , , Output)
                End Select
            Case "Q"
                Select Case TabItems.ActiveTab.Key
                    Case "Notes"
                        DisplayReport("quote notes", "{ord_file.ord_serial} = " + tOrd.Text, True, 1, , , False, False)
                        'Case "UP"
                        '    If SaveUpsell() Then
                        '        DisplayReport("quote landscape with options", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_gen.ord_gen_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='Q'", True, 1, True, , False, False, , , Output)
                        '        DisplayReport("quote upsells", "{ord_upsell.ord_upsell_ord_serial} = " + tOrd.Text + " and {ord_upsell.ord_upsell_ord_type} = 'Q' and {ord_upsell.ord_upsell_ord_rev} = " + Mid(Tab1.ActiveTab.Key, 2), True)
                        '    End If
                    Case Else
                        'If TabItems.Tabs("UP").Visible Then
                        '    If SaveUpsell() Then
                        '        Dim cmd As New SqlCommand("select count(*) from ord_upsell where ord_upsell_ord_serial=" + tOrd.Text + " and ord_upsell_ord_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " and ord_upsell_ord_type='Q'", cnn)
                        '        Dim doit As Boolean

                        '        cnn.Open()
                        '        doit = nz(cmd.ExecuteScalar, 0) > 0
                        '        cnn.Close()

                        '        DisplayReport("quote landscape with options", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_gen.ord_gen_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='Q'", True, 1, True, , False, False, , , Output)
                        '        If doit Then
                        '            If Output.Length > 4 Then Output = PDFPath + tOrd.Text + " (" + tord_for.Text + ")\" + tOrd.Text + "-" + Mid(Tab1.ActiveTab.Key, 2) + " (" + tord_for.Text + ") QUOTE - UPGRADE OPTIONS.pdf"
                        '            If DVItems.Count > 0 Then DisplayReport("quote upsells", "{ord_upsell.ord_upsell_ord_serial} = " + tOrd.Text + " and {ord_upsell.ord_upsell_ord_type} = 'Q' and {ord_upsell.ord_upsell_ord_rev} = " + Mid(Tab1.ActiveTab.Key, 2), True, 1, , , , , , , Output)
                        '        End If
                        '    End If
                        'Else
                        DisplayReport("quote landscape", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_gen.ord_gen_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='Q'", True, 1, True, , False, False, , , Output)
                        'End If
                End Select
            Case Else
                Cursor.Current = System.Windows.Forms.Cursors.Default
                MsgBox("Please select a Quote or Order before printing.", MsgBoxStyle.Information, "Select?")
        End Select
        If Output <> "" And TabItems.ActiveTab.Key = "Drawings" Then
            UpdateTabItems(TabItems.ActiveTab)
        End If
        Cursor.Current = System.Windows.Forms.Cursors.Default
    End Sub
    Private Sub tUnitBase_LostFocus(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tUnitBase.Leave
        PriceCalc()
    End Sub
    Private Sub tMPF_LostFocus(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tMPF.Leave
        PriceCalc()
    End Sub
    Private Sub tMF_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles tMF.LostFocus
        PriceCalc()
    End Sub
    Private Sub tDisc_LostFocus(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tDisc.Leave
        PriceCalc()
    End Sub
    Private Sub ShowBase()
        Dim x As Integer
        Dim base As Double = 0

        If DVItems.Count > 0 Then
            For x = 0 To DVItems.Count - 1
                base += DVItems(x).Item("ord_itm_qty") * DVItems(x).Item("ord_itm_base_price")
            Next
        End If
        lBase.Text = "Base: " + FormatCurrency(base)
    End Sub
    Public Sub DoTotal(Optional ByVal ForceRetail As Boolean = False)
        Try
            If dsItems.Tables.Count = 0 Then Exit Sub
            If dsGen.Tables.Count = 0 Then Exit Sub
            If Tab1.ActiveTab.Key = "C" Then Exit Sub
            If DVGen.Count = 0 Then Exit Sub

            If IsNumeric(tOrd.Text) Then
                If CheckAcctDateFromItem(CLng(tOrd.Text), CInt(Mid(Tab1.ActiveTab.Key, 2)), Mid(Tab1.ActiveTab.Key, 1, 1)) = False Then
                    tTotal2.Text = DVGen.Item(0)("ord_gen_line_total")
                    tShipTotal.Text = DVGen.Item(0)("ord_gen_ship")
                    tTaxTotal.Text = DVGen.Item(0)("ord_gen_tax")
                    tGrandTotal.Text = DVGen.Item(0)("ord_gen_total")
                    ShowBase()

                    If ((nz(DVGen(0).Item("ord_gen_tax_override"), 0) = 0) And (nz(DVGen(0).Item("ord_gen_tax_override_perc"), 0) = 0)) Then
                        lTax.BackColor = Color.LightGoldenrodYellow
                    Else
                        lTax.BackColor = Color.Red
                    End If
                    Exit Sub
                End If
            End If

            Dim cnnx As New SqlConnection(cnn.ConnectionString + ";password='39201'")
            Dim x, y, z As Integer
            Dim t, MD, Con, Ret, Valx, tShip, tTax As Double
            Dim dr As DataRow
            Dim drv As DataRowView
            Dim tot(255, 99) As Double
            Dim ship(255, 99) As Double
            Dim install(255, 99) As Double
            Dim match(255, 99) As Double
            Dim taxtot(255, 99) As Double
            Dim EditIt As Boolean = True
            Dim UpWood(255, 99) As String
            Dim UpWoodTot(255, 99) As Double
            Dim cmd As New SqlCommand("", cnnx)
            Dim drd As SqlDataReader
            Dim HasUpCharge As Boolean = False
            Dim onDiscType As String = ""
            Dim onDiscVal As Double = 0
            Dim Perc As Double
            Dim UpWoodVal As String
            Dim onRev As Integer
            Dim onTot As Double = 0
            Dim onMarginTot As Double
            Dim onMarginGrTot As Double
            'Dim onTotalDisc As Double
            Dim HasDiscount As Boolean = False
            Dim HasUpchargeNonColor As Boolean = False
            Dim HasPercPrice As Boolean = False
            Dim onMatch As Double = -1
            Dim onUntSell As Double
            Dim onQty As Double
            Dim onBasePrice As Double
            Dim SurCharge As Double
            Dim onBaseTotal As Double
            Dim isCustom As Boolean = False
            Dim doDesignFee As Boolean
            Dim ShipTax As Double
            Dim PriceTrackInches As Double = 0

            cnnx.Open()

            If EditMode <> "Edit" And EditMode <> "Add" Then EditIt = False
            If EditIt = False And Tab1.ActiveTab.Key = "C" Then Exit Sub

            If EditIt = True Then
                BindingContext(DVGen).EndCurrentEdit()
                DVGen(0).Item("ord_gen_ship_roundoff") = 0
                tSalesCat.Text = DVGen(0).Item("ord_gen_sales_cat")
                'For Each dr In dsItems.Tables(0).Rows
                If DVItems.Count > 0 Then
                    For x = 0 To DVItems.Count - 1
                        dr = DVItems.Item(x).Row
                        If (dr.RowState <> DataRowState.Deleted) And (dr.RowState <> DataRowState.Detached) Then
                            If Mid(Tab1.ActiveTab.Key, 1, 1) = "C" Then
                                onRev = -1
                            Else
                                onRev = CInt(Mid(Tab1.ActiveTab.Key, 2))
                            End If
                            If nz(dr("ord_itm_is_disc"), False) = True And dr("ord_itm_type") = Mid(Tab1.ActiveTab.Key, 1, 1) And dr("ord_itm_rev") = onRev Then HasDiscount = True
                            If nz(dr("ord_itm_is_up"), False) = True And dr("ord_itm_type") = Mid(Tab1.ActiveTab.Key, 1, 1) And dr("ord_itm_rev") = onRev Then HasUpchargeNonColor = True
                            If nz(dr("ord_itm_is_perc_price"), False) = True And dr("ord_itm_type") = Mid(Tab1.ActiveTab.Key, 1, 1) And dr("ord_itm_rev") = onRev Then HasPercPrice = True
                            'Shipping Tab
                            'If nz(dr("ord_itm_prod_type")) = "IN" Then dr("ord_itm_taxable") = IIf(chTaxInstalls.Checked, 1, 0)
                            If nz(dr("ord_itm_prod_type")) = "IN" Then dr("ord_itm_taxable") = IIf(gsTaxInstalls.Checked, 1, 0)

                            'Check MPF for wood types
                            Dim WoodFactor, MatFactor, MPF As Double
                            cmd.CommandText = "select itm_wood_factor from itm_file where itm_code='" + dr("ord_itm_item_code") + "'"
                            WoodFactor = nz(cmd.ExecuteScalar, 1)
                            Select Case nz(dr("ord_itm_prod_type"))
                                Case "BUD"
                                    cmd.CommandText = "select mat_fac_bud from mat_fac where mat_fac_mat_code='" + dr("ord_itm_mat_code") + "' and mat_fac_start<='" + tCreate.Text + "' and mat_fac_end>='" + tCreate.Text + "'"
                                    MatFactor = nz(cmd.ExecuteScalar, 0)
                                    MPF = 1 + Math.Round(MatFactor * WoodFactor, 4)
                                Case "GOLD" 'Gold Wood
                                    cmd.CommandText = "select mat_fac_gold from mat_fac where mat_fac_mat_code='" + dr("ord_itm_mat_code") + "' and mat_fac_start<='" + tCreate.Text + "' and mat_fac_end>='" + tCreate.Text + "'"
                                    MatFactor = nz(cmd.ExecuteScalar, 0)
                                    MPF = 1 + Math.Round(MatFactor * WoodFactor, 4)
                                Case Else
                                    cmd.CommandText = "select mat_fac_top from mat_fac where mat_fac_mat_code='" + dr("ord_itm_mat_code") + "' and mat_fac_start<='" + tCreate.Text + "' and mat_fac_end>='" + tCreate.Text + "'"
                                    MatFactor = nz(cmd.ExecuteScalar, 0)
                                    MPF = 1 + Math.Round(MatFactor * WoodFactor, 4)
                            End Select
                            dr("ord_itm_mpf") = MPF
                            PriceTrackInches += Math.Round(nz(dr("ord_itm_price_track_inches"), 0) * nz(dr("ord_itm_qty"), 0), 2)
                        End If
                    Next
                End If

                If DVItems.Count > 0 Then
                    Dim drDisc As DataRowView

                    If Tab1.ActiveTab.Key <> "C" Then
                        Dim dvBottles As New DataView(dsItems.Tables(0), "ord_itm_type='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "' and ord_itm_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " and (ord_itm_bottle_search='S' or ord_itm_bottle_search='F' or ord_itm_bottle_search='L')", "ord_itm_serial", DataViewRowState.CurrentRows)
                        If dvBottles.Count > 0 Then
                            Dim drBottle, drItem As DataRowView
                            Dim Qty As Double = 0
                            x = 0
                            Do While x < dvBottles.Count
                                Qty = 0
                                drBottle = dvBottles(x)
                                If (drBottle.Row.RowState <> DataRowState.Deleted) And (drBottle.Row.RowState <> DataRowState.Detached) Then
                                    For y = 0 To DVItems.Count - 1
                                        drItem = DVItems(y)
                                        If (drItem.Row.RowState <> DataRowState.Deleted) And (drItem.Row.RowState <> DataRowState.Detached) Then
                                            If nz(drBottle("ord_itm_bottle_search")) = "S" And drBottle("ord_itm_stain_serial") = drItem("ord_itm_stain_serial") And drBottle("ord_itm_stain_serial") > 0 Then Qty += (nz(drItem("ord_itm_stain_bottles"), 0) + nz(drItem("ord_itm_stain_bottles_add"), 0)) * drItem("ord_itm_qty")
                                            If nz(drBottle("ord_itm_bottle_search")) = "F" And nz(drBottle("ord_itm_finish_serial"), 0) = nz(drItem("ord_itm_finish_serial"), 0) And nz(drBottle("ord_itm_finish_serial"), 0) > 0 Then Qty += (nz(drItem("ord_itm_stain_bottles"), 0) + nz(drItem("ord_itm_stain_bottles_add"), 0)) * drItem("ord_itm_qty")
                                            'If nz(drBottle("ord_itm_bottle_search")) = "L" And drItem("ord_itm_lacquer") = True Then Qty += (nz(drItem("ord_itm_lacq_bottles"), 0) + nz(drItem("ord_itm_lacq_bottles_add"), 0)) * drItem("ord_itm_qty")
                                            If nz(drBottle("ord_itm_bottle_search")) = "L" And nz(drItem("ord_itm_lacq3"), " ") = "3" Then Qty += (nz(drItem("ord_itm_lacq_bottles"), 0) + nz(drItem("ord_itm_lacq_bottles_add"), 0)) * drItem("ord_itm_qty")
                                            If nz(drBottle("ord_itm_bottle_search")) = "L" And nz(drItem("ord_itm_lacq3"), " ") = "1" Then Qty += (nz(drItem("ord_itm_lacq_bottles"), 0) + nz(drItem("ord_itm_lacq_bottles_add"), 0)) * drItem("ord_itm_qty") * 0.5
                                        End If
                                    Next
                                    If Qty <> Decimal.Truncate(Qty) Then
                                        Qty = Decimal.Truncate(Qty) + 1
                                    Else
                                        Qty = Int(Qty)
                                    End If
                                    drBottle("ord_itm_qty") = CInt(Qty)
                                    Dim drx As DataRow
                                    drx = drBottle.Row
                                    If cbIsSplit.Checked = False Or drBottle("ord_itm_type") = "Q" Then LoadPriceByRow(drx, , , ForceRetail)
                                    If drBottle("ord_itm_qty") = 0 Then
                                        drBottle.Delete()
                                    Else
                                        x += 1
                                    End If
                                End If
                            Loop
                            'Grid1.DataBind()
                            UltraCalcManager1.DirtyAllFormulas()
                            Grid1.Refresh()
                        End If
                    End If

                    If HasPercPrice = True Then
                        Dim drPerc As DataRow
                        For x = 0 To DVItems.Count - 1
                            drPerc = DVItems.Item(x).Row
                            If drPerc("ord_itm_is_perc_price") = True And nz(drPerc("ord_itm_item_code")) <> "" Then
                                Select Case drPerc("ord_itm_item_code")
                                    Case "AUTOPROCESS"
                                        cmd.CommandText = "select des_process from des_type where des_type='" + DVGen(0).Item("ord_gen_des_type_auto") + "'"
                                        drPerc("ord_itm_perc_price") = nz(cmd.ExecuteScalar, 0)
                                        If drPerc("ord_itm_perc_price") <> 0 Then
                                            If tCustId.Text = "" Then
                                                drPerc("ord_itm_perc_price") += UpChargeForNonSpeed
                                            Else
                                                cmd.CommandText = "select cust_process_override from cust_file where cust_id='" + tCustId.Text + "'"
                                                If cmd.ExecuteScalar = True Then
                                                    cmd.CommandText = "select cust_process from cust_file where cust_id='" + tCustId.Text + "'"
                                                    drPerc("ord_itm_perc_price") += nz(cmd.ExecuteScalar, 0)
                                                Else
                                                    drPerc("ord_itm_perc_price") += UpChargeForSpeed
                                                End If
                                            End If
                                        End If
                                        onTot = GetDiscTotForPercPrice(DVItems, drPerc("ord_itm_perc_prodtypes"), drPerc("ord_itm_perc_itemcodes"))
                                        drPerc("ord_itm_unt_sell") = Math.Round(onTot * drPerc("ord_itm_perc_price") / 100, 2)
                                    Case "DESIGNFEE-AUTO"
                                        cmd.CommandText = "select des_process from des_type where des_type='" + DVGen(0).Item("ord_gen_des_type_auto") + "'"
                                        drPerc("ord_itm_perc_price") = nz(cmd.ExecuteScalar, 0)
                                        If drPerc("ord_itm_perc_price") <> 0 Then
                                            If tCustId.Text = "" Then
                                                drPerc("ord_itm_perc_price") += UpChargeForNonSpeed
                                            Else
                                                '**** Does not affect speed codes for now.
                                                'cmd.CommandText = "select cust_process_override from cust_file where cust_id='" + tCustId.Text + "'"
                                                'If cmd.ExecuteScalar = True Then
                                                '    cmd.CommandText = "select cust_process from cust_file where cust_id='" + tCustId.Text + "'"
                                                '    drPerc("ord_itm_perc_price") += nz(cmd.ExecuteScalar, 0)
                                                'Else
                                                '    drPerc("ord_itm_perc_price") += UpChargeForSpeed
                                                'End If
                                            End If
                                        End If
                                        onTot = GetDiscTotForPercPrice(DVItems, drPerc("ord_itm_perc_prodtypes"), drPerc("ord_itm_perc_itemcodes"))
                                        drPerc("ord_itm_unt_sell") = Math.Round(onTot * drPerc("ord_itm_perc_price") / 100, 2)
                                    Case Else
                                        onTot = GetDiscTotForPercPrice(DVItems, drPerc("ord_itm_perc_prodtypes"), drPerc("ord_itm_perc_itemcodes"))
                                        drPerc("ord_itm_unt_sell") = Math.Round(onTot * drPerc("ord_itm_perc_price") / 100, 2)
                                End Select
                            End If
                        Next
                    End If

                    If HasDiscount Or HasUpchargeNonColor Then
                        Dim DiscTot, onAmt, MarginTot As Double
                        Dim DiscLeft As Double
                        Dim NewTot As Double
                        Dim DoIt As Boolean = False
                        Dim MatchTot As Double = onTot
                        Dim isDiscount, isUpcharge As Boolean

                        onTot = GetDiscTot(DVItems, "", "", True)
                        onMarginGrTot = GetMarginTot(DVItems, "", "")
                        MatchTot = onTot
                        For x = 0 To DVItems.Count - 1
                            drDisc = DVItems.Item(x)
                            If (drDisc.Row.RowState <> DataRowState.Deleted) And (drDisc.Row.RowState <> DataRowState.Detached) Then
                                If drDisc("ord_itm_disc_prod") Is DBNull.Value Then drDisc("ord_itm_disc_prod") = ""
                                If drDisc("ord_itm_disc_matl") Is DBNull.Value Then drDisc("ord_itm_disc_matl") = ""
                                If drDisc("ord_itm_is_disc") Or drDisc("ord_itm_is_up") = True Then
                                    isDiscount = drDisc("ord_itm_is_disc")
                                    isUpcharge = drDisc("ord_itm_is_up")
                                    NewTot = 0
                                    onTot = GetDiscTot(DVItems, drDisc("ord_itm_disc_prod"), drDisc("ord_itm_disc_matl"))
                                    Select Case drDisc("ord_itm_disc_type")
                                        Case "D"
                                            DiscTot = drDisc("ord_itm_disc_val")
                                        Case "P"
                                            DiscTot = Math.Round(drDisc("ord_itm_disc_val") * onTot / 100, 2)
                                        Case "T"
                                            DiscTot = GetMatchDisc(drDisc("ord_itm_disc_val"), isDiscount)
                                            IIf(isDiscount, drDisc("ord_itm_desc") = "Discount to match total", drDisc("ord_itm_desc") = "Upcharge to match total")
                                            onMatch = drDisc("ord_itm_disc_val")
                                        Case Else
                                            DiscTot = 0
                                    End Select
                                    onUntSell = drDisc("ord_itm_unt_sell")
                                    onQty = drDisc("ord_itm_qty")
                                    drDisc("ord_itm_unt_sell") = IIf(isDiscount, DiscTot * -1, DiscTot)
                                    If drDisc("ord_itm_disc_type") = "D" Then
                                        DiscTot = drDisc("ord_itm_disc_val") * drDisc("ord_itm_qty")
                                    End If
                                    DiscLeft = DiscTot

                                    onMarginTot = GetMarginTot(DVItems, drDisc("ord_itm_disc_prod"), drDisc("ord_itm_disc_matl"))
                                    'onTotalDisc = GetTotalDisc(DVItems)
                                    'lMarginBelow0.Visible = False
                                    'If onTotalDisc < 0 And tCustId.Text = "" And nz(DVGen(0).Item("ord_gen_src")) <> "MARKETING" Then

                                    '    If (Math.Abs(onTotalDisc) > onMarginGrTot) Then
                                    '        If tOrd.Text = "" Then
                                    '            lMarginBelow0.Visible = True
                                    '        Else
                                    '            cmd.CommandText = "select count(*) from ord_disc_override where ord_disc_override_ord_serial=" + tOrd.Text + " and ord_disc_override_ord_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " and ord_disc_override_ord_type='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "'"
                                    '            'cnn.Open()
                                    '            If cmd.ExecuteScalar = 0 Then
                                    '                lMarginBelow0.Visible = True
                                    '            Else
                                    '                lMarginBelow0.Visible = False
                                    '            End If
                                    '            'cnn.Close()
                                    '        End If
                                    '    End If
                                    'End If

                                    For y = 0 To DVItems.Count - 1
                                        drv = DVItems.Item(y)
                                        If (drv.Row.RowState <> DataRowState.Deleted) And (drv.Row.RowState <> DataRowState.Detached) Then
                                            DoIt = False
                                            If drv("ord_itm_is_disc") = False And drv("ord_itm_is_up") = False And drv("ord_itm_is_perc_price") = False Then DoIt = True
                                            If drDisc("ord_itm_disc_prod") <> "" Then
                                                If drDisc("ord_itm_disc_prod") = nz(drv("ord_itm_prod_type")) Then
                                                    DoIt = True And DoIt
                                                Else
                                                    DoIt = False
                                                End If
                                            End If
                                            If drDisc("ord_itm_disc_matl") <> "" Then
                                                If drDisc("ord_itm_disc_matl") = nz(drv("ord_itm_mat_code")) Then
                                                    DoIt = True And DoIt
                                                Else
                                                    DoIt = False
                                                End If
                                            End If
                                            If DoIt Then
                                                If DiscLeft = 0 Then
                                                Else
                                                    SurCharge = 1
                                                    cmd.CommandText = "select itm_surcharge from itm_file where itm_code='" + drv("ord_itm_item_code") + "'"
                                                    If nz(cmd.ExecuteScalar, False) = True Then
                                                        cmd.CommandText = "select itm_surcharge_rate from itm_surcharge where itm_surcharge_from<=" + CStr(drv("ord_itm_qty")) + " and itm_surcharge_to>=" + CStr(drv("ord_itm_qty"))
                                                        SurCharge = nz(cmd.ExecuteScalar, 0)
                                                    End If
                                                    If isDiscount Then
                                                        If onMarginTot = 0 Then
                                                            If onTot = 0 Then
                                                                onAmt = 0
                                                            Else
                                                                onAmt = Math.Round(DiscTot * ((nz(drv("ord_itm_qty"), 0) * nz(drv("ord_itm_unt_sell"), 0)) + nz(drv("ord_itm_disc"), 0) + nz(drv("ord_itm_disc_amt"), 0)) / onTot, 2)
                                                            End If
                                                            '^^^ old formula before Change for Christy
                                                        Else
                                                            onBasePrice = nz(drv("ord_itm_base_price"), 0)
                                                            If onBasePrice = 0 Then onBasePrice = nz(drv("ord_itm_unt_sell"), 0)
                                                            onAmt = Math.Round(DiscTot * ((nz(drv("ord_itm_qty"), 0) * (Math.Round(nz(drv("ord_itm_unt_sell") / SurCharge, 0), 2) - onBasePrice)) + nz(drv("ord_itm_disc"), 0) + nz(drv("ord_itm_disc_amt"), 0)) / onMarginTot, 2)
                                                        End If
                                                        drv("ord_itm_disc_amt") -= onAmt
                                                    Else
                                                        If onMarginTot = 0 Then
                                                            onAmt = Math.Round(DiscTot * ((nz(drv("ord_itm_qty"), 0) * nz(drv("ord_itm_unt_sell"), 0)) + nz(drv("ord_itm_disc"), 0) + nz(drv("ord_itm_disc_amt"), 0)) / onTot, 2)
                                                        Else
                                                            onBasePrice = nz(drv("ord_itm_base_price"), 0)
                                                            If onBasePrice = 0 Then onBasePrice = nz(drv("ord_itm_unt_sell"), 0)
                                                            onAmt = Math.Round(DiscTot * ((nz(drv("ord_itm_qty"), 0) * (Math.Round(nz(drv("ord_itm_unt_sell") / SurCharge, 0), 2) - onBasePrice)) + nz(drv("ord_itm_disc"), 0) + nz(drv("ord_itm_disc_amt"), 0)) / onMarginTot, 2)
                                                        End If
                                                        drv("ord_itm_disc_amt") += onAmt
                                                    End If
                                                    DiscLeft = Math.Round(DiscLeft - onAmt, 2)
                                                End If
                                                NewTot += (drv("ord_itm_qty") * drv("ord_itm_unt_sell")) + drv("ord_itm_disc") + drv("ord_itm_disc_amt")
                                            End If
                                        End If
                                    Next
                                    Do While DiscLeft <> 0
                                        If DiscLeft = DiscTot Then
                                            MsgBox("Discount/Upcharge did not apply to any items.  It will now be set to 0", MsgBoxStyle.Information, "Nothing to apply")
                                            drDisc("ord_itm_disc_amt") = 0
                                            drDisc("ord_itm_disc_val") = 0
                                            DiscLeft = 0
                                            DiscTot = 0
                                        Else
                                            For y = 0 To DVItems.Count - 1
                                                drv = DVItems.Item(y)
                                                If drv("ord_itm_is_disc") = False And drv("ord_itm_is_up") = False And drv("ord_itm_unt_sell") <> 0 And drv("ord_itm_is_perc_price") = False And drv("ord_itm_disc_amt") <> 0 Then
                                                    DiscLeft = IIf(isDiscount, DiscLeft * -1, DiscLeft)
                                                    drv("ord_itm_disc_amt") = Math.Round(drv("ord_itm_disc_amt") + DiscLeft, 2)
                                                    DiscLeft = 0
                                                    Exit For
                                                End If
                                            Next
                                        End If
                                    Loop
                                End If
                            End If
                        Next
                    Else
                        For x = 0 To DVItems.Count - 1
                            drDisc = DVItems.Item(x)
                            If drDisc("ord_itm_disc_amt") <> 0 And nz(drDisc("ord_itm_ord_serial"), 0) <> 0 Then
                                If CheckAcctDateFromItem(drDisc("ord_itm_ord_serial"), drDisc("ord_itm_rev"), drDisc("ord_itm_type")) Then
                                    drDisc("ord_itm_disc_amt") = 0
                                End If
                            End If
                        Next
                    End If
                End If

                ' Was here
                'If HasPercPrice = True Then
                '    Dim drdisc As DataRow
                '    For x = 0 To DVItems.Count - 1
                '        drdisc = DVItems.Item(x).Row
                '        If drdisc("ord_itm_is_perc_price") = True And nz(drdisc("ord_itm_item_code")) <> "" Then
                '            Select Case drdisc("ord_itm_item_code")
                '                Case "AUTOPROCESS"
                '                    cmd.CommandText = "select des_process from des_type where des_type='" + DVGen(0).Item("ord_gen_des_type_auto") + "'"
                '                    drdisc("ord_itm_perc_price") = nz(cmd.ExecuteScalar, 0)
                '                    If drdisc("ord_itm_perc_price") <> 0 Then
                '                        If tCustId.Text = "" Then
                '                            drdisc("ord_itm_perc_price") += UpChargeForNonSpeed
                '                        Else
                '                            cmd.CommandText = "select cust_process_override from cust_file where cust_id='" + tCustId.Text + "'"
                '                            If cmd.ExecuteScalar = True Then
                '                                cmd.CommandText = "select cust_process from cust_file where cust_id='" + tCustId.Text + "'"
                '                                drdisc("ord_itm_perc_price") += nz(cmd.ExecuteScalar, 0)
                '                            Else
                '                                drdisc("ord_itm_perc_price") += UpChargeForSpeed
                '                            End If
                '                        End If
                '                    End If
                '                    onTot = GetDiscTotForPercPrice(DVItems, drdisc("ord_itm_perc_prodtypes"), drdisc("ord_itm_perc_itemcodes"))
                '                    drdisc("ord_itm_unt_sell") = Math.Round(onTot * drdisc("ord_itm_perc_price") / 100, 2)
                '                Case "DESIGNFEE-AUTO"
                '                    cmd.CommandText = "select des_process from des_type where des_type='" + DVGen(0).Item("ord_gen_des_type_auto") + "'"
                '                    drdisc("ord_itm_perc_price") = nz(cmd.ExecuteScalar, 0)
                '                    If drdisc("ord_itm_perc_price") <> 0 Then
                '                        If tCustId.Text = "" Then
                '                            drdisc("ord_itm_perc_price") += UpChargeForNonSpeed
                '                        Else
                '                            '**** Does not affect speed codes for now.
                '                            'cmd.CommandText = "select cust_process_override from cust_file where cust_id='" + tCustId.Text + "'"
                '                            'If cmd.ExecuteScalar = True Then
                '                            '    cmd.CommandText = "select cust_process from cust_file where cust_id='" + tCustId.Text + "'"
                '                            '    drdisc("ord_itm_perc_price") += nz(cmd.ExecuteScalar, 0)
                '                            'Else
                '                            '    drdisc("ord_itm_perc_price") += UpChargeForSpeed
                '                            'End If
                '                        End If
                '                    End If
                '                    onTot = GetDiscTotForPercPrice(DVItems, drdisc("ord_itm_perc_prodtypes"), drdisc("ord_itm_perc_itemcodes"))
                '                    drdisc("ord_itm_unt_sell") = Math.Round(onTot * drdisc("ord_itm_perc_price") / 100, 2)
                '                Case Else
                '                    onTot = GetDiscTotForPercPrice(DVItems, drdisc("ord_itm_perc_prodtypes"), drdisc("ord_itm_perc_itemcodes"))
                '                    drdisc("ord_itm_unt_sell") = Math.Round(onTot * drdisc("ord_itm_perc_price") / 100, 2)
                '            End Select
                '        End If
                '    Next
                'End If
                UltraCalcManager1.DirtyAllFormulas()
                Grid1.Refresh()
            End If

            lMaterialSummary.Text = ""
            If DVItems.Count > 0 Then
                For x = 0 To DVItems.Count - 1
                    dr = DVItems.Item(x).Row
                    If (dr.RowState <> DataRowState.Deleted) And (dr.RowState <> DataRowState.Detached) Then
                        If InStr(lMaterialSummary.Text, dr("ord_itm_mat_code") & ",") = 0 Then lMaterialSummary.Text += dr("ord_itm_mat_code") & ", "
                        tot(Asc(dr("ord_itm_type")), dr("ord_itm_rev")) = tot(Asc(dr("ord_itm_type")), dr("ord_itm_rev")) + (nz(dr("ord_itm_qty"), 0) * nz(dr("ord_itm_unt_sell"), 0)) + nz(dr("ord_itm_disc"), 0)
                        If nz(dr("ord_itm_taxable"), True) = True Then taxtot(Asc(dr("ord_itm_type")), dr("ord_itm_rev")) = taxtot(Asc(dr("ord_itm_type")), dr("ord_itm_rev")) + (nz(dr("ord_itm_qty"), 0) * nz(dr("ord_itm_unt_sell"), 0)) + nz(dr("ord_itm_disc"), 0)
                        If dr("ord_itm_type") = Mid(Tab1.ActiveTab.Key, 1, 1) And CStr(dr("ord_itm_rev")) = Mid(Tab1.ActiveTab.Key, 2) Then onBaseTotal = Math.Round(onBaseTotal + (nz(dr("ord_itm_qty"), 0) * nz(dr("ord_itm_base_price"), 0)), 2)
                        If nz(dr("ord_itm_ship_flat"), 0) <> 0 Then
                            ship(Asc(dr("ord_itm_type")), dr("ord_itm_rev")) = ship(Asc(dr("ord_itm_type")), dr("ord_itm_rev")) + dr("ord_itm_ship_flat")
                        Else
                            ship(Asc(dr("ord_itm_type")), dr("ord_itm_rev")) = ship(Asc(dr("ord_itm_type")), dr("ord_itm_rev")) + (nz(dr("ord_itm_qty"), 0) * nz(dr("ord_itm_unt_ship"), 0))
                        End If
                        If nz(dr("ord_itm_prod_type")) = "IN" Then install(Asc(dr("ord_itm_type")), dr("ord_itm_rev")) = install(Asc(dr("ord_itm_type")), dr("ord_itm_rev")) + (nz(dr("ord_itm_qty"), 0) * nz(dr("ord_itm_unt_sell"), 0)) + nz(dr("ord_itm_disc"), 0)
                        If nz(dr("ord_itm_disc_type")) = "T" Then match(Asc(dr("ord_itm_type")), dr("ord_itm_rev")) = nz(dr("ord_itm_disc_val"), 0)
                        If Custom.Contains(nz(dr("ord_itm_prod_type"))) Then isCustom = True
                    End If

                    If nz(dr("ord_itm_item_code")) = "PRICETRACK-AUTO" And EditIt Then
                        dr("ord_itm_qty") = Math.Round((PriceTrackInches) + 0.49, 0)
                    End If
                Next
            End If
            If lMaterialSummary.Text = "" Then
                lMaterialSummary.Text = "None"
            Else
                lMaterialSummary.Text = Mid(lMaterialSummary.Text, 1, Len(lMaterialSummary.Text) - 2)
            End If

            'For Each dr In dsGen.Tables(0).Rows
            If DVGen.Count > 0 Then
                For x = 0 To DVGen.Count - 1
                    dr = DVGen.Item(x).Row
                    If dr.RowState <> DataRowState.Deleted Then
                        If EditIt = True And CheckAcctDateFromItem(nz(dr("ord_gen_ord_serial"), -1), dr("ord_gen_rev"), dr("ord_gen_type")) = True Then
                            dr("ord_gen_line_total") = tot(Asc(dr("ord_gen_type")), dr("ord_gen_rev"))

                            'If the shipping amounts are changed here, also change GetMatchDisc
                            dr("ord_gen_ship") = ship(Asc(dr("ord_gen_type")), dr("ord_gen_rev")) + nz(dr("ord_gen_ship_extra"), 0) - nz(dr("ord_gen_ship_disc"), 0)
                            If nz(dr("ord_gen_ship_active"), False) = True Then
                                If nz(dr("ord_gen_ship_inside"), False) = True Then dr("ord_gen_ship") += 50 'was 213.15 3013/04/05
                                If nz(dr("ord_gen_ship_liftgate"), False) = True Then dr("ord_gen_ship") += 50 'was 97.5 on 7/23/2008
                                If nz(dr("ord_gen_ship_twoman"), False) = True Then dr("ord_gen_ship") += 100
                                If nz(dr("ord_gen_ship_gated"), False) = True Then dr("ord_gen_ship") += 50
                                If nz(dr("ord_gen_ship_intlship"), False) = True Then dr("ord_gen_ship") += 400
                                dr("ord_gen_ship") += nz(dr("ord_gen_ship_numskids"), 0) * 100

                                If nz(dr("ord_gen_ship_overnite_override"), 0) <> 0 Then
                                    OverNiteOverRide = dr("ord_gen_ship_overnite_override")
                                    dr("ord_gen_ship") = Math.Round(dr("ord_gen_ship") + dr("ord_gen_ship_overnite_override"), 2)
                                Else
                                    OverNiteOverRide = dr("ord_gen_ship")
                                    If dr("ord_gen_ship_overnite") = True Then
                                        dr("ord_gen_ship") = Math.Round(dr("ord_gen_ship") * 1.4, 2)
                                    End If
                                    OverNiteOverRide = Math.Round(dr("ord_gen_ship") - OverNiteOverRide, 2)
                                End If

                                'If nz(dr("ord_gen_ship_smalltruck"), False) = True Then dr("ord_gen_ship") += 210
                                If nz(dr("ord_gen_ship_smalltruck"), False) = True Then
                                    dr("ord_gen_ship") = Math.Round(dr("ord_gen_ship") * 1.5, 2)
                                End If

                                If dr("ord_gen_ship_collect") = True Then
                                    dr("ord_gen_ship") = 0
                                    dr("ord_gen_ship") = Math.Round(dr("ord_gen_ship") + nz(dr("ord_gen_bottles"), 0) * 0.1, 2)
                                End If
                                If nz(dr("ord_gen_ship_white_glove_override"), 0) <> 0 Then
                                    dr("ord_gen_ship") = Math.Round(dr("ord_gen_ship") + dr("ord_gen_ship_white_glove_override"), 2)
                                Else
                                    If dr("ord_gen_ship_white_glove") = True Then dr("ord_gen_ship") = Math.Round(dr("ord_gen_ship") * 1.5, 2)
                                End If
                                If dr("ord_gen_ship_thirdparty") = True Then
                                    dr("ord_gen_ship") = 0
                                    dr("ord_gen_ship") = Math.Round(dr("ord_gen_ship") + nz(dr("ord_gen_ship_numskids"), 0) * 100, 2)
                                End If
                            End If
                            If dr("ord_gen_ship_cust_pickup") = True Then dr("ord_gen_ship") = 0
                            If dr("ord_gen_type") = "R" Then dr("ord_gen_ship") = 0
                            Math.Round(dr("ord_gen_ship"), 2)

                            'Shipping Tab
                            'If tTaxExempt.Checked = True Then
                            If gsTaxExempt.Checked = True Then
                                dr("ord_gen_tax") = 0
                            Else
                                'Shipping Tab
                                'dr("ord_gen_tax") = Math.Round((taxtot(Asc(dr("ord_gen_type")), dr("ord_gen_rev")) * nz(tCustTaxRate.Value, 0)) + 0.00001, 2)
                                dr("ord_gen_tax") = Math.Round((taxtot(Asc(dr("ord_gen_type")), dr("ord_gen_rev")) * nz(gsTaxRate.Value, 0)) + 0.00001, 2)

                                'Shipping Tab
                                'If tship_state.Text <> "" Then
                                '    cmd.CommandText = "select tax_ship_percent from tax_state where tax_state='" + tship_state.Text + "'"
                                'Else
                                '    cmd.CommandText = "select tax_ship_percent from tax_state where tax_state='" + tsold_state.Text + "'"
                                'End If
                                'ShipTax = nz(cmd.ExecuteScalar, 0)
                                'ShipTax = Math.Round(ShipTax / 100 * nz(tCustTaxRate.Value, 0) * dr("ord_gen_ship"), 2)
                                If gsState.Text <> "" Then
                                    If IsNumeric(gsShipTaxPerc.Text) Then
                                        ShipTax = CDbl(gsShipTaxPerc.Text)
                                    Else
                                        ShipTax = 0
                                    End If
                                Else
                                    'cmd.CommandText = "select tax_ship_percent from tax_state where tax_state='" + tsold_state.Text + "'"
                                    'ShipTax = nz(cmd.ExecuteScalar, 0)
                                    ShipTax = nz(dr("ord_gen_tax_ship_perc"), 0)
                                End If
                                ShipTax = Math.Round(ShipTax / 100 * nz(gsTaxRate.Value, 0) * dr("ord_gen_ship"), 2)

                                dr("ord_gen_tax") = Math.Round(dr("ord_gen_tax") + ShipTax, 2)
                            End If
                            If nz(dr("ord_gen_tax_override"), 0) <> 0 Then dr("ord_gen_tax") = dr("ord_gen_tax_override")
                            If nz(dr("ord_gen_tax_override_perc"), 0) <> 0 Then
                                'If chTaxInstalls.Checked Then
                                dr("ord_gen_tax") = Math.Round((taxtot(Asc(dr("ord_gen_type")), dr("ord_gen_rev")) * dr("ord_gen_tax_override_perc")) + 0.00001, 2)
                                'Else
                                'dr("ord_gen_tax") = Math.Round(((taxtot(Asc(dr("ord_gen_type")), dr("ord_gen_rev")) - install(Asc(dr("ord_gen_type")), dr("ord_gen_rev"))) * dr("ord_gen_tax_override_perc")) + 0.00001, 2)
                                'End If
                            End If

                            dr("ord_gen_total") = Math.Round(dr("ord_gen_line_total") + dr("ord_gen_ship") + dr("ord_gen_tax"), 2)
                            onMatch = match(Asc(dr("ord_gen_type")), dr("ord_gen_rev"))
                            If onMatch > 0 Then
                                If onMatch <> dr("ord_gen_total") Then
                                    dr("ord_gen_ship_roundoff") = Math.Round(onMatch - dr("ord_gen_total"), 2)
                                    If dr("ord_gen_ship_roundoff") > 0.05 Or dr("ord_gen_ship_roundoff") < -0.05 Then
                                        'MsgBox("Shipping did not calculate properly for this order.  It caused a high shipping round-off value.  This order will not be able to be saved.  Cancel this order, logout and try again.  If this problem happens again, please notify Todd Witteride or Jon Jansen.", MsgBoxStyle.Critical, "Shipping Roundoff?")
                                    End If
                                    dr("ord_gen_ship") = Math.Round(nz(dr("ord_gen_ship"), 0) + dr("ord_gen_ship_roundoff"), 2)
                                    dr("ord_gen_total") = onMatch
                                End If
                            End If
                        End If

                        If Tab1.ActiveTab.Key <> "C" Then
                            If (Mid(Tab1.ActiveTab.Key, 1, 1) = dr("ord_gen_type")) And (CInt(Mid(Tab1.ActiveTab.Key, 2)) = dr("ord_gen_rev")) Then
                                tTotal2.Text = dr("ord_gen_line_total")
                                tShipTotal.Text = dr("ord_gen_ship")
                                tTaxTotal.Text = dr("ord_gen_tax")
                                tGrandTotal.Text = dr("ord_gen_total")
                                If dr("ord_gen_line_total") < onBaseTotal And tCustId.Text = "" And nz(DVGen(0).Item("ord_gen_src")) <> "MARKETING" Then
                                    If IsNumeric(tOrd.Text) Then
                                        cmd.CommandText = "select count(*) from ord_disc_override where ord_disc_override_ord_serial=" + tOrd.Text + " and ord_disc_override_ord_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " and ord_disc_override_ord_type='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "'"
                                        If cmd.ExecuteScalar = 0 Then
                                            If Not nz(dsGen.Tables(0).Rows(0).Item("ord_gen_web_order"), 0) > 0 Then
                                                lMarginBelow0.Visible = True
                                            Else
                                                lMarginBelow0.Visible = False
                                            End If
                                        Else
                                            lMarginBelow0.Visible = False
                                        End If
                                    Else
                                        If Not nz(dsGen.Tables(0).Rows(0).Item("ord_gen_web_order"), 0) > 0 Then
                                            lMarginBelow0.Visible = True
                                        Else
                                            lMarginBelow0.Visible = False
                                        End If
                                    End If
                                Else
                                    lMarginBelow0.Visible = False
                                End If
                            End If
                        End If
                        If dr.HasVersion(DataRowVersion.Original) Then
                            If QuietMode = False Then
                                If UserType = "D" And ((nz(dr("ord_gen_total", DataRowVersion.Original), 0) <> dr("ord_gen_total", DataRowVersion.Current)) Or dr("ord_gen_total") = 0) Then
                                    ' dalew dr("ord_gen_co_desreq") = 1
                                    dr("ord_gen_co_designer") = 0
                                    dr("ord_gen_co_isr") = 0
                                    dr("ord_gen_co_factoryinstall") = 0
                                End If
                                'per Todd 3/12/2008
                                'If UserType = "I" And (dr("ord_gen_total", DataRowVersion.Original) <> dr("ord_gen_total", DataRowVersion.Current)) Then
                                '    dr("ord_gen_co_isr") = 0
                                'End If
                            End If
                        End If
                    End If
                Next
            End If

            If ((nz(DVGen(0).Item("ord_gen_tax_override"), 0) = 0) And (nz(DVGen(0).Item("ord_gen_tax_override_perc"), 0) = 0)) Then
                lTax.BackColor = Color.LightGoldenrodYellow
            Else
                lTax.BackColor = Color.Red
            End If
            cnnx.Close()
            ShowBase()
        Catch
            DoError(Err, Me)
        End Try
    End Sub
    Private Sub PriceDoTotal(ByRef tb As DataTable)
        Dim dr As DataRow
        Dim HasDiscount As Boolean = False
        Dim HasUpcharge As Boolean = False
        Dim HasPercPrice As Boolean = False

        For Each dr In tb.Rows
            If dr("ord_itm_is_disc") = True Then HasDiscount = True
            If dr("ord_itm_is_up") = True Then HasUpcharge = True
            If dr("ord_itm_is_perc_price") = True Then HasPercPrice = True
        Next
    End Sub
    Private Function GetDiscTot(ByVal rws As DataView, ByVal Prod As String, ByVal Matl As String, Optional ByVal ResetLineTot As Boolean = False) As Double
        Try
            Dim tot As Double = 0
            Dim dr As DataRowView
            Dim DoIt As Boolean
            Dim x As Integer

            If rws.Count > 0 Then
                For x = 0 To rws.Count - 1
                    dr = rws.Item(x)
                    If (dr.Row.RowState <> DataRowState.Deleted) And (dr.Row.RowState <> DataRowState.Detached) Then
                        If nz(dr("ord_itm_item_code")) <> "" Then
                            DoIt = False
                            'If dr.RowState <> DataRowState.Deleted Then
                            If ResetLineTot = True Then dr("ord_itm_disc_amt") = 0

                            If tCustId.Text = "IWA" Then
                                If (dr("ord_itm_is_disc") = False And dr("ord_itm_is_up") = False And dr("ord_itm_is_perc_price") = False) Or (dr("ord_itm_item_code") = "AUTOPROCESS") Then DoIt = True
                            Else
                                If dr("ord_itm_is_disc") = False And dr("ord_itm_is_up") = False And dr("ord_itm_is_perc_price") = False Then DoIt = True
                            End If

                            If Prod <> "" Then
                                If nz(dr("ord_itm_prod_type")) = Prod Then
                                    DoIt = True And DoIt
                                Else
                                    DoIt = False
                                End If
                            End If
                            If Matl <> "" Then
                                If nz(dr("ord_itm_mat_code")) = Matl Then
                                    DoIt = True And DoIt
                                Else
                                    DoIt = False
                                End If
                            End If
                            If DoIt Then
                                tot += (dr("ord_itm_qty") * dr("ord_itm_unt_sell")) + dr("ord_itm_disc") + dr("ord_itm_disc_amt")
                            End If
                            'End If
                        End If
                    End If
                Next
            End If
            GetDiscTot = tot
        Catch
            DoError(Err, Me)
        End Try
    End Function
    Private Function GetMarginTot(ByVal rws As DataView, ByVal prod As String, ByVal Matl As String) As Double
        Dim cn As New SqlConnection(connStr)
        Try
            Dim tot As Double = 0
            Dim dr As DataRowView
            Dim DoIt As Boolean
            Dim x As Integer
            Dim cmd As New SqlCommand("", cn)
            Dim SurCharge As Double

            cn.Open()
            If rws.Count > 0 Then
                For x = 0 To rws.Count - 1
                    dr = rws.Item(x)
                    If dr("ord_itm_base_price") <> 0 Then
                        DoIt = False
                        'If dr.RowState <> DataRowState.Deleted Then
                        If dr("ord_itm_is_disc") = False And dr("ord_itm_is_up") = False And dr("ord_itm_is_perc_price") = False Then
                            If prod = "" And Matl = "" Then
                                DoIt = True
                            Else
                                DoIt = IIf(prod = "", True, nz(dr("ord_itm_prod_type")) = prod) And IIf(Matl = "", True, nz(dr("ord_itm_mat_code")) = Matl)
                            End If
                        End If
                        If DoIt Then
                            SurCharge = 1
                            cmd.CommandText = "select itm_surcharge from itm_file where itm_code='" + dr("ord_itm_item_code") + "'"
                            If nz(cmd.ExecuteScalar, False) = True Then
                                Dim rate As Double
                                cmd.CommandText = "select itm_surcharge_rate from itm_surcharge where itm_surcharge_from<=" + CStr(dr("ord_itm_qty")) + " and itm_surcharge_to>=" + CStr(dr("ord_itm_qty"))
                                SurCharge = nz(cmd.ExecuteScalar, 0)
                            End If
                            tot += Math.Round((dr("ord_itm_qty") * (Math.Round(dr("ord_itm_unt_sell") / SurCharge, 2) - dr("ord_itm_base_price"))) + dr("ord_itm_disc") + dr("ord_itm_disc_amt"), 2)
                        End If
                    End If
                    'End If
                Next
            End If
            GetMarginTot = tot
        Catch
            DoError(Err, Me)
        Finally
            cn.Close()
        End Try
    End Function
    Private Function GetTotalDisc(ByVal rws As DataView) As Double
        Try
            Dim tot As Double = 0
            Dim dr As DataRowView
            Dim DoIt As Boolean
            Dim x As Integer

            If rws.Count > 0 Then
                For x = 0 To rws.Count - 1
                    dr = rws.Item(x)
                    DoIt = False
                    'If dr.RowState <> DataRowState.Deleted Then
                    If dr("ord_itm_is_disc") = False And dr("ord_itm_is_up") = False Then DoIt = True
                    If DoIt Then
                        tot += dr("ord_itm_disc")
                    Else
                        tot += dr("ord_itm_qty") * dr("ord_itm_unt_sell")
                    End If
                    'End If
                Next
            End If
            GetTotalDisc = tot
        Catch
            DoError(Err, Me)
        End Try
    End Function
    Private Function GetDiscTotForPercPrice(ByVal rws As DataView, ByVal Prod As String, ByVal Items As String) As Double
        Try
            Dim tot As Double = 0
            Dim dr As DataRowView
            Dim DoIt As Boolean
            Dim x As Integer
            Dim checkItem As String
            Dim item, wood As String
            Dim row As DataRow

            If rws.Count > 0 Then
                For x = 0 To rws.Count - 1
                    dr = rws.Item(x)
                    row = dr.Row
                    DoIt = False
                    If row.RowState <> DataRowState.Deleted And row.RowState <> DataRowState.Detached Then
                        If dr("ord_itm_is_disc") = False And dr("ord_itm_is_up") = False And dr("ord_itm_is_perc_price") = False Then
                            If Prod <> "" And nz(dr("ord_itm_prod_type")) <> "" Then
                                For Each item In Split(Prod, ",")
                                    item = Trim(item)
                                    If InStr(item, "(") > 0 Then
                                        wood = Split(item, "(")(1)
                                        wood = Replace(wood, ")", "")
                                        item = Split(item, "(")(0)
                                        If item = dr("ord_itm_prod_type") And wood = nz(dr("ord_itm_mat_code")) Then
                                            DoIt = True
                                            Exit For
                                        Else
                                            DoIt = False Or DoIt
                                        End If
                                    Else
                                        If item = dr("ord_itm_prod_type") Then
                                            DoIt = True
                                            Exit For
                                        Else
                                            DoIt = False Or DoIt
                                        End If
                                    End If
                                Next
                            End If
                            If Items <> "" And nz(dr("ord_itm_item_code")) <> "" Then
                                For Each item In Split(Items, ",")
                                    checkItem = Replace(item, "%", "")
                                    If Mid(dr("ord_itm_item_code"), 1, Len(checkItem)) = checkItem Then
                                        DoIt = False
                                    End If
                                Next
                            End If
                        Else
                            'If dr("ord_itm_is_disc") = True Or dr("ord_itm_is_up") = True Then
                            '    For Each item In Split(Items, ",")
                            '        checkItem = Replace(item, "%", "")
                            '        If Mid(dr("ord_itm_item_code"), 1, Len(checkItem)) = checkItem Then
                            '            tot -= Math.Round((dr("ord_itm_qty") * dr("ord_itm_unt_sell")) + dr("ord_itm_disc") + dr("ord_itm_disc_amt"), 2)
                            '            Exit For
                            '        End If
                            '    Next
                            'End If
                        End If
                        If DoIt Then
                            tot += Math.Round((dr("ord_itm_qty") * dr("ord_itm_unt_sell")) + dr("ord_itm_disc"), 2)
                        End If
                    End If
                Next
            End If
            GetDiscTotForPercPrice = tot
        Catch
            DoError(Err, Me)
        End Try
    End Function
    Private Function GetMatchDisc(ByVal Match As Double, ByVal IsDiscount As Boolean) As Double
        Dim dr As DataRowView
        Dim LineTot As Double = 0
        Dim ship As Double = 0
        Dim taxRate As Double = 0
        Dim EditIt As Boolean = True
        Dim x As Integer
        Dim TaxTot As Double = 0
        Dim NonTaxTot As Double = 0
        Dim onTot, onDisc, TaxSub, ShipTaxPerc As Double
        Dim cmd As New SqlCommand("", cnn2)

        For x = 0 To DVItems.Count - 1
            dr = DVItems.Item(x)
            If (dr.Row.RowState <> DataRowState.Deleted) And (dr.Row.RowState <> DataRowState.Detached) Then
                If dr("ord_itm_disc_type") <> "T" Then
                    LineTot += (nz(dr("ord_itm_qty"), 0) * nz(dr("ord_itm_unt_sell"), 0)) + nz(dr("ord_itm_disc"), 0)
                    If nz(dr("ord_itm_taxable"), False) = True Then
                        TaxTot += (nz(dr("ord_itm_qty"), 0) * nz(dr("ord_itm_unt_sell"), 0)) + nz(dr("ord_itm_disc"), 0)
                    Else
                        NonTaxTot += (nz(dr("ord_itm_qty"), 0) * nz(dr("ord_itm_unt_sell"), 0)) + nz(dr("ord_itm_disc"), 0)
                    End If
                    If nz(dr("ord_itm_ship_flat"), 0) <> 0 Then
                        ship += dr("ord_itm_ship_flat")
                    Else
                        ship += (nz(dr("ord_itm_qty"), 0) * nz(dr("ord_itm_unt_ship"), 0))
                    End If
                End If
            End If
        Next


        For x = 0 To DVGen.Count - 1
            dr = DVGen.Item(x)
            If dr.Row.RowState <> DataRowState.Deleted And dr.Row.RowState <> DataRowState.Detached Then
                If EditIt = True Then
                    If nz(dr("ord_gen_ship_active"), False) = True Then
                        ship += nz(dr("ord_gen_ship_extra"), 0) - nz(dr("ord_gen_ship_disc"), 0)
                        If nz(dr("ord_gen_ship_inside"), False) = True Then ship += 50 'was 213.15 on 7/23/2008
                        If nz(dr("ord_gen_ship_liftgate"), False) = True Then ship += 50 'was 97.5 on 7/23/2008
                        If nz(dr("ord_gen_ship_twoman"), False) = True Then ship += 100
                        If nz(dr("ord_gen_ship_gated"), False) = True Then ship += 50
                        If nz(dr("ord_gen_ship_intlship"), False) = True Then ship += 400
                        ship += nz(dr("ord_gen_ship_numskids"), 0) * 100
                        If dr("ord_gen_ship_overnite") = True Then
                            If nz(dr("ord_gen_ship_overnite_override"), 0) <> 0 Then
                                ship = Math.Round(ship + dr("ord_gen_ship_overnite_override"), 2)
                            Else
                                ship = Math.Round(dr("ord_gen_ship") * 1.4, 2)
                            End If
                        End If
                        'If nz(dr("ord_gen_ship_smalltruck"), False) = True Then ship += 210
                        If nz(dr("ord_gen_ship_smalltruck"), False) = True Then
                            ship = Math.Round(ship * 1.5, 2)
                        End If

                        If dr("ord_gen_ship_collect") = True Then
                            ship = 0
                            ship = Math.Round(ship + nz(dr("ord_gen_bottles"), 0) * 0.1, 2)
                        End If
                        If nz(dr("ord_gen_ship_white_glove_override"), 0) <> 0 Then
                            ship = Math.Round(ship + dr("ord_gen_ship_white_glove_override"), 2)
                        Else
                            If dr("ord_gen_ship_white_glove") = True Then ship = Math.Round(ship * 1.5, 2)
                        End If
                    End If
                    If dr("ord_gen_ship_cust_pickup") = True Then ship = 0
                    If dr("ord_gen_type") = "R" Then ship = 0
                    If dr("ord_gen_ship_thirdparty") = True Then
                        ship = 0
                        ship = Math.Round(ship + nz(dr("ord_gen_ship_numskids"), 0) * 100, 2)
                    End If

                    If DVGen(0)("ord_gen_tax_exempt") = True Then
                        taxRate = 0
                    Else
                        '****
                        'If dr("ord_gen_alt_ship") = True Then
                        '    GetGenTaxRate(False)
                        '    taxRate = nz(dr("ord_gen_alt_taxrate"), 0)
                        'Else
                        taxRate = nz(DVGen(0)("ord_gen_cust_taxrate"), 0)
                        'End If
                    End If
                'Match -= ship
            End If
            End If
        Next
        'If tax = 0 Then
        '    GetMatchDisc = Match - LineTot
        'Else
        '    'GetMatchDisc = Math.Round((Match / tax) - tot, 2)
        '    onTot = Math.Round(LineTot + (TaxTot * tax) + ship, 2)
        '    onDisc = Math.Round(Match - onTot, 2)
        '    GetMatchDisc = Math.Round((onDisc / (tax + 1)) - ship, 2)
        'End If

        cnn2.Open()
        'If DVGen(0)("ord_gen_alt_ship") = True Then
        '    cmd.CommandText = "select tax_ship_percent from tax_state where tax_state='" + nz(DVAltShip(0)("ord_alt_ship_state")) + "'"
        '    ShipTaxPerc = nz(cmd.ExecuteScalar, 0)
        'Else
        'cmd.CommandText = "select tax_ship_percent from tax_state where tax_state='" + DVGen(0)("ord_gen_ship_state") + "'"
        'ShipTaxPerc = nz(cmd.ExecuteScalar, 0)
        ShipTaxPerc = nz(DVGen(0)("ord_gen_tax_ship_perc"), 0)
        'End If
        cnn2.Close()

        TaxSub = Math.Round((TaxTot * taxRate) + (ship * ShipTaxPerc / 100 * taxRate), 2)
        GetMatchDisc = Math.Round((LineTot + ship + (TaxSub) - Match) / (1 + taxRate), 2)
        If IsDiscount = False Then GetMatchDisc = Math.Round(GetMatchDisc * -1, 2)
        'GetMatchDisc = Math.Round(GetMatchDisc, 2)
    End Function
    Private Sub UltraCalcManager1_CalculationsCompleted(ByVal sender As Object, ByVal e As System.EventArgs) Handles UltraCalcManager1.CalculationsCompleted
        'DoTotal()
    End Sub

    Private Sub TabItems_SelectedTabChanged(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinTabControl.SelectedTabChangedEventArgs) Handles TabItems.SelectedTabChanged
        'KeyLog(e.Tab.Text)
        If UpSellCheckboxesDirty = True Then
            Select Case MsgBox("You have changed items to upsell.  Do you want to save these items now?", MsgBoxStyle.YesNoCancel)
                Case MsgBoxResult.Yes
                    SaveUpsell()
                Case MsgBoxResult.No
                    UpSellCheckboxesDirty = False
                Case MsgBoxResult.Cancel
                    UpSellCheckboxesDirty = False
                    e.PreviousSelectedTab.Selected = True
                    UpSellCheckboxesDirty = True
                    Exit Sub
            End Select
        End If
        UpdateTabItems(e.Tab)
    End Sub
    Private Sub UpdateTabItems(ByVal e As Infragistics.Win.UltraWinTabControl.UltraTab)
        If e.Key Is Nothing Then Exit Sub
        Try
            If Tab1.SelectedTab Is Nothing Then Exit Sub
            Select Case e.Key
                Case "Items"
                    pTotal.Parent = TabItems.SelectedTab.TabPage
                    TestOrdMod()
                Case "General"
                    LoadReps()
                    'UpdateShipping()
                    LoadStatusHistory()
                    If Mid(Tab1.SelectedTab.Key, 1, 1) = "Q" Then
                        gbCheckOff.Visible = True
                        gbOrder.Visible = False
                        gbPropCommit.Visible = True
                        Select Case UCase(UserType)
                            Case "C"
                                cbCellarArt.Enabled = True
                            Case "I"
                                cbISR.Enabled = True
                                cbPriority.Enabled = True
                                cbToArt.Enabled = True
                                'cbFactoryInstall.Enabled = True

                                'If nz(DVGen(0)("ord_gen_co_designer_opened"), False) = False Then cbDesReq.Enabled = True
                                cbDesReq.Enabled = True

                                cbFactoryInstallReq.Enabled = True

                                cbCellarArt.Enabled = True
                                cbFactoryInstall.Enabled = True
                            Case "D"
                                'cbDesigner.Enabled = True
                                If User = "brandonk" Then cbCellarArt.Enabled = True

                                cbPriority.Enabled = True
                                cbFactoryInstallReq.Enabled = True
                                cbToArt.Enabled = True
                                cbDesReq.Enabled = True
                            Case "P"
                                cbFactoryInstall.Enabled = True
                        End Select
                    Else
                        gbCheckOff.Visible = False
                        gbOrder.Visible = True
                        gbPropCommit.Visible = False
                    End If
                Case "Shipping"
                    pTotal.Parent = TabItems.SelectedTab.TabPage
                Case "Payments"
                    LoadPayments()
                Case "Shipments"
                    LoadShipments()
                Case "Notes"
                    LoadNotes()
                Case "Drawings"
                    LoadDocuments()
                Case "Forecast"
                Case "Ship"
                    lOldAltTax.Text = "* Tax rate was " + CStr(Format(DVGen(0)("ord_gen_alt_taxrate") * 100, "#0.00")) + "%"
                Case "UP"
                    LoadUpSells()
                Case "RepReq"
                    LoadRepReq()
                Case "Prod"
                    LoadProduction()
                Case "Diag"
                    LoadDiagnostics()
            End Select
            CheckAcctClosed()
            pAltShip.Enabled = chUseAltShip.Checked And chUseAltShip.Enabled
            CheckShipHold()
            If EditMode = "Edit" Then
                If tStatus.Text <> "SHIPPED" And tStatus.Text <> "STAGED" Then
                    gbOrder.Enabled = True
                Else
                    gbOrder.Enabled = False
                End If

                If UserGroup <> "Admins" And Jcom.User <> "davee" And Jcom.User <> "melissab" And Jcom.User <> "victoriaa" Then
                    'cbSignOff.Enabled = False
                    'cbWriteUp.Enabled = False
                    'cbSignoffSent.Enabled = False
                    'tSignOffDate.Enabled = False
                    'tSignOffNote.Enabled = False
                    'tInstallDate.Enabled = False
                    'tInstaller.Enabled = False
                    'tInstallNotes.Enabled = False
                    cbAddOnNoEmail.Enabled = False
                    gbPropCommit.Enabled = False
                End If
                If (UserGroup = "Admins" Or UCase(User) = "SAMC") And tStatus.Text <> "SHIPPED" And tStatus.Text <> "STAGED" Then
                    Me.tPropStage.Enabled = True
                Else
                    Me.tPropStage.Enabled = False
                End If
                'If UserGroup <> "Admins" And UCase(User) <> "BRANDONK" And UCase(User) <> "CHRISTYL" And UCase(User) <> "DAVEE" And UCase(User) <> "MELISSAB" And Jcom.User <> "victoriaa" And Jcom.User <> "jehpsyt" And Jcom.User <> "christys" And Jcom.User <> "luisam" And Jcom.User <> "kellyg" And Jcom.User <> "rachels" And Jcom.User <> "christysmallz" And Jcom.User <> "julieo" And Jcom.User <> "jamiem" Then
                If UserGroup <> "Admins" And UCase(User) <> "BRANDONK" And UCase(User) <> "CHRISTYL" And UCase(User) <> "DAVEE" And UCase(User) <> "MELISSAB" And Jcom.User <> "victoriaa" And Jcom.User <> "jehpsyt" And Jcom.User <> "christys" And Jcom.User <> "luisam" And Jcom.User <> "kellyg" And Jcom.User <> "rachels" And Jcom.User <> "christysmallz" And Jcom.User <> "julieo" And Jcom.User <> "jamiem" And LCase(Jcom.User) <> "chrism" And LCase(Jcom.User) <> "heatherh" And LCase(Jcom.User) <> "morganb" Then
                    pProduction.Enabled = False
                Else
                    pProduction.Enabled = True
                End If
                pDiag0.Enabled = True
                tDiagNote.Enabled = True
            End If
        Catch
            DoError(Err, Me)
        End Try
    End Sub
    Private Sub LoadDiagnostics()
        If Mid(Tab1.ActiveTab.Key, 1, 1) = "C" Then Exit Sub
        Dim cnt As Integer
        Dim ctl As Control

        If dsDiag.Tables.Count = 0 Then CreateBlankDiag(CInt(Mid(Tab1.ActiveTab.Key, 2)), Mid(Tab1.ActiveTab.Key, 1, 1))
        DVDiag = New DataView(dsDiag.Tables(0), "diag_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " and diag_type='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "'", "diag_sent_date desc", DataViewRowState.CurrentRows)

        If DVDiag.Count = 0 Then
            CreateBlankDiag(CInt(Mid(Tab1.ActiveTab.Key, 2)), Mid(Tab1.ActiveTab.Key, 1, 1))
        End If

        For Each ctl In pDiag.Controls
            If ctl.Name <> "pDiag0" Then ctl.Dispose()
        Next
        For cnt = 0 To DVDiag.Count - 1
            If cnt = 0 Then
                tDiagEmail.Text = nz(DVDiag(0).Item("diag_email"))
                tDiagSent.Text = IIf(nz(DVDiag(0).Item("diag_sent_date"), CDate("1/1/1900")) = CDate("1/1/1900"), "Not Sent", DVDiag(0).Item("diag_sent_date"))
                tDiagRec.Checked = DVDiag(0).Item("diag_rec")
                tDiagRecBy.Text = nz(DVDiag(0).Item("diag_rec_by"))
                tDiagRecDate.Text = IIf(nz(DVDiag(0).Item("diag_rec_date"), CDate("1/1/1900")) = CDate("1/1/1900"), "", DVDiag(0).Item("diag_rec_date"))
                tDiagAcc.Checked = DVDiag(0).Item("diag_acc")
                tDiagAccBy.Text = nz(DVDiag(0).Item("diag_acc_by"))
                tDiagAccDate.Text = IIf(nz(DVDiag(0).Item("diag_acc_date"), CDate("1/1/1900")) = CDate("1/1/1900"), "", DVDiag(0).Item("diag_acc_date"))
                tDiagAccNote.Text = nz(DVDiag(0).Item("diag_acc_note"), "")
                tDiagDen.Checked = DVDiag(0).Item("diag_den")
                tDiagDenBy.Text = nz(DVDiag(0).Item("diag_den_by"))
                tDiagDenDate.Text = IIf(nz(DVDiag(0).Item("diag_den_date"), CDate("1/1/1900")) = CDate("1/1/1900"), "", DVDiag(0).Item("diag_den_date"))
                tDiagDenNote.Text = nz(DVDiag(0).Item("diag_den_note"), "")
                tDiagNextSend.Text = IIf(nz(DVDiag(0).Item("diag_next_send"), CDate("1/1/1900")) = CDate("1/1/1900"), "", DVDiag(0).Item("diag_next_send"))
                tDiagESoldTo.Checked = nz(DVDiag(0).Item("diag_email_soldto"), False)
                tDiagEShipTo.Checked = nz(DVDiag(0).Item("diag_email_shipto"), False)
                tDiagEOSR.Checked = nz(DVDiag(0).Item("diag_email_osr"), False)
                tDiagEISR.Checked = nz(DVDiag(0).Item("diag_email_isr"), False)
                tDiagStatus.Text = nz(DVDiag(0).Item("diag_status"))
            Else
                Dim pn As New Panel
                Dim lb As Infragistics.Win.Misc.UltraLabel
                Dim cb As Infragistics.Win.UltraWinEditors.UltraCheckEditor
                Dim tb As Infragistics.Win.UltraWinEditors.UltraTextEditor
                Dim cbOld As Infragistics.Win.UltraWinEditors.UltraCheckEditor
                Dim tbOld As Infragistics.Win.UltraWinEditors.UltraTextEditor
                Dim eb As Infragistics.Win.UltraWinEditors.EditorButton
                Dim btn As Button
                Dim btnOld As Button

                For Each ctl In pDiag0.Controls
                    If ctl.GetType Is GetType(Infragistics.Win.Misc.UltraLabel) Then
                        lb = New Infragistics.Win.Misc.UltraLabel
                        lb.Text = ctl.Text
                        lb.Top = ctl.Top
                        lb.Left = ctl.Left
                        lb.Width = ctl.Width
                        lb.Font = ctl.Font
                        pn.Controls.Add(lb)
                    End If
                    If ctl.GetType Is GetType(Infragistics.Win.UltraWinEditors.UltraTextEditor) Then
                        tbOld = ctl
                        tb = New Infragistics.Win.UltraWinEditors.UltraTextEditor
                        tb.Text = ""
                        tb.Multiline = tbOld.Multiline
                        tb.Scrollbars = tbOld.Scrollbars
                        tb.ReadOnly = True
                        tb.Top = ctl.Top
                        tb.Left = ctl.Left
                        tb.Width = ctl.Width
                        tb.Height = ctl.Height
                        tb.Font = ctl.Font
                        Select Case tbOld.Name
                            Case "tDiagEmail"
                                tb.Text = nz(DVDiag(cnt).Item("diag_email"))
                            Case "tDiagSent"
                                tb.Text = nz(DVDiag(cnt).Item("diag_sent_date"))
                            Case "tDiagRecBy"
                                tb.Text = nz(DVDiag(cnt).Item("diag_rec_by"))
                            Case "tDiagStatus"
                                tb.Text = nz(DVDiag(cnt).Item("diag_status"))
                            Case "tDiagRecDate"
                                tb.Text = IIf(nz(DVDiag(cnt).Item("diag_rec_date"), CDate("1/1/1900")) = CDate("1/1/1900"), "", DVDiag(cnt).Item("diag_rec_date"))
                            Case "tDiagAccBy"
                                tb.Text = nz(DVDiag(cnt).Item("diag_acc_by"))
                            Case "tDiagAccDate"
                                tb.Text = IIf(nz(DVDiag(cnt).Item("diag_acc_date"), CDate("1/1/1900")) = CDate("1/1/1900"), "", DVDiag(cnt).Item("diag_acc_date"))
                            Case "tDiagAccNote"
                                tb.Text = nz(DVDiag(cnt).Item("diag_acc_note"))
                            Case "tDiagDenBy"
                                tb.Text = nz(DVDiag(cnt).Item("diag_den_by"))
                            Case "tDiagDenDate"
                                tb.Text = IIf(nz(DVDiag(cnt).Item("diag_den_date"), CDate("1/1/1900")) = CDate("1/1/1900"), "", DVDiag(cnt).Item("diag_den_date"))
                            Case "tDiagDenNote"
                                tb.Text = nz(DVDiag(cnt).Item("diag_den_note"))
                                eb = New Infragistics.Win.UltraWinEditors.EditorButton
                                eb.Text = "All"
                                tb.ButtonsRight.Add(eb)
                                AddHandler tb.EditorButtonClick, AddressOf ShowDiagNote
                            Case "tDiagNextSend"
                                tb.Text = IIf(nz(DVDiag(cnt).Item("diag_next_send"), CDate("1/1/1900")) = CDate("1/1/1900"), "", DVDiag(cnt).Item("diag_next_send"))
                        End Select
                        pn.Controls.Add(tb)
                    End If
                    If ctl.GetType Is GetType(Infragistics.Win.UltraWinEditors.UltraCheckEditor) Then
                        cbOld = ctl
                        cb = New Infragistics.Win.UltraWinEditors.UltraCheckEditor
                        cb.Text = ctl.Text
                        cb.Top = ctl.Top
                        cb.Left = ctl.Left
                        cb.Width = ctl.Width
                        cb.Appearance = cbOld.Appearance
                        cb.Enabled = False
                        Select Case cbOld.Name
                            Case "tDiagRec"
                                cb.Checked = DVDiag(cnt).Item("diag_rec")
                            Case "tDiagAcc"
                                cb.Checked = DVDiag(cnt).Item("diag_acc")
                            Case "tDiagDen"
                                cb.Checked = DVDiag(cnt).Item("diag_den")
                            Case "tDiagESoldTo"
                                cb.Checked = nz(DVDiag(cnt).Item("diag_email_soldto"), False)
                            Case "tDiagEShipTo"
                                cb.Checked = nz(DVDiag(cnt).Item("diag_email_shipto"), False)
                            Case "tDiagEOSR"
                                cb.Checked = nz(DVDiag(cnt).Item("diag_email_osr"), False)
                            Case "tDiagEISR"
                                cb.Checked = nz(DVDiag(cnt).Item("diag_email_isr"), False)
                        End Select
                        pn.Controls.Add(cb)
                    End If
                    'If ctl.GetType Is GetType(Button) Then
                    '    btnOld = ctl
                    '    btn = New Button
                    '    btn.Text = ctl.Text
                    '    btn.Top = ctl.Top
                    '    btn.Left = ctl.Left
                    '    btn.Width = ctl.Width
                    '    'btn.Appearance = btnOld.Appearance
                    '    'btn.Enabled = False
                    '    pn.Controls.Add(btn)
                    'End If
                Next

                pn.BackColor = Color.Cornsilk
                pn.BorderStyle = BorderStyle.FixedSingle
                pn.Top = 175 * cnt
                pn.Width = pDiag0.Width
                pn.Height = pDiag0.Height
                pn.Visible = True
                pn.Enabled = True
                pDiag.Controls.Add(pn)
            End If
        Next

        If CheckSecurity("Order Diagnostics") < 2 Then
            tDiagRec.Enabled = False
            tDiagAcc.Enabled = False
            tDiagDen.Enabled = False
            tDiagNextSend.Enabled = False
            tDiagAccNote.Enabled = False
            tDiagDenNote.Enabled = False
        End If
        If EditMode = "Edit" Then pDiag0.Enabled = True
    End Sub
    Private Sub CreateBlankDiag(ByVal Rev As Integer, ByVal Typ As String)
        Dim cmd As New SqlCommand("select * from diag_file where diag_serial= -1", cnn)
        Dim dr As DataRow

        daDiag.SelectCommand = cmd
        daDiag.Fill(dsDiag, "diag_file")
        dr = dsDiag.Tables(0).NewRow
        dr("diag_rev") = Rev
        dr("diag_type") = Typ
        dr("diag_acc") = False
        dr("diag_rec") = False
        dr("diag_den") = False
        dr("diag_status") = "NOTSENT"
        dr("diag_email_soldto") = False
        dr("diag_email_shipto") = False
        dr("diag_email_osr") = False
        dsDiag.Tables(0).Rows.Add(dr)
    End Sub
    Private Sub LoadProduction(Optional ByVal Serial As Long = 0)
        If Tab1.ActiveTab.Key <> "C" Then
            If Serial = 0 Then
                DVOrdProd = New DataView(dsOrdProd.Tables("ord_prod"))
                DVOrdProd.RowFilter = "ord_prod_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " and ord_prod_type='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "'"
                DVOrdProdISC = New DataView(dsOrdProdISC.Tables("ord_prod_isc"))
                DVOrdProdISC.RowFilter = "ord_prod_isc_rev=" + Mid(Tab1.ActiveTab.Key, 2)
                pProduction.BackColor = Color.LightGoldenrodYellow
                bProdUserFuture.Visible = False
            Else
                Dim cmd As New SqlCommand("select * from ord_prod_hist where ord_prod_serial=" + CStr(Serial), cnn)
                Dim da As New SqlDataAdapter(cmd)
                da.Fill(dsOrdProdHist, "ord_prod")
                DVOrdProd = New DataView(dsOrdProdHist.Tables("ord_prod"))
                DVOrdProd.RowFilter = "ord_prod_serial=" + CStr(Serial) + " and ord_prod_type='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "'"
                pProduction.BackColor = Color.Yellow
                bProdUserFuture.Visible = True
            End If

            If DVOrdProd.Count = 0 Then
                Dim rw As DataRow
                rw = dsOrdProd.Tables("ord_prod").NewRow
                rw("ord_prod_rev") = CInt(Mid(Tab1.ActiveTab.Key, 2))
                rw("ord_prod_sign_stain") = "N/A"
                rw("ord_prod_est_comp") = CDate("1/1/1900")
                rw("ord_prod_signoff") = False
                rw("ord_prod_roomnotready") = False
                rw("ord_prod_roomrevision") = False
                rw("ord_prod_waitingsignoff") = False
                rw("ord_prod_signoffrec") = False
                rw("ord_prod_allclear") = False
                rw("ord_prod_designstart") = False
                rw("ord_prod_designcomplete") = False
                rw("ord_prod_tofactory") = False
                rw("ord_prod_kitdown") = False
                'rw("ord_prod_cdrdown") = False
                rw("ord_prod_cellar_art") = False
                rw("ord_prod_factcomp") = False
                rw("ord_prod_added_to_closed_week") = False
                rw("ord_prod_notes_flag") = False
                rw("ord_prod_estship_emailsent_complete") = False
                dsOrdProd.Tables("ord_prod").Rows.Add(rw)
            End If

            'Production Tab
            tpStatus.DataBindings.Clear()
            Me.tpMustShip.DataBindings.Clear()
            Me.tpMustship_By.DataBindings.Clear()
            Me.tpMustShipNote.DataBindings.Clear()
            Me.tpCommitted.DataBindings.Clear()
            Me.tpCommitted_By.DataBindings.Clear()
            Me.tpCommittedNote.DataBindings.Clear()
            Me.tpEstComp.DataBindings.Clear()
            Me.tpEstComp_By.DataBindings.Clear()
            Me.tpEstCompNote.DataBindings.Clear()
            Me.tpArt.DataBindings.Clear()
            Me.tpArt_By.DataBindings.Clear()
            Me.tpArtNote.DataBindings.Clear()
            Me.grInstallServiceCalls.DataBindings.Clear()
            Me.tpSignStain.DataBindings.Clear()
            Me.tpSignedStain_By.DataBindings.Clear()
            Me.tpSignStainDt.DataBindings.Clear()
            Me.tpProdNote.DataBindings.Clear()
            tpSignOffSent.DataBindings.Clear()
            tpSignOffSent_By.DataBindings.Clear()
            tpSignOffSent_Date.DataBindings.Clear()
            tpSignOffSent_Note.DataBindings.Clear()
            tpRoomNotReady.DataBindings.Clear()
            tpRoomNotReady_By.DataBindings.Clear()
            tpRoomNotReady_Date.DataBindings.Clear()
            tpRoomNotReady_Note.DataBindings.Clear()
            tpRoomRevision.DataBindings.Clear()
            tpRoomRevision_By.DataBindings.Clear()
            tpRoomRevision_Date.DataBindings.Clear()
            tpRoomRevision_Note.DataBindings.Clear()
            tpWaitingSignoff.DataBindings.Clear()
            tpWaitingSignoff_By.DataBindings.Clear()
            tpWaitingSignoff_Date.DataBindings.Clear()
            tpWaitingSignoff_Note.DataBindings.Clear()
            tpSignoffRec.DataBindings.Clear()
            tpSignoffRec_By.DataBindings.Clear()
            tpSignoffRec_Date.DataBindings.Clear()
            tpSignoffRec_Note.DataBindings.Clear()
            tpAllClear.DataBindings.Clear()
            tpAllClear_By.DataBindings.Clear()
            tpAllClear_Date.DataBindings.Clear()
            tpAllClear_Note.DataBindings.Clear()
            tpDesignStart.DataBindings.Clear()
            tpDesignStart_By.DataBindings.Clear()
            tpDesignStart_Date.DataBindings.Clear()
            tpDesignStart_Note.DataBindings.Clear()
            tpDesignComplete.DataBindings.Clear()
            tpDesignComplete_By.DataBindings.Clear()
            tpDesignComplete_Date.DataBindings.Clear()
            tpDesignComplete_Note.DataBindings.Clear()
            tpToFactory.DataBindings.Clear()
            tpToFactory_By.DataBindings.Clear()
            tpToFactory_Date.DataBindings.Clear()
            tpToFactory_Note.DataBindings.Clear()
            tpKitDown.DataBindings.Clear()
            chEstEmailShip.DataBindings.Clear()
            lEstShipEmail.DataBindings.Clear()
            tpKitDown_by.DataBindings.Clear()
            tpKitDown_date.DataBindings.Clear()
            tpKitDown_note.DataBindings.Clear()
            'tpCDRDown.DataBindings.Clear()
            'tpCDRDown_by.DataBindings.Clear()
            'tpCDRDown_date.DataBindings.Clear()
            'tpCDRDown_note.DataBindings.Clear()
            tpFactComp.DataBindings.Clear()
            tpFactComp_By.DataBindings.Clear()
            tpFactComp_Date.DataBindings.Clear()
            tpFactComp_Note.DataBindings.Clear()
            tpAddedClosedWeek.DataBindings.Clear()
            tpProdNoteFlag.DataBindings.Clear()

            tpCellarComp.DataBindings.Clear()
            tpCellarComp_by.DataBindings.Clear()
            tpCellarComp_date.DataBindings.Clear()
            tpCellarComp_note.DataBindings.Clear()

            tpStatus.DataBindings.Add("text", DVOrdProd, "ord_prod_status")
            Me.tpMustShip.DataBindings.Add("value", DVOrdProd, "ord_prod_must_ship")
            Me.tpMustship_By.DataBindings.Add("text", DVOrdProd, "ord_prod_must_ship_by")
            Me.tpMustShipNote.DataBindings.Add("text", DVOrdProd, "ord_prod_must_ship_note")
            Me.tpCommitted.DataBindings.Add("value", DVOrdProd, "ord_prod_committed")
            Me.tpCommitted_By.DataBindings.Add("text", DVOrdProd, "ord_prod_committed_by")
            Me.tpCommittedNote.DataBindings.Add("text", DVOrdProd, "ord_prod_committed_note")
            Me.tpEstComp.DataBindings.Add("value", DVOrdProd, "ord_prod_est_comp")
            Me.tpEstComp_By.DataBindings.Add("text", DVOrdProd, "ord_prod_est_comp_by")
            Me.tpEstCompNote.DataBindings.Add("text", DVOrdProd, "ord_prod_est_comp_note")
            Me.tpArt.DataBindings.Add("value", DVOrdProd, "ord_prod_art")
            Me.tpArt_By.DataBindings.Add("text", DVOrdProd, "ord_prod_art_by")
            Me.tpArtNote.DataBindings.Add("text", DVOrdProd, "ord_prod_art_note")
            Me.grInstallServiceCalls.DataSource = DVOrdProdISC
            Me.grInstallServiceCalls.DataBind()
            Me.tpSignStain.DataBindings.Add("text", DVOrdProd, "ord_prod_sign_stain")
            Me.tpSignedStain_By.DataBindings.Add("text", DVOrdProd, "ord_prod_sign_stain_by")
            Me.tpSignStainDt.DataBindings.Add("value", DVOrdProd, "ord_prod_sign_stain_dt")
            tpSignOffSent.DataBindings.Add("checked", DVOrdProd, "ord_prod_signoff")
            tpSignOffSent_By.DataBindings.Add("text", DVOrdProd, "ord_prod_signoff_by")
            tpSignOffSent_Date.DataBindings.Add("value", DVOrdProd, "ord_prod_signoff_date")
            tpSignOffSent_Note.DataBindings.Add("text", DVOrdProd, "ord_prod_signoff_note")
            tpRoomNotReady.DataBindings.Add("checked", DVOrdProd, "ord_prod_roomnotready")
            tpRoomNotReady_By.DataBindings.Add("text", DVOrdProd, "ord_prod_roomnotready_by")
            tpRoomNotReady_Date.DataBindings.Add("value", DVOrdProd, "ord_prod_roomnotready_date")
            tpRoomNotReady_Note.DataBindings.Add("text", DVOrdProd, "ord_prod_roomnotready_note")
            tpRoomRevision.DataBindings.Add("checked", DVOrdProd, "ord_prod_roomrevision")
            tpRoomRevision_By.DataBindings.Add("text", DVOrdProd, "ord_prod_roomrevision_by")
            tpRoomRevision_Date.DataBindings.Add("value", DVOrdProd, "ord_prod_roomrevision_date")
            tpRoomRevision_Note.DataBindings.Add("text", DVOrdProd, "ord_prod_roomrevision_note")
            tpWaitingSignoff.DataBindings.Add("checked", DVOrdProd, "ord_prod_waitingsignoff")
            tpWaitingSignoff_By.DataBindings.Add("text", DVOrdProd, "ord_prod_waitingsignoff_by")
            tpWaitingSignoff_Date.DataBindings.Add("value", DVOrdProd, "ord_prod_waitingsignoff_date")
            tpWaitingSignoff_Note.DataBindings.Add("text", DVOrdProd, "ord_prod_waitingsignoff_note")
            tpSignoffRec.DataBindings.Add("checked", DVOrdProd, "ord_prod_signoffrec")
            tpSignoffRec_By.DataBindings.Add("text", DVOrdProd, "ord_prod_signoffrec_by")
            tpSignoffRec_Date.DataBindings.Add("value", DVOrdProd, "ord_prod_signoffrec_date")
            tpSignoffRec_Note.DataBindings.Add("text", DVOrdProd, "ord_prod_signoffrec_note")
            tpAllClear.DataBindings.Add("checked", DVOrdProd, "ord_prod_allclear")
            tpAllClear_By.DataBindings.Add("text", DVOrdProd, "ord_prod_allclear_by")
            tpAllClear_Date.DataBindings.Add("value", DVOrdProd, "ord_prod_allclear_date")
            tpAllClear_Note.DataBindings.Add("text", DVOrdProd, "ord_prod_allclear_note")
            tpDesignStart.DataBindings.Add("checked", DVOrdProd, "ord_prod_designstart")
            tpDesignStart_By.DataBindings.Add("text", DVOrdProd, "ord_prod_designstart_by")
            tpDesignStart_Date.DataBindings.Add("value", DVOrdProd, "ord_prod_designstart_date")
            tpDesignStart_Note.DataBindings.Add("text", DVOrdProd, "ord_prod_designstart_note")
            tpDesignComplete.DataBindings.Add("checked", DVOrdProd, "ord_prod_designcomplete")
            tpDesignComplete_By.DataBindings.Add("text", DVOrdProd, "ord_prod_designcomplete_by")
            tpDesignComplete_Date.DataBindings.Add("value", DVOrdProd, "ord_prod_designcomplete_date")
            tpDesignComplete_Note.DataBindings.Add("text", DVOrdProd, "ord_prod_designcomplete_note")
            tpToFactory.DataBindings.Add("checked", DVOrdProd, "ord_prod_tofactory")
            tpToFactory_By.DataBindings.Add("text", DVOrdProd, "ord_prod_tofactory_by")
            tpToFactory_Date.DataBindings.Add("value", DVOrdProd, "ord_prod_tofactory_date")
            tpToFactory_Note.DataBindings.Add("text", DVOrdProd, "ord_prod_tofactory_note")
            tpKitDown.DataBindings.Add("checked", DVOrdProd, "ord_prod_kitdown")

            chEstEmailShip.DataBindings.Add("checked", DVOrdProd, "ord_prod_estship_emailsent_complete")

            lEstShipEmail.DataBindings.Add("text", DVOrdProd, "ord_prod_estship_emailsent")
            tpKitDown_by.DataBindings.Add("text", DVOrdProd, "ord_prod_kitdown_by")
            tpKitDown_date.DataBindings.Add("value", DVOrdProd, "ord_prod_kitdown_date")
            tpKitDown_note.DataBindings.Add("text", DVOrdProd, "ord_prod_kitdown_note")
            'tpCDRDown.DataBindings.Add("checked", DVOrdProd, "ord_prod_cdrdown")
            'tpCDRDown_by.DataBindings.Add("text", DVOrdProd, "ord_prod_cdrdown_by")
            'tpCDRDown_date.DataBindings.Add("value", DVOrdProd, "ord_prod_cdrdown_date")
            'tpCDRDown_note.DataBindings.Add("text", DVOrdProd, "ord_prod_cdrdown_note")
            tpFactComp.DataBindings.Add("checked", DVOrdProd, "ord_prod_FactComp")
            tpFactComp_By.DataBindings.Add("text", DVOrdProd, "ord_prod_FactComp_by")
            tpFactComp_Date.DataBindings.Add("value", DVOrdProd, "ord_prod_FactComp_date")
            tpFactComp_Note.DataBindings.Add("text", DVOrdProd, "ord_prod_FactComp_note")
            tpAddedClosedWeek.DataBindings.Add("checked", DVOrdProd, "ord_prod_added_to_closed_week")
            tpProdNoteFlag.DataBindings.Add("checked", DVOrdProd, "ord_prod_notes_flag")
            tpProdNote.DataBindings.Add("text", DVOrdProd, "ord_prod_production_note")

            tpCellarComp.DataBindings.Add("checked", DVOrdProd, "ord_prod_cellar_art")
            tpCellarComp_by.DataBindings.Add("text", DVOrdProd, "ord_prod_cellar_art_by")
            tpCellarComp_date.DataBindings.Add("value", DVOrdProd, "ord_prod_cellar_art_date")
            tpCellarComp_note.DataBindings.Add("text", DVOrdProd, "ord_prod_cellar_art_note")
        End If

        If DVOrdProd(0).Item("ord_prod_who") Is DBNull.Value Then
            lProdUser.Visible = False
            bProdUserPast.Visible = False
        Else
            lProdUser.Text = "Saved by " + DVOrdProd(0).Item("ord_prod_who") + " on " + Format(DVOrdProd(0).Item("ord_prod_date"), "MM-dd-yyyy hh:mm")
            lProdUser.Tag = CStr(Serial)
            lProdUser.Visible = True
            bProdUserPast.Visible = True
        End If
    End Sub
    Private Sub LoadRepReq()
        Dim x As Integer
        Dim dr As DataRow
        Dim ll As LinkLabel

        DVRepReq = New DataView(dsRepReq.Tables(0), "ord_rep_ord_rev=" + Mid(Tab1.ActiveTab.Key, 2), "", DataViewRowState.CurrentRows)
        'DVRepReq.RowFilter = "ord_rep_req_rev=" + Mid(Tab1.ActiveTab.Key, 2)
        pRepReq.Controls.Clear()
        If DVRepReq.Count > 0 Then
            For x = 0 To DVRepReq.Count - 1
                dr = DVRepReq.Item(x).Row
                ll = New LinkLabel
                ll.Text = CStr(x + 1)
                ll.Top = 0
                ll.Left = 40 * x
                ll.Width = 30
                If onRepReq = 0 Then
                    If x = 0 Then
                        ll.BackColor = Color.Yellow
                        onRepReq = dr("ord_rep_req_rev")
                    End If
                Else
                    If onRepReq = dr("ord_rep_req_rev") Then
                        ll.BackColor = Color.Yellow
                    Else
                        ll.BackColor = Color.Empty
                    End If
                End If
                AddHandler ll.Click, AddressOf RepReqChanged
                'll.Font = New Font(ll.Font, 10)
                ll.Tag = "rr" + CStr(dr("ord_rep_req_serial"))
                Me.pRepReq.Controls.Add(ll)
            Next
            lRepReq.Visible = True
            DVRepReq = New DataView(dsRepReq.Tables(0), "ord_rep_ord_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " and ord_rep_req_rev=" + CStr(onRepReq), "", DataViewRowState.CurrentRows)
            'DVRepReq.RowFilter = "ord_rep_ord_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " and ord_rep_req_rev=" + CStr(onRepReq)
            tabRepReq.Visible = True
        Else
            lRepReq.Visible = False
            tabRepReq.Visible = False
        End If

        'Replacement Request
        Me.rrName.DataBindings.Clear()
        Me.rrCompany.DataBindings.Clear()
        Me.rrCountry.DataBindings.Clear()
        Me.rrAddr1.DataBindings.Clear()
        Me.rrAddr2.DataBindings.Clear()
        Me.rrAddr3.DataBindings.Clear()
        Me.rrCity.DataBindings.Clear()
        Me.rrState.DataBindings.Clear()
        Me.rrZip.DataBindings.Clear()
        Me.rrCounty.DataBindings.Clear()
        Me.rrProvince.DataBindings.Clear()
        Me.rrPhone2.DataBindings.Clear()
        Me.rrFax.DataBindings.Clear()
        Me.rrEmail.DataBindings.Clear()
        Me.rrName.DataBindings.Add("text", DVRepReq, "ord_rep_req_name")
        Me.rrCompany.DataBindings.Add("text", DVRepReq, "ord_rep_req_company")
        Me.rrCountry.DataBindings.Add("text", DVRepReq, "ord_rep_req_country")
        Me.rrAddr1.DataBindings.Add("text", DVRepReq, "ord_rep_req_addr1")
        Me.rrAddr2.DataBindings.Add("text", DVRepReq, "ord_rep_req_addr2")
        Me.rrAddr3.DataBindings.Add("text", DVRepReq, "ord_rep_req_addr3")
        Me.rrCity.DataBindings.Add("text", DVRepReq, "ord_rep_req_city")
        Me.rrState.DataBindings.Add("text", DVRepReq, "ord_rep_req_state")
        Me.rrZip.DataBindings.Add("text", DVRepReq, "ord_rep_req_zip")
        Me.rrCounty.DataBindings.Add("text", DVRepReq, "ord_rep_req_county")
        Me.rrProvince.DataBindings.Add("text", DVRepReq, "ord_rep_req_province")
        Me.rrPhone2.DataBindings.Add("text", DVRepReq, "ord_rep_req_phone2")
        Me.rrFax.DataBindings.Add("text", DVRepReq, "ord_rep_req_fax")
        Me.rrEmail.DataBindings.Add("text", DVRepReq, "ord_rep_req_email")

        Me.rbRFSendImmediately.DataBindings.Clear()
        Me.rbRFCreditCard.DataBindings.Clear()
        Me.rbRFSendingReplacement.DataBindings.Clear()
        Me.rbRFRestocking.DataBindings.Clear()
        Me.tRFRestocking.DataBindings.Clear()
        Me.rbRFShipping.DataBindings.Clear()
        Me.tRFShipping.DataBindings.Clear()
        Me.rbRFQC.DataBindings.Clear()
        Me.rbRFClaim.DataBindings.Clear()
        Me.tRFCarrier.DataBindings.Clear()
        Me.tRFTracking.DataBindings.Clear()
        Me.rbRFSendImmediately.DataBindings.Add("value", DVRepReq, "orr_rf_immediately")
        Me.rbRFCreditCard.DataBindings.Add("value", DVRepReq, "orr_rf_creditcard")
        Me.rbRFSendingReplacement.DataBindings.Add("value", DVRepReq, "orr_rf_sendreplacement")
        Me.rbRFRestocking.DataBindings.Add("value", DVRepReq, "orr_rf_restocking")
        Me.tRFRestocking.DataBindings.Add("value", DVRepReq, "orr_rf_restocking_tx")
        Me.rbRFShipping.DataBindings.Add("value", DVRepReq, "orr_rf_shipping")
        Me.tRFShipping.DataBindings.Add("text", DVRepReq, "orr_rf_shipping_tx")
        Me.rbRFQC.DataBindings.Add("value", DVRepReq, "orr_rf_qc")
        Me.rbRFClaim.DataBindings.Add("value", DVRepReq, "orr_rf_claim")
        Me.tRFCarrier.DataBindings.Add("text", DVRepReq, "orr_rf_carrier")
        Me.tRFTracking.DataBindings.Add("text", DVRepReq, "orr_rf_tracking")


    End Sub
    Private Sub RepReqChanged(ByVal sender As Object, ByVal e As EventArgs)
        Dim ll As LinkLabel = sender
        DVRepReq.RowFilter = "ord_rep_ord_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " and ord_rep_req_rev=" + ll.Text
        onRepReq = CInt(ll.Text)

        For Each ll In pRepReq.Controls
            ll.BackColor = Color.Empty
        Next
        ll = sender
        ll.BackColor = Color.Yellow
    End Sub
    Private Sub CheckPrimaryDirectory()
        Try
            If tOrd.Text = "" Then Exit Sub

            Dim dr As String
            Dim dirs As Array
            Dim sp As String = "*"

            dirs = IO.Directory.GetDirectories(PDFPath, tOrd.Text + " (" + tord_for.Text + ")")
            If dirs.Length > 0 Then Exit Sub

            dirs = IO.Directory.GetDirectories(PDFPath, tOrd.Text + "*")
            If dirs.Length = 0 Then
                IO.Directory.CreateDirectory(PDFPath + tOrd.Text + " (" + tord_for.Text + ")")
            Else
                For Each dr In dirs
                    If IO.Path.GetFileName(dr) <> tOrd.Text + " (" + tord_for.Text + ")" Then
                        Rename(dr, IO.Path.GetDirectoryName(dr) + "\" + tOrd.Text + " (" + tord_for.Text + ")")
                    Else
                    End If
                Next
            End If
        Catch
            If QuietMode = False Then MsgBox("Directory will not be renamed with the proper Primary Reference due to files being opened", MsgBoxStyle.Information, "Primary Ref Directory Rename?")
        End Try

    End Sub
    Private Sub LoadDocuments()
        ListPDF.Items.Clear()
        If tOrd.Text = "" Then Exit Sub
        Dim dr As String

        '***Old
        'For Each dr In IO.Directory.GetDirectories(PDFPath)
        '    If Microsoft.VisualBasic.Right(dr, 4) <> "2005" Then
        '        LookPDFDir(dr, 0, IIf(bDocList.Text = "List All Revs", False, True))
        '    End If
        'Next

        '***New
        For Each dr In IO.Directory.GetDirectories(PDFPath, tOrd.Text + "*")
            LookPDFFiles(dr, IIf(bDocList.Text = "List All Revs", False, True))
        Next
    End Sub
    Private Sub LookPDFDir(ByVal dirs As String, ByVal lev As Integer, Optional ByVal ShowAll As Boolean = False)
        If IO.Directory.Exists(dirs) = False Then Exit Sub
        Dim dr As String
        Dim sp As String = "*"

        'If Microsoft.VisualBasic.Right(dirs, 8) = "Projects" Then LookPDFdir(dirs, ShowAll)

        If lev = 1 Then sp = tOrd.Text + "*"
        If lev = 0 And Microsoft.VisualBasic.Right(dirs, 9) = "Projects$" Then sp = tOrd.Text + "*"
        For Each dr In IO.Directory.GetDirectories(dirs, sp)
            If sp <> "*" Then 'lev = 1 Then
                LookPDFFiles(dr, ShowAll)
            Else
                If Microsoft.VisualBasic.Right(dr, 8) <> "\Catalog" Then
                    If lev < 1 Then LookPDFDir(dr, lev + 1, ShowAll)
                Else
                    If lev < 1 Then LookPDFDir(dr, lev, ShowAll)
                End If
            End If
        Next

    End Sub
    Private Sub LookPDFFiles(ByVal dr As String, Optional ByVal ShowAll As Boolean = False)
        Dim fl As String
        Dim id As Integer = 1
        Dim Ord As String

        If ShowAll = True Then
            Ord = tOrd.Text  '***Old "*"
        Else
            Select Case Mid(Tab1.ActiveTab.Key, 1, 1)
                Case "Q"
                    Ord = tOrd.Text + "-" + Mid(Tab1.ActiveTab.Key, 2)
                Case "O"
                    Ord = tOrd.Text + "-" + Split(Split(Tab1.ActiveTab.Text, " ")(1), "-")(0)
            End Select
        End If

        For Each fl In IO.Directory.GetFiles(dr, Ord + "*")
            '***Old
            'ListPDF.Items.Add(Mid(fl, 18))
            '***New
            ListPDF.Items.Add(Mid(fl, 23))
        Next
    End Sub
    Private Sub LoadStatusHistory()
        Try
            dsStatus.Clear()
            If tOrd.Text = "" Then Exit Sub
            Dim cmd As New SqlCommand("", cnn2)
            Select Case oHistory.Value
                Case "Edit"
                    cmd.CommandText = "select ord_edt_date as ord_stat_date ,ord_edt_user as ord_stat_user ,ord_edt_mode as ord_stat_stat from ord_edt_log where ord_edt_ord_serial=" + tOrd.Text + " order by ord_edt_date"
                    Dim da As New SqlDataAdapter(cmd)
                    cnn2.Open()
                    da.Fill(dsStatus)
                    cnn2.Close()
                    GridStatus.DataSource = dsStatus.Tables(0)
                Case "Status"
                    If Mid(Tab1.ActiveTab.Key, 1, 1) <> "O" Then Exit Sub
                    cmd.CommandText = "select ord_stat_date ,ord_stat_user ,ord_stat_stat,ord_stat_source from ord_stat where ord_stat_ord_serial=" + tOrd.Text + " and ord_stat_type='O' and ord_stat_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " order by ord_stat_date"
                    Dim da As New SqlDataAdapter(cmd)
                    cnn2.Open()
                    da.Fill(dsStatus)
                    cnn2.Close()
                    GridStatus.DataSource = dsStatus.Tables(0)
                Case "Ship"
                    If Tab1.ActiveTab.Key = "C" Then Exit Sub
                    cmd.CommandText = "select ord_add_ship_date as [Date],ord_add_ship_user as [User], ord_add_ship_now as Changed_To from ord_add_ship where ord_add_ship_ord_serial=" + tOrd.Text + " and ord_add_ship_ord_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " and ord_add_ship_ord_type='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "' order by ord_add_ship_date"
                    Dim da As New SqlDataAdapter(cmd)
                    cnn2.Open()
                    da.Fill(dsStatus)
                    cnn2.Close()
                    GridStatus.DataSource = dsStatus.Tables(0)
                    GridStatus.DisplayLayout.Bands(0).Columns(0).Format = "MM/dd/yyyy hh:mm"
                    GridStatus.DisplayLayout.Bands(0).Columns(2).Format = "$###,##0.00"
            End Select
        Catch
            DoError(Err, Me)
        Finally
            If cnn2.State <> ConnectionState.Closed Then cnn2.Close()
        End Try
    End Sub
    Private Sub LoadDrawings()
        ListPDF.Items.Clear()
        If tOrd.Text = "" Then
            'MsgBox("You must first save this Quote/Order to get a Quote/Order number.", MsgBoxStyle.Information, "Number?")
            Exit Sub
        End If

        Dim fl As String
        Dim drs1, drs2, drs3, drs4 As String

        Try
            If System.IO.Directory.Exists(PDFPath) = False Then Exit Sub
            'Dim Filex(999) As String
            'Filex = System.IO.Directory.GetFiles(PDFPath, "*.*")
            LoadDrawingsSub(PDFPath)
        Catch
            DoError(Err, Me)
        End Try

    End Sub
    Private Sub LoadDrawingsSub(ByVal Pathx As String)
        Dim fl, dr, nm As String
        For Each fl In System.IO.Directory.GetFiles(Pathx, "*.pdf")
            If InStr(IO.Path.GetFileName(fl), " ") > 2 Then
                nm = Mid(IO.Path.GetFileName(fl), 1, InStr(IO.Path.GetFileName(fl), " ") - 1)
                If nm = tOrd.Text + "-" + Mid(Tab1.ActiveTab.Key, 2) Then
                    ListPDF.Items.Add(fl)
                End If
            End If
        Next
        For Each dr In System.IO.Directory.GetDirectories(Pathx)
            LoadDrawingsSub(dr)
        Next
    End Sub
    Private Sub LoadNotes()
        Try
            If Tab1.ActiveTab.Key = "C" Then Exit Sub
            If tOrd.Text = "" Then
                MsgBox("You must first save this Quote/Order to get a Quote/Order number.", MsgBoxStyle.Information, "Number?")
                Exit Sub
            Else
            End If
            Dim cmd As New SqlCommand("select ord_note.*,ord_gen_rev as ord_note_rev from ord_note,ord_gen where ord_note_type <> 'DNote' and ord_note_ord_gen_serial=ord_gen_serial and ord_gen_ord_serial=" + tOrd.Text, cnn2)
            Dim da As New SqlDataAdapter(cmd)

            If bNotesShowAll.Text = "Show This Rev Only" Then
                cmd.CommandText += " order by ord_note_serial desc"
            Else
                cmd.CommandText += " and ord_gen_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " and ord_gen_type='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "' order by ord_note_serial desc"
            End If
            dsNote = New DataSet
            cnn2.Open()
            da.Fill(dsNote, "ord_note")
            cnn2.Close()
            GridNotes.DataSource = dsNote
            GridNotes.DataBind()
            da = Nothing
            cmd = Nothing

            If Mid(Tab1.ActiveTab.Key, 1, 1) = "O" Then
                pOrdMod.Visible = True
            Else
                pOrdMod.Visible = False
            End If

            Dim rw As Infragistics.Win.UltraWinGrid.UltraGridRow
            For Each rw In GridNotes.Rows
                Select Case rw.Cells("ord_note_type").Value
                    Case "OrdMod"
                        rw.Appearance.BackColor = Color.Yellow
                        rw.Appearance.ForeColor = Color.IndianRed
                        rw.Appearance.FontData.Bold = Infragistics.Win.DefaultableBoolean.True
                    Case "ShipNo"
                        rw.Appearance.BackColor = Color.PaleGoldenrod
                        rw.Cells("ord_note").Value = rw.Cells("ord_note_admin").Value
                        If UserGroup = "Admins" Then rw.Cells("ord_note").Style = Infragistics.Win.UltraWinGrid.ColumnStyle.EditButton
                End Select
            Next

            LoadDesignNotes()
        Catch
            DoError(Err, Me)
        End Try
    End Sub

    Private Sub LoadDesignNotes()
        Try
           
            Dim cmd As New SqlCommand("select ord_note.*,ord_gen_rev as ord_note_rev from ord_note,ord_gen where ord_note_type = 'DNote' and ord_note_ord_gen_serial=ord_gen_serial and ord_gen_ord_serial=" + tOrd.Text, cnn2)
            Dim da As New SqlDataAdapter(cmd)

            If bNotesShowAll.Text = "Show This Rev Only" Then
                cmd.CommandText += " order by ord_note_serial desc"
            Else
                cmd.CommandText += " and ord_gen_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " and ord_gen_type='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "' order by ord_note_serial desc"
            End If
            dsNote = New DataSet
            cnn2.Open()
            da.Fill(dsNote, "ord_note2")
            cnn2.Close()
            ugDesignNotes.DataSource = dsNote.Tables("ord_note2")
            ugDesignNotes.DataBind()
            da = Nothing
            cmd = Nothing

            'If Mid(Tab1.ActiveTab.Key, 1, 1) = "O" Then
            '    pOrdMod.Visible = True
            'Else
            '    pOrdMod.Visible = False
            'End If

            'Dim rw As Infragistics.Win.UltraWinGrid.UltraGridRow
            'For Each rw In GridNotes.Rows
            '    Select Case rw.Cells("ord_note_type").Value
            '        Case "OrdMod"
            '            rw.Appearance.BackColor = Color.Yellow
            '            rw.Appearance.ForeColor = Color.IndianRed
            '            rw.Appearance.FontData.Bold = Infragistics.Win.DefaultableBoolean.True
            '        Case "ShipNo"
            '            rw.Appearance.BackColor = Color.PaleGoldenrod
            '            rw.Cells("ord_note").Value = rw.Cells("ord_note_admin").Value
            '            If UserGroup = "Admins" Then rw.Cells("ord_note").Style = Infragistics.Win.UltraWinGrid.ColumnStyle.EditButton
            '    End Select
            'Next
        Catch
            DoError(Err, Me)
        End Try
    End Sub
    Private Sub LoadPayments()
        If DVGen.Count <= 0 Then Exit Sub

        Dim cmd As New SqlCommand("select pay_serial,pay_date,pay_applied,pay_method,pay_num,pay_exp_date,pay_itm_amt,pay_sec_code from pay_file,pay_itm where pay_serial=pay_itm_pay_serial and pay_itm_ord_gen_serial=" + CStr(nz(DVGen(0).Item("ord_gen_serial"), "-1")) + " and pay_itm_amt<>0", cnn)
        Dim da As New SqlDataAdapter(cmd)
        Dim tot As Double
        Dim dr As DataRow
        dsPay.Clear()
        If cnn.State = ConnectionState.Closed Then cnn.Open()
        da.Fill(dsPay, "pay_file")
        If CheckSecurity("CreditCard") = 0 Then
            For Each dr In dsPay.Tables(0).Rows
                Try
                    If InStr("AMERICAN EXPRESS,VISA,MASTER CARD,MC", UCase(dr("pay_method"))) > 0 Then
                        dr("pay_num") = "**** **** **** " + Microsoft.VisualBasic.Right(dr("pay_num"), 4)
                    End If
                Catch
                End Try
            Next
        End If

        cmd.CommandText = "select sum(pay_itm_amt) from pay_itm where pay_itm_ord_gen_serial=" + CStr(nz(DVGen(0).Item("ord_gen_serial"), "-1"))
        tot = nz(cmd.ExecuteScalar, 0)
        tPayTot.Value = tot

        tBalance.Value = nz(DVGen(0).Item("ord_gen_balance"), 0)
        tPayOrdTot.Value = tGrandTotal.Value
        cnn.Close()
        PayGrid.DataSource = dsPay
        PayGrid.DataBind()
        da = Nothing
        cmd = Nothing
    End Sub
    Private Sub LoadShipments()
        If DVGen.Table.Rows.Count <= 0 Then Exit Sub
        If Mid(Tab1.ActiveTab.Key, 1, 1) = "C" Then Exit Sub
        Try
            'Dim cmd As New SqlCommand("select ship_date,ship_via,ship_track,ship_boxes,ship_note,ship_cost,CASE WHEN isnull(ship_ups_declared, '0') = '0' THEN ship_declared ELSE ship_ups_declared END AS ship_declared,ship_itm.* from ship_file left outer join ship_itm on ship_serial=ship_itm_ship_serial left outer join ship_ups on ship_track=ship_ups_tracking where ship_ord_serial=" + CStr(DVGen(0).Item("ord_gen_ord_serial")) + " and ship_ord_type='" + CStr(DVGen(0).Item("ord_gen_type")) + "' and ship_ord_rev=" + CStr(DVGen(0).Item("ord_gen_rev")), cnn)
            'Dim da As New SqlDataAdapter(cmd)
            'Dim tot As Double
            'dsShip.Clear()
            'cnn.Open()
            'da.Fill(dsShip, "ship_itm")
            'cmd.CommandText = "select sum(ship_cost) from ship_file where ship_ord_serial=" + CStr(DVGen(0).Item("ord_gen_ord_serial")) + " and ship_ord_type='" + CStr(DVGen(0).Item("ord_gen_type")) + "' and ship_ord_rev=" + CStr(DVGen(0).Item("ord_gen_rev"))
            'tot = nz(cmd.ExecuteScalar, 0)
            'tShipTot.Text = FormatCurrency(tot)
            'cnn.Close()

            Dim cmd As New SqlCommand("select ship_serial,ship_date,ship_via,ship_track,ship_boxes,ship_note,ship_cost,CASE WHEN isnull(ship_ups_declared, '0') = '0' THEN ship_declared ELSE ship_ups_declared END AS ship_declared,ship_status,ship_status_date,ship_status_signature from ship_file left outer join ship_ups on ship_track=ship_ups_tracking where ship_ord_serial=" + CStr(DVGen(0).Item("ord_gen_ord_serial")) + " and ship_ord_type='" + CStr(DVGen(0).Item("ord_gen_type")) + "' and ship_ord_rev=" + CStr(DVGen(0).Item("ord_gen_rev")), cnn)
            Dim da As New SqlDataAdapter(cmd)
            Dim tot As Double
            Dim shipSerials As String = ""
            Dim dr As DataRow
            Dim Boxes As Integer = 0

            dsShip.Clear()
            dsShip.Relations.Clear()
            cnn.Open()
            da.Fill(dsShip, "ship_itm")
            For Each dr In dsShip.Tables("ship_itm").Rows
                shipSerials += CStr(dr("ship_serial")) + ","
                If dr("ship_via") <> "STAGED" Then Boxes += 1
            Next
            If Boxes = 1 Then
                tTrackBoxes.Text = "1 Box"
            Else
                tTrackBoxes.Text = CStr(Boxes) + " Boxes"
            End If
            If shipSerials.Length > 0 Then shipSerials = Mid(shipSerials, 1, Len(shipSerials) - 1)

            If shipSerials <> "" Then
                cmd.CommandText = "select ship_itm_ship_serial,ship_itm_qty,ship_itm_code,ship_itm_desc from ship_itm where ship_itm_ship_serial in (" + shipSerials + ")"
                da.Fill(dsShip, "itms")
                Dim parentCol As DataColumn
                Dim childCol As DataColumn
                ' Code to get the DataSet not shown here.
                parentCol = dsShip.Tables("ship_itm").Columns("ship_serial")
                childCol = dsShip.Tables("itms").Columns("ship_itm_ship_serial")
                ' Create DataRelation.
                Dim relCustOrder As DataRelation
                relCustOrder = New DataRelation("ShipItems", parentCol, childCol)
                ' Add the relation to the DataSet.
                dsShip.Relations.Add(relCustOrder)

                ShipGrid.DataSource = dsShip
                ShipGrid.DataBind()
                ShipGrid.DisplayLayout.Bands(1).HeaderVisible = False
                ShipGrid.DisplayLayout.Bands(1).Columns(0).Hidden = True
                ShipGrid.DisplayLayout.Bands(1).ColHeadersVisible = False
                ShipGrid.DisplayLayout.Bands(1).Override.CellAppearance.BackColor = Color.LightGoldenrodYellow
                ShipGrid.DisplayLayout.Bands(1).Override.CellAppearance.FontData.SizeInPoints = 8
                ShipGrid.DisplayLayout.Bands(1).Columns("ship_itm_qty").MaxWidth = 100
                ShipGrid.DisplayLayout.Bands(1).Columns("ship_itm_code").MaxWidth = 200
                da = Nothing
            End If
            cmd.CommandText = "select sum(ship_cost) from ship_file where ship_ord_serial=" + CStr(DVGen(0).Item("ord_gen_ord_serial")) + " and ship_ord_type='" + CStr(DVGen(0).Item("ord_gen_type")) + "' and ship_ord_rev=" + CStr(DVGen(0).Item("ord_gen_rev"))
            tot = nz(cmd.ExecuteScalar, 0)
            tShipTot.Text = FormatCurrency(tot)
            cnn.Close()

            cmd = Nothing

            Dim gr As Infragistics.Win.UltraWinGrid.UltraGridRow
            For Each gr In ShipGrid.Rows
                If gr.Cells("ship_via").Value <> "STAGED" Then
                    gr.Expanded = True
                End If
            Next
            If ShipGrid.DisplayLayout.Bands(0).Columns.Contains("ship_serial") Then ShipGrid.DisplayLayout.Bands(0).Columns("ship_serial").Hidden = True
        Catch
            DoError(Err, Me)
        Finally
            If cnn.State = ConnectionState.Open Then cnn.Close()
        End Try
    End Sub
    Private Sub LoadReps()
        If tInside.ValueMember <> "" Then Exit Sub
        Dim cmd As New SqlCommand
        Dim da As New SqlDataAdapter

        cmd.Connection = cnn
        cmd.CommandText = "select rep_serial,rep_code,rep_name from rep_file order by rep_code"
        da.SelectCommand = cmd
        If cnn.State = ConnectionState.Closed Then cnn.Open()
        da.Fill(dsReps, "reps")
        cnn.Close()

        tInside.DataSource = dsReps
        tInside.DisplayMember = "rep_code"
        tInside.ValueMember = "rep_serial"
        tOutside.DataSource = dsReps
        tOutside.DisplayMember = "rep_code"
        tOutside.ValueMember = "rep_serial"
        tDesigner.DataSource = dsReps
        tDesigner.DisplayMember = "rep_code"
        tDesigner.ValueMember = "rep_serial"
    End Sub

    Private Sub LoadUpSells()
        If Tab1.SelectedTab.Key = "C" Then Exit Sub
        Try
            UpTree.Visible = False

            If UpSellDirty = False Then
                UpTree.Visible = True
                Exit Sub
            End If
            If DVItems.Table.Rows.Count = 0 Then
                UpType.Nodes.Clear()
                UpTree.Nodes.Clear()
                UpTree.Visible = True
                Exit Sub
            End If
            UpType.Nodes.Clear()
            UpTree.Nodes.Clear()
            Application.DoEvents()

            Dim cmd As New SqlCommand("", cnn)
            Dim rwI, rwU, rwUI, rw As DataRow
            Dim x As Integer
            'Dim dsUp As New DataSet
            Dim dsUpSells As New DataSet
            Dim daUpSells As New SqlDataAdapter(cmd)
            Dim ndItem, ndGroup, ndChild, ndType, nd, ndLacq, ndStain As Infragistics.Win.UltraWinTree.UltraTreeNode
            Dim onNd As Integer
            Dim onLevel As String = ""
            Dim onType, onFormula As String
            Dim onQty As Double
            Dim onPrice As Double = 0
            Dim itmPrice, LacqPrice, StainPrice As Double
            Dim onItem As String
            Dim sc As New MSScriptControl.ScriptControl
            Dim LacqBottles, StainBottles As Integer
            Dim LacqBottlesTot, StainBottlesTot As Double
            Dim PrintedSelected As Boolean = False
            Dim GroupPrinted As New ArrayList
            Dim dsItemsTemp As New DataSet
            Dim onImage As String = ""
            Dim onNotes As String = ""
            Dim Tot As Double
            sc.Language = "VBScript"
            Dim onClass As String
            Dim inClass As New ArrayList
            Dim Stains As New ArrayList
            Dim Stain As Param
            Dim StainTot As Double = 0
            Dim LacqTot As Double = 0
            Dim HasCustom As Boolean = False
            Dim onConnState As ConnectionState

            StainBottlesTot = 0
            LacqBottlesTot = 0

            onConnState = cnn.State
            If cnn.State <> ConnectionState.Open Then cnn.Open()
            'If DVItems.Count > 0 Then
            '    For x = 0 To DVItems.Count - 1
            '        If DVItems(x).Row.RowState <> DataRowState.Deleted Then
            '            cmd.CommandText = "select itm_class from itm_file where itm_code='" + DVItems(x)("ord_itm_item_code") + "'"
            '            onClass = nz(cmd.ExecuteScalar)
            '            If onClass <> "" And inClass.Contains(onClass) = False Then inClass.Add(onClass)
            '            If (DVItems(x)("ord_itm_prod_type") <> "IN") And (DVItems(x)("ord_itm_prod_type") <> "BREEZE") And (DVItems(x)("ord_itm_prod_type") <> "WHISP") Then
            '                Tot += Math.Round((DVItems(x)("ord_itm_qty") * DVItems(x)("ord_itm_unt_sell")) + DVItems(x)("ord_itm_disc") + DVItems(x)("ord_itm_disc_amt"), 2)
            '            End If

            '        End If
            '    Next
            'End If

            'dsUp.Tables.Add()
            'dsUp.Tables(0).Columns.Add("upsell_parent_itm_code")
            'dsUp.Tables(0).Columns.Add("upsell_type")
            'dsUp.Tables(0).Columns.Add("upsell_group")
            'dsUp.Tables(0).Columns.Add("upsell_group_check")

            UpType.Nodes.Add("<Select All>", "<Select All>")
            dsItemsTemp.Tables.Add(DVItems.Table.Clone)
            For x = 0 To DVItems.Count - 1
                rwI = DVItems(x).Row
                rw = dsItemsTemp.Tables(0).NewRow
                rw.ItemArray = rwI.ItemArray
                dsItemsTemp.Tables(0).Rows.Add(rw)

                If nz(rw("ord_itm_stain_bottles"), 0) + nz(rw("ord_itm_stain_bottles_add"), 0) > 0 Then
                    StainBottlesTot += (nz(rwI("ord_itm_qty"), 0) * nz(rwI("ord_itm_stain_bottles"), 0)) + nz(rwI("ord_itm_stain_bottles_add"), 0)
                End If
                If nz(rw("ord_itm_lacq_bottles"), 0) + nz(rw("ord_itm_lacq_bottles_add"), 0) > 0 Then
                    LacqBottlesTot += (nz(rwI("ord_itm_qty"), 0) * nz(rwI("ord_itm_lacq_bottles"), 0)) + nz(rwI("ord_itm_lacq_bottles_add"), 0)
                End If

                cmd.CommandText = "select itm_class from itm_file where itm_code='" + rwI("ord_itm_item_code") + "'"
                onClass = nz(cmd.ExecuteScalar)
                If onClass <> "" And inClass.Contains(onClass) = False Then inClass.Add(onClass)
                If (rwI("ord_itm_prod_type") <> "IN") And (rwI("ord_itm_prod_type") <> "BREEZE") And (rwI("ord_itm_prod_type") <> "WHISP") Then
                    Tot += Math.Round((rwI("ord_itm_qty") * rwI("ord_itm_unt_sell")) + rwI("ord_itm_disc") + rwI("ord_itm_disc_amt"), 2)
                End If

                If rwI("ord_itm_bottle_search") = "S" Then
                    StainTot += Math.Round((rwI("ord_itm_qty") * rwI("ord_itm_unt_sell")) + rwI("ord_itm_disc") + rwI("ord_itm_disc_amt"), 2)
                    If inClass.Contains(rwI("ord_itm_item_code")) = False Then inClass.Add(rwI("ord_itm_item_code"))
                End If
                If rwI("ord_itm_bottle_search") = "L" Then
                    LacqTot += Math.Round((rwI("ord_itm_qty") * rwI("ord_itm_unt_sell")) + rwI("ord_itm_disc") + rwI("ord_itm_disc_amt"), 2)
                    If inClass.Contains(rwI("ord_itm_item_code")) = False Then inClass.Add(rwI("ord_itm_item_code"))
                End If
                If rwI("ord_itm_prod_type") = "TOP" Or rwI("ord_itm_prod_type") = "GOLD" Or rwI("ord_itm_prod_type") = "GOLD" Then HasCustom = True
            Next
            If StainBottlesTot <> Decimal.Truncate(StainBottlesTot) Then
                StainBottlesTot = Decimal.Truncate(StainBottlesTot) + 1
            Else
                StainBottlesTot = Int(StainBottlesTot)
            End If
            If LacqBottlesTot <> Decimal.Truncate(LacqBottlesTot) Then
                LacqBottlesTot = Decimal.Truncate(LacqBottlesTot) + 1
            Else
                LacqBottlesTot = Int(LacqBottlesTot)
            End If

            rw = dsItemsTemp.Tables(0).NewRow
            rw("ord_itm_item_code") = "AddOn"
            rw("ord_itm_serial") = 0
            rw("ord_itm_desc") = ""
            rw("ord_itm_qty") = 1
            rw("ord_itm_mat_code") = 0
            rw("ord_itm_mpf") = 1
            rw("ord_itm_stain_serial") = 0
            rw("ord_itm_lacq3") = " "
            dsItemsTemp.Tables(0).Rows.Add(rw)

            'If Not IsNumeric(tUpSellSqFt.Text) Then tUpSellSqFt.Text = "0"

            For Each rwI In dsItemsTemp.Tables(0).Rows
                If rwI("ord_itm_width") Is DBNull.Value Then rwI("ord_itm_width") = 0
                If rwI("ord_itm_height") Is DBNull.Value Then rwI("ord_itm_height") = 0
                If rwI("ord_itm_depth") Is DBNull.Value Then rwI("ord_itm_depth") = 0
                If rwI.RowState <> DataRowState.Deleted Then
                    cmd.CommandText = "select upsell_file.*,itm_stain_bottles,itm_lacquer_bottles,itm_height_max,itm_width_max,itm_depth_max,itm_change_price,itm_img,inactive from upsell_file left outer join itm_file on upsell_child_itm_code=itm_code where upsell_parent_itm_code='" + rwI("ord_itm_item_code") + "' and upsell_active=1 and inactive<>1 order by upsell_type,upsell_group,upsell_child_itm_code"
                    dsUpSells.Clear()
                    daUpSells.Fill(dsUpSells)
                    onType = ""
                    If dsUpSells.Tables(0).Rows.Count > 0 Then
                        ndItem = New Infragistics.Win.UltraWinTree.UltraTreeNode
                        ndItem.Text = rwI("ord_itm_item_code") + " : " + rwI("ord_itm_desc") + " (" + CStr(rwI("ord_itm_width")) + " X " + CStr(rwI("ord_itm_height")) + " X " + CStr(rwI("ord_itm_depth")) + ")"
                        ndItem.Override.NodeAppearance.ForeColor = Color.Blue
                        ndItem.Override.NodeAppearance.FontData.Bold = Infragistics.Win.DefaultableBoolean.True
                        ndItem.Override.NodeAppearance.FontData.Italic = Infragistics.Win.DefaultableBoolean.True
                        ndItem.Override.NodeAppearance.FontData.SizeInPoints = 12
                        ndItem.Tag = CStr(nz(rwI("ord_itm_serial"), -1))
                        ndItem.Expanded = True
                        onNd = UpTree.Nodes.Add(ndItem)
                        LacqBottles = 0
                        StainBottles = 0
                        For Each rwU In dsUpSells.Tables(0).Rows
                            'If rwU("upsell_type") = "Lighting" Then
                            '    MsgBox("H")
                            'End If
                            If Not inClass.Contains(nz(rwU("upsell_class"))) Then
                                If onType <> rwU("upsell_type") Then
                                    onType = rwU("upsell_type")
                                    ndType = New Infragistics.Win.UltraWinTree.UltraTreeNode
                                    ndType.Text = onType
                                    ndType.Key = onType + "|" + CStr(Microsoft.VisualBasic.Rnd)
                                    ndType.Override.NodeAppearance.FontData.Bold = Infragistics.Win.DefaultableBoolean.True
                                    ndType.Override.NodeStyle = Infragistics.Win.UltraWinTree.NodeStyle.Standard
                                    ndType.Expanded = True
                                    ndItem.Nodes.Add(ndType)
                                End If
                                If UpType.Nodes.Exists(rwU("upsell_type")) = False Then
                                    nd = UpType.Nodes.Add(rwU("upsell_type"), rwU("upsell_type"))
                                    nd.CheckedState = CheckState.Checked
                                End If
                                If onLevel <> rwU("upsell_parent_itm_code") + "|" + rwU("upsell_type") + "|" + rwU("upsell_group") Then

                                    
                                    If onLevel <> "" Then
                                        If LacqBottles > 0 Then
                                            ndChild = New Infragistics.Win.UltraWinTree.UltraTreeNode
                                            cmd.CommandText = "select itm_code from itm_file where itm_search_bottles='L'"
                                            onItem = nz(cmd.ExecuteScalar)
                                            LacqPrice = GetItemPriceNew(onItem, LacqBottles, "RET", "", 0, 1, tCreate.Value)
                                            If LacqPrice <> 0 Then
                                                onPrice = Math.Round(onPrice + LacqPrice * LacqBottles, 2)
                                                ndChild.Text = onItem + " (" + CStr(LacqBottles) + " @ " + FormatCurrency(LacqPrice) + ")"
                                                ndChild.Override.NodeStyle = Infragistics.Win.UltraWinTree.NodeStyle.Standard
                                                ndChild.Override.NodeAppearance.FontData.SizeInPoints = 8
                                                ndChild.Tag = "NoQuote"
                                                ndGroup.Nodes.Add(ndChild)
                                            End If
                                        End If
                                        If StainBottles > 0 Then
                                            ndChild = New Infragistics.Win.UltraWinTree.UltraTreeNode
                                            cmd.CommandText = "select itm_code from itm_file where itm_search_bottles='S' and itm_stain_serial=" + CStr(rwI("ord_itm_stain_serial"))
                                            onItem = nz(cmd.ExecuteScalar)
                                            StainPrice = GetItemPriceNew(onItem, StainBottles, "RET", "", 0, 1, tCreate.Value)
                                            If StainPrice <> 0 Then
                                                onPrice = Math.Round(onPrice + StainPrice * StainBottles, 2)
                                                ndChild.Text = onItem + " (" + CStr(StainBottles) + " @ " + FormatCurrency(StainPrice) + ")"
                                                ndChild.Override.NodeStyle = Infragistics.Win.UltraWinTree.NodeStyle.Standard
                                                ndChild.Override.NodeAppearance.FontData.SizeInPoints = 8
                                                ndChild.Tag = "NoQuote"
                                                ndGroup.Nodes.Add(ndChild)
                                            End If
                                        End If

                                        If onPrice = -1 Then
                                            'MsgBox("x- " + onLevel.ToString)
                                            ndGroup.Text = ndGroup.Text + " (Error 3)"
                                            ndGroup.Override.NodeAppearance.BackColor = Color.Red
                                        ElseIf onPrice = -2 Then
                                            ndGroup.Text = ndGroup.Text + " (Request Pricing)"
                                            ndGroup.Override.NodeAppearance.BackColor = Color.Yellow
                                        Else
                                            ndGroup.Text = ndGroup.Text + " (" + FormatCurrency(onPrice) + ")"
                                            If onPrice < 0 Then ndGroup.Visible = False
                                        End If
                                        ndGroup.Tag += "|" + CStr(onPrice) + "|" + onImage + "|" + onNotes
                                        'ndGroup.Tag = "Group" + "|" + CStr(rwU("upsell_serial")) + "|" + CStr(nz(rwI("ord_itm_serial"), -1)) + "|" + rwU("upsell_group")
                                        If (onPrice = 0 Or onPrice = -3) And (onType <> "Stain") Then ndGroup.Remove()
                                        LacqBottles = 0
                                        StainBottles = 0
                                        onPrice = 0
                                        'If onType = "Stain" Then onPrice = onPrice - StainTot
                                        onImage = ""
                                        onNotes = ""
                                    End If
                                    onLevel = rwU("upsell_parent_itm_code") + "|" + rwU("upsell_type") + "|" + rwU("upsell_group")
                                    ndGroup = New Infragistics.Win.UltraWinTree.UltraTreeNode
                                    ndGroup.Text = Replace(Replace(rwU("upsell_group"), Chr(13), ""), Chr(10), "")
                                    ndGroup.Tag = "Group" + "|" + CStr(rwU("upsell_serial")) + "|" + CStr(nz(rwI("ord_itm_serial"), -1)) + "|" + rwU("upsell_group")
                                    If EditMode = "Edit" Or EditMode = "Add" Then
                                        ndGroup.Override.NodeStyle = Infragistics.Win.UltraWinTree.NodeStyle.Standard
                                    Else
                                        ndGroup.Override.NodeStyle = Infragistics.Win.UltraWinTree.NodeStyle.CheckBox
                                    End If
                                    If rwI("ord_itm_item_code") = "AddOn" Then
                                        cmd.CommandText = "select ord_upsell_ord_serial from ord_upsell where ord_upsell_upsell_serial=" + CStr(rwU("upsell_serial")) + " and ord_upsell_ord_serial=" + IIf(IsNumeric(tOrd.Text), tOrd.Text, "0") + " and ord_upsell_ord_type='Q' and ord_upsell_ord_rev=" + Mid(Tab1.SelectedTab.Key, 2)
                                    Else
                                        cmd.CommandText = "select ord_upsell_ord_serial from ord_upsell where ord_upsell_itm_serial=" + CStr(nz(rwI("ord_itm_serial"), -1)) + " and ord_upsell_upsell_serial=" + CStr(rwU("upsell_serial"))
                                    End If

                                    If cmd.ExecuteScalar Is Nothing Then
                                        onFormula = UpsellFormulaSimplifier(rwU("upsell_default_print"), rwI("ord_itm_width"), rwI("ord_itm_height"), rwI("ord_itm_depth"), CDbl(IIf(tUpSellSqFt.Text = "", "0", tUpSellSqFt.Text)), Tot, StainBottlesTot)
                                        If onFormula = "Error" Then Err.Raise(0)
                                        onQty = Math.Round(sc.Eval(onFormula) + 0.49, 0)
                                        If onType = "Stain" Then onQty = StainBottlesTot
                                        If onType = "Lacquer" Then onQty = LacqBottlesTot
                                        If onQty <> 0 Then
                                            ndGroup.CheckedState = CheckState.Indeterminate
                                        Else
                                            ndGroup.CheckedState = CheckState.Unchecked
                                        End If
                                        If onType = "Stain" Or onType = "Lacquer" Then ndGroup.CheckedState = IIf(HasCustom, CheckState.Indeterminate, CheckState.Unchecked)
                                    Else
                                        ndGroup.CheckedState = CheckState.Checked
                                        PrintedSelected = True
                                        If GroupPrinted.Contains(Split(ndGroup.Tag, "|")(2)) = False Then GroupPrinted.Add(Split(ndGroup.Tag, "|")(2))
                                    End If
                                    ndType.Nodes.Add(ndGroup)
                                End If
                                ndChild = New Infragistics.Win.UltraWinTree.UltraTreeNode
                                ndChild.Text = rwU("upsell_child_itm_code")
                                If nz(rwU("inactive"), False) = True Then
                                    ndGroup.Visible = False
                                End If
                                ndChild.Override.NodeStyle = Infragistics.Win.UltraWinTree.NodeStyle.Standard
                                ndChild.Override.NodeAppearance.FontData.SizeInPoints = 8

                                If rwI("ord_itm_height") > nz(rwU("itm_height_max"), 0) And nz(rwU("itm_height_max"), 0) <> 0 Then
                                    ndChild.Text = ndChild.Text + " (Exceeds Maximums)"
                                    onPrice = -2
                                Else

                                    Try
                                        onFormula = UpsellFormulaSimplifier(rwU("upsell_formula"), rwI("ord_itm_width"), rwI("ord_itm_height"), rwI("ord_itm_depth"), CDbl(IIf(tUpSellSqFt.Text = "", "0", tUpSellSqFt.Text)), Tot, StainBottlesTot)
                                        If onFormula = "Error" Then
                                            Err.Raise(0)
                                        End If
                                        'If onType = "Lighting" Then
                                        '    MsgBox("v")
                                        'End If
                                        Try
                                            Dim e As Expression = New Expression(Replace(Replace(onFormula, "ROUND", "Round"), "SQR", "Sqrt"))
                                            'Debug.Assert(e.Evaluate)
                                            onQty = Math.Round(e.Evaluate + 0.49, 0)
                                        Catch '
                                            onQty = Math.Round(sc.Eval(onFormula) + 0.49, 0)
                                        End Try
                                        If onType = "Stain" Then onQty = StainBottlesTot
                                        If onType = "Lacquer" Then onQty = LacqBottlesTot
                                        'End If
                                        'onQty = Math.Round(onQty * rwI("ord_itm_qty"), 0)

                                        itmPrice = GetItemPriceNew(rwU("upsell_child_itm_code"), onQty, "RET", rwI("ord_itm_mat_code"), 0, rwI("ord_itm_mpf"), tCreate.Value)

                                        If onQty < 0 Then
                                            onPrice = onQty
                                        Else
                                            If itmPrice < 0 Then onPrice = itmPrice
                                        End If

                                        If rwU("itm_stain_bottles") > 0 And rwI("ord_itm_stain_serial") > 0 Then
                                            StainBottles = Math.Round(StainBottles + rwU("itm_stain_bottles") * onQty, 0)
                                        End If
                                        'If rwU("itm_lacquer_bottles") > 0 And rwI("ord_itm_lacquer") = True Then
                                        '    LacqBottles = Math.Round(LacqBottles + rwU("itm_lacquer_bottles") * onQty, 0)
                                        'End If
                                        If rwU("itm_lacquer_bottles") > 0 And rwI("ord_itm_lacq3") <> " " Then
                                            LacqBottles = Math.Round(LacqBottles + rwU("itm_lacquer_bottles") * onQty, 0)
                                        End If
                                        'Lacq?

                                        If (onPrice >= 0) Or (onType = "Stain") Then onPrice = Math.Round(onPrice + (itmPrice * onQty), 2)

                                        If onType = "Stain" Then onPrice = onPrice - StainTot
                                        If onType = "Lacquer" Then onPrice = onPrice - LacqTot
                                        'If rwU("upsell_child_itm_code") = "TSA" Then
                                        '    MsgBox("HI")
                                        'End If

                                        'If rwU("upsell_type") = "Flooring" Then
                                        '    MsgBox(onLevel.ToString + vbCrLf + onPrice.ToString)
                                        'End If

                                        If nz(rwU("itm_change_price"), False) = True And itmPrice = 0 Then
                                            ndChild.Text += " (Request Pricing)"
                                            onPrice = -2
                                        Else
                                            ndChild.Text += " (" + CStr(onQty) + " @ " + FormatCurrency(itmPrice) + ")"
                                        End If

                                        ndChild.Tag = CStr(onQty) + "|" + CStr(rwI("ord_itm_stain_serial")) + "|" + CStr(rwI("ord_itm_lacq3")) + "|" + nz(rwU("upsell_line_note")) + "|" + CStr(itmPrice)
                                        If rwU("upsell_image_print") = True Then
                                            onImage = nz(rwU("upsell_child_itm_code"))
                                            onNotes = nz(rwU("upsell_print_notes"))
                                        End If

                                    Catch
                                        'MsgBox("HI" + ct.ToString)
                                        ndChild.Text += " (Error 1)"
                                        onPrice = -1
                                    End Try
                                End If
                                If Split(ndChild.Tag, "|")(0) <> "0" Then ndGroup.Nodes.Add(ndChild)
                            End If
                        Next

                        If nz(rwU("itm_lacquer_bottles"), 0) > 0 And nz(rwI("ord_itm_lacq3"), " ") <> " " Then
                            ndLacq = New Infragistics.Win.UltraWinTree.UltraTreeNode
                            cmd.CommandText = "select itm_code from itm_file where itm_search_bottles='L'"
                            onItem = nz(cmd.ExecuteScalar)
                            LacqPrice = GetItemPriceNew(onItem, rwU("itm_lacquer_bottles") * onQty, "RET", "", 0, 1, tCreate.Value) * rwU("itm_lacquer_bottles")
                            itmPrice = Math.Round(itmPrice + LacqPrice * Math.Round(rwU("itm_lacquer_bottles") * onQty, 0), 2)
                            ndLacq.Text = onItem + " (" + CStr(Math.Round(rwU("itm_lacquer_bottles") * onQty, 0)) + " @ " + FormatCurrency(LacqPrice) + ")"
                        End If
                    End If
                End If
            Next
            If onPrice = -1 Then
                ndGroup.Text = ndGroup.Text + " (Error 2)"
                ndGroup.Override.NodeAppearance.BackColor = Color.Red
            ElseIf onPrice = -2 Then
                ndGroup.Text = ndGroup.Text + " (Request Pricing)"
                ndGroup.Override.NodeAppearance.BackColor = Color.Yellow
            Else
                ndGroup.Text = ndGroup.Text + " (" + FormatCurrency(onPrice) + ")"
                If onPrice < 0 Then ndGroup.Visible = False
            End If
            ndGroup.Tag += "|" + CStr(onPrice) + "|" + onImage + "|" + onNotes
            'ndGroup.Tag = "Group" + "|" + CStr(rwU("upsell_serial")) + "|" + CStr(nz(rwI("ord_itm_serial"), -1)) + "|" + rwU("upsell_group")

            'Add Stain and Lacquer upsells
            'Do not un-rem unless changes are made above
            'Dim stns As New ArrayList
            'Dim StnVal As Double = 0
            'StainBottles = 0
            'If DVItems.Count > 0 Then
            '    For x = 0 To DVItems.Count - 1
            '        rw = DVItems(x).Row
            '        If nz(rw("ord_itm_stain_bottles"), 0) + nz(rw("ord_itm_stain_bottles_add"), 0) > 0 Then
            '            StainBottles += (nz(rw("ord_itm_stain_bottles"), 0) * nz(rw("ord_itm_qty"), 0)) + nz(rw("ord_itm_stain_bottles_add"), 0)
            '        End If
            '        'If Mid(rw("ord_itm_item_code"), 1, 4) = "STN-" Then stns.Add(rw("ord_itm_item_code"))
            '        If nz(rw("ord_itm_bottle_search")) = "S" Then
            '            stns.Add(rw("ord_itm_item_code"))
            '            StnVal += (rw("ord_itm_qty") * rw("ord_itm_unt_sell")) + rw("ord_itm_disc")
            '        End If
            '    Next
            'End If

            'ndItem = New Infragistics.Win.UltraWinTree.UltraTreeNode
            'ndItem.Text = "Stain and Lacquer"
            'ndItem.Override.NodeAppearance.ForeColor = Color.Blue
            'ndItem.Override.NodeAppearance.FontData.Bold = Infragistics.Win.DefaultableBoolean.True
            'ndItem.Override.NodeAppearance.FontData.Italic = Infragistics.Win.DefaultableBoolean.True
            'ndItem.Override.NodeAppearance.FontData.SizeInPoints = 12
            'ndItem.Tag = CStr(nz(rwI("ord_itm_serial"), -1))
            'ndItem.Expanded = True
            'onNd = UpTree.Nodes.Add(ndItem)

            'ndType = New Infragistics.Win.UltraWinTree.UltraTreeNode
            'ndType.Text = "Stain"
            'ndType.Key = "Stain" + "|" + CStr(Microsoft.VisualBasic.Rnd)
            'ndType.Override.NodeAppearance.FontData.Bold = Infragistics.Win.DefaultableBoolean.True
            'ndType.Override.NodeStyle = Infragistics.Win.UltraWinTree.NodeStyle.Standard
            'ndType.Expanded = True
            'ndItem.Nodes.Add(ndType)

            ''cmd.CommandText = "select itm_code,itm_desc from itm_file where itm_code like 'STN-%' and itm_search_bottles='S'"
            'cmd.CommandText = "select * from upsell_file where upsell_parent_itm_code = 'STAIN'"
            'dsUpSells.Clear()
            'daUpSells.Fill(dsUpSells)

            'For Each rw In dsUpSells.Tables(0).Rows
            '    If rw.RowState <> DataRowState.Deleted Then
            '        If stns.Contains(rw("upsell_child_itm_code")) = False Then
            '            If rw("upsell_image_print") = True Then
            '                onImage = nz(rw("upsell_child_itm_code"))
            '                onNotes = nz(rw("upsell_print_notes"))
            '            Else
            '                onImage = ""
            '                onNotes = ""
            '            End If
            '            StainPrice = GetItemPriceNew(rw("upsell_child_itm_code"), StainBottles, "RET", "", 0, 1, tCreate.Value)
            '            ndGroup = New Infragistics.Win.UltraWinTree.UltraTreeNode
            '            ndGroup.Text = nz(rw("upsell_group")) + " (" + FormatCurrency(Math.Round((StainPrice * StainBottles) - StnVal, 2)) + ")"
            '            ndGroup.Tag = "Group" + "|" + CStr(rw("upsell_serial")) + "|" + "0" + "|" + rw("upsell_group") + "|" + CStr(StainPrice) + "|" + onImage + "|" + onNotes
            '            If EditMode = "Edit" Or EditMode = "Add" Then
            '                ndGroup.Override.NodeStyle = Infragistics.Win.UltraWinTree.NodeStyle.Standard
            '            Else
            '                ndGroup.Override.NodeStyle = Infragistics.Win.UltraWinTree.NodeStyle.CheckBox
            '            End If
            '            ndType.Nodes.Add(ndGroup)

            '            ndChild = New Infragistics.Win.UltraWinTree.UltraTreeNode
            '            ndChild.Text = rw("upsell_child_itm_code") + " (" + CStr(StainBottles) + " @ " + FormatCurrency(StainPrice) + ")"
            '            ndChild.Tag = CStr(StainBottles) + "|" + "0" + "|" + "0" + "|" + nz(rw("upsell_line_note")) + "|" + CStr(StainPrice)
            '            ndChild.Override.NodeStyle = Infragistics.Win.UltraWinTree.NodeStyle.Standard
            '            ndChild.Override.NodeAppearance.FontData.SizeInPoints = 8
            '            ndGroup.Nodes.Add(ndChild)
            '        End If
            '    End If
            'Next

            If onConnState = ConnectionState.Closed Then cnn.Close()

            ' Check or Uncheck all of the defaults
            For Each nd In UpTree.Nodes
                For Each ndGroup In nd.Nodes
                    For Each ndChild In ndGroup.Nodes
                        If Split(ndChild.Tag, "|")(0) = "Group" Then
                            If ndChild.CheckedState = CheckState.Indeterminate Then
                                If GroupPrinted.Contains(Split(ndChild.Tag, "|")(2)) Then  'PrintedSelected Then
                                    ndChild.CheckedState = CheckState.Unchecked
                                Else
                                    ndChild.CheckedState = CheckState.Checked
                                End If
                            End If
                        End If
                    Next
                Next
            Next

            UpTree.Visible = True
            UpSellDirty = False
            UpSellCheckboxesDirty = False
            If UpTree.Nodes.Count > 0 Then UpTree.TopNode = UpTree.Nodes(0)
        Catch
            DoError(Err, Me)
        End Try
    End Sub

   

    Private Sub UpsellCheckboxes(ByVal Show As Boolean)
        Dim nd, ndgroup, ndchild As Infragistics.Win.UltraWinTree.UltraTreeNode

        For Each nd In UpTree.Nodes
            For Each ndgroup In nd.Nodes
                For Each ndchild In ndgroup.Nodes
                    If Split(ndchild.Tag, "|")(0) = "Group" Then
                        If Show Then
                            ndchild.Override.NodeStyle = Infragistics.Win.UltraWinTree.NodeStyle.CheckBox
                        Else
                            ndchild.Override.NodeStyle = Infragistics.Win.UltraWinTree.NodeStyle.Standard
                        End If
                    End If
                Next
            Next
        Next
        bUpSave.Visible = Show
    End Sub
    Function UpsellFormulaSimplifier(ByVal frm As String, ByVal Width As Double, ByVal Height As Double, ByVal Depth As Double, ByVal SQFt As Double, ByVal Tot As Double, ByVal StainBottles As Integer) As String
        Dim onQty As Double
        Dim onFormula As String
        Dim x As Integer

        onQty = -1
        onFormula = UCase(frm)
        Select Case onFormula
            Case "SLIMLITE10"
                onQty = UpsellFormula(onFormula, Width, Height, Depth)
            Case "SLIMLITE13"
                onQty = UpsellFormula(onFormula, Width, Height, Depth)
            Case "SLIMLITE20"
                onQty = UpsellFormula(onFormula, Width, Height, Depth)
            Case "SLIMLITEDC"
                onQty = UpsellFormula("SLIMLITE10", Width, Height, Depth)
                onQty += UpsellFormula("SLIMLITE13", Width, Height, Depth)
                onQty += UpsellFormula("SLIMLITE20", Width, Height, Depth)
                onQty = onQty - 4
            Case Else
                onFormula = Replace(onFormula, "$W$", CStr(Width))
                onFormula = Replace(onFormula, "$H$", CStr(Height))
                onFormula = Replace(onFormula, "$D$", CStr(Depth))
                onFormula = Replace(onFormula, "$SQFT$", CStr(SQFt))
                onFormula = Replace(onFormula, "$TOTAL$", CStr(Tot))
                onFormula = Replace(onFormula, "$STAINBOTTLES$", CStr(StainBottles))
                onFormula = Replace(onFormula, "$REQUEST_PRICING$", CStr(-2))
        End Select
        If onQty >= 0 Then
            onFormula = CStr(onQty)
        Else
            onFormula = CheckIf(onFormula)
        End If
        UpsellFormulaSimplifier = onFormula
    End Function
    Private Function CheckIf(ByVal IfStr As String) As String
        Try
            If InStr(IfStr, "$IF$") Then
                CheckIf = CheckIfSub(IfStr)
            Else
                CheckIf = IfStr
            End If
        Catch
            CheckIf = "Error"
        End Try
    End Function
    Private Function CheckIfSub(ByVal IfStr As String) As String
        Dim PCnt As Integer = 0
        Dim x As Integer
        Dim frm, xIf, xTrue, xFalse, onItem As String
        Dim sc As New MSScriptControl.ScriptControl
        sc.Language = "VBScript"

        onItem = ""
        frm = ""
        onItem = "IF"
        For x = InStr(IfStr, "$IF$") + 4 To Len(IfStr)
            If Mid(IfStr, x, 1) = "(" Then
                PCnt += 1
                If PCnt > 1 Then frm += "("
            Else
                If Mid(IfStr, x, 1) = ")" Then
                    PCnt -= 1
                    If PCnt = 0 Then
                        Select Case onItem
                            Case "IF"
                                xIf = frm
                                onItem = "TRUE"
                                frm = ""
                            Case "TRUE"
                                xTrue = frm
                                onItem = "FALSE"
                                frm = ""
                            Case "FALSE"
                                xFalse = frm
                                onItem = "END"
                                frm = ""
                        End Select
                        Exit For
                    Else
                        frm += ")"
                    End If
                Else
                    If Mid(IfStr, x, 1) = "," And PCnt = 1 Then
                        Select Case onItem
                            Case "IF"
                                xIf = frm
                                onItem = "TRUE"
                                frm = ""
                            Case "TRUE"
                                xTrue = frm
                                onItem = "FALSE"
                                frm = ""
                            Case "FALSE"
                                xFalse = frm
                                onItem = "END"
                                frm = ""
                        End Select
                    Else
                        frm += Mid(IfStr, x, 1)
                    End If
                End If
            End If
        Next

        If InStr(xIf, "$IF$") > 0 Then xIf = CheckIfSub(xIf)
        If InStr(xTrue, "$IF$") > 0 Then xTrue = CheckIfSub(xTrue)
        If InStr(xFalse, "$IF$") > 0 Then xFalse = CheckIfSub(xFalse)

        If sc.Eval(xIf) = True Then
            CheckIfSub = xTrue
        Else
            CheckIfSub = xFalse
        End If
    End Function
    Private Function UpsellFormula(ByVal Formula As String, ByVal Width As Double, ByVal Height As Double, ByVal Depth As Double) As Integer
        Select Case Formula
            Case "SLIMLITE10"
                Dim WQty, HQty As Integer
                If Width > 4 Then Width -= 4 Else Width = 0
                If Height > 4 Then Height -= 4 Else Height = 0

                If Width < 16 Then
                    WQty = 1
                ElseIf Width >= 16 And Width < 33 Then
                    WQty = 0
                ElseIf Width >= 33 And Width < 36 Then
                    WQty = 1
                ElseIf Width >= 36 And Width < 39 Then
                    WQty = 0
                ElseIf Width >= 39 And Width < 42 Then
                    WQty = 1
                ElseIf Width >= 42 And Width < 53 Then
                    WQty = 0
                ElseIf Width >= 53 And Width < 56 Then
                    WQty = 1
                ElseIf Width >= 56 And Width < 73 Then
                    WQty = 0
                ElseIf Width >= 73 And Width < 76 Then
                    WQty = 1
                Else
                    WQty = 0
                End If

                If Height < 15 Then
                    HQty = 1
                ElseIf Height >= 15 And Height < 32 Then
                    HQty = 0
                ElseIf Height >= 32 And Height < 35 Then
                    HQty = 1
                ElseIf Height >= 35 And Height < 38 Then
                    HQty = 0
                ElseIf Height >= 38 And Height < 41 Then
                    HQty = 1
                ElseIf Height >= 41 And Height < 52 Then
                    HQty = 0
                ElseIf Height >= 52 And Height < 55 Then
                    HQty = 1
                ElseIf Height >= 55 And Height < 72 Then
                    HQty = 0
                ElseIf Height >= 72 And Height < 75 Then
                    HQty = 1
                Else
                    HQty = 0
                End If

                UpsellFormula = (WQty + HQty) * 2
            Case "SLIMLITE13"
                Dim WQty, HQty As Integer
                If Width > 4 Then Width -= 4 Else Width = 0
                If Height > 4 Then Height -= 4 Else Height = 0

                If Width < 16 Then
                    WQty = 0
                ElseIf Width >= 16 And Width < 23 Then
                    WQty = 1
                ElseIf Width >= 23 And Width < 29 Then
                    WQty = 0
                ElseIf Width >= 29 And Width < 33 Then
                    WQty = 2
                ElseIf Width >= 33 And Width < 36 Then
                    WQty = 0
                ElseIf Width >= 36 And Width < 39 Then
                    WQty = 1
                ElseIf Width >= 39 And Width < 42 Then
                    WQty = 2
                ElseIf Width >= 42 And Width < 49 Then
                    WQty = 0
                ElseIf Width >= 49 And Width < 53 Then
                    WQty = 2
                ElseIf Width >= 53 And Width < 56 Then
                    WQty = 0
                ElseIf Width >= 56 And Width < 63 Then
                    WQty = 1
                ElseIf Width >= 63 And Width < 76 Then
                    WQty = 0
                ElseIf Width >= 76 And Width < 80 Then
                    WQty = 1
                Else
                    WQty = 0
                End If

                If Height < 15 Then
                    HQty = 0
                ElseIf Height >= 15 And Height < 22 Then
                    HQty = 1
                ElseIf Height >= 22 And Height < 28 Then
                    HQty = 0
                ElseIf Height >= 28 And Height < 32 Then
                    HQty = 2
                ElseIf Height >= 32 And Height < 35 Then
                    HQty = 0
                ElseIf Height >= 35 And Height < 38 Then
                    HQty = 1
                ElseIf Height >= 38 And Height < 41 Then
                    HQty = 2
                ElseIf Height >= 41 And Height < 48 Then
                    HQty = 0
                ElseIf Height >= 48 And Height < 52 Then
                    HQty = 2
                ElseIf Height >= 52 And Height < 55 Then
                    HQty = 0
                ElseIf Height >= 55 And Height < 62 Then
                    HQty = 1
                ElseIf Height >= 62 And Height < 75 Then
                    HQty = 0
                ElseIf Height >= 75 And Height < 79 Then
                    HQty = 1
                Else
                    HQty = 0
                End If

                UpsellFormula = (WQty + HQty) * 2
            Case "SLIMLITE20"
                Dim WQty, HQty As Integer
                If Width > 4 Then Width -= 4 Else Width = 0
                If Height > 4 Then Height -= 4 Else Height = 0

                If Width < 16 Then
                    WQty = 0
                ElseIf Width >= 16 And Width < 23 Then
                    WQty = 0
                ElseIf Width >= 23 And Width < 29 Then
                    WQty = 1
                ElseIf Width >= 29 And Width < 33 Then
                    WQty = 0
                ElseIf Width >= 33 And Width < 36 Then
                    WQty = 1
                ElseIf Width >= 36 And Width < 39 Then
                    WQty = 1
                ElseIf Width >= 39 And Width < 42 Then
                    WQty = 0
                ElseIf Width >= 42 And Width < 49 Then
                    WQty = 2
                ElseIf Width >= 49 And Width < 53 Then
                    WQty = 1
                ElseIf Width >= 53 And Width < 63 Then
                    WQty = 2
                ElseIf Width >= 63 And Width < 80 Then
                    WQty = 3
                Else
                    WQty = 4
                End If

                If Height < 15 Then
                    HQty = 0
                ElseIf Height >= 15 And Height < 22 Then
                    HQty = 0
                ElseIf Height >= 22 And Height < 28 Then
                    HQty = 1
                ElseIf Height >= 28 And Height < 32 Then
                    HQty = 0
                ElseIf Height >= 32 And Height < 35 Then
                    HQty = 1
                ElseIf Height >= 35 And Height < 38 Then
                    HQty = 1
                ElseIf Height >= 38 And Height < 41 Then
                    HQty = 0
                ElseIf Height >= 41 And Height < 48 Then
                    HQty = 2
                ElseIf Height >= 48 And Height < 52 Then
                    HQty = 1
                ElseIf Height >= 52 And Height < 62 Then
                    HQty = 2
                ElseIf Height >= 62 And Height < 79 Then
                    HQty = 3
                Else
                    HQty = 4
                End If

                UpsellFormula = (WQty + HQty) * 2
        End Select
    End Function
    Private Sub tMaterial_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tMaterial.ValueChanged
        'If EditMode = "" Then Exit Sub
        'If tMaterial.Text = "PREM" Then
        '    If tProdType.Text = "GOLD" Then
        '        tMaterial.Enabled = False
        '    Else
        '        tMaterial.Enabled = True
        '    End If
        'Else
        '    tMaterial.Enabled = True
        'End If
    End Sub
    Private Sub UltraButton1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        'tInside.Value = DVGen(0).Item("ord_gen_inside")
    End Sub

    Private Sub UltraTabPageControl4_Paint(ByVal sender As System.Object, ByVal e As System.Windows.Forms.PaintEventArgs) Handles UltraTabPageControl4.Paint

    End Sub
    Private Sub SetAddButtons()
        'If KeyValue1 = "" Then
        'bAddQuote.Visible = False
        'bAddOrder.Visible = False
        'bReplacement.Visible = False
        'Exit Sub
        'Else
        Select Case Mid(Tab1.ActiveTab.Key, 1, 1)
            Case "Q"
                If onDesignerLockDown > 0 Then
                    bAddQuote.Visible = True
                    bAddOrder.Visible = False
                    bReplacement.Visible = False
                    bCopyItems.Visible = True
                Else
                    bAddQuote.Visible = True
                    bAddOrder.Visible = True
                    bReplacement.Visible = False
                    bCopyItems.Visible = True
                End If
            Case "O"
                bAddQuote.Visible = False
                bAddOrder.Visible = False
                bCopyItems.Visible = True
                bReplacement.Visible = True
            Case Else
                bAddQuote.Visible = False
                bAddOrder.Visible = False
                bReplacement.Visible = False
                bCopyItems.Visible = False
        End Select
        'End If
    End Sub

    Public Overrides Sub Add_After()

        SetAddButtons()
        tsold_phone1.InputMask = "(###) ###-####"
        tCountry.Text = "USA"
        Me.cbEmailShipment.Checked = True
        UpdateCountry()
        LoadDD(tSalesCat, dsSalesCat, "sales_cat", "sales_cat_cat", "sales_cat_cat", "sales_cat_cat,sales_cat_desc", "sales_cat_selectable=1")
        dsGen.Tables(0).Rows(0).Item("ord_gen_sales_cat") = "RET"
        tSalesCat.Text = "RET"
        dsGen.Tables(0).Rows(0).Item("ord_gen_co_isr") = 0
        dsGen.Tables(0).Rows(0).Item("ord_gen_alt_ship") = 0
        dsGen.Tables(0).Rows(0).Item("ord_gen_create_date") = Now
        dsGen.Tables(0).Rows(0).Item("ord_gen_ship_active") = True
        If UserType = "D" Then
            ' DaleW dsGen.Tables(0).Rows(0).Item("ord_gen_co_desreq") = 1
            dsGen.Tables(0).Rows(0).Item("ord_gen_co_designer") = 0
        End If
        pAltShip.Enabled = False
        dsGen.Tables(0).Rows(0).Item("ord_gen_def_lacquer") = 0
        UpsellCheckboxes(False)
        dsGen.Tables(0).Rows(0).Item("ord_gen_tax_exempt") = False
        dsGen.Tables(0).Rows(0).Item("ord_gen_tax_installs") = False

        'Shipping Tab
        gsCountry.Text = "USA"
        dsGen.Tables(0).Rows(0).Item("ord_gen_ship_country") = "USA"
        UpdateGenShipCountry()
        gsTaxExempt.Checked = False
        dsGen.Tables(0).Rows(0).Item("ord_gen_tax_exempt") = False
        gsShipNotify.Checked = True
        dsGen.Tables(0).Rows(0).Item("ord_gen_ship_notify") = True
        gsTaxInstalls.Checked = False
        dsGen.Tables(0).Rows(0).Item("ord_gen_tax_installs") = False
        gsShipHold.Checked = False
        dsGen.Tables(0).Rows(0).Item("ord_gen_ship_hold") = False

        If CheckSecurity("Ship Promo") = 0 Then bShipPromoAdd.Enabled = False

       

        'If tLastCall.Text <> "" And tLastCallBy.Text <> "" Then
        '    If CDate(tLastCall.Text) >= DateAdd(DateInterval.Day, -90, Today) Then
        '        fmOrd.tCCSource.Text = tLastCallBy.Text
        '        fmOrd.tCCSource.Value = tLastCallBy.Text
        '    End If
        'End If

        dsCont.Clear()
        gContacts.DataSource = dsCont
        gContacts.DataBind()

        'bEditSignoff.Visible = False
        onCust = -1
        Try
            If ShowContactsOnAdd Then
                ShowContacts()
            Else
                ShowContactsOnAdd = True
            End If
        Catch
            DoError(Err, MainForm)
        End Try

        

    End Sub
    Private Sub ShowContacts()
        Dim fm As New fmContactFind
        Dim drGen As DataRow

        fm.Width = Me.Width * 0.8
        fm.Height = Me.Height * 0.8
        fm.SearchSpeedCodes = True
        fm.tName.Focus()
        fm.ShowDialog()
        If fm.AddContact Then
            QuietMode = True
            Cancel()
            QuietMode = False
            Dim fmCont As fmContacts
            fmCont = LoadForm("Contacts")
            fmCont.AddedFromContact = True
            fmCont.Add()
            fmCont.AddedFromContact = False
            fmCont.tContName.Text = fm.tName.Text
            fmCont.tContPhone.Text = fm.tPhone.Text
            fmCont.tContComp.Text = fm.tCompany.Text
            fmCont.tContAddr1.Text = fm.tAddr.Text
            fmCont.tContCity.Text = fm.tCity.Text
            fmCont.tContState.Text = fm.tState.Text
            fmCont.tContZip.Text = fm.tZip.Text
            fmCont.tContCell.Text = fm.tCell.Text
            fmCont.tContFax.Text = fm.tFax.Text
            fmCont.tContWebsite.Text = fm.tWebsite.Text
            fmCont.tContType.Text = fm.tType.Text
            fmCont.tContEmail.Text = fm.tEmail.Text
        Else
            If fm.ContactSerial <> 0 Then
                Dim dt As New DataTable
                Dim cmd As New SqlCommand("", cnn)
                Dim dr As DataRow
                Dim da As New SqlDataAdapter(cmd)

                If fm.SpeedCodeSelected Then
                    For Each drGen In dsGen.Tables(0).Rows
                        drGen("ord_gen_src") = ""
                    Next
                    cmd.CommandText = "select cust_id from cust_file where cust_serial=" + CStr(fm.ContactSerial)
                    da.Fill(dt)
                    If dt.Rows.Count > 0 Then
                        dr = dt.Rows(0)
                        tOrdContSerial.Text = ""
                        tCustId.Text = nz(dr("cust_id"))
                        Dim sender As New Object
                        Dim e As New EventArgs
                        tCustId_Leave(sender, e)
                    End If
                Else
                    tOrdContSerial.Text = CStr(fm.ContactSerial)
                    LoadContact()
                End If
            End If
        End If
        fm.Close()
    End Sub
    Private Sub LoadContact()
        Dim dt As New DataTable
        Dim cmd As New SqlCommand("", cnn)
        Dim dr As DataRow
        Dim da As New SqlDataAdapter(cmd)
        Dim drGen As DataRow

        cmd.CommandText = "select cont_file.*,(select top 1 ord_src from cont_src left outer join ord_src on cont_src_ord_src=ord_src where cont_src_cont_serial=cont_serial order by cont_src_serial) as Src from cont_file where cont_serial=" + tOrdContSerial.Text
        da.Fill(dt)
        If dt.Rows.Count > 0 Then
            dr = dt.Rows(0)
            tCustId.Text = ""
            tSoldCustId.Text = ""
            tSold_Name.Text = nz(dr("cont_name"))
            tsold_company.Text = nz(dr("cont_company"))
            tCountry.Text = nz(dr("cont_country"))
            UpdateCountry()
            tsold_addr1.Text = nz(dr("cont_addr1"))
            tsold_addr2.Text = nz(dr("cont_addr2"))
            tsold_addr3.Text = nz(dr("cont_addr3"))
            tSold_City.Text = nz(dr("cont_city"))
            tsold_state.Text = nz(dr("cont_state"))
            tsold_zip.Text = nz(dr("cont_zip"))
            tSoldCounty.Text = nz(dr("cont_county"))
            If tSoldCounty.Text = "" Then
                LoadSoldCities()
                If tSold_City.Rows.Count > 0 Then
                    tSoldCounty.Text = tSold_City.Rows(0).Cells(2).Text
                End If
            End If
            tProvince.Text = nz(dr("cont_province"))
            tsold_phone1.Text = nz(dr("cont_phone1"))
            tsold_phone2.Text = nz(dr("cont_phone2"))
            tsold_email.Text = nz(dr("cont_email"))
            tsold_cell.Text = nz(dr("cont_cell"))
            tsold_fax.Text = nz(dr("cont_fax"))
            'tOrdContSerial.Text = CStr(dr("cont_serial"))
            tFieldConsultant.Value = nz2(dr("cont_field_consult"), 14)
        End If

        For Each drGen In dsGen.Tables(0).Rows
            drGen("ord_gen_inside") = ""
            drGen("ord_gen_outside") = ""
            drGen("ord_gen_src") = nz(dr("Src"))
            If nz(dr("cont_last_contact"), CDate("1/1/1900")) >= DateAdd(DateInterval.Day, -90, Today) Then
                drGen("ord_gen_ccsrc") = nz(dr("cont_call_center_rep_code"))
            End If
        Next
        UpdateSalesRep()
    End Sub
    Private Sub AcceptOrd()
        tOrd.Enabled = True
        tOrd.Focus()
    End Sub
    Public Overrides Sub Edit_After()
        SetAddButtons()
        'tSalesCat.Enabled = (tCustId.Text = "")
        If tCustId.Text = "" Then
            tSalesCat.Enabled = True
        Else
            tSalesCat.Enabled = False
        End If
        CheckAcctClosed()
        UpdateModeLog("Edit")
        EditTime = Now
        pAltShip.Enabled = chUseAltShip.Checked And chUseAltShip.Enabled
        If tSoldCustId.Text <> "" Then tsold_company.Enabled = False
        CheckDims()
        UpsellCheckboxes(False)
        If TabItems.ActiveTab.Text = "Shipping" Then CheckShipHold()
        If TabItems.ActiveTab.Key = "Prod" Then LoadProduction()
        If TabItems.ActiveTab.Key = "Diag" Then
            LoadDiagnostics()
            pDiag0.Enabled = True
        End If
        If CheckSecurity("Ship Promo") = 0 Then bShipPromoAdd.Enabled = False
        If UserGroup <> "Admins" And Jcom.User <> "davee" And Jcom.User <> "melissab" And Jcom.User <> "victoriaa" Then
            'cbSignOff.Enabled = False
            'cbWriteUp.Enabled = False
            'cbSignoffSent.Enabled = False
            'tSignOffDate.Enabled = False
            'tSignOffNote.Enabled = False
            'tInstallDate.Enabled = False
            'tInstaller.Enabled = False
            'tInstallNotes.Enabled = False
            cbAddOnNoEmail.Enabled = False
            gbPropCommit.Enabled = False
        End If
        If (UserGroup = "Admins" Or UCase(User) = "SAMC") And tStatus.Text <> "SHIPPED" And tStatus.Text <> "STAGED" Then
            Me.tPropStage.Enabled = True
        Else
            Me.tPropStage.Enabled = False
        End If
        If UserGroup <> "Admins" And UCase(User) <> "DONNAS" And UCase(User) <> "DAVEE" And UCase(User) <> "MELISSAB" And Jcom.User <> "mikep" And Jcom.User <> "victoriaa" And Jcom.User <> "christys" And UCase(User) <> "KELLYG" And UCase(User) <> "RACHELS" And UCase(User) <> "CHRISTYSMALLZ" And UCase(User) <> "JULIEO" And UCase(User) <> "JAMIEM" And LCase(Jcom.User) <> "chrism" And LCase(Jcom.User) <> "heatherh" And LCase(Jcom.User) <> "morganb" Then
            pProduction.Enabled = False
        Else
            pProduction.Enabled = True
        End If

        'bEditSignoff.Visible = False

        Dim HasOrder As Boolean = False
        Dim tb As Infragistics.Win.UltraWinTabControl.UltraTab
        For Each tb In Tab1.Tabs
            If Mid(tb.Key, 1, 1) = "O" Then
                HasOrder = True
                Exit For
            End If
        Next
        If HasOrder Then
            tCustId.Enabled = False
            tsold_company.Enabled = False
            tCountry.Enabled = False
            tsold_addr1.Enabled = False
            tsold_addr2.Enabled = False
            tsold_addr3.Enabled = False
            tSold_City.Enabled = False
            tsold_state.Enabled = False
            tsold_zip.Enabled = False
            tProvince.Enabled = False
            tSoldCounty.Enabled = False
        End If
        tDiagNote.Enabled = True

        If Not Grid1.ActiveRow Is Nothing Then
            Dim cmd As New SqlCommand("select itm_prod_type from itm_file where itm_code='" + nz(Grid1.ActiveRow.Cells("ord_itm_item_code").Value) + "'", cnn)
            Dim onProdType As String
            cnn.Open()
            onProdType = nz(cmd.ExecuteScalar)
            cnn.Close()
            If nz(Grid1.ActiveRow.Cells("ord_itm_fixture").Value, False) = True Then
                LoadDD(tProdType, dsProdType, "itm_prod_type", "itm_prod_type_type", "itm_prod_type_type", "itm_prod_type_type,itm_prod_type_desc", "itm_prod_type_type='" + onProdType + "' or itm_prod_type_type = 'FIX'")
                tProdType.Enabled = True
            Else
                LoadDD(tProdType, dsProdType, "itm_prod_type", "itm_prod_type_type", "itm_prod_type_type", "itm_prod_type_type,itm_prod_type_desc")
                tProdType.Enabled = False
            End If
        End If
    End Sub
    Private Sub ClearTabs()
        Dim tb As New Infragistics.Win.UltraWinTabControl.UltraTab
        Dim x As Integer

        Tab1.Tabs(0).Selected = True
        TabItems.Parent = Tab1.Tabs(1).TabPage

        For x = Tab1.Tabs.Count - 1 To 1 Step -1
            tb = Tab1.Tabs(x)
            Select Case Mid(tb.Key, 1, 1)
                Case "Q"
                    If (Mid(tb.Key, 2) <> "0") Then
                        Tab1.Tabs.RemoveAt(x)
                    Else
                        Tab1.Tabs(x).Enabled = False
                    End If
                Case "O"
                    Tab1.Tabs.RemoveAt(x)
                Case "R"
                    Tab1.Tabs.RemoveAt(x)
            End Select
        Next
    End Sub

    Public Overrides Sub Delete()
        'KeyLog("[Delete]")
        tOrd.Text = KeyValue1
        If Me.SecLevel < jDelete Then
            MsgBox("You do not have DELETE access to this screen.", MsgBoxStyle.Exclamation, "Access?")
            Exit Sub
        End If
        If Tab1.ActiveTab.Key = "Q0" Then
            MsgBox("You can not delete the Quote 0")
            Exit Sub
        End If
        If Mid(Tab1.ActiveTab.Key, 1, 1) = "C" Then
            If MsgBox("Are you sure want to DELETE this ENTIRE QUOTE/ORDER?", MsgBoxStyle.YesNo, "Delete All?") = MsgBoxResult.No Then Exit Sub
            DeleteQO("All", 0)
            KeyValue1 = "-1"
            tOrd.Text = ""
            ClearFields(Me.Controls, False)
            EditButtons("Idle")
            LoadItems()
            'LoadTabs()
        Else
            If MsgBox("Are you sure want to DELETE this QUOTE/ORDER?", MsgBoxStyle.YesNo, "Delete?") = MsgBoxResult.No Then Exit Sub
            Dim tb As New Infragistics.Win.UltraWinTabControl.UltraTab
            DeleteQO(Mid(Tab1.ActiveTab.Key, 1, 1), CInt(Mid(Tab1.ActiveTab.Key, 2)))
            tb = Tab1.ActiveTab
            TabItems.Parent = Tab1.Tabs("Q0").TabPage
            Tab1.Tabs(0).Selected = True
            Tab1.Tabs.Remove(tb)
            LoadPage()
        End If
        tRefFee.Visible = True
    End Sub
    Private Sub DeleteQO(ByVal Typex As String, ByVal Rev As Integer)
        Try
            Dim cmd As New SqlCommand
            cmd.Connection = cnn
            cnn.Open()
            If Typex = "All" Then
                cmd.CommandText = "delete from ord_gen where ord_gen_ord_serial=" + tOrd.Text
                cmd.ExecuteNonQuery()
                cmd.CommandText = "delete from ord_itm where ord_itm_ord_serial=" + tOrd.Text
                cmd.ExecuteNonQuery()
                cmd.CommandText = "delete from ord_file where ord_serial=" + tOrd.Text
                cmd.ExecuteNonQuery()
                cmd.CommandText = "delete from ord_alt_ship where ord_alt_ship_ord_serial=" + tOrd.Text
                cmd.ExecuteNonQuery()
                cmd.CommandText = "delete from diag_file where diag_ord_serial=" + tOrd.Text
                cmd.ExecuteNonQuery()
                DelRecord("Ord_File", tOrd.Text)
            Else
                cmd.CommandText = "delete from ord_gen where ord_gen_ord_serial=" + tOrd.Text + " and ord_gen_type='" + Typex + "' and ord_gen_rev=" + CStr(Rev)
                cmd.ExecuteNonQuery()
                cmd.CommandText = "delete from ord_itm where ord_itm_ord_serial=" + tOrd.Text + " and ord_itm_type='" + Typex + "' and ord_itm_rev=" + CStr(Rev)
                cmd.ExecuteNonQuery()
                cmd.CommandText = "delete from ord_alt_ship where ord_alt_ship_ord_serial=" + tOrd.Text + " and ord_alt_ship_type='" + Typex + "' and ord_alt_ship_rev=" + CStr(Rev)
                cmd.ExecuteNonQuery()
                cmd.CommandText = "delete from diag_file where diag_ord_serial=" + tOrd.Text + " and diag_type='" + Typex + "' and diag_rev=" + CStr(Rev)
                cmd.ExecuteNonQuery()
                DelRecord("Ord_Gen", tOrd.Text)
            End If
            cnn.Close()
        Catch
            DoError(Err, Me)
        End Try
    End Sub

    Private Sub UltraButton1_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs)
        Dim fm As fmStarter
        Dim ct As Control
        fm = LoadForm("Payments")
        If fm Is Nothing Then Exit Sub
        For Each ct In fm.Controls
            If ct.Name = "tOrd" Then
                fm.Add()
                ct.Text = tOrd.Text
                ct.Focus()
                Exit For
            End If
        Next
        For Each ct In fm.Controls
            If ct.Name = "tDate" Then
                ct.Focus()
                Exit For
            End If
        Next
    End Sub

    Private Sub tCustId_ItemNotInList(ByVal sender As Object, ByVal e As Infragistics.Win.UltraWinEditors.ValidationErrorEventArgs) Handles tCustId.ItemNotInList

    End Sub

    Private Sub Grid1_AfterRowActivate(ByVal sender As Object, ByVal e As System.EventArgs) Handles Grid1.AfterRowActivate
        Try
            'If CheckPic Then UpdatePic(Grid1.ActiveRow.Cells("ord_itm_item_code").Text)
            onItem = nz(Grid1.ActiveRow.Cells("ord_itm_item_code").Value)
            If nz(Grid1.ActiveRow.Cells("ord_itm_is_disc").Value, False) = True Or nz(Grid1.ActiveRow.Cells("ord_itm_is_up").Value, False) = True Then
                pDiscount.Visible = True
                'pDiscount.Top = 0
                pItem.Visible = False
            Else
                pDiscount.Visible = False
                'pDiscount.Top = 400
                pItem.Visible = True
            End If
            If nz(Grid1.ActiveRow.Cells("ord_itm_change_base").Value, False) = True And EditMode <> "" Then
                tBase.Enabled = True
            Else
                tBase.Enabled = False
            End If
            If Grid1.ActiveRow.Cells("ord_itm_ship_flat").Value Is DBNull.Value Then Grid1.ActiveRow.Cells("ord_itm_ship_flat").Value = 0
            If nz(Grid1.ActiveRow.Cells("ord_itm_fixture").Value, False) = True And EditMode <> "" Then
                Dim cmd As New SqlCommand("select itm_prod_type from itm_file where itm_code='" + nz(Grid1.ActiveRow.Cells("ord_itm_item_code").Value) + "'", cnn)
                Dim onProdType As String
                cnn.Open()
                onProdType = nz(cmd.ExecuteScalar)
                cnn.Close()
                LoadDD(tProdType, dsProdType, "itm_prod_type", "itm_prod_type_type", "itm_prod_type_type", "itm_prod_type_type,itm_prod_type_desc", "itm_prod_type_type='" + onProdType + "' or itm_prod_type_type = 'FIX'")
                tProdType.Enabled = True
            Else
                LoadDD(tProdType, dsProdType, "itm_prod_type", "itm_prod_type_type", "itm_prod_type_type", "itm_prod_type_type,itm_prod_type_desc")
                tProdType.Enabled = False
            End If
            'gold wood
            LoadMaterials()
            CheckShipFlat()
            CheckMaterialSel()
            CheckDims()
        Catch
            DoError(Err, Me)
        End Try
    End Sub
    Private Sub LoadMaterials()
        If nz(Grid1.ActiveRow.Cells("ord_itm_prod_type").Value) = "GOLD" Then
            LoadDD2(tMaterial, "mat_fac", "mat_fac_mat_code", "mat_fac_mat_code", "mat_fac_mat_code,mat_fac_is_wood", "mat_fac_start<='" + tCreate.Text + "' and mat_fac_end>='" + tCreate.Text + "' and mat_fac_is_gold_wood=1")
        Else
            LoadDD2(tMaterial, "mat_fac", "mat_fac_mat_code", "mat_fac_mat_code", "mat_fac_mat_code,mat_fac_is_wood", "mat_fac_start<='" + tCreate.Text + "' and mat_fac_end>='" + tCreate.Text + "'")
        End If
        tMaterial.DisplayLayout.Bands(0).Columns(0).Width = 250
    End Sub
    Private Sub CheckDims()
        If EditMode <> "Edit" And EditMode <> "Add" Then Exit Sub
        If Grid1.ActiveRow Is Nothing Then Exit Sub
        If nz(Grid1.ActiveRow.Cells("ord_itm_width_req").Value, False) = True Then
            tWidth.Enabled = True
        Else
            tWidth.Enabled = False
        End If
        If nz(Grid1.ActiveRow.Cells("ord_itm_height_req").Value, False) = True Then
            tHeight.Enabled = True
        Else
            tHeight.Enabled = False
        End If
        If nz(Grid1.ActiveRow.Cells("ord_itm_depth_req").Value, False) = True Then
            tDepth.Enabled = True
        Else
            tDepth.Enabled = False
        End If
    End Sub

    Private Sub CheckShipFlat()
        If Grid1.ActiveRow Is Nothing Then Exit Sub
        If Grid1.ActiveRow.Cells("ord_itm_ship_flat").Value = 0 Then
            lShipUnit.Text = "Unit Ship"
            tShipUnit.Visible = True
            tShipFlat.Visible = False
        Else
            lShipUnit.Text = "Flat Ship"
            tShipUnit.Visible = False
            tShipFlat.Visible = True
        End If
    End Sub
    Private Sub UpdatePic(ByVal Part As String)
        Try
            If Part = "" Then Exit Sub
            If System.IO.Directory.Exists(ImagePath + "Images\") = False Then Exit Sub
            Dim Filex(99) As String
            Filex = System.IO.Directory.GetFiles(ImagePath + "Images\", Part + ".*")
            If Filex.Length > 0 Then
                tPicture.Image = Image.FromFile(Filex(0))
                tPicture.Show()
            Else
                tPicture.Hide()
            End If
        Catch
            'DoError(Err, Me.Name)
        End Try
    End Sub

    Private Sub Grid1_AfterSelectChange(ByVal sender As Object, ByVal e As Infragistics.Win.UltraWinGrid.AfterSelectChangeEventArgs) Handles Grid1.AfterSelectChange
        Try
            'If CheckPic Then UpdatePic(Grid1.ActiveRow.Cells("ord_itm_item_code").Text)
            If Grid1.Selected.Rows.Count > 1 Then
                pItem.Enabled = False
            Else
                pItem.Enabled = True
            End If
        Catch
            DoError(Err, Me)
        End Try

    End Sub


    Private Sub tsold_zip_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tsold_zip.ValueChanged
    End Sub

    Private Sub tsold_zip_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tsold_zip.Leave
        If tsold_zip.Text <> onZip Then
            tSold_City.Text = ""
            tsold_state.Text = ""
            If tsold_zip.Text <> "" And onZip <> "" Then
                If MsgBox("Do you want to update the Sales Reps?", MsgBoxStyle.YesNo, "Sales Reps?") = MsgBoxResult.Yes Then
                    Dim dr As DataRow
                    For Each dr In dsGen.Tables(0).Rows
                        dr("ord_gen_inside") = ""
                        dr("ord_gen_outside") = ""
                    Next
                    UpdateSalesRep()
                End If
            End If
        End If
        If tsold_zip.Text = "" Then Exit Sub
        If dsZip.Tables.Count > 0 Then dsZip.Tables.RemoveAt(0)
        LoadSoldCities()
    End Sub
    Public Sub LoadSoldCities()
        LoadDD(tSold_City, dsZip, "zip_file", "zip_city", "zip_city", "zip_city,zip_state,zip_county_name", "zip_code='" + tsold_zip.Text + "' and zip_start<='" + CStr(Today) + "' and zip_end>='" + CStr(Today) + "'")
    End Sub
    Private Sub tsold_zip_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles tsold_zip.Enter
        onZip = tsold_zip.Text
    End Sub

    Private Sub tSold_City_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles tSold_City.InitializeLayout

    End Sub

    Private Sub tSold_City_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles tSold_City.Enter
        If tSold_City.Rows.Count = 1 Then
            tSold_City.Text = tSold_City.Rows(0).Cells(0).Text
        Else
            If tSold_City.IsDroppedDown = False Then tSold_City.ToggleDropdown()
        End If

    End Sub

    Private Sub tship_zip_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)

    End Sub
    Private Sub tSold_City_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tSold_City.Leave
        Try
            If tSold_City.IsItemInList(tSold_City.Value) = True Then
                tsold_state.Text = tSold_City.ActiveRow.Cells(1).Text
                tSoldCounty.Text = tSold_City.ActiveRow.Cells(2).Text
            End If
        Catch
            DoError(Err, Me)
        End Try

    End Sub
    Public Sub UpdateCountry()
        Try
            If tCountry.Text = "" Then Exit Sub
            Dim cnnx As New SqlConnection(cnn.ConnectionString + ";password='39201'")
            Dim cmd As New SqlCommand("select * from country_file where country_code='" + tCountry.Text + "'", cnnx)
            Dim dr As SqlDataReader
            cnnx.Open()
            dr = cmd.ExecuteReader
            If dr.HasRows Then
                dr.Read()
                If dr("country_addr1") = 1 Then
                    tsold_addr1.Visible = True
                    lSold_addr1.Visible = True
                Else
                    tsold_addr1.Text = ""
                    lSold_addr1.Text = ""
                    tsold_addr1.Visible = False
                End If
                If dr("country_addr2") = 1 Then
                    tsold_addr2.Visible = True
                    lsold_addr2.Visible = True
                Else
                    tsold_addr2.Visible = False
                    lsold_addr2.Visible = False
                    tsold_addr2.Text = ""
                End If
                If dr("country_addr3") = 1 Then
                    tsold_addr3.Visible = True
                    lsold_addr3.Visible = True
                Else
                    tsold_addr3.Visible = False
                    lsold_addr3.Visible = False
                    tsold_addr3.Text = ""
                End If
                If dr("country_city") = 1 Then
                    tSold_City.Visible = True
                    lsold_city.Visible = True
                Else
                    tSold_City.Visible = False
                    lsold_city.Visible = False
                    tSold_City.Text = ""
                End If
                If dr("country_state") = 1 Then
                    tsold_state.Visible = True
                    lsold_state.Visible = True
                Else
                    tsold_state.Visible = False
                    lsold_state.Visible = False
                    tsold_state.Text = ""
                End If
                If dr("country_zip") = 1 Then
                    tsold_zip.Visible = True
                    lsold_zip.Visible = True
                Else
                    tsold_zip.Visible = False
                    lsold_zip.Visible = False
                    tsold_zip.Text = ""
                End If
                If dr("country_county") = 1 Then
                    tSoldCounty.Visible = True
                    lSoldcounty.Visible = True
                Else
                    tSoldCounty.Visible = False
                    lSoldcounty.Visible = False
                End If
                If dr("country_province") = 1 Then
                    tProvince.Visible = True
                    lProvince.Visible = True
                Else
                    tProvince.Visible = False
                    lProvince.Visible = False
                    tProvince.Text = ""
                End If
                If Not dr("country_phone_mask") Is DBNull.Value Then
                    Dim onPhone As String

                    onPhone = tsold_phone1.Text
                    tsold_phone1.InputMask = dr("country_phone_mask")
                    tsold_phone1.Value = onPhone
                    tsold_phone1.Text = onPhone

                    onPhone = tsold_phone2.Text
                    tsold_phone2.InputMask = dr("country_phone_mask")
                    tsold_phone2.Value = onPhone
                    tsold_phone2.Text = onPhone

                    onPhone = tsold_fax.Text
                    tsold_fax.InputMask = dr("country_phone_mask")
                    tsold_fax.Value = onPhone
                    tsold_fax.Text = onPhone

                    'taltphone.InputMask = dr("country_phone_mask")

                    onPhone = tsold_cell.Text
                    tsold_cell.InputMask = dr("country_phone_mask")
                    tsold_cell.Value = onPhone
                    tsold_cell.Text = onPhone
                End If
            End If
            dr.Close()

            cmd.CommandText = "select * from country_file where country_code='" + gsCountry.Text + "'"
            dr = cmd.ExecuteReader
            If dr.HasRows Then
                dr.Read()
                If Not dr("country_phone_mask") Is DBNull.Value Then
                    gsPhone1.InputMask = dr("country_phone_mask")
                    gsPhone2.InputMask = dr("country_phone_mask")
                    gsCell.InputMask = dr("country_phone_mask")
                    gsFax.InputMask = dr("country_phone_mask")
                End If
            End If
            dr.Close()

            cnnx.Close()

        Catch
            DoError(Err, Me)
        End Try
    End Sub

    Private Sub UpdateGenShipCountry()
        Try
            If gsCountry.Text = "" Then Exit Sub
            Dim cnnx As New SqlConnection(cnn.ConnectionString + ";password='39201'")
            Dim cmd As New SqlCommand("select * from country_file where country_code='" + gsCountry.Text + "'", cnnx)
            Dim dr As SqlDataReader
            cnnx.Open()
            dr = cmd.ExecuteReader
            If dr.HasRows Then
                dr.Read()
                If dr("country_addr1") = 1 Then
                    gsAddr1.Visible = True
                    gslAddr1.Visible = True
                Else
                    gsAddr1.Visible = False
                    gslAddr1.Visible = False
                    gsAddr1.Text = ""
                End If
                If dr("country_addr2") = 1 Then
                    gsAddr2.Visible = True
                    gslAddr2.Visible = True
                Else
                    gsAddr2.Visible = False
                    gslAddr2.Visible = False
                    gsAddr2.Text = ""
                End If
                If dr("country_addr3") = 1 Then
                    gsAddr3.Visible = True
                    gslAddr3.Visible = True
                Else
                    gsAddr3.Visible = False
                    gslAddr3.Visible = False
                    gsAddr3.Text = ""
                End If
                If dr("country_city") = 1 Then
                    gsCity.Visible = True
                    gslCity.Visible = True
                Else
                    gsCity.Visible = False
                    gslCity.Visible = False
                    gsCity.Text = ""
                End If
                If dr("country_state") = 1 Then
                    gsState.Visible = True
                    gslState.Visible = True
                Else
                    gsState.Visible = False
                    gslState.Visible = False
                    gsState.Text = ""
                End If
                If dr("country_zip") = 1 Then
                    gsZip.Visible = True
                    gslZip.Visible = True
                Else
                    gsZip.Visible = False
                    gslZip.Visible = False
                    gsZip.Text = ""
                End If
                If dr("country_county") = 1 Then
                    gsCounty.Visible = True
                    gslCounty.Visible = True
                Else
                    gsCounty.Visible = False
                    gslCounty.Visible = False
                End If
                If dr("country_province") = 1 Then
                    gsProvince.Visible = True
                    gslProvince.Visible = True
                Else
                    gsProvince.Visible = False
                    gslProvince.Visible = False
                    gsProvince.Text = ""
                End If
                If Not dr("country_phone_mask") Is DBNull.Value Then
                    gsPhone1.InputMask = dr("country_phone_mask")
                    gsPhone2.InputMask = dr("country_phone_mask")
                    gsFax.InputMask = dr("country_phone_mask")
                    'taltphone.InputMask = dr("country_phone_mask")
                    gsCell.InputMask = dr("country_phone_mask")
                End If
            End If
            cnnx.Close()
            If gsCountry.Text <> "USA" Then
                gsExemptNo.Text = ""
                gsTaxExempt.Checked = True
            End If
            gsCheckExemptNo()
            GetGenTaxRate()
        Catch
            DoError(Err, Me)
        End Try
    End Sub
    Private Sub UpdateAltShipCountry()
        Try
            If tAltShipCountry.Text = "" Then Exit Sub
            Dim cnnx As New SqlConnection(cnn.ConnectionString + ";password='39201'")
            Dim cmd As New SqlCommand("select * from country_file where country_code='" + tAltShipCountry.Text + "'", cnnx)
            Dim dr As SqlDataReader
            cnnx.Open()
            dr = cmd.ExecuteReader
            If dr.HasRows Then
                dr.Read()
                If dr("country_addr1") = 1 Then
                    tAltShipAddr1.Visible = True
                    lAltShipAddr1.Visible = True
                Else
                    tAltShipAddr1.Visible = False
                    lAltShipAddr1.Visible = False
                    tAltShipAddr1.Text = ""
                End If
                If dr("country_addr2") = 1 Then
                    tAltShipAddr2.Visible = True
                    lAltShipAddr2.Visible = True
                Else
                    tAltShipAddr2.Visible = False
                    lAltShipAddr2.Visible = False
                    tAltShipAddr2.Text = ""
                End If
                If dr("country_addr3") = 1 Then
                    tAltShipAddr3.Visible = True
                    lAltShipAddr3.Visible = True
                Else
                    tAltShipAddr3.Visible = False
                    lAltShipAddr3.Visible = False
                    tAltShipAddr3.Text = ""
                End If
                If dr("country_city") = 1 Then
                    tAltShipCity.Visible = True
                    lAltShipCity.Visible = True
                Else
                    tAltShipCity.Visible = False
                    lAltShipCity.Visible = False
                    tAltShipCity.Text = ""
                End If
                If dr("country_state") = 1 Then
                    tAltShipState.Visible = True
                    lAltShipState.Visible = True
                Else
                    tAltShipState.Visible = False
                    lAltShipState.Visible = False
                    tAltShipState.Text = ""
                End If
                If dr("country_zip") = 1 Then
                    tAltShipZip.Visible = True
                    lAltShipZip.Visible = True
                Else
                    tAltShipZip.Visible = False
                    lAltShipZip.Visible = False
                    tAltShipZip.Text = ""
                End If
                If dr("country_county") = 1 Then
                    tAltShipCounty.Visible = True
                    lAltShipCounty.Visible = True
                Else
                    tAltShipCounty.Visible = False
                    lAltShipCounty.Visible = False
                End If
                If dr("country_province") = 1 Then
                    tAltShipProvince.Visible = True
                    lAltShipProvince.Visible = True
                Else
                    tAltShipProvince.Visible = False
                    lAltShipProvince.Visible = False
                    tAltShipProvince.Text = ""
                End If
                If Not dr("country_phone_mask") Is DBNull.Value Then
                    tAltShipPhone1.InputMask = dr("country_phone_mask")
                    tAltShipPhone2.InputMask = dr("country_phone_mask")
                    tAltShipFax.InputMask = dr("country_phone_mask")
                    'taltphone.InputMask = dr("country_phone_mask")
                    tAltShipCell.InputMask = dr("country_phone_mask")
                End If
            End If
            cnnx.Close()
            'GetTaxRate()
        Catch
            DoError(Err, Me)
        End Try
    End Sub
    Private Sub tCountry_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles tCountry.InitializeLayout

    End Sub

    Private Sub tCountry_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tCountry.Leave
        UpdateCountry()
    End Sub
    Private Sub bPhoneFind_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bPhoneFind.Click
        'Dim cmd As New SqlCommand("select * from ord_file where ord_sold_phone1='" + tsold_phone1.Text + "' order by ord_serial desc", cnn)
        'Dim dr As SqlDataReader
        'Dim onOrd As Long

        'cnn.Open()
        'dr = cmd.ExecuteReader
        'If dr.HasRows Then
        '    dr.Read()
        '    onOrd = dr("ord_serial")
        '    tCustId.Value = dr("ord_sold_cust_serial")
        '    If tCustId.Text <> "" Then
        '        dr.Close()
        '        cnn.Close()
        '        Me.tCustId_Leave(sender, e)
        '        Exit Sub
        '    Else
        '        tSold_Name.Text = dr("ord_sold_name")
        '        tsold_company.Text = dr("ord_sold_company")
        '        tsold_addr1.Text = dr("ord_sold_addr1")
        '        tsold_addr2.Text = dr("ord_sold_addr2")
        '        tsold_addr3.Text = dr("ord_sold_addr3")
        '        tSold_City.Text = dr("ord_sold_city")
        '        tsold_state.Text = dr("ord_sold_state")
        '        tsold_zip.Text = dr("ord_sold_zip")
        '        tCountry.Text = dr("ord_sold_country")
        '        tsold_phone2.Text = dr("ord_sold_phone2")
        '        tsold_fax.Text = dr("ord_sold_fax")
        '        tsold_cell.Text = dr("ord_sold_cell")
        '        tsold_email.Text = dr("ord_sold_email")
        '        tProvince.Text = dr("ord_sold_province")
        '        tSoldCounty.Text = dr("ord_sold_county")
        '        UpdateSalesRep()
        '    End If
        '    dr.Close()
        'Else
        '    dr.Close()
        '    'find in catalog requests
        '    dr = cmd.ExecuteReader
        '    If dr.HasRows Then
        '    Else
        '        dr.Close()
        '        MsgBox("No customers found", MsgBoxStyle.Information, "None Found")

        '    End If
        'End If
        'cmd.CommandText = "select top 1 ord_gen_src from ord_gen where ord_gen_ord_serial=" + CStr(onOrd) + " order by ord_gen_serial desc"
        'onOrdSource = nz(cmd.ExecuteScalar)
        'cnn.Close()
    End Sub

    Private Sub bAddShip_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        Dim fm As fmStarter
        Dim ct As Control
        fm = LoadForm("Shipments")
        If fm Is Nothing Then Exit Sub
        For Each ct In fm.Controls
            If ct.Name = "tOrd" Then
                fm.Add()
                ct.Text = tOrd.Text
                ct.Focus()
                Exit For
            End If
        Next
        For Each ct In fm.Controls
            If ct.Name = "tDate" Then
                ct.Focus()
                Exit For
            End If
        Next

    End Sub
    Private Sub tShipUnit_LostFocus(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tShipUnit.Leave
        Grid1.ActiveRow.Cells("ord_itm_unt_ship").Value = tShipUnit.Value
        PriceCalc()
    End Sub

    Private Sub bAddNote_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bAddNote.Click
        Try
            If bAddNote.Text = "Add Note" Then
                If EditMode <> "" Then
                    MsgBox("You may not be in edit mode when adding a note.", MsgBoxStyle.Information, "Edit Mode")
                    Exit Sub
                End If
                bAddNote.Text = "Save"
                tNote.Visible = True
                pOrdMod.Visible = False
                tNote.Focus()
            Else
                Dim cmd As New SqlCommand("insert into ord_note (ord_note_ord_gen_serial,ord_note,ord_note_user,ord_note_date,ord_note_type) values (" + CStr(DVGen(0).Item("ord_gen_serial")) + ",'" + Replace(tNote.Text, "'", "''") + "','" + User + "','" + CStr(Now()) + "','Note')", cnn)
                cnn.Open()
                cmd.ExecuteNonQuery()
                cnn.Close()
                tNote.Visible = False
                pOrdMod.Visible = True
                bAddNote.Text = "Add Note"
                tNote.Text = ""
                LoadNotes()
            End If
        Catch
            DoError(Err, Me)
        End Try
    End Sub

    Private Sub tOrd_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tOrd.ValueChanged
        Me.Text = "Quote/Order " + tOrd.Text
    End Sub

    Private Sub tOrd_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles tOrd.KeyPress
    End Sub

    Public Overrides Sub Edit_Before()
        'KeyLog("[Edit]")
        If KeyValue1 <= 0 Then
            EditCanceled = True
            Exit Sub
        End If

        If Me.OrdLinesHaveWrongParentNumber = True Then
            EditCanceled = True
            Exit Sub
        End If

        tOrd.Enabled = False
        tRefFee.Visible = False
        tOrd.Text = KeyValue1
        onOrd = tOrd.Text
        onOrdSource = ""
        SaveCanceled = False
        'MsgBox("5-" + tTotal2.Text + " " + CStr(dsGen.Tables(0).Rows(0)("ord_gen_line_total")))
        If gsZip.Text <> "" Then
            LoadDD(gsCity, dsship_Zip, "zip_file", "zip_city", "zip_city", "zip_city,zip_state,zip_county_name", "zip_code='" + gsZip.Text + "' and zip_start<='" + CStr(Today) + "' and zip_end>='" + CStr(Today) + "'")
        End If
    End Sub
    Private Function OrdLinesHaveWrongParentNumber() As Boolean
        Dim Wrong As Boolean = False
        Dim rw As DataRow

        For Each rw In dsGen.Tables(0).Rows
            If rw.RowState <> DataRowState.Deleted And rw.RowState <> DataRowState.Added Then
                If rw("ord_gen_ord_serial") <> CLng(tOrd.Text) Then
                    Wrong = True
                    Exit For
                End If
            End If
        Next

        If Not Wrong Then
            For Each rw In dsItems.Tables(0).Rows
                If rw.RowState <> DataRowState.Deleted And rw.RowState <> DataRowState.Added Then
                    If rw("ord_itm_ord_serial") <> CLng(tOrd.Text) Then
                        Wrong = True
                        Exit For
                    End If
                End If
            Next
        End If

        If Wrong Then
            OrdLinesHaveWrongParentNumber = True
            SendMail("jonj@jcom.cc", "tlarkin@winecellarinnovations.com", "Order with wrong parent number", "Order " + tOrd.Text + ".  " + User + " on " + CStr(Now))
        End If
    End Function
    Private Sub ShipGrid_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles ShipGrid.InitializeLayout

    End Sub

    Private Sub ShipGrid_ClickCellButton(ByVal sender As Object, ByVal e As Infragistics.Win.UltraWinGrid.CellEventArgs) Handles ShipGrid.ClickCellButton
        Select Case e.Cell.Column.Header.Caption
            Case "Tracking"
                If Mid(ShipGrid.ActiveRow.Cells("ship_via").Text, 1, 3) = "UPS" Then
                    System.Diagnostics.Process.Start("http://wwwapps.ups.com/WebTracking/processInputRequest?HTMLVersion=5.0&tracknums_displayed=5&TypeOfInquiryNumber=T&loc=en_US&InquiryNumber1=" + Replace(UCase(ShipGrid.ActiveCell.Text), "CIN", "") + "&InquiryNumber2=&InquiryNumber3=&InquiryNumber4=&InquiryNumber5=&AgreeToTermsAndConditions=yes&track.x=9&track.y=6")
                ElseIf Mid(ShipGrid.ActiveRow.Cells("ship_via").Text, 1, 3) = "FED" Then
                    System.Diagnostics.Process.Start("http://www.fedex.com/Tracking?ascend_header=1&clienttype=dotcom&cntry_code=us&language=english&tracknumbers=" + ShipGrid.ActiveCell.Text)
                ElseIf Mid(ShipGrid.ActiveRow.Cells("ship_via").Text, 1, 7) = "TEAMAIR" Then
                    System.Diagnostics.Process.Start("http://www.teamair.com/cgi-bin/track/trac.cgi?hbl=" + ShipGrid.ActiveCell.Text)
                ElseIf ShipGrid.ActiveRow.Cells("ship_via").Text = "ROADWAY" Then
                    System.Diagnostics.Process.Start("http://www.quiktrak.roadway.com/cgi-bin/quiktrak?pro0=" + ShipGrid.ActiveCell.Text)
                ElseIf ShipGrid.ActiveRow.Cells("ship_via").Text = "ROADRUNNER" Then
                    System.Diagnostics.Process.Start("http://www.rdfs.com/tools/tracing/TraceMultipleResults.aspx?PROS=" + Replace(UCase(ShipGrid.ActiveCell.Text), "CIN", ""))
                ElseIf ShipGrid.ActiveRow.Cells("ship_via").Text = "DAWES" Then
                    System.Diagnostics.Process.Start("http://www.rdfs.com/tools/tracing/TraceMultipleResults.aspx?PROS=" + Replace(UCase(ShipGrid.ActiveCell.Text), "CIN", ""))
                ElseIf ShipGrid.ActiveRow.Cells("ship_via").Text = "ABF" Then
                    System.Diagnostics.Process.Start("http://www.abfs.com/trace/abftrace.asp?ref=" + ShipGrid.ActiveCell.Text)
                Else
                    MsgBox("Shipping company not setup for internet tracking.", MsgBoxStyle.Information, "Not Setup.")
                End If

            Case ""
                Dim fm As fmShipment
                fm = LoadForm("Shipments")
                fm.KeyValue1 = ShipGrid.ActiveRow.Cells("ship_serial").Text
                fm.LoadPage()
        End Select
    End Sub


    Private Sub tShipExtra_Leave(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tShipExtra.Leave
        'UpdateShipping()
        If tOrd.Text <> "" Then
            Try
                If onShipExtra <> tShipExtra.Value Then
                    Dim cnnx As New SqlConnection(cnn.ConnectionString + ";password='39201'")
                    Dim cmd As New SqlCommand("insert into ord_add_ship (ord_add_ship_ord_serial,ord_add_ship_ord_rev,ord_add_ship_ord_type,ord_add_ship_user,ord_add_ship_date,ord_add_ship_was,ord_add_ship_now) values (" + tOrd.Text + "," + Mid(Tab1.ActiveTab.Key, 2) + ",'" + Mid(Tab1.ActiveTab.Key, 1, 1) + "','" + User + "','" + CStr(Now) + "'," + CStr(onShipExtra) + "," + CStr(tShipExtra.Value) + ")", cnnx)
                    cnnx.Open()
                    cmd.ExecuteNonQuery()
                    cnnx.Close()
                End If
            Catch
                DoError(Err, Me)
            End Try
        End If
        DVGen(0).Item("ord_gen_ship_extra") = tShipExtra.Value
        DoTotal()
    End Sub

    Private Sub ListPDF_DoubleClick(ByVal sender As Object, ByVal e As System.EventArgs) Handles ListPDF.DoubleClick
        Try
            Dim hwnd As Long
            Dim myProc As New Process
            myProc.StartInfo.FileName = PDFPath + ListPDF.SelectedItem
            myProc.StartInfo.WindowStyle = ProcessWindowStyle.Normal
            myProc.Start()
        Catch
            DoError(Err, Me)
        End Try
    End Sub

    Private Sub ListPDF_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles ListPDF.KeyUp
        'If e.KeyCode = Keys.Delete Then
        '    If MsgBox("This will delete the file " + ListPDF.SelectedItem + ". Are you sure?", MsgBoxStyle.YesNo, "Delete?") = MsgBoxResult.No Then Exit Sub
        '    System.IO.File.Delete(ListPDF.SelectedItem)
        '    LoadDrawings()
        'End If
    End Sub

    Private Sub UltraButton2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles UltraButton2.Click
        Dim app As New Outlook.Application
        Dim mailx As Outlook.MailItem
        Dim itm As String

        Try
            mailx = app.CreateItem(Outlook.OlItemType.olMailItem)
            For Each itm In ListPDF.SelectedItems
                mailx.Attachments.Add(PDFPath + itm)
            Next
            mailx.Display()
        Catch
            DoError(Err, Me)
        End Try
    End Sub
    Private Sub bReplacement_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bReplacement.Click


        Try
            Dim tb As Infragistics.Win.UltraWinTabControl.UltraTab
            Dim Rev As Integer = 0
            Dim CurRev As Integer = 0
            Dim onOutside, onInside, onSource, onSpecial, onPO As String
            Dim obj(99) As Object
            Dim ctl As Control
            Dim cnt As Integer
            Dim ctl2 As Infragistics.Win.UltraWinEditors.UltraCheckEditor
            Dim ctl3 As Infragistics.Win.UltraWinEditors.UltraTextEditor
            Dim ctl4 As Infragistics.Win.UltraWinEditors.UltraNumericEditor
            Dim ctl5 As Infragistics.Win.UltraWinEditors.UltraCurrencyEditor
            Dim drNew, drAlt As DataRow
            Dim cmd As New SqlCommand("", cnn)

            drNew = dsGen.Tables("ord_gen").NewRow
            drNew.ItemArray = DVGen(0).Row.ItemArray

            For Each tb In Tab1.Tabs
                If Mid(tb.Key, 1, 1) = "R" Then
                    If CInt(Mid(tb.Key, 2)) > Rev Then Rev = CInt(Mid(tb.Key, 2))
                End If
            Next
            If Rev = 99 Then
                MsgBox("Maximum number of REVs has been reached.")
                Exit Sub
            End If
            CurRev = CInt(Mid(Tab1.ActiveTab.Key, 2))

            '***************
            cnn.Open()
            Dim g
            cmd.CommandText = "SELECT  ord_gen_ord_serial FROM ord_gen where ord_gen_ord_serial =" + tOrd.Text + " and ord_gen_type='R' and ord_gen_rev=" + (Rev + 1).ToString
            g = CInt(nz(cmd.ExecuteScalar, -1))
            cnn.Close()
            If g <> -1 Then
                MsgBox("A Replacement with the revision  (" + (Rev + 1).ToString + ") already exists. Please refresh your screen and review the latest Replacement added.")
                Exit Sub
            End If

            drNew("ord_gen_from_quote") = drNew("ord_gen_from_rev")
            drNew("ord_gen_from_rev") = CurRev
            drNew("ord_gen_rev") = Rev + 1
            drNew("ord_gen_type") = "R"
            drNew("ord_gen_status") = "NEW"
            drNew("ord_gen_show_date") = Today
            drNew("ord_gen_create_date") = Now
            drNew("ord_gen_create_by") = User
            drNew("ord_gen_update_date") = Now
            drNew("ord_gen_update_by") = User
            drNew("ord_gen_ship_extra") = 0
            drNew("ord_gen_ship_disc") = 0
            drNew("ord_gen_ship_date") = CDate("1/1/1900")
            drNew("ord_gen_staged_date") = CDate("1/1/1900")
            drNew("ord_gen_staged") = 0
            drNew("ord_gen_billdate") = CDate("1/1/1900")
            drNew("ord_gen_billed") = 0
            drNew("ord_gen_ship_inside") = 0
            drNew("ord_gen_ship_collect") = 0
            drNew("ord_gen_ship_white_glove") = 0
            drNew("ord_gen_ship_cust_pickup") = 0
            drNew("ord_gen_ship_gated") = 0
            drNew("ord_gen_ship_smalltruck") = 0
            drNew("ord_gen_ship_call") = 0
            drNew("ord_gen_ship_callname") = 0
            drNew("ord_gen_ship_callphone") = 0
            drNew("ord_gen_ship_twoman") = 0
            drNew("ord_gen_ship_liftgate") = 0
            drNew("ord_gen_ship_steps") = 0
            drNew("ord_gen_ship_numsteps") = 0
            drNew("ord_gen_ship_turns") = 0
            drNew("ord_gen_ship_numturns") = 0
            drNew("ord_gen_ship_thirdparty") = 0
            drNew("ord_gen_ship_thirdpartyname") = 0
            drNew("ord_gen_ship_alert") = 0
            drNew("ord_gen_ship_overnite") = 0
            drNew("ord_gen_ship_skids") = 0
            drNew("ord_gen_ship_numskids") = 0
            drNew("ord_gen_ship_intlship") = 0
            drNew("ord_gen_acct_lock") = False
            drNew("ord_gen_acct_total") = 0
            drNew("ord_gen_line_total") = 0
            drNew("ord_gen_total") = 0
            drNew("ord_gen_balance") = 0
            drNew("ord_gen_ship") = 0
            drNew("ord_gen_tax") = 0
            drNew("ord_gen_tax_override") = 0
            drNew("ord_gen_tax_override_perc") = 0
            drNew("ord_gen_install_dt") = DBNull.Value
            drNew("ord_gen_installer") = 0
            drNew("ord_gen_install_note") = ""

            dsGen.Tables("ord_gen").Rows.Add(drNew)

            If DVGen(0).Item("ord_gen_alt_ship") = True Then
                drAlt = dsAltShip.Tables(0).NewRow
                drAlt.ItemArray = DVAltShip(0).Row.ItemArray
                drAlt("ord_alt_ship_rev") = Rev + 1
                drAlt("ord_alt_ship_type") = "R"
                dsAltShip.Tables(0).Rows.Add(drAlt)
            End If

            tb = Tab1.Tabs.Add("R" + CStr(Rev + 1), "Replacement " + CStr(drNew("ord_gen_from_quote")) + "-" + CStr(drNew("ord_gen_from_rev")) + "-" + CStr(Rev + 1))
            'tb.Selected = True
            If Rev > 0 Then
                tb.Reposition(Tab1.Tabs("R" + CStr(Rev)), Infragistics.Win.RelativePosition.Before)
            Else
                tb.Reposition(Tab1.Tabs("O" + CStr(Rev)), Infragistics.Win.RelativePosition.Before)
            End If
            tb.Appearance.BackColor = System.Drawing.Color.LightCoral
            TabItems.Parent = tb.TabPage
            tb.Selected = True

            DoTotal()
        Catch
            DoError(Err, Me)
        End Try
    End Sub
    'Private Sub UpdateGenTax()
    '    Dim rw As DataRow
    '    Dim x As Integer
    '    Dim tot As Double = 0
    '    Dim cmd As New SqlCommand("", cnn2)
    '    Dim ShipTax As Double

    '    cnn2.Open()
    '    If DVItems.Count > 0 Then
    '        For x = 0 To DVItems.Count - 1
    '            rw = DVItems(x).Row
    '            If rw("ord_itm_taxable") = True Then tot = Math.Round(tot + (rw("ord_itm_qty") * rw("ord_itm_unt_sell")) + rw("ord_itm_disc"), 2)
    '        Next
    '        DVGen(0).Item("ord_gen_tax") = Math.Round((tot * nz(DVGen(0).Item("ord_gen_cust_taxrate"), 0)) + 0.00001, 2)

    '        cmd.CommandText = "select tax_ship_percent from tax_state where tax_state='" + DVGen(0).Item("ord_gen_ship_state") + "'"
    '        ShipTax = nz(cmd.ExecuteScalar, 0)
    '        ShipTax = Math.Round(ShipTax / 100 * nz(DVGen(0).Item("ord_gen_cust_taxrate"), 0) * DVGen(0).Item("ord_gen_ship"), 2)
    '        DVGen(0).Item("ord_gen_tax") = Math.Round(DVGen(0).Item("ord_gen_tax") + ShipTax, 2)

    '        If nz(DVGen(0).Item("ord_gen_tax_override"), 0) <> 0 Then DVGen(0).Item("ord_gen_tax") = DVGen(0).Item("ord_gen_tax_override")
    '        DVGen(0).Item("ord_gen_total") = Math.Round(CDbl(nz(DVGen(0).Item("ord_gen_line_total"), 0)) + CDbl(nz(DVGen(0).Item("ord_gen_tax"), 0)) + CDbl(nz(DVGen(0).Item("ord_gen_ship"), 0)), 2)
    '    End If
    '    cnn2.Close()

    'End Sub
    Private Sub tsold_state_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tsold_state.ValueChanged
        If Me.ActiveControl Is tsold_state Then
            UpdateSalesRep()
        End If
    End Sub

    Private Sub tSoldCounty_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tSoldCounty.ValueChanged
    End Sub

    Private Sub tSalesCat_Leave(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tSalesCat.Leave
        If tSalesCat.IsItemInList = False Then
            MsgBox("Sales Category must be selected from the list", MsgBoxStyle.Exclamation, "Sales Category")
            tSalesCat.Focus()
            Exit Sub
        End If
        If Grid1.Rows.Count = 0 Then Exit Sub
        If onSalesCat <> tSalesCat.Value Then
            If MsgBox("Changing the sales categories will recalculate all of you prices.  Do you want to continue?", MsgBoxStyle.YesNo, "Change Categories?") = MsgBoxResult.No Then
                tSalesCat.Value = onSalesCat
                Exit Sub
            End If
            DVGen(0)("ord_gen_sales_cat") = tSalesCat.Value
            'UpdatePrices2()
            UpdatePriceAllByRow(False)
        End If
    End Sub

    Private Sub tSalesCat_Enter(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tSalesCat.Enter
        onSalesCat = tSalesCat.Value
    End Sub

    Private Sub Grid1_AfterRowsDeleted(ByVal sender As Object, ByVal e As System.EventArgs) Handles Grid1.AfterRowsDeleted
        Try
            GetDiscTot(DVItems, "", "", True)
            DoTotal()
            CheckForWineZone()
        Catch
            DoError(Err, Me)
        End Try
    End Sub

    Private Sub tShipDiscount_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tShipDiscount.ValueChanged
        'DoTotal()
    End Sub

    Private Sub tShipDiscount_Leave(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tShipDiscount.Leave
        If DVGen.Count > 0 Then
            DVGen(0).Item("ord_gen_ship_disc") = tShipDiscount.Value
            'If nz(dsGen.Tables(0).Rows(0).Item("ord_gen_ship_disc"), 0) <> 0 Then
            '    If nz(dsGen.Tables(0).Rows(0).Item("ord_gen_web_order"), 0) = 0 Then
            '        MsgBox("Remember to add a PromoCode before saving!")
            '    End If
            'End If
        End If
        DoTotal()
    End Sub

    Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        tUnitBase.MaskInput = "$999999#.##"
        tUnitBase.Value = -100
        MsgBox(tUnitBase.MinValue)
    End Sub

    Private Sub tTaxTotal_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)

    End Sub

    Private Sub tGrandTotal_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
        tGrandTotal.Text = FormatCurrency(tGrandTotal.Text)
    End Sub

    Private Sub tTotal2_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
        'tTotal2.Text = FormatCurrency(tTotal2.Text)
    End Sub

    Private Sub tShipTotal_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
        tShipTotal.Text = FormatCurrency(tShipTotal.Text)
    End Sub

    Private Sub tTaxTotal_ValueChanged_1(ByVal sender As System.Object, ByVal e As System.EventArgs)
        tTaxTotal.Text = FormatCurrency(tTaxTotal.Text)
    End Sub

    Private Sub fmEstOrd_Closing(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles MyBase.Closing
        If EditMode <> "" Then
            Select Case MsgBox("Quote/Order NOT SAVED.  Do you want to save it now?", MsgBoxStyle.YesNoCancel, "Save?")
                Case MsgBoxResult.Yes
                    Save()
                    e.Cancel = True
                Case MsgBoxResult.Cancel
                    e.Cancel = True
            End Select
        End If
        If tOrd.Text <> "" Then UpdateModeLog("Close")
    End Sub

    Private Sub PayGrid_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles PayGrid.InitializeLayout

    End Sub

    Private Sub PayGrid_ClickCellButton(ByVal sender As Object, ByVal e As Infragistics.Win.UltraWinGrid.CellEventArgs) Handles PayGrid.ClickCellButton
        Dim fm As fmPayment
        fm = LoadForm("Payments")
        fm.KeyValue1 = PayGrid.ActiveCell.Text
        fm.LoadPage()
    End Sub

    Private Sub tCustId_ValueChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles tCustId.ValueChanged
        tSoldCustId.Text = tCustId.Text
        If tCustId.Value = 0 Then tCustId.Text = ""
        If tCustId.Text = "" Then
            'tsold_company.Enabled = True
            tSold_Name.ReadOnly = True
        Else
            'tsold_company.Enabled = False
            tSold_Name.ReadOnly = False
        End If
    End Sub


    Private Sub UltraButton3_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles UltraButton3.Click
        Try
            Dim fls(0) As String

            'MsgBox("User's Domain Name:" & Environment.UserDomainName & "\" & Environment.UserName)

            If IO.File.Exists("c:\wci temp\" + Environment.UserName + "\importbom.txt") Then
                fls(0) = "c:\wci temp\" + Environment.UserName + "\importbom.txt"
            Else
                fls(0) = "c:\wci temp\importbom.txt"
            End If

            UltraButton3.Enabled = False
            ImportBOM(fls)
        Catch
            DoError(Err, Me)
        Finally
            UltraButton3.Enabled = True
        End Try
    End Sub
    Private Sub ImportBOM(ByVal FileNames() As String)
        Try
            Dim defMaterial As String = tGenMaterial.Text
            Dim FileDate As Date
            Dim cmd As New SqlCommand("", cnn)
            Dim onStainSerial As Long

            UpdatingLacq = True

            Dim fl As IO.StreamReader
            Dim fn, fns() As String
            Dim ln As String
            Dim row As DataRow
            Dim onItem As String
            Dim checkOrder As String

            DVGen(0).Item("ord_gen_tgwall") = 0
            DVGen(0).Item("ord_gen_tgceiling") = 0
            DVGen(0).Item("ord_gen_circles") = 0
            DVGen(0).Item("ord_gen_moldings") = 0

            fns = FileNames
            Array.Reverse(fns)
            For Each fn In fns
                fl = New IO.StreamReader(fn)
                ln = fl.ReadLine
                ln += " "
                row = Nothing
                Do While ln <> Nothing
                    If Mid(ln, 1, 13) = "Project Name:" And UCase(User) <> "TODDW" Then
                        checkOrder = Split(ln, " ")(2)
                        If Split(checkOrder, "-")(0) <> tOrd.Text Then
                            MsgBox("You are not on the right Quote/Order.  This import is for " + checkOrder)
                            Exit Sub
                        End If
                        If Split(checkOrder, "-")(1) <> Mid(Tab1.ActiveTab.Key, 2) Then
                            MsgBox("You are not on the right Quote/Order.  This import is for " + checkOrder)
                            Exit Sub
                        End If
                    End If
                    If Mid(ln, 1, 10) = "Created on" Then
                        FileDate = CDate(Replace(Mid(ln, 11), "@", ""))
                    End If
                    Select Case Mid(ln, 1, 4)
                        Case "IN ="
                            onItem = Mid(ln, 5)
                            If Mid(ln, 5, 1) <> ">" Then
                                cmd.CommandText = "select inactive from itm_file where itm_code='" + Trim(Mid(ln, 5)) + "'"
                                cnn.Open()
                                If nz(cmd.ExecuteScalar, False) = True Then
                                    MsgBox(Trim(Mid(ln, 5)) + " is inactive and not able to be used.", MsgBoxStyle.Critical, "Inactive")
                                    cnn.Close()
                                    'Exit Sub
                                    fl.ReadLine()
                                End If
                                cnn.Close()

                                If Not row Is Nothing Then
                                    'dsItems.Tables("ord_itm").Rows.Add(nz(row))
                                    dsItems.Tables("ord_itm").Rows.Add(row)
                                    row = Nothing
                                End If
                                row = dsItems.Tables("ord_itm").NewRow
                                row("ord_itm_item_code") = Trim(Mid(ln, 5))
                                row("ord_itm_up_color") = 0
                                row("ord_itm_bom_import") = True
                                LoadPriceByRow(row, True)
                            End If
                        Case "QTY="
                            If Mid(onItem, 1, 1) = ">" Then
                                Select Case onItem
                                    Case ">TGWALLS"
                                        DVGen(0).Item("ord_gen_tgwall") = CInt(Mid(ln, 5))
                                    Case ">TGCEILING"
                                        DVGen(0).Item("ord_gen_tgceiling") = CInt(Mid(ln, 5))
                                    Case ">#CIRCLES"
                                        DVGen(0).Item("ord_gen_circles") = CInt(Mid(ln, 5))
                                End Select
                            Else
                                row("ord_itm_qty") = Math.Round(CDbl(Mid(ln, 5)) + 0.4999, 0)
                                LoadPriceByRow(row, True)
                            End If
                        Case "ID ="
                            row("ord_itm_desc") = Mid(ln, 5)
                        Case "LIN="
                            row("ord_itm_note") = nz(row("ord_itm_note"), "") + Mid(ln, 5) + vbCrLf
                        Case "IM ="
                            row("ord_itm_mat_code") = Mid(ln, 5)
                        Case "UP ="
                            row("ord_itm_unt_sell") = Mid(ln, 5)
                        Case "PT ="
                            row("ord_itm_prod_type") = Mid(ln, 5)
                            'Case "IF ="
                            ' row("ord_itm_fin_code") = Mid(ln, 5)
                        Case "IDF="
                            row("ord_itm_desc") = Mid(ln, 5)
                        Case "MPF="
                        Case "IMU="
                        Case "BP ="
                            row("ord_itm_base_price") = Mid(ln, 5)

                        Case "DE ="
                            DVGen(0).Item("ord_gen_designer") = Mid(ln, 5)
                        Case "OS ="
                            DVGen(0).Item("ord_gen_src") = Mid(ln, 5)
                        Case "CPO="
                            DVGen(0).Item("ord_gen_cust_po") = Mid(ln, 5)
                        Case "IMG="
                            DVGen(0).Item("ord_gen_material") = Mid(ln, 5)
                        Case "IFG="
                            DVGen(0).Item("ord_gen_finish") = Mid(ln, 5)
                        Case "RH ="
                            DVGen(0).Item("ord_gen_rack_height") = Mid(ln, 5)
                        Case "IDG="
                            If Mid(ln, 5) = "Y" Then
                                DVGen(0).Item("ord_gen_ship_inside") = True
                            End If
                            If Mid(ln, 5) = "N" Then
                                DVGen(0).Item("ord_gen_ship_inside") = False
                            End If
                        Case "ES ="
                            If IsNumeric(Mid(ln, 5)) Then

                                DVGen(0).Item("ord_gen_ship_extra") = CDbl(Mid(ln, 5))
                            End If
                        Case "DT ="
                            DVGen(0).Item("ord_gen_des_type") = Mid(ln, 5)
                        Case "SIN="
                            DVGen(0).Item("ord_gen_ship_inside") = IIf(Mid(ln, 5) = 1, True, False)
                            If DVGen(0).Item("ord_gen_ship_inside") Then DVGen(0).Item("ord_gen_ship_liftgate") = True
                        Case "SGA="
                            DVGen(0).Item("ord_gen_ship_gated") = IIf(Mid(ln, 5) = 1, True, False)
                        Case "SST="
                            DVGen(0).Item("ord_gen_ship_smalltruck") = IIf(Mid(ln, 5) = 1, True, False)
                        Case "STM="
                            DVGen(0).Item("ord_gen_ship_twoman") = IIf(Mid(ln, 5) = 1, True, False)
                        Case "SLG="
                            DVGen(0).Item("ord_gen_ship_liftgate") = IIf(Mid(ln, 5) = 1, True, False)
                        Case "SAC="
                            DVGen(0).Item("ord_gen_ship_alert") = IIf(Mid(ln, 5) = 1, True, False)
                        Case "SON="
                            DVGen(0).Item("ord_gen_ship_overnite") = IIf(Mid(ln, 5) = 1, True, False)
                        Case "STP="
                            DVGen(0).Item("ord_gen_ship_steps") = IIf(Mid(ln, 5) = 1, True, False)
                        Case "SNS="
                            DVGen(0).Item("ord_gen_ship_numsteps") = CInt(IIf(IsNumeric(Mid(ln, 5)), Mid(ln, 5), 0))
                        Case "STN="
                            DVGen(0).Item("ord_gen_ship_turns") = IIf(Mid(ln, 5) = 1, True, False)
                        Case "SNT="
                            DVGen(0).Item("ord_gen_ship_numturns") = CInt(IIf(IsNumeric(Mid(ln, 5)), Mid(ln, 5), 0))
                        Case "SCB="
                            DVGen(0).Item("ord_gen_ship_call") = IIf(Mid(ln, 5) = 1, True, False)
                        Case "SCN="
                            DVGen(0).Item("ord_gen_ship_callname") = Mid(ln, 5)
                        Case "SCP="
                            DVGen(0).Item("ord_gen_ship_callphone") = Mid(ln, 5)
                        Case "S3P="
                            DVGen(0).Item("ord_gen_ship_thirdparty") = IIf(Mid(ln, 5) = 1, True, False)
                        Case "S3N="
                            DVGen(0).Item("ord_gen_ship_thirdpartyname") = Mid(ln, 5)
                        Case "S3S="
                            DVGen(0).Item("ord_gen_ship_numskids") = CInt(IIf(IsNumeric(Mid(ln, 5)), Mid(ln, 5), 0))
                        Case "SIS="
                            DVGen(0).Item("ord_gen_ship_intlship") = IIf(Mid(ln, 5) = 1, True, False)
                        Case "SCO="
                            DVGen(0).Item("ord_gen_ship_collect") = IIf(Mid(ln, 5) = 1, True, False)
                        Case "TBC="
                            DVGen(0).Item("ord_gen_bottles") = CInt(IIf(IsNumeric(Mid(ln, 5)), Mid(ln, 5), 0))
                        Case "SPU="
                            DVGen(0).Item("ord_gen_ship_cust_pickup") = IIf(Mid(ln, 5) = 1, True, False)
                        Case "SWG="
                            DVGen(0).Item("ord_gen_ship_white_glove") = IIf(Mid(ln, 5) = 1, True, False)
                        Case "TCA="
                            DVGen(0).Item("ord_gen_co_toart") = IIf(Mid(ln, 5) = 1, True, False)
                        Case "PRI="
                            DVGen(0).Item("ord_gen_co_priority") = IIf(Mid(ln, 5) = 1, True, False)
                        Case "MT ="
                            cmd.CommandText = "select count(mat_fac_serial) from mat_fac where mat_fac_mat_code='" + Mid(ln, 5) + "' and mat_fac_start<='" + tCreate.Text + "' and mat_fac_end>='" + tCreate.Text + "'"
                            cnn.Open()
                            If nz(cmd.ExecuteScalar, 0) = 0 Then
                                fl.Close()
                                cnn.Close()
                                MsgBox("Material Code " + Mid(ln, 5) + " does not exist.  Import has been terminated.", MsgBoxStyle.Critical, "Material?")
                                Exit Sub
                            End If
                            cnn.Close()
                            DVGen(0).Item("ord_gen_material") = Mid(ln, 5)
                            Me.tGenMaterial.Value = Mid(ln, 5)
                        Case "STA="
                            cmd.CommandText = "select stain_serial from stain_file where stain_name='" + Mid(ln, 5) + "'"
                            cnn.Open()
                            onStainSerial = nz(cmd.ExecuteScalar, -1)
                            cnn.Close()
                            If onStainSerial < 0 Then
                                fl.Close()
                                MsgBox("Stain Code " + Mid(ln, 5) + " does not exist.  Import has been terminated.", MsgBoxStyle.Critical, "Stain Code?")
                                Exit Sub
                            End If
                            DVGen(0).Item("ord_gen_def_stain_serial") = onStainSerial
                        Case "LAQ="
                            'If Mid(ln, 5) = "1" Then
                            '    Dim fmLacq As New fmEstOrdBOMImportLacq
                            '    If fmLacq.ShowDialog = 1 Then
                            '        DVGen(0).Item("ord_gen_def_lacq3") = "1"
                            '    Else
                            '        DVGen(0).Item("ord_gen_def_lacq3") = "3"
                            '    End If
                            'End If
                            If Mid(ln, 5) = "LAQ3" Then
                                DVGen(0).Item("ord_gen_def_lacq3") = "3"
                            End If
                            If Mid(ln, 5) = "LAQ1" Then
                                DVGen(0).Item("ord_gen_def_lacq3") = "1"
                            End If

                            If Mid(ln, 5) = "1" Then
                                DVGen(0).Item("ord_gen_def_lacq3") = "1"
                            End If

                            If Mid(ln, 5) = "3" Then
                                DVGen(0).Item("ord_gen_def_lacq3") = "3"
                            End If

                            If Mid(ln, 5) = "T1" Then
                                DVGen(0).Item("ord_gen_def_lacq3") = " "
                                MsgBox("Remember to set table top(s) lacquer to 1 coat.")
                            End If
                            If Mid(ln, 5) = "T3" Then
                                DVGen(0).Item("ord_gen_def_lacq3") = " "
                                MsgBox("Remember to set table top(s) lacquer to 3 coats.")
                            End If

                            If Mid(ln, 5) = "0" Then
                                DVGen(0).Item("ord_gen_def_lacq3") = " "
                            End If
                        Case "GSN="
                            If nz(DVGen(0).Item("ord_gen_special_notes")) = "" Then
                                DVGen(0).Item("ord_gen_special_notes") = Mid(ln, 5)
                            Else
                                DVGen(0).Item("ord_gen_special_notes") = DVGen(0).Item("ord_gen_special_notes") + vbCrLf + Mid(ln, 5)
                            End If
                        Case "CIR="
                            DVGen(0).Item("ord_gen_circles") = CInt(Mid(ln, 5))
                        Case "MLD="
                            DVGen(0).Item("ord_gen_moldings") = CInt(Mid(ln, 5))
                        Case "SQF="
                            DVGen(0).Item("ord_gen_upsell_sqft") = CDbl(Mid(ln, 5))
                        Case "WTH="
                            row("ord_itm_width") = CDbl(Mid(ln, 5))
                        Case "HGT="
                            row("ord_itm_height") = CDbl(Mid(ln, 5))
                        Case "DTH="
                            row("ord_itm_depth") = CDbl(Mid(ln, 5))
                    End Select
                    ln = fl.ReadLine
                Loop
                If Not row Is Nothing Then
                    DVItems.Table.Rows.Add(row)
                    'dsItems.Tables("ord_itm").Rows.Add(row)
                End If
                Grid1.DataBind()
                fl.Close()
                DVGen.Item(0)("ord_gen_bom_import") = FileDate
            Next

            BindingContext(DVGen).EndCurrentEdit()
            UltraCalcManager1.DirtyAllFormulas()
            UpdateAutoDesignType()
            If tDefStain.Value <> 0 Then CheckStainLines(tDefStain.Value)
            Me.UpdatingLacq = False
            CheckLacquerLines()
            Grid1.Refresh()
            DoTotal()
            UltraCalcManager1.DirtyAllFormulas()
            GridHighlight()
            If DVItems.Count > 0 And defMaterial <> tGenMaterial.Text Then UpdateMaterial()
            onMat = tGenMaterial.Text
        Catch
            DoError(Err, Me)
        Finally
            UpdatingLacq = False
        End Try
    End Sub

    Private Sub MenuItem2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        DisplayReport("quote landscape", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_itm.ord_itm_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='Q'", True, 1, False)
        'DisplayReport("quote", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_itm.ord_itm_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='Q'", True, 1, False, , False, False)
    End Sub

    Public Sub GetGenTaxRate(Optional ByVal RunSubDoTotal As Boolean = True)
        Dim TaxRate, ShipTaxPerc As Double
        Dim cmd As New SqlCommand
        Dim TaxInstalls As Boolean
        cmd.Connection = cnn2

        If EditMode = "" Then Exit Sub
        If DVGen.Count = 0 Then Exit Sub
        If gsTaxExempt.Checked = True Then
            gsTaxRate.Text = 0
            DVGen(0)("ord_gen_cust_taxrate") = 0
            gsShipTaxPerc.Text = 0
            DVGen(0)("ord_gen_tax_ship_perc") = 0
            gsTaxInstalls.Checked = False
            DVGen(0)("ord_gen_tax_installs") = False
        Else
            cnn2.Open()
            TaxRate = 0
            'Check tax rate from shipping info
            If gsZip.Text <> "" And gsCity.IsItemInList = False Then
                cmd.CommandText = "select max(zip_sales_tax) as zip_sales_tax from zip_file inner join tax_state on zip_state=tax_state where zip_code='" + gsZip.Text + "' and zip_start<='" + CStr(Today) + "' and zip_end>='" + CStr(Today) + "' group by zip_code"
                TaxRate = nz(cmd.ExecuteScalar, 0)
            Else
                If gsZip.Text <> "" And gsCity.IsItemInList = True Then
                    cmd.CommandText = "select zip_sales_tax from zip_file inner join tax_state on zip_state=tax_state where zip_code='" + gsZip.Text + "' and zip_city='" + Replace(gsCity.Text, "'", "''") + "' and zip_county_name='" + gsCounty.Text + "' and zip_start<='" + CStr(Today) + "' and zip_end>='" + CStr(Today) + "'"
                    TaxRate = cmd.ExecuteScalar
                    If TaxRate = 0 Then
                        cmd.CommandText = "select max(zip_sales_tax) from zip_file inner join tax_state on zip_state=tax_state where zip_code='" + gsZip.Text + "' and zip_city='" + Replace(gsCity.Text, "'", "''") + "' and zip_start<='" + CStr(Today) + "' and zip_end>='" + CStr(Today) + "'"
                        TaxRate = nz(cmd.ExecuteScalar, 0)
                    End If
                Else
                    If gsState.Text <> "" And gsCounty.Text <> "" Then
                        cmd.CommandText = "select zip_sales_tax from zip_file inner join tax_state on zip_state=tax_state where zip_state='" + gsState.Text + "' and zip_county_name='" + gsCounty.Text + "' and zip_start<='" + CStr(Today) + "' and zip_end>='" + CStr(Today) + "'"
                        TaxRate = nz(cmd.ExecuteScalar, 0)
                    Else
                        TaxRate = 0
                    End If
                End If
            End If
            gsTaxRate.Text = TaxRate
            DVGen(0)("ord_gen_cust_taxrate") = TaxRate

            'Check whether installations are taxed
            If gsState.Text <> "" Then
                cmd.CommandText = "select tax_installation_sales from tax_state where tax_state='" + gsState.Text + "' and tax_ship_start <= '" + tCreate.Text + "' and tax_ship_end >= '" + tCreate.Text + "'"
                TaxInstalls = nz(cmd.ExecuteScalar, False)
            Else
                TaxInstalls = False
            End If
            gsTaxInstalls.CheckState = IIf(TaxInstalls, CheckState.Checked, CheckState.Unchecked)
            DVGen(0)("ord_gen_tax_installs") = TaxInstalls

            If gsState.Text <> "" Then
                cmd.CommandText = "select tax_ship_percent from tax_state where tax_state='" + gsState.Text + "' and tax_ship_start<='" + tCreate.Text + "' and tax_ship_end>='" + tCreate.Text + "'"
                ShipTaxPerc = nz(cmd.ExecuteScalar, 0)
            Else
                ShipTaxPerc = 0
            End If
            gsShipTaxPerc.Text = ShipTaxPerc
            DVGen(0)("ord_gen_tax_ship_perc") = ShipTaxPerc
            cnn2.Close()
        End If

        If RunSubDoTotal Then DoTotal()
    End Sub

    Private Sub bAddShipment_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bAddShipment.Click
        If EditMode = "Add" Or EditMode = "Edit" Then
            MsgBox("You can not be in edit mode to use this function", MsgBoxStyle.Information, "Edit Mode?")
            Exit Sub
        End If
        'If Me.gsShipHold.Checked Then
        '    MsgBox("This order is on SHIPPING HOLD and can not ship.", MsgBoxStyle.Critical, "Shipping Hold?")
        '    Exit Sub
        'End If
        tOrd.Focus()
        tOrd.SelectAll()

        Dim fm As fmShipment
        fm = LoadForm("Shipments")
        fm.CloseOnSave = True
        fm.Add()
        If Me.tThirdPartyShipVia.Value <> "" Then fm.tVia.Value = Me.tThirdPartyShipVia.Value
        fm.tFedExPO.Text = Me.tPO.Text
        If Me.cbThirdParty.Checked Then fm.tFedEx3rdParty.Text = Me.tThirdPartyAcct.Text
        fm.tVia.Focus()
        fm.tOrd.Text = tOrd.Text
        fm.LoadRevs()
        fm.tRev.Text = Mid(Tab1.ActiveTab.Key, 2)
        fm.LoadTypes()
        fm.tType.Text = Mid(Tab1.ActiveTab.Key, 1, 1)
        fm.GetItems()
        fm.UltraButton1_Click(sender, e)
    End Sub

    Private Sub bAddPayment_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bAddPayment.Click
        tOrd.Focus()
        Dim fm As fmPayment
        fm = LoadForm("Payments")
        fm.Add()
        fm.tOrd.Text = tOrd.Text
        fm.tOrd_Leave(sender, e)
        fm.tMeth.Focus()
        JumpedTo = "Payment"
    End Sub
    Public Sub UpdateSalesRep()
        If dsGen.Tables.Count = 0 Then Exit Sub
        Dim cnnx As New SqlConnection(cnn.ConnectionString + ";password='39201'")
        Dim cmd As New SqlCommand("", cnnx)
        Dim dr As DataRow
        Dim da As New SqlDataAdapter(cmd)
        Dim ds As New DataSet
        Dim zips, zipx As String
        Dim row As DataRow
        Dim Zip As Integer
        Dim doOutside As Boolean
        Dim onResp As String

        'cnnx.Open()
        'If tCustId.Text <> "" Then
        '    For Each row In dsGen.Tables(0).Rows
        '        cmd.CommandText = "select cust_rep from cust_file where cust_id='" + tCustId.Text + "'"
        '        row("ord_gen_inside") = nz(cmd.ExecuteScalar, "")
        '        cmd.CommandText = "select cust_terr from cust_file where cust_id='" + tCustId.Text + "'"
        '        row("ord_gen_terr") = nz(cmd.ExecuteScalar, "")

        '        If nz(row("ord_gen_terr")) = "CAT" Then
        '            row("ord_gen_outside") = "NONE"
        '            'cbResponsible.CheckedIndex = -1
        '            row("ord_gen_resp_rep") = "I"
        '        End If
        '    Next
        '    cnnx.Close()
        '    Exit Sub
        '    'If CustSalesCat = "CAT" Then    'jpj 2/26/2008
        'End If

        'If tsold_state.Text = "" Then Exit Sub
        'cmd.CommandText = "select * from rep_ter where rep_ter_state='" + tsold_state.Text + "'"
        'da.Fill(ds, "rep")
        'If ds.Tables("rep").Rows.Count > 0 Then
        '    For Each dr In ds.Tables("rep").Rows
        '        If nz(dr("rep_ter_zip")) <> "" Then
        '            If tsold_zip.Text = "" Then Exit For
        '            For Each zips In Split(dr("rep_ter_zip"), ",")
        '                For Zip = CInt(Split(zips, "-")(0)) To CInt(Split(zips, "-")(Split(zips, "-").Length - 1))
        '                    zipx = Format(Zip, "000")
        '                    If Mid(tsold_zip.Text, 1, Len(Trim(zipx))) = Mid(Trim(zipx), 1, Len(Trim(zipx))) Then
        '                        For Each row In dsGen.Tables(0).Rows
        '                            If nz(row("ord_gen_outside")) = "" Or nz(row("ord_gen_outside")) = "NONE" Then
        '                                doOutside = True
        '                            Else
        '                                doOutside = False
        '                            End If
        '                            If CustSalesCat = "CAT" Then
        '                                If doOutside Then
        '                                    row("ord_gen_outside") = "NONE"
        '                                    row("ord_gen_resp_rep") = "I"
        '                                End If
        '                            Else
        '                                If doOutside Then
        '                                    row("ord_gen_outside") = dr("rep_ter_out_rep_code")
        '                                    row("ord_gen_floating") = "<None>"
        '                                    row("ord_gen_resp_rep") = "O"
        '                                End If
        '                            End If
        '                            If nz(row("ord_gen_inside")) = "" Then
        '                                If tCustId.Text <> "" Then
        '                                    'cmd.CommandText = "select cust_rep from cust_file where cust_id='" + tCustId.Text + "'"
        '                                    'row("ord_gen_inside") = nz(cmd.ExecuteScalar, "")
        '                                Else
        '                                    row("ord_gen_inside") = dr("rep_ter_in_rep_code")
        '                                End If
        '                            End If

        '                            UpdateTerritory(row)

        '                        Next
        '                        Exit For
        '                    End If
        '                Next
        '            Next
        '        Else
        '            For Each row In dsGen.Tables(0).Rows
        '                If nz(row("ord_gen_outside")) = "" Or nz(row("ord_gen_outside")) = "NONE" Then
        '                    doOutside = True
        '                Else
        '                    doOutside = False
        '                End If
        '                If CustSalesCat = "CAT" Then
        '                    If doOutside Then
        '                        row("ord_gen_outside") = "NONE"
        '                        row("ord_gen_resp_rep") = "I"
        '                    End If
        '                Else
        '                    If doOutside Then
        '                        row("ord_gen_outside") = dr("rep_ter_out_rep_code")
        '                        row("ord_gen_floating") = "<None>"
        '                        row("ord_gen_resp_rep") = "O"
        '                    End If
        '                End If
        '                If nz(row("ord_gen_inside")) = "" Then
        '                    If tCustId.Text <> "" Then
        '                        'cmd.CommandText = "select cust_rep from cust_file where cust_id='" + tCustId.Text + "'"
        '                        'row("ord_gen_inside") = nz(cmd.ExecuteScalar, "")
        '                    Else
        '                        row("ord_gen_inside") = dr("rep_ter_in_rep_code")
        '                    End If
        '                End If

        '                UpdateTerritory(row)

        '            Next
        '            Exit For
        '        End If
        '    Next
        'End If


        'For Each row In dsGen.Tables(0).Rows
        '    If nz(row("ord_gen_outside")) = "" Then row("ord_gen_outside") = "NONE"
        '    'cbResponsible.CheckedIndex = -1
        '    'row("ord_gen_resp_rep") = "I"

        '    If tSoldCustId.Text = "" And row("ord_gen_outside") = "NONE" Then
        '        cmd.CommandText = "select rep_code from rep_file where rep_type='F' and rep_active=1"
        '        row("ord_gen_floating") = nz(cmd.ExecuteScalar, "<None>")
        '        If row("ord_gen_floating") <> "<None>" Then row("ord_gen_resp_rep") = "F"
        '    End If
        '    If tCustId.Text = "WRS" Then
        '        row("ord_gen_outside") = "NONE"
        '        cbResponsible.CheckedIndex = -1
        '        row("ord_gen_resp_rep") = "I"
        '    End If
        'Next

        'cnnx.Close()

        '2/23/2010
        cnnx.Open()
        If tCustId.Text <> "" Then
            For Each row In dsGen.Tables(0).Rows
                cmd.CommandText = "select cust_rep from cust_file where cust_id='" + tCustId.Text + "'"
                row("ord_gen_inside") = nz(cmd.ExecuteScalar, "")
                cmd.CommandText = "select cust_terr from cust_file where cust_id='" + tCustId.Text + "'"
                row("ord_gen_terr") = nz(cmd.ExecuteScalar, "")

                If nz(row("ord_gen_terr")) = "CAT" Then
                    row("ord_gen_outside") = "NONE"
                    'cbResponsible.CheckedIndex = -1
                    row("ord_gen_resp_rep") = "I"
                End If
            Next
            cnnx.Close()
            Exit Sub
            'If CustSalesCat = "CAT" Then    'jpj 2/26/2008
        End If

        If tsold_state.Text = "" Then Exit Sub
        For Each row In dsGen.Tables(0).Rows
            onResp = nz(row("ord_gen_resp_rep"))
            cmd.CommandText = "select * from rep_ter where rep_ter_state='" + tsold_state.Text + "' and rep_ter_start<='" + CStr(row("ord_gen_create_date")) + "' and rep_ter_end>='" + CStr(row("ord_gen_create_date")) + "'"
            da.Fill(ds, "rep")
            If ds.Tables("rep").Rows.Count > 0 Then
                For Each dr In ds.Tables("rep").Rows
                    If nz(dr("rep_ter_zip")) <> "" Then
                        If tsold_zip.Text = "" Then Exit For
                        For Each zips In Split(dr("rep_ter_zip"), ",")
                            For Zip = CInt(Split(zips, "-")(0)) To CInt(Split(zips, "-")(Split(zips, "-").Length - 1))
                                zipx = Format(Zip, "000")
                                If Mid(tsold_zip.Text, 1, Len(Trim(zipx))) = Mid(Trim(zipx), 1, Len(Trim(zipx))) Then
                                    'For Each row In dsGen.Tables(0).Rows
                                    If nz(row("ord_gen_outside")) = "" Or nz(row("ord_gen_outside")) = "NONE" Then
                                        doOutside = True
                                    Else
                                        doOutside = False
                                    End If
                                    If CustSalesCat = "CAT" Then
                                        If doOutside Then
                                            row("ord_gen_outside") = "NONE"
                                            row("ord_gen_resp_rep") = "I"
                                        End If
                                    Else
                                        If doOutside Then
                                            row("ord_gen_outside") = dr("rep_ter_out_rep_code")
                                            row("ord_gen_floating") = "<None>"
                                            row("ord_gen_resp_rep") = "O"
                                        End If
                                    End If
                                    If nz(row("ord_gen_inside")) = "" Then
                                        If tCustId.Text <> "" Then
                                            'cmd.CommandText = "select cust_rep from cust_file where cust_id='" + tCustId.Text + "'"
                                            'row("ord_gen_inside") = nz(cmd.ExecuteScalar, "")
                                        Else
                                            '10/30/2014 DaleW
                                            'row("ord_gen_inside") = dr("rep_ter_in_rep_code")
                                        End If
                                    End If

                                    UpdateTerritory(row)

                                    'Next
                                    Exit For
                                End If
                            Next
                        Next
                    Else
                        'For Each row In dsGen.Tables(0).Rows
                        If nz(row("ord_gen_outside")) = "" Or nz(row("ord_gen_outside")) = "NONE" Then
                            doOutside = True
                        Else
                            doOutside = False
                        End If
                        If CustSalesCat = "CAT" Then
                            If doOutside Then
                                row("ord_gen_outside") = "NONE"
                                row("ord_gen_resp_rep") = "I"
                            End If
                        Else
                            If doOutside Then
                                row("ord_gen_outside") = dr("rep_ter_out_rep_code")
                                row("ord_gen_floating") = "<None>"
                                row("ord_gen_resp_rep") = "O"
                            End If
                        End If
                        If nz(row("ord_gen_inside")) = "" Then
                            If tCustId.Text <> "" Then
                                'cmd.CommandText = "select cust_rep from cust_file where cust_id='" + tCustId.Text + "'"
                                'row("ord_gen_inside") = nz(cmd.ExecuteScalar, "")
                            Else
                                '10/30/2014 DaleW
                                'row("ord_gen_inside") = dr("rep_ter_in_rep_code")
                            End If
                        End If

                        UpdateTerritory(row)

                        'Next
                        Exit For
                    End If
                Next
            End If
            If onResp <> nz(row("ord_gen_resp_rep")) And nz(row("ord_gen_resp_rep")) = "O" Then cbEmailOSRShipments.Checked = True
        Next

        For Each row In dsGen.Tables(0).Rows
            If nz(row("ord_gen_outside")) = "" Then row("ord_gen_outside") = "NONE"
            'cbResponsible.CheckedIndex = -1
            'row("ord_gen_resp_rep") = "I"

            If tSoldCustId.Text = "" And row("ord_gen_outside") = "NONE" Then
                cmd.CommandText = "select rep_code from rep_file where rep_type='F' and rep_active=1"
                row("ord_gen_floating") = nz(cmd.ExecuteScalar, "<None>")
                If row("ord_gen_floating") <> "<None>" Then row("ord_gen_resp_rep") = "F"
            End If
            If tCustId.Text = "WRS" Then
                row("ord_gen_outside") = "NONE"
                cbResponsible.CheckedIndex = -1
                row("ord_gen_resp_rep") = "I"
            End If
        Next

        cnnx.Close()

    End Sub




    Private Sub tForecastDate_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tForecastDate.ValueChanged
        If Not Me.ActiveControl Is tForecastDate Then Exit Sub
        tForecast.Value = "Forecasted"
        If tForecastPerc.Text = "" Or tForecastPerc.Text = "0" Then
            tForecastPerc.Text = "100"
            DVGen.Item(0)("ord_gen_forecast_perc") = "100"
        End If
    End Sub
    Private Sub BindFields()
        Try
            DVItems = New DataView(dsItems.Tables("ord_itm"))
            DVGen = New DataView(dsGen.Tables("ord_gen"))
            DVAltShip = New DataView(dsAltShip.Tables("ord_alt_ship"))
            'DVRepReq = New DataView(dsRepReq.Tables("ord_rep_req"))
            DVOrdProd = New DataView(dsOrdProd.Tables("ord_prod"))

            dsItems.Tables("ord_itm").Columns("ord_itm_base_price").DefaultValue = 0
            dsItems.Tables("ord_itm").Columns("ord_itm_unt_base").DefaultValue = 0
            dsItems.Tables("ord_itm").Columns("ord_itm_mpf").DefaultValue = 0
            dsItems.Tables("ord_itm").Columns("ord_itm_markup").DefaultValue = 0
            dsItems.Tables("ord_itm").Columns("ord_itm_disc_perc").DefaultValue = 0
            dsItems.Tables("ord_itm").Columns("ord_itm_disc").DefaultValue = 0
            dsItems.Tables("ord_itm").Columns("ord_itm_unt_sell").DefaultValue = 0
            dsItems.Tables("ord_itm").Columns("ord_itm_unt_ship").DefaultValue = 0
            dsItems.Tables("ord_itm").Columns("ord_itm_ship_value").DefaultValue = 0
            dsItems.Tables("ord_itm").Columns("ord_itm_is_disc").DefaultValue = False
            dsItems.Tables("ord_itm").Columns("ord_itm_is_up").DefaultValue = False
            dsItems.Tables("ord_itm").Columns("ord_itm_is_perc_price").DefaultValue = False
            dsItems.Tables("ord_itm").Columns("ord_itm_qty").DefaultValue = 1
            dsItems.Tables("ord_itm").Columns("ord_itm_change_base").DefaultValue = False
            dsItems.Tables("ord_itm").Columns("ord_itm_wood_factor").DefaultValue = 1
            dsItems.Tables("ord_itm").Columns("ord_itm_ship_flat").DefaultValue = 0

            tBase.DataBindings.Add("value", DVItems, "ord_itm_base_price")
            tUnitBase.DataBindings.Add("value", DVItems, "ord_itm_unt_base")
            tShipUnit.DataBindings.Add("value", DVItems, "ord_itm_unt_ship")
            tShipFlat.DataBindings.Add("value", DVItems, "ord_itm_ship_flat")
            tMPF.DataBindings.Add("value", DVItems, "ord_itm_mpf")
            tMF.DataBindings.Add("value", DVItems, "ord_itm_markup")
            'tDiscPerc.DataBindings.Add("value", DVItems, "ord_itm_disc_perc")
            tDisc.DataBindings.Add("value", DVItems, "ord_itm_disc")
            tPriceCalc.DataBindings.Add("text", DVItems, "ord_itm_price_method")
            tForecastOveride.DataBindings.Add("value", DVItems, "ord_itm_forecast_overide")
            tProdType.DataBindings.Add("value", DVItems, "ord_itm_prod_type")
            tLineNotes.DataBindings.Add("text", DVItems, "ord_itm_note")
            tStainAdd.DataBindings.Add("value", DVItems, "ord_itm_stain_bottles_add")
            tLacqAdd.DataBindings.Add("value", DVItems, "ord_itm_lacq_bottles_add")
            tWidth.DataBindings.Add("value", DVItems, "ord_itm_width")
            tHeight.DataBindings.Add("value", DVItems, "ord_itm_height")
            tDepth.DataBindings.Add("value", DVItems, "ord_itm_depth")

            tRackHeight.DataBindings.Add("text", DVGen, "ord_gen_rack_height")
            tInside.DataBindings.Add("value", DVGen, "ord_gen_inside")
            tOutside.DataBindings.Add("value", DVGen, "ord_gen_outside")
            tFloating.DataBindings.Add("value", DVGen, "ord_gen_floating")
            tTerr.DataBindings.Add("value", DVGen, "ord_gen_terr")
            cbResponsible.DataBindings.Add("value", DVGen, "ord_gen_resp_rep")
            tDesigner.DataBindings.Add("value", DVGen, "ord_gen_designer")
            tSource.DataBindings.Add("value", DVGen, "ord_gen_src")
            tCCSource.DataBindings.Add("value", DVGen, "ord_gen_ccsrc")
            tDispDate.DataBindings.Add("text", DVGen, "ord_gen_show_date")
            tCreate.DataBindings.Add("text", DVGen, "ord_gen_create_date")
            tCreateBy.DataBindings.Add("text", DVGen, "ord_gen_create_by")
            tUpOn.DataBindings.Add("text", DVGen, "ord_gen_update_date")
            tUpBy.DataBindings.Add("text", DVGen, "ord_gen_update_by")
            tBilledDate.DataBindings.Add("text", DVGen, "ord_gen_billdate")
            tPropStage.DataBindings.Add("text", DVGen, "ord_gen_prop_stage")
            tStageDate.DataBindings.Add("text", DVGen, "ord_gen_staged_date")
            tShipDate.DataBindings.Add("text", DVGen, "ord_gen_ship_date")
            'tTotal2.DataBindings.Add("value", dvgen, "ord_gen_line_total")
            'tShipTotal.DataBindings.Add("value", dvgen, "ord_gen_ship")
            tShipExtra.DataBindings.Add("value", DVGen, "ord_gen_ship_extra")
            tShipDiscount.DataBindings.Add("value", DVGen, "ord_gen_ship_disc")
            tRefFee.DataBindings.Add("value", DVGen, "ord_gen_ref_fee")
            'tTaxTotal.DataBindings.Add("value", dvgen, "ord_gen_tax")
            'tGrandTotal.DataBindings.Add("value", dvgen, "ord_gen_total")
            'tStatus.DataBindings.Add("value", DVGen, "ord_gen_status")
            tStatus2.DataBindings.Add("text", DVGen, "ord_gen_status2")
            tPO.DataBindings.Add("text", DVGen, "ord_gen_cust_po")
            tCustOrd.DataBindings.Add("text", DVGen, "ord_gen_cust_order")
            tTabTitle.DataBindings.Add("text", DVGen, "ord_gen_tab_title")
            tGenMaterial.DataBindings.Add("text", DVGen, "ord_gen_material")
            tGenMaterial.DataBindings.Add("value", DVGen, "ord_gen_material")
            tDefStain.DataBindings.Add("value", DVGen, "ord_gen_def_stain_serial")
            tDefLacq.DataBindings.Add("value", DVGen, "ord_gen_def_lacq3")
            tDefFinish.DataBindings.Add("value", DVGen, "ord_gen_def_finish_serial")
            'tDefLacquer.DataBindings.Add("checkedvalue", DVGen, "ord_gen_def_lacquer")
            tGenFinish.DataBindings.Add("text", DVGen, "ord_gen_finish")
            tSpecialNotes.DataBindings.Add("text", DVGen, "ord_gen_special_notes")
            '2/2/2009 removed binding from tsalescat.  It constantly reset tsalescat.text to "" whenever any dvgen.item field was set to anything. -jpj
            tSalesCat.DataBindings.Add("value", DVGen, "ord_gen_sales_cat")
            cbInside.DataBindings.Add("checkedvalue", DVGen, "ord_gen_ship_inside")
            cbShipActive.DataBindings.Add("checkedvalue", DVGen, "ord_gen_ship_active")
            cbCollect.DataBindings.Add("checkedvalue", DVGen, "ord_gen_ship_collect")
            cbShipWhiteGlove.DataBindings.Add("checkedvalue", DVGen, "ord_gen_ship_white_glove")
            cbOvernite.DataBindings.Add("checkedvalue", DVGen, "ord_gen_ship_overnite")
            cbGated.DataBindings.Add("checkedvalue", DVGen, "ord_gen_ship_gated")
            cbSmallTruck.DataBindings.Add("checkedvalue", DVGen, "ord_gen_ship_smalltruck")
            cbCall.DataBindings.Add("checkedvalue", DVGen, "ord_gen_ship_call")
            cbShipCustPickup.DataBindings.Add("checkedvalue", DVGen, "ord_gen_ship_cust_pickup")
            tCallName.DataBindings.Add("text", DVGen, "ord_gen_ship_callname")
            tCallPhone.DataBindings.Add("text", DVGen, "ord_gen_ship_callphone")
            cbTwoMan.DataBindings.Add("checkedvalue", DVGen, "ord_gen_ship_twoman")
            cbLiftGate.DataBindings.Add("checkedvalue", DVGen, "ord_gen_ship_liftgate")
            cbSteps.DataBindings.Add("checkedvalue", DVGen, "ord_gen_ship_steps")
            tSteps.DataBindings.Add("value", DVGen, "ord_gen_ship_numsteps")
            tSkids.DataBindings.Add("value", DVGen, "ord_gen_ship_numskids")
            cbIntlShip.DataBindings.Add("checkedvalue", DVGen, "ord_gen_ship_intlship")
            cbTurns.DataBindings.Add("checkedvalue", DVGen, "ord_gen_ship_turns")
            tTurns.DataBindings.Add("value", DVGen, "ord_gen_ship_numturns")
            cbThirdParty.DataBindings.Add("checkedvalue", DVGen, "ord_gen_ship_thirdparty")
            tThirdPartyName.DataBindings.Add("text", DVGen, "ord_gen_ship_thirdpartyname")
            tThirdPartyShipVia.DataBindings.Add("value", DVGen, "ord_gen_ship_thirdpartyshipvia")
            tThirdPartyAcct.DataBindings.Add("text", DVGen, "ord_gen_ship_thirdpartyacct")
            cbAlert.DataBindings.Add("checkedvalue", DVGen, "ord_gen_ship_alert")
            tForecast.DataBindings.Add("value", DVGen, "ord_gen_forecast")
            tForecastNote.DataBindings.Add("text", DVGen, "ord_gen_forecast_note")
            tForecastPerc.DataBindings.Add("text", DVGen, "ord_gen_forecast_perc")
            tLostReason.DataBindings.Add("value", DVGen, "ord_gen_lost_reason")
            tForecastDate.DataBindings.Add("value", DVGen, "ord_gen_forecast_date")
            tLostDate.DataBindings.Add("value", DVGen, "ord_gen_lost_date")
            tFieldConsultant.DataBindings.Add("value", DVGen, "ord_gen_field_consultant")
            tConsultType.DataBindings.Add("value", DVGen, "ord_gen_field_consult_type")

            tMaterial.DataBindings.Add("text", DVItems, "ord_itm_mat_code")
            tMaterial.DataBindings.Add("value", DVItems, "ord_itm_mat_code")
            tTaxable.DataBindings.Add("checkedvalue", DVItems, "ord_itm_taxable")
            'Check Offs
            cbISR.DataBindings.Add("checkedvalue", DVGen, "ord_gen_co_isr")
            cbFactoryInstall.DataBindings.Add("checkedvalue", DVGen, "ord_gen_co_factoryinstall")
            cbFactoryInstallReq.DataBindings.Add("checkedvalue", DVGen, "ord_gen_co_factoryinstall_req")
            tISRUser.DataBindings.Add("text", DVGen, "ord_gen_co_isruser")
            tISRDate.DataBindings.Add("text", DVGen, "ord_gen_co_isrdate")
            cbDesReq.DataBindings.Add("checkedvalue", DVGen, "ord_gen_co_desreq")
            cbDesigner.DataBindings.Add("checkedvalue", DVGen, "ord_gen_co_designer")
            tDesUser.DataBindings.Add("text", DVGen, "ord_gen_co_desuser")
            tDesDate.DataBindings.Add("text", DVGen, "ord_gen_co_desdate")
            cbPriority.DataBindings.Add("checkedvalue", DVGen, "ord_gen_co_priority")
            cbAddon.DataBindings.Add("checkedvalue", DVGen, "ord_gen_addon")
            cbAddOnNoEmail.DataBindings.Add("checkedvalue", DVGen, "ord_gen_addon_noemail")
            cbToArt.DataBindings.Add("checkedvalue", DVGen, "ord_gen_co_toart")
            cbCellarArt.DataBindings.Add("checkedvalue", DVGen, "ord_gen_co_ca")
            tCAUser.DataBindings.Add("text", DVGen, "ord_gen_co_causer")
            tCADate.DataBindings.Add("text", DVGen, "ord_gen_co_cadate")
            tInstallUser.DataBindings.Add("text", DVGen, "ord_gen_co_factoryinstall_user")
            tInstallDate.DataBindings.Add("text", DVGen, "ord_gen_co_factoryinstall_date")
            oDiscountType.DataBindings.Add("value", DVItems, "ord_itm_disc_type")
            tDiscVal.DataBindings.Add("value", DVItems, "ord_itm_disc_val")
            tdiscProdType.DataBindings.Add("value", DVItems, "ord_itm_disc_prod")

            tDiscMatl.DataBindings.Add("value", DVItems, "ord_itm_disc_matl")
            tDesType.DataBindings.Add("value", DVGen, "ord_gen_des_type")
            tDesignAuto.DataBindings.Add("text", DVGen, "ord_gen_des_type_auto")
            tBottles.DataBindings.Add("text", DVGen, "ord_gen_bottles")
            tShipVal.DataBindings.Add("value", DVItems, "ord_itm_ship_value")
            tUpSellSqFt.DataBindings.Add("text", DVGen, "ord_gen_upsell_sqft")
            tShipPromo.DataBindings.Add("value", DVGen, "ord_gen_ship_promo_serial")

            'Binding for Ord_Gen_Ship
            gsCustId.DataBindings.Add("text", DVGen, "ord_gen_ship_cust_id")
            gsName.DataBindings.Add("text", DVGen, "ord_gen_ship_name")
            gsCompany.DataBindings.Add("text", DVGen, "ord_gen_ship_company")
            gsCountry.DataBindings.Add("text", DVGen, "ord_gen_ship_country")
            gsAddr1.DataBindings.Add("text", DVGen, "ord_gen_ship_addr1")
            gsAddr2.DataBindings.Add("text", DVGen, "ord_gen_ship_addr2")
            gsAddr3.DataBindings.Add("text", DVGen, "ord_gen_ship_addr3")
            gsCity.DataBindings.Add("value", DVGen, "ord_gen_ship_city")
            gsState.DataBindings.Add("text", DVGen, "ord_gen_ship_state")
            gsZip.DataBindings.Add("text", DVGen, "ord_gen_ship_zip")
            gsCounty.DataBindings.Add("text", DVGen, "ord_gen_ship_county")
            gsProvince.DataBindings.Add("text", DVGen, "ord_gen_ship_province")
            gsPhone1.DataBindings.Add("text", DVGen, "ord_gen_ship_phone1")
            gsPhone2.DataBindings.Add("text", DVGen, "ord_gen_ship_phone2")
            gsFax.DataBindings.Add("text", DVGen, "ord_gen_ship_fax")
            gsCell.DataBindings.Add("text", DVGen, "ord_gen_ship_cell")
            gsEmail.DataBindings.Add("text", DVGen, "ord_gen_ship_email")
            gsTaxExempt.DataBindings.Add("checkedvalue", DVGen, "ord_gen_tax_exempt")
            gsShipNotify.DataBindings.Add("checkedvalue", DVGen, "ord_gen_ship_notify")
            gsExemptNo.DataBindings.Add("text", DVGen, "ord_gen_tax_exempt_no")
            gsExemptAddr.DataBindings.Add("text", DVGen, "ord_gen_tax_exempt_addr")
            gsShipTaxPerc.DataBindings.Add("text", DVGen, "ord_gen_tax_ship_perc")
            gsTaxRate.DataBindings.Add("text", DVGen, "ord_gen_cust_taxrate")
            gsTaxInstalls.DataBindings.Add("checkedvalue", DVGen, "ord_gen_tax_installs")
            gsShipHold.DataBindings.Add("checkedvalue", DVGen, "ord_gen_ship_hold")
            oShipToType.DataBindings.Add("value", DVGen, "ord_gen_shiptotype")

            'Binding for Alternate shipping
            chUseAltShip.DataBindings.Add("checkedvalue", DVGen, "ord_gen_alt_ship")
            tAltShipPhone1.DataBindings.Add("text", DVAltShip, "ord_alt_ship_phone1")
            tAltShipCustId.DataBindings.Add("value", DVAltShip, "ord_alt_ship_cust_id")
            tAltShipName.DataBindings.Add("text", DVAltShip, "ord_alt_ship_name")
            tAltShipCompany.DataBindings.Add("text", DVAltShip, "ord_alt_ship_company")
            tAltShipCountry.DataBindings.Add("text", DVAltShip, "ord_alt_ship_country")
            tAltShipAddr1.DataBindings.Add("text", DVAltShip, "ord_alt_ship_addr1")
            tAltShipAddr2.DataBindings.Add("text", DVAltShip, "ord_alt_ship_addr2")
            tAltShipAddr3.DataBindings.Add("text", DVAltShip, "ord_alt_ship_addr3")
            tAltShipCity.DataBindings.Add("text", DVAltShip, "ord_alt_ship_city")
            tAltShipState.DataBindings.Add("text", DVAltShip, "ord_alt_ship_state")
            tAltShipZip.DataBindings.Add("text", DVAltShip, "ord_alt_ship_zip")
            tAltShipProvince.DataBindings.Add("text", DVAltShip, "ord_alt_ship_province")
            tAltShipPhone2.DataBindings.Add("text", DVAltShip, "ord_alt_ship_phone2")
            tAltShipFax.DataBindings.Add("text", DVAltShip, "ord_alt_ship_fax")
            tAltShipCell.DataBindings.Add("text", DVAltShip, "ord_alt_ship_cell")
            tAltShipEmail.DataBindings.Add("text", DVAltShip, "ord_alt_ship_email")
            cbCustWTerms.DataBindings.Add("checkedvalue", DVGen, "ord_gen_cust_with_terms")
            oCustWTerms.DataBindings.Add("value", DVGen, "ord_gen_cust_with_terms_ship")

            'Contacts
            tContType.DataBindings.Add("text", dsCont.Tables("ord_cont"), "cont_type")
            tContName.DataBindings.Add("text", dsCont.Tables("ord_cont"), "cont_name")
            tContCompany.DataBindings.Add("text", dsCont.Tables("ord_cont"), "cont_company")
            tContAddr1.DataBindings.Add("text", dsCont.Tables("ord_cont"), "cont_addr1")
            tContAddr2.DataBindings.Add("text", dsCont.Tables("ord_cont"), "cont_addr2")
            tContCity.DataBindings.Add("text", dsCont.Tables("ord_cont"), "cont_city")
            tContState.DataBindings.Add("text", dsCont.Tables("ord_cont"), "cont_state")
            tContZip.DataBindings.Add("text", dsCont.Tables("ord_cont"), "cont_zip")
            tContPhone1.DataBindings.Add("text", dsCont.Tables("ord_cont"), "cont_phone1")
            tContPhone2.DataBindings.Add("text", dsCont.Tables("ord_cont"), "cont_phone2")
            tContCell.DataBindings.Add("text", dsCont.Tables("ord_cont"), "cont_cell")
            tContFax.DataBindings.Add("text", dsCont.Tables("ord_cont"), "cont_fax")
            tContEmail.DataBindings.Add("text", dsCont.Tables("ord_cont"), "cont_email")
            tContNote.DataBindings.Add("text", dsCont.Tables("ord_cont"), "ord_cont_note")
            tContPayee.DataBindings.Add("checkedvalue", dsCont.Tables("ord_cont"), "ord_cont_payee")

            'Sign Off
            'cbSignOff.DataBindings.Add("checkedvalue", DVGen, "ord_gen_signoff")
            'tSignOffUser.DataBindings.Add("text", DVGen, "ord_gen_signoff_user")
            'tSignOffDate.DataBindings.Add("text", DVGen, "ord_gen_signoff_date")
            'cbWriteUp.DataBindings.Add("checkedvalue", DVGen, "ord_gen_writeup")
            'tWriteUpUser.DataBindings.Add("text", DVGen, "ord_gen_writeup_user")
            'tWriteUpDate.DataBindings.Add("text", DVGen, "ord_gen_writeup_date")
            'cbAllClear.DataBindings.Add("checkedvalue", DVGen, "ord_gen_allclear")
            'tAllClearUser.DataBindings.Add("text", DVGen, "ord_gen_allclear_user")
            'tAllClearDate.DataBindings.Add("text", DVGen, "ord_gen_allclear_date")
            'tSignOffNote.DataBindings.Add("text", DVGen, "ord_gen_signoff_note")
            cbPCASignOffSent.DataBindings.Add("checkedvalue", DVGen, "ord_gen_pca_signoffsent")
            tPCASignOffSentBy.DataBindings.Add("text", DVGen, "ord_gen_pca_signoffsent_by")
            tPCASignOffSentDate.DataBindings.Add("text", DVGen, "ord_gen_pca_signoffsent_date")
            cbPCAsignOffRec.DataBindings.Add("checkedvalue", DVGen, "ord_gen_pca_signoffrec")
            tPCASignOffRecBy.DataBindings.Add("text", DVGen, "ord_gen_pca_signoffrec_by")
            tPCASignOffRecDate.DataBindings.Add("text", DVGen, "ord_gen_pca_signoffrec_date")

            tPriorityNote.DataBindings.Add("text", DVGen, "ord_gen_priority_note")
            ddDesignStatus.DataBindings.Add("value", DVGen, "ord_gen_des_status")
            tInstallerDate.DataBindings.Add("text", DVGen, "ord_gen_install_dt")
            tInstaller.DataBindings.Add("value", DVGen, "ord_gen_installer")
            tInstallNotes.DataBindings.Add("text", DVGen, "ord_gen_install_note")

            lDesReq.DataBindings.Add("text", DVGen, "ord_gen_design_required")


            'Proposed Commit Date
            pcDate.DataBindings.Add("text", DVGen, "ord_gen_pc_date")
            pcDays.DataBindings.Add("text", DVGen, "ord_gen_pc_days")
            pcNotes.DataBindings.Add("text", DVGen, "ord_gen_pc_notes")
            pcReport.DataBindings.Add("checkedvalue", DVGen, "ord_gen_pc_report")

            ''Diagnostics
            'tDiagSent.DataBindings.Add("text", DVDiag, "diag_sent_date")
            'tDiagRec.DataBindings.Add("checkedvalue", DVDiag, "diag_rec")
            'tDiagRecBy.DataBindings.Add("text", DVDiag, "diag_rec_by")
            'tDiagRecDate.DataBindings.Add("text", DVDiag, "diag_rec_date")
            'tDiagEmail.DataBindings.Add("text", DVDiag, "diag_email")
            tDiagNote.DataBindings.Add("text", DVGen, "ord_gen_diag_note")

            tpOKBillEarly.DataBindings.Add("checkedvalue", DVGen, "ord_gen_ok_to_bill_early")

        Catch
            DoError(Err, Me)
        End Try
    End Sub

    Public Overrides Sub Cancel()
        'KeyLog("[Cancel]")
        Dim DoIt As Boolean = QuietMode
        If DoIt = False Then
            If MsgBox("Are you sure you want to CANCEL?", MsgBoxStyle.YesNo, "Cancel?") = MsgBoxResult.Yes Then DoIt = True
        End If
        If DoIt Then
            EditMode = ""
            TabItems.Tabs("items").Selected = True
            Tab1.Tabs("C").Selected = True
            SetAddButtons()
            If tOrd.Text <> "" Then
                LockCtr(Me.Controls)
                Grid1.DisplayLayout.Override.AllowUpdate = Infragistics.Win.DefaultableBoolean.False
                Grid1.DisplayLayout.Override.AllowDelete = Infragistics.Win.DefaultableBoolean.False
                Grid1.DisplayLayout.Override.AllowAddNew = Infragistics.Win.UltraWinGrid.AllowAddNew.No
                LoadPage()
            Else
                ClearTabs()
                ClearFields(Me.Controls, False)
                LockCtr(Me.Controls)
                Grid1.DisplayLayout.Override.AllowUpdate = Infragistics.Win.DefaultableBoolean.False
                Grid1.DisplayLayout.Override.AllowDelete = Infragistics.Win.DefaultableBoolean.False
                Grid1.DisplayLayout.Override.AllowAddNew = Infragistics.Win.UltraWinGrid.AllowAddNew.No
                If KeyValue1 = "" Then
                    EditButtons("Blank")
                    LoadFields(Me)
                Else
                    EditButtons("Idle")
                End If
                Tab1.Tabs("Q0").Enabled = False
                Me.LoadContacts()
                LoadPage()
            End If
            If tOrd.Text <> "" Then UpdateModeLog("Cancel")
            tRefFee.Visible = True
            tBase.Enabled = False
            UpsellCheckboxes(True)
            'If UserGroup = "Admins" Then bEditSignoff.Visible = True
            AcceptOrd()
        End If
    End Sub

    Private Sub DefaultPage_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles DefaultPage.ValueChanged
        SaveSetting("Jcom", "Settings", "DefPage", DefaultPage.Value)
    End Sub

    Private Sub MenuItem3_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem3.Click
        Select Case Mid(Tab1.ActiveTab.Key, 1, 1)
            Case "Q", "O", "R"
                DisplayReport("quote landscape", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_itm.ord_itm_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "'", True, 1, False)
            Case Else
                MsgBox("Please select a Quote, Order or Replacement first", MsgBoxStyle.Information, "Pick One")
        End Select
        'DisplayReport("order", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_itm.ord_itm_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='O'", True, 1, False, , False, False)
    End Sub

    Private Sub bPrintOrder_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bPrintOrder.Click
        bPrintOrder.Enabled = False
        'DisplayReport("order", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_itm.ord_itm_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='O'", False, 1, True, , False, False)
        DisplayReport("quote landscape", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_gen.ord_gen_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='O'", False, 1, True, , False, False)
        bPrintOrder.Enabled = True
    End Sub

    Private Sub UltraMonthViewMulti1_BeforeMonthScroll(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinSchedule.BeforeMonthScrollEventArgs) Handles UltraMonthViewMulti1.BeforeMonthScroll

    End Sub

    Private Sub UltraMonthViewMulti1_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles UltraMonthViewMulti1.Click
        tForecastDate.Focus()
        tForecast.Value = "Forecasted"
        DVGen.Item(0)("ord_gen_forecast") = "Forecasted"
        tForecastDate.Value = UltraMonthViewMulti1.CalendarInfo.ActiveDay.Date
        BindingContext(DVGen).EndCurrentEdit()
    End Sub

    Private Sub cbResponsible_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cbResponsible.ValueChanged
        If Me.ActiveControl Is Nothing Then Exit Sub
        If Me.ActiveControl.Name <> "cbResponsible" Then Exit Sub
        If cbResponsible.Value = "O" Then
            cbEmailOSRShipments.Checked = True
        Else
            cbEmailOSRShipments.Checked = False
        End If
        If tFloating.Value = "" Or tFloating.Value = "<None>" Then
            If cbResponsible.Value = "F" Then
                MsgBox("Can not set to FSR unless you have one.", MsgBoxStyle.Information, "FSR?")
                cbResponsible.Value = "O"
            End If

            DVGen(0)("ord_gen_resp_rep") = cbResponsible.Value
            cnn.Open()
            UpdateTerritory(DVGen(0).Row)
            cnn.Close()
            tTerr.Value = DVGen(0)("ord_gen_terr")
            Exit Sub
        End If
        'MsgBox("Responsibility must be on the FSR when there is a Floating Rep", MsgBoxStyle.Information, "Floating Rep")
        'DVGen(0).Item("ord_gen_resp_rep") = "F"
        'cbResponsible.Value = "F"

        cnn.Open()
        UpdateTerritory(DVGen(0).Row)
        cnn.Close()
        tTerr.Value = DVGen(0)("ord_gen_terr")

    End Sub

    Private Sub tStatus_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs)

    End Sub

    Private Sub tStatus_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
    End Sub

    Private Sub tStatus_Enter(ByVal sender As System.Object, ByVal e As System.EventArgs)
        'onStatus = tStatus.Value
    End Sub

    Private Sub UltraButton4_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles UltraButton4.Click
        'EstOrd2
        Dim fm As New fmForecastStatus
        fm.fm = Me
        fm.ShowDialog()

    End Sub

    Private Sub VScrollBar1_Scroll(ByVal sender As System.Object, ByVal e As System.Windows.Forms.ScrollEventArgs)
        Select Case e.Type
            Case ScrollEventType.SmallDecrement
                tLineNotes.ScrollToCaret()
        End Select
    End Sub

    Private Sub fmEstOrd2_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Enter
        Select Case JumpedTo
            Case "Payment"
                Me.Visible = True
                Dim onKey As String
                onKey = Tab1.ActiveTab.Key
                LoadPage()
                'Tab1.Tabs(onKey).Selected = True
                'AcceptOrd()
        End Select
        JumpedTo = ""
    End Sub

    Private Sub fmEstOrd2_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.GotFocus

    End Sub

    Private Sub fmEstOrd2_Activated(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Activated
        tOrd.Focus()
        If TabItems.ActiveTab.Key = "Shipments" Then LoadShipments()
        If TabItems.ActiveTab.Key = "Payments" Then LoadPayments()
    End Sub

    Private Sub MenuItem4_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        DisplayReport("quote with unit shipping", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_itm.ord_itm_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='Q'", True, 1, True, , False, False)

    End Sub
    Private Sub UpdateModeLog(ByVal Mode As String)
        If tOrd.Text = "" Then Exit Sub
        Dim cnnTemp As New SqlConnection(cnn.ConnectionString + ";password='39201'")
        Dim cmd As New SqlCommand("insert into ord_edt_log (ord_edt_ord_serial,ord_edt_user,ord_edt_date,ord_edt_mode) values (" + tOrd.Text + ",'" + User + "','" + CStr(Now) + "','" + Mode + "')", cnnTemp)
        Try
            cnnTemp.Open()
            cmd.ExecuteNonQuery()
            cnnTemp.Close()
        Catch
            DoError(Err, Me, cmd.CommandText)
        End Try
    End Sub

    Private Sub MenuItem6_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem6.Click
        Select Case Mid(Tab1.ActiveTab.Key, 1, 1)
            Case "Q", "O", "R"
                DisplayReport("quote landscape no price", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_itm.ord_itm_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "'", True, 1, False)
            Case Else
                MsgBox("Please select a Quote, Order or Replacement first", MsgBoxStyle.Information, "Pick One")
        End Select
        'DisplayReport("order no pricing", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_itm.ord_itm_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='O'", True, 1, False, , False, False)
    End Sub

    Private Sub MenuItem7_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        DisplayReport("quote no pricing", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_itm.ord_itm_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='Q'", True, 1, False, , False, False)
    End Sub

    Private Sub oHistory_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles oHistory.ValueChanged
        LoadStatusHistory()
    End Sub

    Private Sub Grid1_AfterCellActivate(ByVal sender As Object, ByVal e As System.EventArgs) Handles Grid1.AfterCellActivate
        Try
            If Me.EditMode <> "Add" And Me.EditMode <> "Edit" Then Exit Sub
            If Grid1.ActiveRow Is Nothing Then Exit Sub
            'If Grid1.ActiveRow.Cells("ord_itm_item_code").Text = "" Then
            '    Grid1.ActiveRow.Cells("ord_itm_unt_sell").Activation = Infragistics.Win.UltraWinGrid.Activation.AllowEdit
            '    Exit Sub
            'End If

            Select Case Grid1.ActiveCell.Column.Header.Caption
                Case "Stain"
                    If (Grid1.ActiveRow.Cells("ord_itm_bottle_search").Value = "S") Or (Grid1.ActiveRow.Cells("ord_itm_stain_bottles").Value + Grid1.ActiveRow.Cells("ord_itm_stain_bottles_add").Value <= 0) Then
                        Grid1.ActiveCell.Activation = Infragistics.Win.UltraWinGrid.Activation.ActivateOnly
                    End If
                Case "Unit Sell $"
                    Dim cmd As New SqlCommand("select itm_change_price from itm_file where itm_code='" + Grid1.ActiveRow.Cells("ord_itm_item_code").Text + "'", cnn)
                    cnn.Open()
                    If nz(cmd.ExecuteScalar, False) = True Then
                        Grid1.ActiveRow.Cells("ord_itm_unt_sell").Activation = Infragistics.Win.UltraWinGrid.Activation.AllowEdit
                    Else
                        Grid1.ActiveRow.Cells("ord_itm_unt_sell").Activation = Infragistics.Win.UltraWinGrid.Activation.NoEdit
                    End If
                    cnn.Close()
                Case "Item Code"
                    onItem = nz(Grid1.ActiveCell.Value)
            End Select
        Catch
            DoError(Err, Me)
        End Try

    End Sub

    Private Sub cbDesigner_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cbDesigner.CheckedChanged
        If Not Me.ActiveControl Is cbDesigner Then Exit Sub
        DVGen(0).Item("ord_gen_co_designer") = cbDesigner.Checked
        If cbDesigner.Checked = True And cbDesigner.Focus = True Then
            DVGen(0).Item("ord_gen_co_desuser") = User
            DVGen(0).Item("ord_gen_co_desdate") = Now
            tDesUser.Text = User
            tDesDate.Text = Now
        End If
    End Sub

    Private Sub cbISR_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cbISR.CheckedChanged
        If Me.ActiveControl Is cbISR Then DVGen(0).Item("ord_gen_co_isr") = cbISR.Checked
    End Sub

    Private Sub cbCellarArt_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cbCellarArt.CheckedChanged
        If Not Me.ActiveControl Is cbCellarArt Then Exit Sub
        If UCase(UserType) = "I" Then
            If cbCellarArt.Checked Then
                MsgBox("Sales can not check this box.  Please see someone in this department.", MsgBoxStyle.Information, "Check?")
                cbCellarArt.Checked = False
                DVGen(0).Item("ord_gen_co_ca") = False
                Exit Sub
            Else
                cbFactoryInstall.Checked = False
                DVGen(0).Item("ord_gen_co_factoryinstall") = False
                cbISR.Checked = False
                DVGen(0).Item("ord_gen_co_isr") = False
            End If
        End If
        DVGen(0).Item("ord_gen_co_ca") = cbCellarArt.Checked
        If cbCellarArt.Checked = True And cbCellarArt.Focus = True Then
            DVGen(0).Item("ord_gen_co_causer") = User
            DVGen(0).Item("ord_gen_co_cadate") = Now
            tCAUser.Text = User
            tCADate.Text = Now
        End If

    End Sub
    Private Function GetDefColor(ByVal Mat As String) As String
        If Mat = "" Then Exit Function
        Dim cmd As New SqlCommand("select mat_color_act_color from mat_color_act where mat_color_act_mat_code='" + Mat + "' and '" + CStr(Today) + "'>=mat_color_act_start and '" + CStr(Today) + "'<=mat_color_act_end", cnn2)
        cnn2.Open()
        GetDefColor = nz(cmd.ExecuteScalar, "")
        cnn2.Close()
    End Function

    Private Sub cbISR_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbISR.Click
        If EditMode <> "Edit" And EditMode <> "Add" Then Exit Sub
        If cbISR.Checked = False Then
            If (cbDesigner.Checked = False And cbDesReq.Checked = True) Then
                cbISR.Checked = False
                MsgBox("Design must first be released.", MsgBoxStyle.Information, "Design Released?")
                Exit Sub
            End If

            Dim dr As DataRow
            Dim key As String
            For Each dr In dsGen.Tables("ord_gen").Rows
                If dr.RowState <> DataRowState.Deleted Then
                    If dr("ord_gen_create_date") > AcctClosed Then
                        If (tCustId.Text = "") Then
                            If nz(dr("ord_gen_resp_rep"), "") = "" Then
                                MsgBox("Must have a rep resposible for forecasting for each Quote.", MsgBoxStyle.Information, "Responsible Rep")
                                cbISR.Checked = False
                                key = dr("ord_gen_type") + CStr(dr("ord_gen_rev"))
                                Tab1.Tabs(key).Selected = True
                                TabItems.Tabs("general").Selected = True
                                cbResponsible.Focus()
                                Exit Sub
                            End If

                            If (dr("ord_gen_type") = "Q") Then
                                If (dr("ord_gen_forecast") Is DBNull.Value) Then dr("ord_gen_forecast") = ""
                                If dr("ord_gen_forecast") = "" Then
                                    MsgBox("Must have a forecast for each Quote.", MsgBoxStyle.Information, "forecast")
                                    cbISR.Checked = False
                                    key = dr("ord_gen_type") + CStr(dr("ord_gen_rev"))
                                    Tab1.Tabs(key).Selected = True
                                    TabItems.Tabs("forecast").Selected = True
                                    tForecast.Focus()
                                    Exit Sub
                                End If

                                If dr("ord_gen_forecast_date") Is DBNull.Value And dr("ord_gen_forecast") = "Forecasted" Then
                                    MsgBox("Must have a forecast Date for each Forecasted Quote.", MsgBoxStyle.Information, "forecast")
                                    cbISR.Checked = False
                                    key = dr("ord_gen_type") + CStr(dr("ord_gen_rev"))
                                    Tab1.Tabs(key).Selected = True
                                    TabItems.Tabs("forecast").Selected = True
                                    tForecast.Focus()
                                    Exit Sub
                                End If
                            End If
                        Else
                            If (dr("ord_gen_type") = "Q") And ForceForecasting() = True Then
                                If nz(dr("ord_gen_resp_rep"), "") = "" Then
                                    MsgBox("Must have a rep resposible for forecasting for each Quote.", MsgBoxStyle.Information, "Responsible Rep")
                                    cbISR.Checked = False
                                    key = dr("ord_gen_type") + CStr(dr("ord_gen_rev"))
                                    Tab1.Tabs(key).Selected = True
                                    TabItems.Tabs("general").Selected = True
                                    cbResponsible.Focus()
                                    Exit Sub
                                End If

                                If (dr("ord_gen_forecast") Is DBNull.Value) Then dr("ord_gen_forecast") = ""
                                If dr("ord_gen_forecast") = "" Then
                                    MsgBox("Must have a forecast for each Quote.", MsgBoxStyle.Information, "forecast")
                                    cbISR.Checked = False
                                    key = dr("ord_gen_type") + CStr(dr("ord_gen_rev"))
                                    Tab1.Tabs(key).Selected = True
                                    TabItems.Tabs("forecast").Selected = True
                                    tForecast.Focus()
                                    Exit Sub
                                End If

                                If dr("ord_gen_forecast_date") Is DBNull.Value And dr("ord_gen_forecast") = "Forecasted" Then
                                    MsgBox("Must have a forecast Date for each Forecasted Quote.", MsgBoxStyle.Information, "forecast")
                                    cbISR.Checked = False
                                    key = dr("ord_gen_type") + CStr(dr("ord_gen_rev"))
                                    Tab1.Tabs(key).Selected = True
                                    TabItems.Tabs("forecast").Selected = True
                                    tForecast.Focus()
                                    Exit Sub
                                End If
                            End If

                            If (dr("ord_gen_type") = "Q") And ForceForecasting() = False Then
                                If (dr("ord_gen_forecast") Is DBNull.Value) Then dr("ord_gen_forecast") = ""
                                If dr("ord_gen_forecast") = "Forecasted" Then
                                    MsgBox("You may not forecast Quotes that have a speed code and do not require forecasting. The forecast will be set to blank", MsgBoxStyle.Information, "forecast")
                                    cbISR.Checked = False
                                    dr("ord_gen_forecast") = DBNull.Value
                                    dr("ord_gen_forecast_date") = DBNull.Value
                                    key = dr("ord_gen_type") + CStr(dr("ord_gen_rev"))
                                    Tab1.Tabs(key).Selected = True
                                    TabItems.Tabs("forecast").Selected = True
                                    tForecast.Focus()
                                    Exit Sub
                                End If
                            End If
                        End If

                    End If
                End If
            Next
            If (cbToArt.Checked = True And cbCellarArt.Checked = False) Then
                cbISR.Checked = False
                MsgBox("Cellar Art must first be released.", MsgBoxStyle.Information, "Cellar Art Released?")
                Exit Sub
            End If
            If (cbFactoryInstallReq.Checked = True And cbFactoryInstall.Checked = False) Then
                cbISR.Checked = False
                MsgBox("Factory Install must first be released.", MsgBoxStyle.Information, "Factory Install Released?")
                Exit Sub
            End If
            DVGen(0).Item("ord_gen_co_isruser") = User
            DVGen(0).Item("ord_gen_co_isrdate") = Now
            tISRUser.Text = User
            tISRDate.Text = Now
        End If
    End Sub

    Private Sub Grid1_AfterRowUpdate(ByVal sender As Object, ByVal e As Infragistics.Win.UltraWinGrid.RowEventArgs) Handles Grid1.AfterRowUpdate
        Try
            DoTotal()
        Catch
            DoError(Err, Me)
        End Try

    End Sub

    Private Sub bOpenPdf_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bOpenPdf.Click
        Try
            Dim hwnd As Long
            Dim myProc As Process
            Dim itm As Object

            For Each itm In ListPDF.SelectedItems
                myProc = New Process

                myProc.StartInfo.FileName = PDFPath + itm
                myProc.StartInfo.WindowStyle = ProcessWindowStyle.Normal
                myProc.Start()
            Next
        Catch
            DoError(Err, Me)
        End Try

    End Sub

    Private Sub ListPDF_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ListPDF.SelectedIndexChanged

    End Sub

    Private Sub bDocList_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bDocList.Click
        If bDocList.Text = "List All Revs" Then
            bDocList.Text = "List by Rev"
        Else
            bDocList.Text = "List All Revs"
        End If
        SaveSetting("Jcom", "Settings", "DocList", bDocList.Text)
        LoadDocuments()
    End Sub

    Private Sub UltraButton5_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles UltraButton5.Click
        If ListPDF.Items.Count > 0 Then
            Dim cl As String = "C:\Program Files\Internet Explorer\IEXPLORE.EXE " + IO.Path.GetDirectoryName(PDFPath + ListPDF.Items.Item(0))
            Shell(cl, AppWinStyle.NormalFocus)
        Else
            CheckPrimaryDirectory()
            Dim cl As String = "C:\Program Files\Internet Explorer\IEXPLORE.EXE " + PDFPath + tOrd.Text + " (" + tord_for.Text + ")"
            Shell(cl, AppWinStyle.NormalFocus)
        End If
    End Sub
    Private Sub tdiscProdType_Leave1(ByVal sender As Object, ByVal e As System.EventArgs) Handles tdiscProdType.Leave
        If onProd <> tdiscProdType.Text Then UpdateDiscDesc()
        BindingContext(DVItems).EndCurrentEdit()


        DoTotal()
    End Sub

    Private Sub tDiscMatl_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles tDiscMatl.InitializeLayout

    End Sub

    Private Sub tDiscMatl_Leave1(ByVal sender As Object, ByVal e As System.EventArgs) Handles tDiscMatl.Leave
        If onMatl <> tDiscMatl.Text Then UpdateDiscDesc()
        BindingContext(DVItems).EndCurrentEdit()
        DoTotal()
    End Sub

    Private Sub tDiscVal_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)

    End Sub

    Private Sub oDiscountType_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles oDiscountType.ValueChanged
        Select Case oDiscountType.Value
            Case "P"
                tDiscVal.Top = 0
                tDiscVal.Width = 88
                lDiscSymbol.Left = tDiscVal.Left + tDiscVal.Width
                lDiscSymbol.Top = 0
                lDiscSymbol.Text = "%"
            Case "D"
                tDiscVal.Top = 24
                tDiscVal.Width = 96
                lDiscSymbol.Left = tDiscVal.Left - 17
                lDiscSymbol.Top = 24
                lDiscSymbol.Text = "$"
            Case "T"
                tDiscVal.Top = 48
                tDiscVal.Width = 96
                lDiscSymbol.Left = tDiscVal.Left - 17
                lDiscSymbol.Top = 48
                lDiscSymbol.Text = "$"
            Case Else
                tDiscVal.Top = 0
                tDiscVal.Width = 88
                lDiscSymbol.Left = tDiscVal.Left + tDiscVal.Width
                lDiscSymbol.Top = 0
                lDiscSymbol.Text = "%"
        End Select
        tDiscVal.Focus()
        tDiscVal.SelectAll()

    End Sub

    Private Sub tDiscVal_Leave1(ByVal sender As Object, ByVal e As System.EventArgs) Handles tDiscVal.Leave
        UpdateDiscDesc()
        BindingContext(DVItems).EndCurrentEdit()
        DoTotal()
    End Sub
    Private Function GetUnitShip(ByVal itm As String, ByVal qty As Integer, ByVal dt As Date)
        Try
            Dim cmd As New SqlCommand("select itm_price_price from itm_price where itm_price_itm_code='" + itm + "' and itm_price_type='SHIP' and itm_price_qty_from<=" + CStr(qty) + " and itm_price_qty_to>=" + CStr(qty) + " and itm_price_start<='" + CStr(dt) + "' and itm_price_end>='" + CStr(dt) + "'", cnn2)
            cnn2.Open()
            GetUnitShip = nz(cmd.ExecuteScalar, -1)
            If GetUnitShip = -1 Then
                cmd.CommandText = "select itm_price_price from itm_price where itm_price_itm_code='" + itm + "' and itm_price_type='SHIP' and itm_price_qty_from<=" + CStr(qty) + " and itm_price_qty_to>=" + CStr(qty) + " and itm_price_start<='" + CStr(Today) + "' and itm_price_end>='" + CStr(Today) + "'"
                GetUnitShip = nz(cmd.ExecuteScalar, 0)
            End If
            cnn2.Close()
        Catch
            DoError(Err, Me)
        End Try
    End Function
    Private Function GetUnitShipFlatRate(ByVal itm As String, ByVal qty As Integer, ByVal dt As Date) As Boolean
        Try
            Dim cmd As New SqlCommand("select itm_price_flat_rate from itm_price where itm_price_itm_code='" + itm + "' and itm_price_type='SHIP' and itm_price_qty_from<=" + CStr(qty) + " and itm_price_qty_to>=" + CStr(qty) + " and itm_price_start<='" + CStr(dt) + "' and itm_price_end>='" + CStr(dt) + "'", cnn2)
            Dim dr As SqlDataReader

            cnn2.Open()
            dr = cmd.ExecuteReader
            If dr.HasRows Then
                dr.Read()
                GetUnitShipFlatRate = nz(dr("itm_price_flat_rate"), False)
            Else
                dr.Close()
                cmd.CommandText = "select itm_price_flat_rate from itm_price where itm_price_itm_code='" + itm + "' and itm_price_type='SHIP' and itm_price_qty_from<=" + CStr(qty) + " and itm_price_qty_to>=" + CStr(qty) + " and itm_price_start<='" + CStr(Today) + "' and itm_price_end>='" + CStr(Today) + "'"
                dr = cmd.ExecuteReader
                If dr.HasRows Then
                    dr.Read()
                    GetUnitShipFlatRate = nz(cmd.ExecuteScalar, False)
                Else
                    GetUnitShipFlatRate = False
                End If
            End If
            dr.Close()
            cnn2.Close()
        Catch
            DoError(Err, Me)
        End Try
    End Function

    Private Sub Grid1_AfterEnterEditMode(ByVal sender As Object, ByVal e As System.EventArgs) Handles Grid1.AfterEnterEditMode
        Try
            If Grid1.ActiveCell.Column.Header.Caption = "Qty" Then
                Grid1.ActiveCell.SelStart = 0
                Grid1.ActiveCell.SelLength = 99
            End If
            If Grid1.ActiveCell.Column.Header.Caption = "Grp" Then
                Grid1.ActiveCell.SelStart = 0
                Grid1.ActiveCell.SelLength = 99
            End If
        Catch
            DoError(Err, Me)
        End Try
    End Sub

    Private Sub tDiscVal_ValueChanged_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tDiscVal.ValueChanged
    End Sub
    Private Sub GridHighlight()
        Try
            Dim dr As Infragistics.Win.UltraWinGrid.UltraGridRow
            For Each dr In Grid1.Rows
                If nz(dr.Cells("ord_itm_is_disc").Value, False) = True Then
                    dr.Appearance.BackColor = Color.LightPink
                Else
                    If nz(dr.Cells("ord_itm_is_up").Value, False) = True Then
                        dr.Appearance.BackColor = Color.LightGreen
                    Else
                        If nz(dr.Cells("ord_itm_is_perc_price").Value, False) = True Then
                            dr.Appearance.BackColor = Color.PaleTurquoise
                        Else
                            dr.Appearance.BackColor = Color.White
                        End If
                    End If
                End If
            Next
        Catch
            DoError(Err, Me)
        End Try
    End Sub

    Private Sub Grid1_BeforeCellDeactivate(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles Grid1.BeforeCellDeactivate
        'If Grid1.ActiveRow.Cells("ord_itm_item_code").IsActiveCell = False Then Exit Sub
        'If Grid1.DisplayLayout.Bands(0).Columns("ord_itm_item_code").ValueList.SelectedItemIndex < 0 Then
        '    Grid1.ActiveRow.Cells("ord_itm_item_code").Activate()
        'End If
    End Sub
    Private Sub UpdateDiscDesc()
        Try
            If Grid1.ActiveRow Is Nothing Then Exit Sub
            Dim desc, OrigDesc As String
            Dim cmd As New SqlCommand("select itm_desc from itm_file where itm_code='" + Grid1.ActiveRow.Cells("ord_itm_item_code").Value + "'", cnn2)
            'cnn2.Open()
            'OrigDesc = nz(cmd.ExecuteScalar, "")
            'cnn2.Close()
            OrigDesc = Grid1.ActiveRow.Cells("ord_itm_desc").Value
            Select Case oDiscountType.Value
                Case "P"
                    If Grid1.ActiveRow.Cells("ord_itm_is_disc").Value = True Then
                        If InStr(OrigDesc, "Total to match") > 0 Then
                            OrigDesc = Mid(OrigDesc, 1, InStr(OrigDesc, " Total to match") - 1)
                        End If
                        If InStr(OrigDesc, " Upcharge of ") > 0 Then
                            OrigDesc = Mid(OrigDesc, 1, InStr(OrigDesc, "Upcharge of ") - 1)
                        End If
                        If InStr(OrigDesc, " Discount of ") > 0 Then
                            OrigDesc = Trim(Mid(OrigDesc, 1, InStr(OrigDesc, " Discount of ")))
                        End If
                        desc = OrigDesc + " Discount of " + CStr(tDiscVal.Value) + "%"
                        If tdiscProdType.Text <> "" Then desc += " Product Type: " + tdiscProdType.Text
                        If tDiscMatl.Text <> "" Then desc += " Material: " + tDiscMatl.Text
                        Grid1.ActiveRow.Cells("ord_itm_desc").Value = Trim(desc)
                    Else
                        If Grid1.ActiveRow.Cells("ord_itm_is_up").Value = True Then
                            If InStr(OrigDesc, " Total to match") > 0 Then
                                OrigDesc = Mid(OrigDesc, 1, InStr(OrigDesc, " Total to match") - 1)
                            End If
                            If InStr(OrigDesc, "Upcharge of ") > 0 Then
                                OrigDesc = Mid(OrigDesc, 1, InStr(OrigDesc, "Upcharge of ") - 1)
                            End If
                            desc = OrigDesc + " Upcharge of " + CStr(tDiscVal.Value) + "%"
                            If tdiscProdType.Text <> "" Then desc += " Product Type: " + tdiscProdType.Text
                            If tDiscMatl.Text <> "" Then desc += " Material: " + tDiscMatl.Text
                            Grid1.ActiveRow.Cells("ord_itm_desc").Value = desc
                        End If
                    End If
                Case "D"
                    If Grid1.ActiveRow.Cells("ord_itm_is_disc").Value = True Then
                        If InStr(OrigDesc, " Total to match") > 0 Then
                            OrigDesc = Mid(OrigDesc, 1, InStr(OrigDesc, " Total to match") - 2)
                        End If
                        If InStr(OrigDesc, "Upcharge of ") > 0 Then
                            OrigDesc = Mid(OrigDesc, 1, InStr(OrigDesc, "Upcharge of ") - 2)
                        End If
                        desc = OrigDesc + " Discount of " + FormatCurrency(tDiscVal.Value, 2)
                        If tdiscProdType.Text <> "" Then desc += " Product Type: " + tdiscProdType.Text
                        If tDiscMatl.Text <> "" Then desc += " Material: " + tDiscMatl.Text
                        Grid1.ActiveRow.Cells("ord_itm_desc").Value = desc
                    Else
                        If Grid1.ActiveRow.Cells("ord_itm_is_up").Value = True Then
                            If InStr(OrigDesc, " Total to match") > 0 Then
                                OrigDesc = Mid(OrigDesc, 1, InStr(OrigDesc, " Total to match") - 2)
                            End If
                            If InStr(OrigDesc, "Upcharge of ") > 0 Then
                                OrigDesc = Mid(OrigDesc, 1, InStr(OrigDesc, "Upcharge of ") - 2)
                            End If
                            desc = OrigDesc + " Upcharge of " + FormatCurrency(tDiscVal.Value, 2)
                            If tdiscProdType.Text <> "" Then desc += " Product Type: " + tdiscProdType.Text
                            If tDiscMatl.Text <> "" Then desc += " Material: " + tDiscMatl.Text
                            Grid1.ActiveRow.Cells("ord_itm_desc").Value = desc
                        End If
                    End If
                Case "T"
                    If Grid1.ActiveRow.Cells("ord_itm_is_disc").Value = True Then
                        If InStr(OrigDesc, " Total to match") > 0 Then
                            OrigDesc = Mid(OrigDesc, 1, InStr(OrigDesc, " Total to match") - 2)
                        End If
                        If InStr(OrigDesc, "Upcharge of ") > 0 Then
                            OrigDesc = Mid(OrigDesc, 1, InStr(OrigDesc, "Upcharge of ") - 2)
                        End If
                        desc = OrigDesc + " Total to match " + FormatCurrency(tDiscVal.Value, 2)
                        If tdiscProdType.Text <> "" Then desc += " Product Type: " + tdiscProdType.Text
                        If tDiscMatl.Text <> "" Then desc += " Material: " + tDiscMatl.Text
                        Grid1.ActiveRow.Cells("ord_itm_desc").Value = desc
                    Else
                        If Grid1.ActiveRow.Cells("ord_itm_is_up").Value = True Then
                            If InStr(OrigDesc, " Total to match") > 0 Then
                                OrigDesc = Mid(OrigDesc, 1, InStr(OrigDesc, "Upcharge of ") - 2)
                            End If
                            desc = OrigDesc + " Total to match " + FormatCurrency(tDiscVal.Value, 2)
                            If tdiscProdType.Text <> "" Then desc += " Product Type: " + tdiscProdType.Text
                            If tDiscMatl.Text <> "" Then desc += " Material: " + tDiscMatl.Text
                            Grid1.ActiveRow.Cells("ord_itm_desc").Value = desc
                        End If
                    End If
                Case Else
            End Select

        Catch
            DoError(Err, Me)
        End Try
    End Sub

    Private Sub tdiscProdType_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles tdiscProdType.InitializeLayout

    End Sub

    Private Sub tdiscProdType_ValueChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles tdiscProdType.ValueChanged

    End Sub

    Private Sub tDiscMatl_ValueChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles tDiscMatl.ValueChanged
        If Me.ActiveControl Is tDiscMatl Then
            UpdateDiscDesc()
        End If

    End Sub

    Private Sub tdiscProdType_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles tdiscProdType.Enter
        onProd = tdiscProdType.Text
    End Sub

    Private Sub tDiscMatl_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles tDiscMatl.Enter
        onMatl = tDiscMatl.Text
    End Sub

    Private Sub MenuItem8_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        DisplayReport("quote no disc", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_itm.ord_itm_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='Q'", True, 1, False, , False, False)
    End Sub

    Private Sub tDesigner_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles tDesigner.InitializeLayout

    End Sub

    Private Sub fmEstOrd2_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles MyBase.KeyUp
        Dim cmd As New SqlCommand("", cnn)
        Select Case e.KeyCode
            Case Keys.F10
                'keylog("{F10}")
                If Grid1.DisplayLayout.Bands(0).Columns("ord_itm_user").Hidden Then
                    Grid1.DisplayLayout.Bands(0).Columns("ord_itm_user").Hidden = False
                    Grid1.DisplayLayout.Bands(0).Columns("ord_itm_updated").Hidden = False
                    Grid1.DisplayLayout.Bands(0).Columns("ord_itm_disc_amt").Hidden = False
                Else
                    Grid1.DisplayLayout.Bands(0).Columns("ord_itm_user").Hidden = True
                    Grid1.DisplayLayout.Bands(0).Columns("ord_itm_updated").Hidden = True
                    Grid1.DisplayLayout.Bands(0).Columns("ord_itm_disc_amt").Hidden = True
                End If
            Case Keys.F9
                'keylog("{F9}")
                If Not Grid1.ActiveRow Is Nothing Then
                    If Grid1.ActiveRow.Cells("ord_itm_serial").Value Is DBNull.Value Then Exit Sub
                    Dim fm As New fmOrdItmHist
                    fm.gr = Grid1
                    fm.onSerial = Grid1.ActiveRow.Cells("ord_itm_serial").Value
                    fm.Left = 12
                    fm.Top = 242 + Grid1.ActiveRow.Index * (Grid1.ActiveRow.Height - 1)
                    fm.Width = Grid1.Width
                    fm.ShowDialog()
                End If
            Case Keys.F5
                'keylog("{F5}")
                cmd.CommandText = "select top 1 ord_recent_ord_serial from ord_recent where ord_recent_user='" + User + "' order by ord_recent_no"
                cnn.Open()
                tOrd.Text = cmd.ExecuteScalar
                cnn.Close()
                KeyValue1 = tOrd.Text
                onOrd = tOrd.Text
                LoadPage()
            Case Keys.F12
                If User = "Jon" Then
                    Dim dr As SqlDataReader
                    Dim msg As String
                    cmd.CommandText = "SELECT YEAR(ord_gen_create_date) AS Yr, MONTH(ord_gen_create_date) AS Mnth, SUM(ord_gen_line_total) AS amt FROM ord_gen WHERE (ord_gen_type = 'O') AND (DATEDIFF(year, ord_gen_create_date, GETDATE()) <= 1) GROUP BY YEAR(ord_gen_create_date),MONTH(ord_gen_create_date) ORDER BY Yr, Mnth"
                    cnn.Open()
                    dr = cmd.ExecuteReader
                    Do While dr.Read
                        msg += CStr(dr("Yr")) + " " + MonthName(dr("mnth"), True) + "   " + FormatCurrency(dr("amt"), 0) + IIf(dr("mnth") = Month(Today) And dr("yr") = Year(Today), "  (Pace: " + FormatCurrency(dr("amt") / Microsoft.VisualBasic.Day(Today) * Days(Today), 0) + ")", "") + vbCrLf
                    Loop
                    cnn.Close()
                    MsgBox(msg)
                End If
            Case Keys.Enter
                'keylog("{Enter}")
            Case Keys.Tab
                'keylog("{Tab}")
            Case Else
                'keylog("{" + Chr(e.KeyCode) + "}")
        End Select
    End Sub

    Private Sub tRefName_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles tRefName.InitializeLayout

    End Sub

    Private Sub tRefName_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles tRefName.Enter
        onRef = tRefName.Text
    End Sub

    Private Sub tRefName_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tRefName.Leave
        If onRef <> tRefName.Text Then
            If tRefName.Text = "" Then
                tRefCompany.Text = ""
                tRefAddr1.Text = ""
                tRefAddr2.Text = ""
                tRefAddr3.Text = ""
                tRefCity.Text = ""
                tRefState.Text = ""
                tRefZip.Text = ""
                tRefPerc.Value = 0
            Else
                Dim cmd As New SqlCommand("select * from ref_file where ref_name='" + tRefName.Text + "'", cnn)
                Dim dr As SqlDataReader

                cnn.Open()
                dr = cmd.ExecuteReader
                If dr.HasRows Then
                    dr.Read()
                    tRefCompany.Text = nz(dr("ref_company"))
                    tRefAddr1.Text = nz(dr("ref_addr1"))
                    tRefAddr2.Text = nz(dr("ref_addr2"))
                    tRefAddr3.Text = nz(dr("ref_addr3"))
                    tRefCity.Text = nz(dr("ref_city"))
                    tRefState.Text = nz(dr("ref_state"))
                    tRefZip.Text = nz(dr("ref_zip"))
                    tRefPerc.Value = nz(dr("ref_perc"))
                    dr.Close()
                Else
                    dr.Close()
                    If MsgBox("This name does not exist.  Would you like to add it now?", MsgBoxStyle.YesNo, "Name?") = MsgBoxResult.Yes Then
                        Dim fm As New fmReferralNew
                        fm.tRefName.Text = tRefName.Text
                        fm.ShowDialog()
                        If fm.SaveCanceled Then
                            tRefName.Focus()
                            tRefName.Text = ""
                            fm.Close()
                        Else
                            LoadDD2(tRefName, "ref_file", "ref_serial", "ref_name")
                            tRefName.Text = fm.tRefName.Text
                            tRefName.Value = fm.onValue
                            tRefCompany.Text = fm.tRefCompany.Text
                            tRefAddr1.Text = fm.tRefAddr1.Text
                            tRefAddr2.Text = fm.tRefAddr2.Text
                            tRefAddr3.Text = fm.tRefAddr3.Text
                            tRefCity.Text = fm.tRefCity.Text
                            tRefState.Text = fm.tRefState.Text
                            tRefZip.Text = fm.tRefZip.Text
                            tRefPerc.Value = fm.tRefPerc.Value
                            fm.Close()
                        End If
                    Else
                        tRefName.Focus()
                        tRefName.Text = ""
                    End If
                End If
                cnn.Close()
            End If
        End If
    End Sub

    Private Sub tRefPerc_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles tRefPerc.InitializeLayout

    End Sub

    Private Sub tRefPerc_ItemNotInList(ByVal sender As Object, ByVal e As Infragistics.Win.UltraWinEditors.ValidationErrorEventArgs) Handles tRefPerc.ItemNotInList
        MsgBox("Please choose a value in the list", MsgBoxStyle.Information, "List?")
    End Sub

    Private Sub tRefZip_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tRefZip.ValueChanged

    End Sub

    Private Sub tRefZip_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles tRefZip.Enter
        onZip = tRefZip.Text
    End Sub

    Private Sub tRefZip_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tRefZip.Leave
        If tRefZip.Text <> onZip Then
            tRefCity.Text = ""
            tRefState.Text = ""
        End If
        If tRefZip.Text = "" Then Exit Sub
        If dsRefZip.Tables.Count > 0 Then dsRefZip.Tables.RemoveAt(0)
        LoadDD(tRefCity, dsRefZip, "zip_file", "zip_city", "zip_city", "zip_city,zip_state,zip_county_name", "zip_code='" + tRefZip.Text + "' and zip_start<='" + CStr(Today) + "' and zip_end>='" + CStr(Today) + "'")
    End Sub

    Private Sub tRefCity_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles tRefCity.InitializeLayout

    End Sub

    Private Sub tRefCity_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles tRefCity.Enter
        If tRefCity.Rows.Count = 1 Then
            tRefCity.Text = tRefCity.Rows(0).Cells(0).Text
        Else
            If tRefCity.IsDroppedDown = False Then tRefCity.ToggleDropdown()
        End If
    End Sub

    Private Sub tRefCity_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tRefCity.Leave
        Try
            If tRefCity.IsItemInList(tRefCity.Value) = True Then
                tRefState.Text = tRefCity.ActiveRow.Cells(1).Text
            End If
        Catch
            DoError(Err, Me)
        End Try

    End Sub

    Private Sub UltraTabControl1_SelectedTabChanged(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinTabControl.SelectedTabChangedEventArgs) Handles UltraTabControl1.SelectedTabChanged
        CheckTabs()
    End Sub
    Private Sub CheckTabs()
        If Tab1.ActiveTab Is Nothing Then Exit Sub
        If Tab1.ActiveTab.Key = "C" Then Exit Sub
        Select Case UltraTabControl1.ActiveTab.Key
            Case "Ref"
                LoadRef()
            Case "Other"
                LoadOther()
        End Select
    End Sub
    Private Sub LoadRef()
        Try
            If Tab1.ActiveTab.Key = "C" Then Exit Sub
            If Not IsNumeric(tOrd.Text) Then Exit Sub
            Dim cmd As New SqlCommand("select to_do_user as [user],to_do_created as [created],'SUBMITTED' as [Status],to_do_note as [Note],to_do_misc_num as [Amount] from to_do where to_do_ord_serial=" + tOrd.Text + " and to_do_ord_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " and to_do_ord_type='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "' and to_do_type='REF' and isnull(to_do_complete,0)=0 order by to_do_created", cnn)
            Dim da As New SqlDataAdapter(cmd)
            cnn.Open()
            dsReferral.Clear()
            da.Fill(dsReferral)

            cmd.CommandText = "select ref_ledger_user as [user],ref_ledger_date as [created],ref_ledger_ref as [Status],'' as [Note],ref_ledger_amt as [Amount] from ref_ledger where ref_ledger_ord_serial=" + tOrd.Text + " and ref_ledger_ord_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " and ref_ledger_ord_type='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "'"
            da.Fill(dsReferral)
            cnn.Close()
            GridRef.DataSource = dsReferral.Tables(0)
            GridRef.DataBind()
        Catch
            DoError(Err, Me)
        End Try
    End Sub
    Private Sub LoadOther()
        Try
            If IsNumeric(tOrd.Text) Then
                Dim cmd As New SqlCommand("select * from ord_disc_override where ord_disc_override_ord_serial=" + tOrd.Text + " and ord_disc_override_ord_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " and ord_disc_override_ord_type='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "'", cnn)
                Dim dr As SqlDataReader
                cnn.Open()
                dr = cmd.ExecuteReader
                If dr.HasRows Then
                    dr.Read()
                    lDiscApproved.Text = "Discounts approved below base by " + dr("ord_disc_override_user") + " on " + CStr(dr("ord_disc_override_date")) + "."
                End If
                cnn.Close()
            Else
                lDiscApproved.Text = "Discounts are not approved to go below base."
            End If


            If nz(DVGen.Item(0)("ord_gen_bom_import"), CDate("1/1/1900")) = CDate("1/1/1900") Then
                lBOMImport.Text = "BOM has not been imported."
            Else
                lBOMImport.Text = "BOM was created on " + CStr(DVGen.Item(0)("ord_gen_bom_import"))
            End If
        Catch
            DoError(Err, Me)
        End Try
    End Sub

    Private Sub tsold_phone1_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles tsold_phone1.KeyUp
        'If fmContact Is Nothing Then
        '    fmContact = New fmContactList
        '    fmContact.Top = 150
        '    fmContact.Left = 250
        '    fmContact.Height = Me.Height * 0.9
        '    fmContact.Width = Me.Width - 300
        '    fmContact.fmOrd = Me
        'End If

        'Dim dt As New DataTable
        'Dim cmd As New SqlCommand("select cont_serial, cont_phone_search, cont_name as [Name], cont_company as [Company], cont_phone1 as [Phone], cont_addr1 as [Address], cont_city as [City], cont_state as [State], cont_zip as [Zip] from cont_file where cont_phone_search like '" + Replace(Replace(Replace(Replace(tsold_phone1.Text, "(", ""), ")", ""), " ", "") + "%'", "-", ""), cnn)
        'Dim da As New SqlDataAdapter(cmd)

        'da.Fill(dt)
        'fmContact.Grid1.DataSource = dt
        'fmContact.Grid1.ActiveRow = Nothing

        'ShowWindow(fmContact.Handle, 8)
        'MainForm.Focus()
    End Sub

    Private Sub tsold_phone1_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tsold_phone1.Leave
        'fmContact.Hide()
    End Sub

    Private Sub tsold_phone1_MaskChanged(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinMaskedEdit.MaskChangedEventArgs) Handles tsold_phone1.MaskChanged

    End Sub

    Private Sub tAltShipCountry_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs)

    End Sub

    Private Sub tAltShipPhone2_MaskChanged(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinMaskedEdit.MaskChangedEventArgs)

    End Sub

    Private Sub chUseContactShip_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chUseAltShip.CheckedChanged
        If Me.ActiveControl Is chUseAltShip Then
            DVGen.Item(0)("ord_gen_alt_ship") = chUseAltShip.Checked
            CheckAltShip()
        End If
    End Sub

    Private Sub pAltShip_Paint(ByVal sender As System.Object, ByVal e As System.Windows.Forms.PaintEventArgs) Handles pAltShip.Paint

    End Sub

    Private Sub tAltShipCustId_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles tAltShipCustId.InitializeLayout

    End Sub

    Private Sub tAltShipCustId_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tAltShipCustId.Leave
        If tAltShipCustId.Text <> "" Then
            Dim dr As SqlClient.SqlDataReader
            Dim cmd As New SqlClient.SqlCommand("select * from cust_file where cust_id='" + tAltShipCustId.Text + "'", cnn)
            If cnn.State = ConnectionState.Closed Then cnn.Open()
            dr = cmd.ExecuteReader
            If dr.HasRows Then
                dr.Read()
                tAltShipName.Text = Convert.ToString(dr("cust_name"))
                tAltShipCompany.Text = Convert.ToString(dr("cust_company"))
                tCountry.Text = Convert.ToString(dr("cust_country"))
                UpdateAltShipCountry()
                tAltShipAddr1.Text = Convert.ToString(dr("cust_addr1"))
                tAltShipAddr2.Text = Convert.ToString(dr("cust_addr2"))
                tAltShipAddr3.Text = Convert.ToString(dr("cust_addr3"))
                tAltShipCity.Text = Convert.ToString(dr("cust_city"))
                tAltShipState.Text = Convert.ToString(dr("cust_state"))
                tAltShipCounty.Text = nz(dr("cust_county"))
                tAltShipProvince.Text = Convert.ToString(dr("cust_province"))
                tAltShipZip.Text = Convert.ToString(dr("cust_zip"))
                tAltShipPhone1.Text = Convert.ToString(dr("cust_phone1"))
                tAltShipPhone2.Text = Convert.ToString(dr("cust_phone2"))
                tAltShipCell.Text = Convert.ToString(dr("cust_cell"))
                tAltShipFax.Text = Convert.ToString(dr("cust_fax"))
                tAltShipEmail.Text = Convert.ToString(dr("cust_email"))
            End If
            cnn.Close()
        End If
    End Sub

    Private Sub tAltShipZip_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tAltShipZip.ValueChanged

    End Sub

    Private Sub tAltShipZip_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tAltShipZip.Leave
        tAltShipCity.Text = ""
        tAltShipState.Text = ""
        If tAltShipZip.Text = "" Then Exit Sub
        'If dsZip.Tables.Count > 0 Then dsZip.Tables.RemoveAt(0)
        LoadDD2(tAltShipCity, "zip_file", "zip_city", "zip_city", "zip_city,zip_state,zip_county_name", "zip_code='" + tAltShipZip.Text + "' and zip_start<='" + CStr(Today) + "' and zip_end>='" + CStr(Today) + "'")
    End Sub

    Private Sub tAltShipCity_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles tAltShipCity.InitializeLayout

    End Sub

    Private Sub tAltShipCity_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tAltShipCity.Leave
        Try
            If tAltShipCity.IsItemInList(tAltShipCity.Value) = True Then
                tAltShipState.Text = tAltShipCity.ActiveRow.Cells(1).Text
                Application.DoEvents()
                If gsTaxExempt.CheckState = CheckState.Checked Then
                    gsCheckExemptNo()
                End If
                tAltShipCounty.Text = tAltShipCity.ActiveRow.Cells(2).Text
            End If
        Catch
            DoError(Err, Me)
        End Try
    End Sub

    Private Sub tAltShipCity_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles tAltShipCity.Enter
        If tAltShipCity.Rows.Count = 1 Then
            tAltShipCity.Text = tAltShipCity.Rows(0).Cells(0).Text
        Else
            If tAltShipCity.IsDroppedDown = False Then tAltShipCity.ToggleDropdown()
        End If
    End Sub

    Private Sub MenuItem10_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem10.Click
        If Tab1.ActiveTab.Key = "C" Then
            MsgBox("First choose a quote or order", MsgBoxStyle.Information, "Choose")
            Exit Sub
        End If
        If EditMode <> "Add" And EditMode <> "Edit" Then
            MsgBox("You must be in Edit mode to use this function.", MsgBoxStyle.Information, "Mode?")
            Exit Sub
        End If
        Dim fm As New fmOrdTaxOverride
        fm.tAmt.Text = CStr(nz(DVGen(0).Item("ord_gen_tax_override"), 0))
        fm.tPerc.Text = CStr(nz(DVGen(0).Item("ord_gen_tax_override_perc"), 0))
        fm.ShowDialog()
        If fm.Accepted Then
            If Not IsNumeric(fm.tAmt.Text) Then fm.tAmt.Text = "0"
            If Not IsNumeric(fm.tPerc.Text) Then fm.tPerc.Text = "0"
            DVGen(0).Item("ord_gen_tax_override") = CDbl(fm.tAmt.Text)
            DVGen(0).Item("ord_gen_tax_override_perc") = CDbl(fm.tPerc.Text)
        End If
        DoTotal()
    End Sub

    Private Sub cbSmallTruck_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cbSmallTruck.CheckedChanged
        If Me.ActiveControl Is cbSmallTruck Then
            If cbSmallTruck.Checked Then
                DVGen(0).Item("ord_gen_ship_smalltruck") = True
            Else
                DVGen(0).Item("ord_gen_ship_smalltruck") = False
            End If
            DoTotal()
        End If
    End Sub

    Private Sub cbTwoMan_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cbTwoMan.CheckedChanged
        If Me.ActiveControl Is cbTwoMan Then
            If cbTwoMan.Checked Then
                DVGen(0).Item("ord_gen_ship_TwoMan") = True
            Else
                DVGen(0).Item("ord_gen_ship_TwoMan") = False
            End If
            DoTotal()
        End If
    End Sub

    Private Sub cbLiftGate_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cbLiftGate.CheckedChanged
        If Me.ActiveControl Is cbLiftGate Then
            If cbLiftGate.Checked Then
                DVGen(0).Item("ord_gen_ship_liftgate") = True
            Else
                DVGen(0).Item("ord_gen_ship_liftgate") = False
            End If
            DoTotal()
        End If
    End Sub

    Private Sub cbInside_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbInside.CheckedChanged
        If Me.ActiveControl Is cbInside Then
            If cbInside.Checked Then
                DVGen(0).Item("ord_gen_ship_inside") = True
                cbLiftGate.Checked = True
                DVGen(0).Item("ord_gen_ship_liftgate") = True
            Else
                DVGen(0).Item("ord_gen_ship_inside") = False
            End If
            DoTotal()
        End If
    End Sub

    Private Sub cbGated_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbGated.CheckedChanged
        If Me.ActiveControl Is cbGated Then
            If cbGated.Checked Then
                DVGen(0).Item("ord_gen_ship_gated") = True
            Else
                DVGen(0).Item("ord_gen_ship_gated") = False
            End If
            DoTotal()
        End If
    End Sub

    Private Sub cbOvernite_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cbOvernite.CheckedChanged
        If Me.ActiveControl Is cbOvernite Then
            If cbOvernite.Checked Then
                DVGen(0).Item("ord_gen_ship_overnite") = True
            Else
                DVGen(0).Item("ord_gen_ship_overnite") = False
            End If
            DoTotal()
        End If
    End Sub

    Private Sub cbIntlShip_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cbIntlShip.CheckedChanged
        If Me.ActiveControl Is cbIntlShip Then
            If cbIntlShip.Checked Then
                DVGen(0).Item("ord_gen_ship_intlship") = True
            Else
                DVGen(0).Item("ord_gen_ship_intlship") = False
            End If
            DoTotal()
        End If
    End Sub

    Private Sub tSkids_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tSkids.ValueChanged
        If Me.ActiveControl Is tSkids Then
            DVGen(0).Item("ord_gen_ship_numskids") = tSkids.Value
            DoTotal()
        End If
    End Sub

    Private Sub TabItems_ActiveTabChanging(ByVal sender As Object, ByVal e As Infragistics.Win.UltraWinTabControl.ActiveTabChangingEventArgs) Handles TabItems.ActiveTabChanging
        If lMarginBelow0.Visible And (EditMode = "Edit" Or EditMode = "Add") Then
            If Not IsNumeric(tOrd.Text) Then
                If Not nz(dsGen.Tables(0).Rows(0).Item("ord_gen_web_order"), 0) > 0 Then
                    MsgBox("Cannot change tabs until discounts are fixed", MsgBoxStyle.Critical, "Margin?")
                    e.Cancel = True
                    Exit Sub
                End If
            End If
            Dim cmd As New SqlCommand("", cnn)
            cnn.Open()
            cmd.CommandText = "select count(*) from ord_disc_override where ord_disc_override_ord_serial=" + tOrd.Text + " and ord_disc_override_ord_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " and ord_disc_override_ord_type='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "'"
            If cmd.ExecuteScalar = 0 Then
                If Not nz(dsGen.Tables(0).Rows(0).Item("ord_gen_web_order"), 0) > 0 Then
                    lMarginBelow0.Visible = True
                    MsgBox("Cannot change tabs until discounts are fixed", MsgBoxStyle.Critical, "Margin?")
                    e.Cancel = True
                End If
            Else
                lMarginBelow0.Visible = False
            End If
            cnn.Close()
        End If
        'If bEditSignoff.Text = "Save Signoff" Then
        '    MsgBox("Cannot change tabs until you save signoff", MsgBoxStyle.Critical, "Signoff?")
        '    e.Cancel = True
        '    Exit Sub
        'End If
    End Sub

    Private Sub Tab1_ActiveTabChanging(ByVal sender As Object, ByVal e As Infragistics.Win.UltraWinTabControl.ActiveTabChangingEventArgs) Handles Tab1.ActiveTabChanging
        Dim cnnState As ConnectionState = cnn.State
        If lMarginBelow0.Visible And (EditMode = "Edit" Or EditMode = "Add") Then
            If Not IsNumeric(tOrd.Text) Then
                If Not nz(dsGen.Tables(0).Rows(0).Item("ord_gen_web_order"), 0) > 0 Then
                    MsgBox("Cannot change tabs until discounts are fixed", MsgBoxStyle.Critical, "Margin?")
                    e.Cancel = True
                    Exit Sub
                End If
            End If
            Dim cmd As New SqlCommand("", cnn)
            If cnnState <> ConnectionState.Open Then cnn.Open()
            cmd.CommandText = "select count(*) from ord_disc_override where ord_disc_override_ord_serial=" + tOrd.Text + " and ord_disc_override_ord_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " and ord_disc_override_ord_type='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "'"
            If cmd.ExecuteScalar = 0 Then
                If Not nz(dsGen.Tables(0).Rows(0).Item("ord_gen_web_order"), 0) > 0 Then
                    lMarginBelow0.Visible = True
                    MsgBox("Cannot change tabs until discounts are fixed", MsgBoxStyle.Critical, "Margin?")
                    e.Cancel = True
                End If
            Else
                lMarginBelow0.Visible = False
            End If
            If cnnState = ConnectionState.Closed Then cnn.Close()
        End If
        'If bEditSignoff.Text = "Save Signoff" Then
        '    MsgBox("Cannot change tabs until you save signoff", MsgBoxStyle.Critical, "Signoff?")
        '    e.Cancel = True
        '    Exit Sub
        'End If
    End Sub

    Private Sub UltraButton6_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles UltraButton6.Click
        Dim ol As New Outlook.Application
        Dim mess As Outlook.MailItem
        mess = ol.CreateItem(Outlook.OlItemType.olMailItem)

        mess.To = tsold_email.Text
        mess.Display()

    End Sub

    Private Sub tDesType_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tDesType.Leave
        DVGen.Item(0)("ord_gen_des_type") = tDesType.Text
        BindingContext(DVGen).EndCurrentEdit()
        UpdateAutoDesignType()
        DoTotal()
    End Sub
    Private Sub UpdateAutoDesignType()
        Try
            Dim dv As New DataView(dsGen.Tables(0))
            Dim dr As DataRow
            Dim x As Integer
            Dim onDesNum As Long = 0
            Dim DesNum As Long
            Dim cmd As New SqlCommand("", cnn)

            dv.RowFilter = "ord_gen_type='Q' and ord_gen_rev<=" + CStr(DVGen(0).Item("ord_gen_rev"))

            cnn.Open()
            For x = 0 To dv.Count - 1
                dr = dv(x).Row
                cmd.CommandText = "select des_level from des_type where des_type='" & dr("ord_gen_des_type") & "'"
                DesNum = cmd.ExecuteScalar
                If DesNum > onDesNum Then
                    onDesNum = DesNum
                End If
            Next
            cmd.CommandText = "select des_type from des_type where des_level=" + CStr(onDesNum)
            DVGen(0).Item("ord_gen_des_type_auto") = cmd.ExecuteScalar
            cnn.Close()
        Catch
            DoError(Err, Me)
        End Try
    End Sub
    Private Sub tShipExtra_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles tShipExtra.Enter
        onShipExtra = tShipExtra.Value
    End Sub

    Private Sub cbToArt_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cbToArt.CheckedChanged
        If Me.ActiveControl Is cbToArt Then DVGen(0).Item("ord_gen_co_toart") = cbToArt.Checked
    End Sub

    Private Sub cbPriority_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cbPriority.CheckedChanged
        If Me.ActiveControl Is cbPriority Then DVGen(0).Item("ord_gen_co_priority") = cbPriority.Checked
    End Sub

    Private Sub cbDesReq_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cbDesReq.CheckedChanged
        If Me.ActiveControl Is cbDesReq Then

            DVGen(0).Item("ord_gen_co_desreq") = cbDesReq.Checked
            If cbDesReq.Checked = True Then
                'If DVGen(0).Item("ord_gen_design_required") = CDate("12/31/2120") Or DVGen(0).Item("ord_gen_design_required") = CDate("1/1/1900") Or DVGen(0).Item("ord_gen_design_required") Is DBNull.Value Then
                DVGen(0).Item("ord_gen_design_required") = Now
                lDesReq.Text = Now.ToString
                lDesReq.Visible = True
                'End If
            ElseIf cbDesReq.Checked = False Then
                'If CDate(lDesReq.Text) <> CDate("12/31/2120") Then
                '    If MsgBox("Are you sure you want to modify the Design Required status and date?", MsgBoxStyle.YesNo) = MsgBoxResult.No Then
                '        cbDesReq.CheckState = CheckState.Checked
                '        Exit Sub
                '    End If
                'End If
                DVGen(0).Item("ord_gen_design_required") = CDate("12/31/2120")
                lDesReq.Text = "12/31/2120"
                lDesReq.Visible = False
            End If
        End If
    End Sub

    Private Sub bGridStatusSize_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bGridStatusSize.Click
        If GridStatus.Left > 500 Then
            If bGridStatusSize.Text = "<<" Then
                GridStatus.Left = GridStatus.Left - 500
                GridStatus.Width = GridStatus.Width + 500
                bGridStatusSize.Text = ">>"
                If GridStatus.DisplayLayout.Bands(0).Columns.Exists("ord_stat_source") Then GridStatus.DisplayLayout.Bands(0).Columns("ord_stat_source").Hidden = False
            Else
                GridStatus.Left = GridStatus.Left + 500
                GridStatus.Width = GridStatus.Width - 500
                bGridStatusSize.Text = "<<"
                If GridStatus.DisplayLayout.Bands(0).Columns.Exists("ord_stat_source") Then GridStatus.DisplayLayout.Bands(0).Columns("ord_stat_source").Hidden = True
            End If
        End If
    End Sub

    Private Sub cbCollect_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cbCollect.CheckedChanged
        If Me.ActiveControl Is cbCollect Then
            If cbCollect.Checked Then
                DVGen(0).Item("ord_gen_ship_collect") = True
                tBottles.Focus()
            Else
                DVGen(0).Item("ord_gen_ship_collect") = False
                tBottles.Text = "0"
                DVGen(0).Item("ord_gen_bottles") = 0
                DoTotal()
            End If
        End If

    End Sub

    Private Sub UpdateMaterial(Optional ByVal TabKey As String = "All")
        Try
            If Grid1.Rows.Count = 0 Then Exit Sub
            Dim x As Integer
            Dim cnnx As New SqlConnection(cnn.ConnectionString + ";password='39201'")
            Dim cmd As New SqlCommand("", cnnx)
            Dim rw As Infragistics.Win.UltraWinGrid.UltraGridRow
            Dim errMessage As String = ""

            cnnx.Open()
            For Each rw In Grid1.Rows
                If rw.Selected = True Or Grid1.Selected.Rows.Count <= 1 Then
                    If nz(rw.Cells("ord_itm_sel_material").Value, False) = True Then 'rw.Cells("ord_itm_prod_type").Value = "BUD" Or rw.Cells("ord_itm_prod_type").Value = "TOP" Or
                        If nz(rw.Cells("ord_itm_prod_type").Value) = "GOLD" Then
                            cmd.CommandText = "select mat_fac_is_gold_wood from mat_fac where mat_fac_mat_code='" + tGenMaterial.Value + "' and mat_fac_start<='" + tCreate.Text + "' and mat_fac_end>='" + tCreate.Text + "'"
                        Else
                            cmd.CommandText = "select mat_iswood from mat_file where mat_code='" + rw.Cells("ord_itm_mat_code").Value + "'"
                        End If
                        If nz(cmd.ExecuteScalar, True) = True Then
                            rw.Cells("ord_itm_mat_code").Value = tGenMaterial.Value
                        End If
                    Else
                        errMessage += "Line " + CStr(rw.Cells("ord_itm_line").Value) + ": Can not change material type." + vbCrLf
                    End If
                End If
            Next

            cnnx.Close()
            If errMessage <> "" Then MsgBox(errMessage, MsgBoxStyle.Information, "Material?")
            BindingContext(DVItems).EndCurrentEdit()
            'UpdatePrices2()
            UpdatePriceAllByRow()
            UltraCalcManager1.DirtyAllFormulas()
            Grid1.DataBind()
        Catch
            DoError(Err, Me)
        End Try
    End Sub

    Private Sub UltraButton8_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        DVGen.RowFilter = "ord_gen_type='Q' and ord_gen_rev=22"

    End Sub

    Private Sub MenuItem9_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem9.Click
        Try
            If Mid(Tab1.ActiveTab.Key, 1, 1) <> "O" And Mid(Tab1.ActiveTab.Key, 1, 1) <> "R" Then
                MsgBox("First choose an order or replacement", MsgBoxStyle.Information, "Choose")
                Exit Sub
            End If
            If EditMode = "Add" Or EditMode = "Edit" Then
                MsgBox("You can not be in Edit mode to use this function.", MsgBoxStyle.Information, "Mode?")
                Exit Sub
            End If
            If tStatus.Text = "SHIPPED" Or tStatus.Text = "STAGED" Then
                MsgBox("You can not change the status if it is STAGED or SHIPPED", MsgBoxStyle.Exclamation, "Status?")
                Exit Sub
            End If
            If DVGen(0).Item("ord_gen_balance") <> DVGen(0).Item("ord_gen_total") Then
                MsgBox("You can not CANCEL and order that has money applied", MsgBoxStyle.Exclamation, "Cancel?")
                Exit Sub
            End If
            If tStatus.Text = "CANCELED" Then
                If MsgBox("This order is already canceled.  Do you want to reopen this order and set the status to NEW?", MsgBoxStyle.YesNo, "Set to NEW?") = MsgBoxResult.Yes Then
                    Dim cmd As New SqlCommand("update ord_gen set ord_gen_status='NEW' where ord_gen_ord_serial=" + tOrd.Text + " and ord_gen_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " and ord_gen_type='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "'", cnn)
                    cnn.Open()
                    cmd.ExecuteNonQuery()
                    DVGen(0).Item("ord_gen_status") = "NEW"
                    cnn.Close()
                    StatusCheck(tOrd.Text, "O", Mid(Tab1.ActiveTab.Key, 2), "NEW", "Manual")
                    tStatus.Text = "NEW"
                    Exit Sub
                End If
            End If
            If MsgBox("This will set this order to CANCELED.  Do you want to proceded?", MsgBoxStyle.YesNo, "CANCEL ORDER?") = MsgBoxResult.Yes Then
                Dim cmd As New SqlCommand("update ord_gen set ord_gen_status='CANCELED' where ord_gen_ord_serial=" + tOrd.Text + " and ord_gen_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " and ord_gen_type='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "'", cnn)
                cnn.Open()
                cmd.ExecuteNonQuery()
                DVGen(0).Item("ord_gen_status") = "CANCELED"
                cnn.Close()
                StatusCheck(tOrd.Text, "O", Mid(Tab1.ActiveTab.Key, 2), "CANCELED", "Manual")
                tStatus.Text = "CANCELED"
            End If
        Catch
            DoError(Err, Me)
        End Try
    End Sub

    Private Sub tStatus_ValueChanged_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tStatus.ValueChanged
        CheckActiveTabIcon()
    End Sub
    Private Sub CheckActiveTabIcon()
        If Mid(Tab1.ActiveTab.Key, 1, 1) = "C" Then Exit Sub
        If Mid(Tab1.ActiveTab.Key, 1, 1) = "O" Or Mid(Tab1.ActiveTab.Key, 1, 1) = "R" Then
            If DVGen(0)("ord_gen_balance") Is DBNull.Value Then DVGen(0)("ord_gen_balance") = 0
            If nz(DVGen(0)("ord_gen_addon"), False) = True Then
                Tab1.ActiveTab.Appearance.BorderColor3DBase = Color.Yellow
            Else
                Tab1.ActiveTab.Appearance.BorderColor3DBase = Nothing
            End If
            Select Case tStatus.Text
                Case "CANCELED"
                    Tab1.ActiveTab.Appearance.BorderColor3DBase = Color.Red
                    Tab1.ActiveTab.Appearance.FontData.Bold = Infragistics.Win.DefaultableBoolean.True
                    Tab1.ActiveTab.Appearance.ForeColor = Color.Red
                    Tab1.ActiveTab.Appearance.Image = 9
                Case "SHIPPED"
                    If nz(DVGen(0).Item("ord_gen_alt_ship"), False) = True Then
                        Tab1.ActiveTab.Appearance.Image = 7
                    Else
                        Tab1.ActiveTab.Appearance.Image = 3
                    End If
                Case "STAGED"
                    If nz(DVGen(0)("ord_gen_total"), 0) <> 0 And nz(DVGen(0)("ord_gen_balance"), 0) = 0 Then
                        If nz(DVGen(0).Item("ord_gen_alt_ship"), False) = True Then
                            Tab1.ActiveTab.Appearance.Image = 5
                        Else
                            Tab1.ActiveTab.Appearance.Image = 1
                        End If
                    Else
                        If nz(DVGen(0).Item("ord_gen_alt_ship"), False) = True Then
                            Tab1.ActiveTab.Appearance.Image = 5
                        Else
                            Tab1.ActiveTab.Appearance.Image = 1
                        End If
                    End If
                Case Else
                    If nz(DVGen(0)("ord_gen_total"), 0) <> 0 And nz(DVGen(0)("ord_gen_balance"), 0) <> nz(DVGen(0)("ord_gen_total"), 0) And nz(DVGen(0)("ord_gen_balance"), 0) <> 0 Then
                        If nz(DVGen(0).Item("ord_gen_alt_ship"), False) = True Then
                            Tab1.ActiveTab.Appearance.Image = 4
                        Else
                            Tab1.ActiveTab.Appearance.Image = 0
                        End If
                    End If
                    If nz(DVGen(0)("ord_gen_balance"), 0) = nz(DVGen(0)("ord_gen_total"), 0) Then
                        If nz(DVGen(0).Item("ord_gen_alt_ship"), False) = True Then
                            Tab1.ActiveTab.Appearance.Image = 8
                        Else
                            Tab1.ActiveTab.Appearance.Image = Nothing
                        End If
                    End If

                    If nz(DVGen(0)("ord_gen_total"), 0) <> 0 Then
                        If nz(DVGen(0)("ord_gen_balance"), 0) = DVGen(0)("ord_gen_total") Then
                            If nz(DVGen(0).Item("ord_gen_alt_ship"), False) = True Then
                                Tab1.ActiveTab.Appearance.Image = 8
                            Else
                                Tab1.ActiveTab.Appearance.Image = Nothing
                            End If
                        Else
                            If nz(DVGen(0)("ord_gen_balance"), 0) = 0 Then
                                If nz(DVGen(0).Item("ord_gen_alt_ship"), False) = True Then
                                    Tab1.ActiveTab.Appearance.Image = 6
                                Else
                                    Tab1.ActiveTab.Appearance.Image = 2
                                End If
                            Else
                                If nz(DVGen(0).Item("ord_gen_alt_ship"), False) = True Then
                                    Tab1.ActiveTab.Appearance.Image = 4
                                Else
                                    Tab1.ActiveTab.Appearance.Image = 0
                                End If
                            End If
                        End If
                    Else
                        If nz(DVGen(0)("ord_gen_balance"), 0) = 0 Then
                            If nz(DVGen(0).Item("ord_gen_alt_ship"), False) = True Then
                                Tab1.ActiveTab.Appearance.Image = 8
                            Else
                                Tab1.ActiveTab.Appearance.Image = Nothing
                            End If
                        Else
                            If nz(DVGen(0).Item("ord_gen_alt_ship"), False) = True Then
                                Tab1.ActiveTab.Appearance.Image = 4
                            Else
                                Tab1.ActiveTab.Appearance.Image = 0
                            End If
                        End If
                    End If

            End Select
        Else
            Tab1.ActiveTab.Appearance.Image = Nothing
        End If
    End Sub
    Private Sub tBottles_Leave(ByVal sender As System.Object, ByVal e As System.EventArgs)
        If cbCollect.Checked = True And IsNumeric(tBottles.Text) = False Then
            MsgBox("You must enter the total number of bottles when shipping collect to calculate additional shipping costs.", MsgBoxStyle.Critical, "Bottles?")
            tBottles.Focus()
            Exit Sub
        End If
        If IsNumeric(tBottles.Text) Then DoTotal()
    End Sub

    Private Sub MenuItem11_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem11.Click
        Select Case Mid(Tab1.ActiveTab.Key, 1, 1)
            Case "Q", "O", "R"
                DisplayReport("quote landscape no price", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_itm.ord_itm_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "'", True, 1, True)
            Case Else
                MsgBox("Please select a Quote, Order or Replacement first", MsgBoxStyle.Information, "Pick One")
        End Select
        'DisplayReport("order total only", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_itm.ord_itm_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='O'", True, 1, False, , False, False)
    End Sub

    Private Sub MenuItem12_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        DisplayReport("quote total only", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_itm.ord_itm_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='Q'", True, 1, False, , False, False)
    End Sub

    Private Sub tShipFlat_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)

    End Sub

    Private Sub tShipFlat_Leave(ByVal sender As System.Object, ByVal e As System.EventArgs)
        PriceCalc()

    End Sub
    Private Sub tBase_Leave(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tBase.Leave
        BindingContext(DVItems).EndCurrentEdit()
        DoTotal()
    End Sub

    Private Sub tGenMaterial_Leave1(ByVal sender As Object, ByVal e As System.EventArgs) Handles tGenMaterial.Leave
        '***************MPF
        If UpdatingLacq = True Then Exit Sub
        If onMat <> tGenMaterial.Text Then
            If MsgBox("Do you want to update all WOOD material codes on this Quote/Order?", MsgBoxStyle.YesNo, "Update Material Codes?") = MsgBoxResult.Yes Then
                UpdateMaterial()
            End If
        End If
    End Sub

    Private Sub tGenMaterial_Enter1(ByVal sender As Object, ByVal e As System.EventArgs) Handles tGenMaterial.Enter
        onMat = tGenMaterial.Text
    End Sub

    Private Sub tProdType_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tProdType.ValueChanged
        CheckMaterialSel()
    End Sub
    Private Sub CheckMaterialSel()
        If EditMode = "" Then Exit Sub
        'If Grid1.ActiveRow Is Nothing Then Exit Sub
        'If tMaterial.SelectedRow Is Nothing Then
        If Grid1.ActiveRow Is Nothing Then
            tMaterial.Enabled = False
        Else
            'If nz(Grid1.ActiveRow.Cells("ord_itm_sel_material").Value, False) = True Then  'tProdType.Text = "BUD" Or tProdType.Text = "TOP" Or
            If nz(Grid1.ActiveRow.Cells("ord_itm_sel_material").Value, False) = True Then  'tMaterial.SelectedRow.Cells(1).Value = True Or
                tMaterial.Enabled = True
            Else
                tMaterial.Enabled = False
            End If
            'Else
            'tMaterial.Enabled = False
            'End If
        End If
    End Sub

    Private Sub tMaterial_Leave1(ByVal sender As Object, ByVal e As System.EventArgs) Handles tMaterial.Leave
        'No longer required per Todd 7/5/2007
        'If tMaterial.Text = "" Then
        '    tMPF.Value = 1
        '    dsColor.Clear()
        '    Exit Sub
        'End If
        'Dim cmd As New SqlCommand
        'cmd.Connection = cnn
        'cmd.CommandText = "select mat_margin from mat_file where mat_code='" + tMaterial.Text + "'"
        'If cnn.State = ConnectionState.Closed Then cnn.Open()
        'tMPF.Value = cmd.ExecuteScalar
        'cnn.Close()
        'PriceCalc()
        '***************************MPF
        If tMaterial.IsItemInList = False Then
            MsgBox("Material must be from the list", MsgBoxStyle.Information, "Material?")
            tMaterial.Focus()
            Exit Sub
        End If
        Dim cmd As New SqlCommand("", cnn)
        Dim WoodFactor, MatFactor As Double
        cnn.Open()
        cmd.CommandText = "select itm_wood_factor from itm_file where itm_code='" + Grid1.ActiveRow.Cells("ord_itm_item_code").Value + "'"
        WoodFactor = nz(cmd.ExecuteScalar, 1)
        Select Case nz(tProdType.Value)
            Case "BUD"
                cmd.CommandText = "select mat_fac_bud from mat_fac where mat_fac_mat_code='" + tMaterial.Value + "' and mat_fac_start<='" + tCreate.Text + "' and mat_fac_end>='" + tCreate.Text + "'"
                MatFactor = nz(cmd.ExecuteScalar, 0)
                tMPF.Value = 1 + Math.Round(MatFactor * WoodFactor, 4)
            Case "GOLD"
                cmd.CommandText = "select mat_fac_gold from mat_fac where mat_fac_mat_code='" + tMaterial.Value + "' and mat_fac_start<='" + tCreate.Text + "' and mat_fac_end>='" + tCreate.Text + "'"
                MatFactor = nz(cmd.ExecuteScalar, 0)
                tMPF.Value = 1 + Math.Round(MatFactor * WoodFactor, 4)
            Case Else '"TOP"
                cmd.CommandText = "select mat_fac_top from mat_fac where mat_fac_mat_code='" + tMaterial.Value + "' and mat_fac_start<='" + tCreate.Text + "' and mat_fac_end>='" + tCreate.Text + "'"
                MatFactor = nz(cmd.ExecuteScalar, 0)
                tMPF.Value = 1 + Math.Round(MatFactor * WoodFactor, 4)
        End Select
        cnn.Close()
        '******************************
        Grid1.ActiveRow.Cells("ord_itm_item_code").Activate()
        LoadPrice(True, True)
        DoTotal()
        If Not Grid1.ActiveRow Is Nothing Then
            If Grid1.ActiveRow.Cells("ord_itm_is_disc").Value = True Or Grid1.ActiveRow.Cells("ord_itm_is_up").Value = True Then
                pDiscount.Visible = True
                'pDiscount.Top = 0
                pItem.Visible = False
            Else
                pDiscount.Visible = False
                'pDiscount.Top = 400
                pItem.Visible = True
            End If
        End If
    End Sub

    Private Sub tMaterial_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles tMaterial.InitializeLayout

    End Sub

    Private Sub tProdType_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles tProdType.InitializeLayout

    End Sub

    Private Sub tTerr_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs)

    End Sub

    Private Sub cbShipCustPickup_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbShipCustPickup.CheckedChanged
        If Me.ActiveControl Is cbShipCustPickup Then
            If cbShipCustPickup.Checked Then
                DVGen(0).Item("ord_gen_ship_cust_pickup") = True
            Else
                DVGen(0).Item("ord_gen_ship_cust_pickup") = False
            End If
            DoTotal()
        End If
    End Sub

    Private Sub Grid1_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles Grid1.InitializeLayout

    End Sub

    Private Sub bDoPrice_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bDoPrice.Click
        PriceDoTotal(DVItems.Table)
    End Sub

    Private Sub cbShipWhiteGlove_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cbShipWhiteGlove.CheckedChanged
        If Me.ActiveControl Is cbShipWhiteGlove Then
            If cbShipWhiteGlove.Checked Then
                DVGen(0).Item("ord_gen_ship_white_glove") = True
            Else
                DVGen(0).Item("ord_gen_ship_white_glove") = False
            End If
            DoTotal()
        End If

    End Sub

    Private Sub mnCreateDate_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mnCreateDate.Click
        mnCreateDate.Checked = Not mnCreateDate.Checked
        Grid1.DisplayLayout.Bands(0).Columns("ord_itm_created").Hidden = Not mnCreateDate.Checked
    End Sub

    Private Sub mnCreateUser_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mnCreateUser.Click
        mnCreateUser.Checked = Not mnCreateUser.Checked
        Grid1.DisplayLayout.Bands(0).Columns("ord_itm_created_by").Hidden = Not mnCreateUser.Checked
    End Sub

    Private Sub MenuItem14_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem14.Click
        MenuItem14.Checked = Not MenuItem14.Checked
        Grid1.DisplayLayout.Bands(0).Columns("ord_itm_disc_amt").Hidden = Not MenuItem14.Checked
    End Sub

    Private Sub Button1_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs)
        ShipGrid.ActiveRow.Cells("ship_declared").Activate()
    End Sub

    Private Sub UltraButton8_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles UltraButton8.Click
        Dim fm As New fmWoods
        fm.ShowDialog()
    End Sub

    Private Sub MenuItem8_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem8.Click
        If Mid(Tab1.ActiveTab.Key, 1, 1) = "Q" Then SaveUpsell()
        Select Case Mid(Tab1.ActiveTab.Key, 1, 1)
            Case "Q", "O", "R"
                DisplayReport("quote landscape unit ship with options", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_itm.ord_itm_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "'", True, 1, True)
            Case Else
                MsgBox("Please select a Quote, Order or Replacement first", MsgBoxStyle.Information, "Pick One")
        End Select
        'DisplayReport("order with unit shipping", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_itm.ord_itm_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='Q'", True, 1, True, , False, False)

    End Sub

    Private Sub MenuItem15_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        DisplayReport("quote landscape", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_itm.ord_itm_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='Q'", True, 1, True, , False, False)

    End Sub

    Private Sub UltraButton9_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles UltraButton9.Click
        DisplayReport("quote barcode", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_gen.ord_gen_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='Q'", False, 1, True, , False, False)

    End Sub

    Private Sub Button1_Click_2(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click
        CheckPrimaryDirectory()
    End Sub

    Private Sub Grid1_AfterColPosChanged(ByVal sender As Object, ByVal e As Infragistics.Win.UltraWinGrid.AfterColPosChangedEventArgs) Handles Grid1.AfterColPosChanged

    End Sub

    Private Sub Grid1_BeforeRowsDeleted(ByVal sender As Object, ByVal e As Infragistics.Win.UltraWinGrid.BeforeRowsDeletedEventArgs) Handles Grid1.BeforeRowsDeleted
        Try
            Dim rw As Infragistics.Win.UltraWinGrid.UltraGridRow
            Dim cnt As Integer
            Dim onStain As Long
            For Each rw In e.Rows
                If nz(rw.Cells("ord_itm_bottle_search").Value) = "S" Then
                    MsgBox("Rows with AUTO stain codes can not be deleted.", MsgBoxStyle.Information, "Auto Stain?")
                    e.Cancel = True
                    Exit Sub
                    'onStain = rw.Cells("ord_itm_stain_serial").Value
                    'For cnt = 0 To DVItems.Count - 1
                    '    If DVItems(cnt).Item("ord_itm_stain_serial") = onStain Then
                    '        DVItems(cnt).Item("ord_itm_stain_serial") = 0
                    '    End If
                    'Next
                End If
                If nz(rw.Cells("ord_itm_bottle_search").Value) = "L" Then
                    MsgBox("Rows with AUTO lacquer codes can not be deleted.", MsgBoxStyle.Information, "Auto Lacquer?")
                    e.Cancel = True
                    Exit Sub
                End If
                If nz(rw.Cells("ord_itm_bottle_search").Value) = "L" Then
                    For cnt = 0 To DVItems.Count - 1
                        'DVItems(cnt).Item("ord_itm_lacquer") = False
                        DVItems(cnt).Item("ord_itm_lacq3") = " "
                    Next
                End If
            Next
        Catch
            DoError(Err, Me)
        End Try
        tGenMaterial.Focus()
    End Sub

    Private Sub tDefStain_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles tDefStain.InitializeLayout

    End Sub

    Private Sub tDefStain_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles tDefStain.Enter
        onStain = tDefStain.Value
    End Sub

    Private Sub tDefStain_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tDefStain.Leave
        If onStain <> tDefStain.Value And DVItems.Count > 0 Then
            If Grid1.Rows.Count = 0 Then Exit Sub
            Dim rw As Infragistics.Win.UltraWinGrid.UltraGridRow

            For Each rw In Grid1.Rows
                If rw.Selected = True Or Grid1.Selected.Rows.Count <= 1 Then
                    If rw.Cells("ord_itm_stain_bottles").Value + nz(rw.Cells("ord_itm_stain_bottles_add").Value, 0) > 0 Then
                        rw.Cells("ord_itm_stain_serial").Value = tDefStain.Value
                    End If
                End If
            Next

            BindingContext(DVItems).EndCurrentEdit()
            UltraCalcManager1.DirtyAllFormulas()
            Grid1.DataBind()
            CheckStainLines(tDefStain.Value)
        End If
    End Sub
    'Private Sub tDefLacquer_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) 
    '    If Me.ActiveControl Is Nothing Then Exit Sub
    '    If Me.ActiveControl.Name Is "tDefLacquer" Then
    '        If tDefLacquer.Checked Then
    '            DVGen(0).Item("ord_gen_def_lacquer") = True
    '        Else
    '            DVGen(0).Item("ord_gen_def_lacquer") = False
    '        End If

    '        'Dim x As Integer
    '        'For x = 0 To DVItems.Count - 1
    '        '    If DVItems(x).Item("ord_itm_lacq_bottles") > 0 Then DVItems(x).Item("ord_itm_lacquer") = tDefLacquer.Checked
    '        'Next
    '        'Grid1.Refresh()
    '        'DoTotal()
    '        If Grid1.Rows.Count = 0 Then Exit Sub
    '        Dim rw As Infragistics.Win.UltraWinGrid.UltraGridRow

    '        For Each rw In Grid1.Rows
    '            If rw.Selected = True Or Grid1.Selected.Rows.Count <= 1 Then
    '                If rw.Cells("ord_itm_lacq_bottles").Value + rw.Cells("ord_itm_lacq_bottles_add").Value > 0 Then
    '                    rw.Cells("ord_itm_lacquer").Value = tDefLacquer.Checked
    '                End If
    '            End If
    '        Next

    '        BindingContext(DVItems).EndCurrentEdit()
    '        UltraCalcManager1.DirtyAllFormulas()
    '        Grid1.DataBind()
    '        CheckLacquerLines()
    '    End If
    'End Sub
    Private Sub Grid1_DragEnter(ByVal sender As Object, ByVal e As System.Windows.Forms.DragEventArgs) Handles Grid1.DragEnter
        e.Effect = DragDropEffects.Copy
    End Sub

    Private Sub Grid1_DragDrop(ByVal sender As Object, ByVal e As System.Windows.Forms.DragEventArgs) Handles Grid1.DragDrop
        Dim myUIElement As Infragistics.Win.UIElement
        Dim myRow As Infragistics.Win.UltraWinGrid.UltraGridRow
        Dim onRow As Integer

        myUIElement = Grid1.DisplayLayout.UIElement.ElementFromPoint(New Point(e.X - 6, e.Y - 214))
        myRow = myUIElement.GetContext(GetType(Infragistics.Win.UltraWinGrid.UltraGridRow))
        If Not myRow Is Nothing Then
            onRow = myRow.Cells("ord_itm_line").Value
            Dim rw As Infragistics.Win.UltraWinGrid.UltraGridRow
            For Each rw In Grid1.Rows
                If CInt(onLine) > onRow Then
                    If rw.Cells("ord_itm_line").Value >= onRow And rw.Cells("ord_itm_line").Value < CInt(onLine) Then
                        rw.Cells("ord_itm_line").Value += 1
                    End If
                    If rw Is onLineSerial Then
                        rw.Cells("ord_itm_line").Value = onRow
                    End If
                End If
                If CInt(onLine) < onRow Then
                    If rw.Cells("ord_itm_line").Value <= onRow And rw.Cells("ord_itm_line").Value > CInt(onLine) Then
                        rw.Cells("ord_itm_line").Value -= 1
                    End If
                    If rw Is onLineSerial Then
                        rw.Cells("ord_itm_line").Value = onRow
                    End If
                End If
            Next
            lLine.Text = "Move Line " + onLine + " to " + myRow.Cells("ord_itm_line").Text
        End If
        lLine.Visible = False
        Grid1.DisplayLayout.Bands(0).Columns("ord_itm_line").SortIndicator = Infragistics.Win.UltraWinGrid.SortIndicator.Ascending
    End Sub

    Private Sub Grid1_DragOver(ByVal sender As Object, ByVal e As System.Windows.Forms.DragEventArgs) Handles Grid1.DragOver
        Dim myUIElement As Infragistics.Win.UIElement
        Dim myRow As Infragistics.Win.UltraWinGrid.UltraGridRow

        myUIElement = Grid1.DisplayLayout.UIElement.ElementFromPoint(New Point(e.X - 6, e.Y - 214))
        myRow = myUIElement.GetContext(GetType(Infragistics.Win.UltraWinGrid.UltraGridRow))
        If Not myRow Is Nothing Then lLine.Text = "Move Line " + onLine + " to " + myRow.Cells("ord_itm_line").Text
        lLine.Top = e.Y - 214 - 5
        lLine.Left = e.X - 6 + 10

    End Sub
    Private Sub Grid1_MouseDown(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles Grid1.MouseDown
        If EditMode <> "Edit" And EditMode <> "Add" Then Exit Sub
        Dim myUIElement As Infragistics.Win.UIElement
        Dim myCell As Infragistics.Win.UltraWinGrid.UltraGridCell

        myUIElement = Grid1.DisplayLayout.UIElement.ElementFromPoint(New Point(e.X, e.Y))
        myCell = myUIElement.GetContext(GetType(Infragistics.Win.UltraWinGrid.UltraGridCell))

        If myCell Is Nothing Then Exit Sub
        If myCell.Column.Header.Caption = "Line" Then
            lLine.Left = e.X + 10
            lLine.Top = e.Y - 5
            onLine = myCell.Text
            onLineSerial = myCell.Row
            lLine.Text = "Move Line " + onLine + " to " + myCell.Text
            lLine.Visible = True
            lLine.DoDragDrop(lLine.Text, DragDropEffects.Copy)
        End If
    End Sub

    Private Sub tFloating_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles tFloating.InitializeLayout
        e.Layout.Bands(0).Columns(1).Hidden = True

    End Sub

    Private Sub tFloating_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tFloating.Leave
        'If tFloating.Value <> "" And tFloating.Value <> "<None>" Then
        '    'DVGen(0).Item("ord_gen_resp_rep") = "O"
        '    cbResponsible.Value = "F"
        'Else
        '    If cbResponsible.Value = "F" Then cbResponsible.Value = "O"
        'End If
        DVGen.Item(0)("ord_gen_floating") = tFloating.Value
        BindingContext(DVGen).EndCurrentEdit()
        cnn.Open()
        UpdateTerritory(DVGen(0).Row)
        cnn.Close()
        tTerr.Value = DVGen(0)("ord_gen_terr")
    End Sub
    Private Sub MenuItem16_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem16.Click
        If SecLevel < jEdit Then
            MsgBox("You do not have EDIT permision on this screen.", MsgBoxStyle.Critical, "Permission?")
            Exit Sub
        End If
        If Mid(Tab1.ActiveTab.Key, 1, 1) <> "Q" Then
            MsgBox("You must be on a Quote to edit the forecast", MsgBoxStyle.Information, "Quote?")
            Exit Sub
        End If
        If Not IsNumeric(tOrd.Text) Then
            MsgBox("You must establish a quote number before you can use this function.", MsgBoxStyle.Information, "Quote Number?")
            Exit Sub
        End If
        If EditMode <> "" Then
            MsgBox("You can not be editing this quote to use this function.", MsgBoxStyle.Information, "Edit mode?")
            Exit Sub
        End If
        Dim fm As New fmEstOrdUpdateForecast
        fm.onOrd = CLng(tOrd.Text)
        fm.onRev = CInt(Mid(Tab1.ActiveTab.Key, 2))
        fm.onStatus = tForecast.Text
        fm.tForecastDate.Value = tForecastDate.Value
        fm.tForecastNote.Text = tForecastNote.Text
        fm.onReason = tLostReason.Text
        fm.tLostDate.Value = tLostDate.Value
        fm.tPerc.Text = tForecastPerc.Text
        fm.ShowDialog()
        LoadPage()
    End Sub

    Private Sub Grid1_CellChange(ByVal sender As Object, ByVal e As Infragistics.Win.UltraWinGrid.CellEventArgs) Handles Grid1.CellChange
        If Grid1.ActiveCell.Column.Header.Caption = "Lacq" Then
            Grid1.UpdateData()
            'If Grid1.ActiveRow.Cells("ord_itm_lacquer").Value = True And Grid1.ActiveRow.Cells("ord_itm_lacq_bottles").Value + Grid1.ActiveRow.Cells("ord_itm_lacq_bottles_add").Value = 0 Then
            '    MsgBox("You may not select this item to be lacquered.", MsgBoxStyle.Information, "Lacquer?")
            '    Grid1.ActiveRow.Cells("ord_itm_lacquer").Value = False
            '    Grid1.UpdateData()
            '    Exit Sub
            'End If
            If Grid1.ActiveRow.Cells("ord_itm_lacq3").Value <> " " And Grid1.ActiveRow.Cells("ord_itm_lacq_bottles").Value + Grid1.ActiveRow.Cells("ord_itm_lacq_bottles_add").Value = 0 Then
                MsgBox("You may not select this item to be lacquered.", MsgBoxStyle.Information, "Lacquer?")
                Grid1.ActiveRow.Cells("ord_itm_lacq3").Value = " "
                Grid1.UpdateData()
                Exit Sub
            End If
        End If
    End Sub

    Private Sub tStainAdd_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tStainAdd.ValueChanged

    End Sub

    Private Sub tStainAdd_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles tStainAdd.Enter
        If tStainAdd.Value Is DBNull.Value Then tStainAdd.Value = 0
    End Sub

    Private Sub tStainAdd_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tStainAdd.Leave
        If Grid1.ActiveRow.Cells("ord_itm_stain_bottles").Value + tStainAdd.Value < 0 Then
            MsgBox("Stain Bottles can not be below 0. This items stain bottle count is " + CStr(Grid1.ActiveRow.Cells("ord_itm_stain_bottles").Value), MsgBoxStyle.Critical, "Bottles?")
            tStainAdd.Focus()
            Exit Sub
        End If
        BindingContext(DVItems).EndCurrentEdit()
        DoTotal()
        Grid1.DataBind()
    End Sub
    Private Sub tLacqAdd_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles tLacqAdd.Enter
        If tLacqAdd.Value Is DBNull.Value Then tLacqAdd.Value = 0
    End Sub

    Private Sub tLacqAdd_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tLacqAdd.Leave
        If Grid1.ActiveRow.Cells("ord_itm_lacq_bottles").Value + tLacqAdd.Value < 0 Then
            MsgBox("Lacquer Bottles can not be below 0. This items lacquer bottle count is " + CStr(Grid1.ActiveRow.Cells("ord_itm_lacq_bottles").Value), MsgBoxStyle.Critical, "Bottles?")
            tLacqAdd.Focus()
            Exit Sub
        End If
        BindingContext(DVItems).EndCurrentEdit()
        DoTotal()
        Grid1.DataBind()
    End Sub

    Private Sub cbShipActive_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cbShipActive.CheckedChanged
        If Me.ActiveControl Is Nothing Then Exit Sub
        If Me.ActiveControl.Name = "cbShipActive" Then
            DVGen(0).Item("ord_gen_ship_active") = cbShipActive.Checked
            DoTotal()
        End If
    End Sub

    Private Sub UltraLabel92_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles UltraLabel92.Click

    End Sub

    Private Sub tCustOrd_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tCustOrd.ValueChanged

    End Sub

    Private Sub tTabTitle_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tTabTitle.ValueChanged
        Tab1.ActiveTab.ToolTipText = tTabTitle.Text
    End Sub

    Private Sub UpType_AfterSelect(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinTree.SelectEventArgs) Handles UpType.AfterSelect

    End Sub

    Private Sub UpType_AfterCheck(ByVal sender As Object, ByVal e As Infragistics.Win.UltraWinTree.NodeEventArgs) Handles UpType.AfterCheck
        Dim nd, nd1 As Infragistics.Win.UltraWinTree.UltraTreeNode
        Dim isChecked As Boolean = False
        Dim isAll As Boolean = False
        Dim onType As String

        For Each nd In UpType.Nodes
            If nd.CheckedState = CheckState.Checked Then isChecked = True
            If nd.Key = "<Select All>" Then
                isAll = nd.CheckedState = CheckState.Checked
            Else
                If nd.CheckedState = CheckState.Checked Then onType += nd.Key + "|"
            End If
        Next

        If isChecked = False Then
            UpType.Nodes("<Select All>").CheckedState = CheckState.Checked
            isAll = True
        End If

        For Each nd In UpTree.Nodes
            For Each nd1 In nd.Nodes
                If (InStr(onType, Split(nd1.Key, "|")(0)) > 0) Or isAll Then
                    nd1.Visible = True
                Else
                    nd1.Visible = False
                End If
            Next
        Next

    End Sub

    Private Sub tCustId_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles tCustId.InitializeLayout

    End Sub

    Private Sub bUpsellSendToQuote_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bUpsellSendToQuote.Click
        Dim ndTop, ndType, ndGroup, ndChild As Infragistics.Win.UltraWinTree.UltraTreeNode
        Dim row As DataRow
        Dim cnt As Integer
        Dim cmd As New SqlCommand("", cnn)
        Dim onStainSerial As Long

        bUpsellSendToQuote.Enabled = False
        For Each ndTop In UpTree.Nodes
            For Each ndType In ndTop.Nodes
                For Each ndGroup In ndType.Nodes
                    If ndGroup.Selected = True Then
                        For Each ndChild In ndGroup.Nodes
                            If ndChild.Tag <> "NoQuote" Then
                                row = dsItems.Tables("ord_itm").NewRow
                                row("ord_itm_item_code") = Split(ndChild.Text, " ")(0)
                                row("ord_itm_qty") = CDbl(Split(ndChild.Tag, "|")(0))
                                row("ord_itm_stain_serial") = CLng(Split(ndChild.Tag, "|")(1))
                                LoadPriceByRow(row, True)
                                row("ord_itm_lacq3") = Split(ndChild.Tag, "|")(2)
                                row("ord_itm_note") = Split(ndChild.Tag, "|")(3)

                                If ndType.Text = "Stain" Then
                                    cmd.CommandText = "select itm_stain_serial from itm_file where itm_code='" + Split(ndChild.Text, " ")(0) + "'"
                                    cnn.Open()
                                    onStainSerial = nz(cmd.ExecuteScalar, -1)
                                    cnn.Close()
                                    If onStainSerial > 0 Then
                                        For cnt = 0 To DVItems.Count - 1
                                            If DVItems(cnt).Item("ord_itm_stain_bottles") + nz(DVItems(cnt).Item("ord_itm_stain_bottles_add"), 0) > 0 Then
                                                DVItems(cnt).Item("ord_itm_stain_serial") = onStainSerial
                                            End If
                                        Next
                                    End If
                                End If

                                If ndType.Text = "Lacquer" Then
                                    For cnt = 0 To DVItems.Count - 1
                                        If DVItems(cnt).Item("ord_itm_lacq_bottles") + nz(DVItems(cnt).Item("ord_itm_lacq_bottles_add"), 0) > 0 Then
                                            If nz(tDefLacq.Value, " ") = " " Then
                                                DVItems(cnt).Item("ord_itm_lacq3") = "3"
                                            Else
                                                DVItems(cnt).Item("ord_itm_lacq3") = tDefLacq.Value
                                            End If
                                        End If
                                    Next
                                End If

                                dsItems.Tables("ord_itm").Rows.Add(row)
                            End If
                        Next
                    End If
                Next
            Next
        Next
        DoTotal()
        bUpsellSendToQuote.Enabled = True
        MsgBox("Copy Complete", MsgBoxStyle.Information, "Complete")
    End Sub

    Private Sub tWidth_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tWidth.ValueChanged
        If Me.ActiveControl.Name = "tWidth" Then UpSellDirty = True
    End Sub

    Private Sub tHeight_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tHeight.ValueChanged
        If Me.ActiveControl.Name = "tHeight" Then UpSellDirty = True
    End Sub

    Private Sub tDepth_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tDepth.ValueChanged
        If Me.ActiveControl.Name = "tDepth" Then UpSellDirty = True
    End Sub

    Private Sub tWidth_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles tWidth.Enter
        tWidth.SelectAll()
    End Sub

    Private Sub tHeight_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles tHeight.Enter
        tHeight.SelectAll()
    End Sub

    Private Sub tDepth_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles tDepth.Enter
        tDepth.SelectAll()
    End Sub

    Private Sub Grid1_BeforeRowDeactivate(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles Grid1.BeforeRowDeactivate
        'If nz(Grid1.ActiveRow.Cells("ord_itm_width_req").Value, False) = True And nz(Grid1.ActiveRow.Cells("ord_itm_width").Value, 0) = 0 Then
        '    MsgBox("A Width must be specified.", MsgBoxStyle.Critical, "Width?")
        '    tWidth.Focus()
        '    e.Cancel = True
        '    Exit Sub
        'End If
        'If nz(Grid1.ActiveRow.Cells("ord_itm_height_req").Value, False) = True And nz(Grid1.ActiveRow.Cells("ord_itm_height").Value, 0) = 0 Then
        '    MsgBox("A Height must be specified.", MsgBoxStyle.Critical, "Height?")
        '    tHeight.Focus()
        '    e.Cancel = True
        '    Exit Sub
        'End If
        'If nz(Grid1.ActiveRow.Cells("ord_itm_depth_req").Value, False) = True And nz(Grid1.ActiveRow.Cells("ord_itm_depth").Value, 0) = 0 Then
        '    MsgBox("A Depth must be specified.", MsgBoxStyle.Critical, "Depth?")
        '    tDepth.Focus()
        '    e.Cancel = True
        '    Exit Sub
        'End If
    End Sub

    Private Sub tWidth_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tWidth.Leave
        'If Grid1.ActiveRow.Cells("ord_itm_width_req").Value = True And nz(tWidth.Value, 0) <= 0 Then
        '    MsgBox("Must have a width", MsgBoxStyle.Critical, "Width?")
        '    tWidth.Focus()
        '    Exit Sub
        'End If
    End Sub
    Private Sub tHeight_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tHeight.Leave
        'If Grid1.ActiveRow.Cells("ord_itm_height_req").Value = True And nz(tHeight.Value, 0) <= 0 Then
        '    MsgBox("Must have a height", MsgBoxStyle.Critical, "Height?")
        '    tHeight.Focus()
        '    Exit Sub
        'End If
    End Sub

    Private Sub tDepth_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tDepth.Leave
        'If Grid1.ActiveRow.Cells("ord_itm_depth_req").Value = True And nz(tDepth.Value, 0) <= 0 Then
        '    MsgBox("Must have a depth", MsgBoxStyle.Critical, "Depth?")
        '    tDepth.Focus()
        '    Exit Sub
        'End If
    End Sub
    Private Sub UpdateTerritory(ByVal row As DataRow)
        Try

            If Not row Is Nothing Then
                Dim cnnx As New SqlConnection(cnn.ConnectionString + ";password='39201'")
                Dim cmd As New SqlCommand("", cnnx)
                Dim cnnOpened As Boolean = False

                cnnx.Open()
                row("ord_gen_terr") = ""
                If tCustId.Text <> "" Then
                    cmd.CommandText = "select cust_terr from cust_file where cust_id='" + tCustId.Text + "'"
                    row("ord_gen_terr") = UCase(nz(cmd.ExecuteScalar, ""))
                    'ElseIf nz(row("ord_gen_resp_rep")) = "F" Then
                    '    row("ord_gen_terr") = "INTERNATIONAL"
                    'ElseIf nz(row("ord_gen_outside")) = "" Or nz(row("ord_gen_outside")) = "NONE" Then
                    '    cmd.CommandText = "select rep_territory from rep_file where rep_code='" + row("ord_gen_inside") + "'"
                    '    row("ord_gen_terr") = UCase(nz(cmd.ExecuteScalar, ""))
                    'Else
                    '    cmd.CommandText = "select rep_territory from rep_file where rep_code='" + row("ord_gen_outside") + "'"
                    '    row("ord_gen_terr") = UCase(nz(cmd.ExecuteScalar, ""))   
                Else
                    If row("ord_gen_alt_ship") = True Then
                        cmd.CommandText = "select terr_territory from terr_file where terr_state='" + DVAltShip.Item(0)("ord_alt_ship_state") + "'"
                        row("ord_gen_terr") = UCase(nz(cmd.ExecuteScalar, "INTERNATIONAL"))
                    Else
                        cmd.CommandText = "select terr_territory from terr_file where terr_state='" + row("ord_gen_ship_state") + "'"
                        row("ord_gen_terr") = UCase(nz(cmd.ExecuteScalar, "INTERNATIONAL"))
                    End If
                End If
                cnnx.Close()
                cnnx = Nothing
            End If

        Catch
            DoError(Err, Me)
        End Try
    End Sub



    Private Sub tOutside_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tOutside.Leave
        DVGen.Item(0)("ord_gen_outside") = tOutside.Value
        'BindingContext(DVGen).EndCurrentEdit()
        cnn.Open()
        UpdateTerritory(DVGen(0).Row)
        cnn.Close()
        tTerr.Value = DVGen(0)("ord_gen_terr")
    End Sub

    Private Sub tInside_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tInside.Leave
        DVGen.Item(0)("ord_gen_inside") = tInside.Value
        'BindingContext(DVGen).EndCurrentEdit()
        cnn.Open()
        UpdateTerritory(DVGen(0).Row)
        cnn.Close()
        tTerr.Value = DVGen(0)("ord_gen_terr")
    End Sub
    Private Sub gsExemptNo_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles gsExemptNo.Leave
        DVGen(0)("ord_gen_tax_exempt_no") = gsExemptNo.Text
        gsCheckExemptNo()
    End Sub
    Private Sub gsCheckExemptNo()
        Try
            If DVGen.Count = 0 Then Exit Sub

            Dim ShipCountry As String = gsCountry.Text
            If ShipCountry = "" Then ShipCountry = tCountry.Text

            'If gsExemptNo.Text = "" Then
            '    If ShipCountry = "USA" Or ShipCountry = "" Then
            '        gsExemptAddr.Text = "Not on File"
            '        DVGen(0)("ord_gen_tax_exempt_addr") = gsExemptAddr.Text
            '    Else
            '        gsExemptAddr.Text = "International"
            '        DVGen(0)("ord_gen_tax_exempt_addr") = gsExemptAddr.Text
            '    End If
            'Else
            If ShipCountry = "USA" Or ShipCountry = "" Then
                'Dim cmd As New SqlCommand("select * from tax_cert where tax_cert_no='" + gsExemptNo.Text + "'", cnn)
                Dim cmd As New SqlCommand("select * from tax_cert where tax_cert_no='" + gsExemptNo.Text + "' or (tax_cert_cust_id='" + tCustId.Text + "' and tax_cert_cust_id<>'' and not tax_cert_cust_id is null)", cnn)
                Dim dt As New DataTable
                Dim da As New SqlDataAdapter(cmd)
                cnn.Open()
                da.Fill(dt)
                Dim HasCert = False
                If dt.Rows.Count > 0 Then
                    Dim dr As DataRow
                    For Each dr In dt.Rows
                        If nz(dr("tax_cert_cust_id")) <> "" Then
                            If chUseAltShip.CheckState = CheckState.Checked Then
                                If UCase(tAltShipState.Text) = "CA" Then
                                    If UCase(nz(dr("tax_cert_sold_state"))) = "CA" Then
                                        gsExemptAddr.Text = nz(dr("tax_cust_name")) + vbCrLf + nz(dr("tax_cert_addr")) + vbCrLf + nz(dr("tax_cert_city")) + ", " + nz(dr("tax_cert_state")) + "  " + nz(dr("tax_cert_zip"))
                                        DVGen(0)("ord_gen_tax_exempt_addr") = gsExemptAddr.Text
                                        gsExemptNo.Text = nz(dr("tax_cert_no"))
                                        DVGen(0)("ord_gen_tax_exempt_no") = gsExemptNo.Text
                                        Application.DoEvents()
                                        HasCert = True
                                        GoTo skip
                                    Else

                                    End If
                                Else
                                    'If UCase(nz(dr("tax_cert_state"))) <> "CA" Then
                                    gsExemptAddr.Text = nz(dr("tax_cust_name")) + vbCrLf + nz(dr("tax_cert_addr")) + vbCrLf + nz(dr("tax_cert_city")) + ", " + nz(dr("tax_cert_state")) + "  " + nz(dr("tax_cert_zip"))
                                    DVGen(0)("ord_gen_tax_exempt_addr") = gsExemptAddr.Text
                                    gsExemptNo.Text = nz(dr("tax_cert_no"))
                                    DVGen(0)("ord_gen_tax_exempt_no") = gsExemptNo.Text
                                    Application.DoEvents()
                                    HasCert = True
                                    GoTo skip
                                    'End If
                                End If
                            Else
                                If UCase(gsState.Text) = "CA" Then
                                    If UCase(nz(dr("tax_cert_sold_state"))) = "CA" Then
                                        gsExemptAddr.Text = nz(dr("tax_cust_name")) + vbCrLf + nz(dr("tax_cert_addr")) + vbCrLf + nz(dr("tax_cert_city")) + ", " + nz(dr("tax_cert_state")) + "  " + nz(dr("tax_cert_zip"))
                                        DVGen(0)("ord_gen_tax_exempt_addr") = gsExemptAddr.Text
                                        gsExemptNo.Text = nz(dr("tax_cert_no"))
                                        DVGen(0)("ord_gen_tax_exempt_no") = gsExemptNo.Text
                                        Application.DoEvents()
                                        HasCert = True
                                        GoTo skip
                                    Else

                                    End If
                                Else
                                    'If UCase(nz(dr("tax_cert_state"))) <> "CA" Then
                                    gsExemptAddr.Text = nz(dr("tax_cust_name")) + vbCrLf + nz(dr("tax_cert_addr")) + vbCrLf + nz(dr("tax_cert_city")) + ", " + nz(dr("tax_cert_state")) + "  " + nz(dr("tax_cert_zip"))
                                    DVGen(0)("ord_gen_tax_exempt_addr") = gsExemptAddr.Text
                                    gsExemptNo.Text = nz(dr("tax_cert_no"))
                                    DVGen(0)("ord_gen_tax_exempt_no") = gsExemptNo.Text
                                    Application.DoEvents()
                                    HasCert = True
                                    GoTo skip
                                    'End If
                                End If
                            End If
                        Else
                            gsExemptAddr.Text = nz(dr("tax_cust_name")) + vbCrLf + nz(dr("tax_cert_addr")) + vbCrLf + nz(dr("tax_cert_city")) + ", " + nz(dr("tax_cert_state")) + "  " + nz(dr("tax_cert_zip"))
                            DVGen(0)("ord_gen_tax_exempt_addr") = gsExemptAddr.Text
                            gsExemptNo.Text = nz(dr("tax_cert_no"))
                            DVGen(0)("ord_gen_tax_exempt_no") = gsExemptNo.Text
                            Application.DoEvents()
                            HasCert = True
                        End If
                    Next
skip:
                    If HasCert = False Then
                        If UCase(gsState.Text) = "CA" Or UCase(tAltShipState.Text) = "CA" Then
                            gsExemptAddr.Text = "CA - Not on File"
                            DVGen(0)("ord_gen_tax_exempt_addr") = gsExemptAddr.Text
                            gsExemptNo.Text = ""
                            DVGen(0)("ord_gen_tax_exempt_no") = gsExemptNo.Text
                            Application.DoEvents()
                        Else
                            gsExemptAddr.Text = "Not on File"
                            DVGen(0)("ord_gen_tax_exempt_addr") = gsExemptAddr.Text
                            gsExemptNo.Text = ""
                            DVGen(0)("ord_gen_tax_exempt_no") = gsExemptNo.Text
                            Application.DoEvents()
                        End If
                    End If
                Else
                    If gsTaxExempt.CheckState = CheckState.Checked Then
                        gsExemptAddr.Text = "Not on File"
                        DVGen(0)("ord_gen_tax_exempt_addr") = gsExemptAddr.Text
                        gsExemptNo.Text = ""
                        DVGen(0)("ord_gen_tax_exempt_no") = gsExemptNo.Text
                        Application.DoEvents()
                    End If
                End If
                cnn.Close()
            Else
                gsExemptAddr.Text = "International"
                DVGen(0)("ord_gen_tax_exempt_addr") = gsExemptAddr.Text
            End If
            'nd If
            If gsExemptNo.Text <> "" Then
                gsTaxExempt.CheckState = CheckState.Checked
            Else
                gsTaxExempt.CheckState = CheckState.Unchecked
            End If
            'If gsTaxExempt.CheckState = CheckState.Unchecked Then
            '    gsExemptAddr.Text = ""
            '    Exit Sub
            'End If
        Catch
            DoError(Err, Me)
        End Try
    End Sub
    Private Sub bNotesShowAll_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bNotesShowAll.Click
        If bNotesShowAll.Text = "Show This Rev Only" Then
            bNotesShowAll.Text = "Show All Revs"
            LoadNotes()
        Else
            bNotesShowAll.Text = "Show This Rev Only"
            LoadNotes()
        End If
    End Sub

    Private Sub MenuItem2_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem2.Click
        Select Case Mid(Tab1.ActiveTab.Key, 1, 1)
            Case "Q", "O", "R"
                DisplayReport("quote landscape by group", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_itm.ord_itm_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "'", True, 1, True)
            Case Else
                MsgBox("Please select a Quote, Order or Replacement first", MsgBoxStyle.Information, "Pick One")
        End Select

    End Sub

    Private Sub tLostReason_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles tLostReason.InitializeLayout

    End Sub

    Private Sub tLostReason_ValueChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles tLostReason.ValueChanged
    End Sub

    Private Sub tForecast_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles tForecast.InitializeLayout

    End Sub

    Private Sub tForecast_ValueChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles tForecast.ValueChanged
        If tForecast.Value = "Lost" Then
            If IsDate(tLostDate.Value) Then
                If tLostDate.Value <= CDate("1/1/1900") Then tLostDate.Value = Date.Today
            Else
                tLostDate.Value = Date.Today
            End If
        Else
            tLostDate.Value = DBNull.Value
        End If
    End Sub

    Private Function SaveUpsell() As Boolean
        Try
            If DVItems.Count = 0 Then
                SaveUpsell = True
                Exit Function
            End If

            SaveUpsell = False
            Dim cmd As New SqlCommand("", cnn)
            Dim nd, ndgroup, ndchild As Infragistics.Win.UltraWinTree.UltraTreeNode
            Dim cnt As Integer = 0
            Dim HasCustom As Boolean = False

            For cnt = 0 To DVItems.Count - 1
                If nz(DVItems(cnt)("ord_itm_prod_type")) = "BUD" Or nz(DVItems(cnt)("ord_itm_prod_type")) = "TOP" Or nz(DVItems(cnt)("ord_itm_prod_type")) = "GOLD" Then
                    HasCustom = True
                    Exit For
                End If
            Next
            cnt = 0

            LoadUpSells()

            For Each nd In UpTree.Nodes
                For Each ndgroup In nd.Nodes
                    For Each ndchild In ndgroup.Nodes
                        If Split(ndchild.Tag, "|")(0) = "Group" Then
                            If ndchild.CheckedState = CheckState.Checked Then cnt += 1
                        End If
                    Next
                Next
            Next

            cnn.Open()
            cmd.CommandText = "delete from ord_upsell where ord_upsell_ord_serial=" + tOrd.Text + " and ord_upsell_ord_type='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "' and ord_upsell_ord_rev=" + Mid(Tab1.ActiveTab.Key, 2)
            cmd.ExecuteNonQuery()

            If cnt = 0 Then
                If HasCustom Then
                    MsgBox("You must pick at least one upsell or addon", MsgBoxStyle.Information, "Pick One")
                Else
                    SaveUpsell = True
                End If
            Else
                SaveUpsellSub(UpTree.Nodes)
                SaveUpsell = True
            End If
            UpSellCheckboxesDirty = False
        Catch
            DoError(Err, Me)
        Finally
            cnn.Close()
        End Try
    End Function

    Private Sub SaveUpsellSub(ByVal nds As Infragistics.Win.UltraWinTree.TreeNodesCollection)
        Dim nd As Infragistics.Win.UltraWinTree.UltraTreeNode
        Dim cmd As New SqlCommand("", cnn)

        For Each nd In nds
            If Split(nd.Tag, "|")(0) = "Group" And nd.CheckedState = CheckState.Checked Then
                cmd.CommandText = "insert into ord_upsell (ord_upsell_ord_serial,ord_upsell_ord_type,ord_upsell_ord_rev,ord_upsell_parent,ord_upsell_itm_serial,ord_upsell_type,ord_upsell_group,ord_upsell_upsell_serial,ord_upsell_price,ord_upsell_image,ord_upsell_notes) values (" + tOrd.Text + ",'" + Mid(Tab1.ActiveTab.Key, 1, 1) + "'," + Mid(Tab1.ActiveTab.Key, 2) + ",'" + Trim(Split(nd.Parent.Parent.Text, ":")(0)) + "'," + Split(nd.Tag, "|")(2) + ",'" + nd.Parent.Text + "','" + Replace(Split(nd.Tag, "|")(3), "'", "''") + "'," + Split(nd.Tag, "|")(1) + "," + Split(nd.Tag, "|")(4) + ",'" + Split(nd.Tag, "|")(5) + "','" + Replace(Split(nd.Tag, "|")(6), "'", "''") + "')"
                cmd.ExecuteNonQuery()
            End If
            If nd.HasNodes Then SaveUpsellSub(nd.Nodes)
        Next
    End Sub

    Private Sub cbFactoryInstall_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbFactoryInstall.CheckedChanged
        If Not Me.ActiveControl Is cbFactoryInstall Then Exit Sub
        If UCase(UserType) = "I" Then
            If cbFactoryInstall.Checked Then
                MsgBox("Sales can not check this box.  Please see someone in this department.", MsgBoxStyle.Information, "Check?")
                cbFactoryInstall.Checked = False
                DVGen(0).Item("ord_gen_co_factoryinstall") = False
                Exit Sub
            Else
                cbISR.Checked = False
                DVGen(0).Item("ord_gen_co_isr") = False
            End If
        End If
        DVGen(0).Item("ord_gen_co_factoryinstall") = cbFactoryInstall.Checked
        If cbFactoryInstall.Checked = True And cbFactoryInstall.Focus = True Then
            DVGen(0).Item("ord_gen_co_factoryinstall_user") = User
            DVGen(0).Item("ord_gen_co_factoryinstall_date") = Now
            tInstallUser.Text = User
            tInstallDate.Text = Now
        End If
    End Sub

    Private Sub UltraButton10_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bDocPrint.Click
        Try
            Dim hwnd As Long
            Dim myProc As Process
            Dim itm As Object

            For Each itm In ListPDF.SelectedItems
                myProc = New Process

                myProc.StartInfo.UseShellExecute = True
                myProc.StartInfo.CreateNoWindow = False
                myProc.StartInfo.FileName = PDFPath + itm
                myProc.StartInfo.WindowStyle = ProcessWindowStyle.Minimized
                myProc.StartInfo.Verb = "Print"
                myProc.Start()
                'myProc.WaitForExit(15000)
                Try
                    myProc.CloseMainWindow()
                    myProc.Close()
                Catch
                    'MsgBox(Err.Description)
                End Try
                myProc = Nothing
            Next
        Catch
            DoError(Err, Me)
        End Try

    End Sub
    Private Sub tUpSellSqFt_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tUpSellSqFt.Leave
        If IsNumeric(tUpSellSqFt.Text) = False Then tUpSellSqFt.Text = "0"
        UpSellDirty = True
        LoadUpSells()
    End Sub
    Private Sub gsCustId_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles gsCustId.Leave
        DVGen(0)("ord_gen_ship_cust_id") = gsCustId.Text
        If gsCustId.Text = "" Then
            gsCustId.LimitToList = False
        Else
            gsCustId.LimitToList = True
        End If
    End Sub

    Private Sub gsCountry_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles gsCountry.Leave
        DVGen(0)("ord_gen_ship_country") = gsCountry.Text
        If onGenCountry <> gsCountry.Text Then UpdateGenShipCountry()
    End Sub

    Private Sub gsZip_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles gsZip.Enter
        onGenZip = gsZip.Text
    End Sub

    Private Sub gsZip_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles gsZip.Leave
        DVGen(0)("ord_gen_ship_zip") = gsZip.Text
        If gsZip.Text <> onGenZip Then
            gsCity.Text = ""
            DVGen(0)("ord_gen_ship_city") = ""
            gsState.Text = ""
            DVGen(0)("ord_gen_ship_state") = ""
            GetGenTaxRate()
        End If
        If gsZip.Text = "" Then Exit Sub
        If dsship_Zip.Tables.Count > 0 Then dsship_Zip.Tables.RemoveAt(0)
        LoadDD(gsCity, dsship_Zip, "zip_file", "zip_city", "zip_city", "zip_city,zip_state,zip_county_name", "zip_code='" + gsZip.Text + "' and zip_start<='" + CStr(Today) + "' and zip_end>='" + CStr(Today) + "'")
    End Sub

    Private Sub gsZip_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles gsZip.ValueChanged

    End Sub

    Private Sub gsCity_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles gsCity.InitializeLayout

    End Sub

    Private Sub gsCity_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles gsCity.Enter
        onGenCity = gsCity.Text
        onGenCounty = gsCounty.Text
        If gsCity.Rows.Count = 1 Then
            gsCity.Text = gsCity.Rows(0).Cells(0).Text
        Else
            If gsCity.IsDroppedDown = False Then gsCity.ToggleDropdown()
        End If

    End Sub

    Private Sub gsCity_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles gsCity.Leave
        Try
            DVGen(0)("ord_gen_ship_city") = gsCity.Text
            If gsCity.IsItemInList(gsCity.Value) = True Then
                If Not gsCity.ActiveRow Is Nothing Then
                    gsState.Text = gsCity.ActiveRow.Cells(1).Text
                    Application.DoEvents()
                    DVGen(0)("ord_gen_ship_state") = gsState.Text
                    gsCounty.Text = gsCity.ActiveRow.Cells(2).Text
                    DVGen(0)("ord_gen_ship_county") = gsCounty.Text
                    If gsTaxExempt.CheckState = CheckState.Checked Then
                        gsCheckExemptNo()
                    End If
                End If
            End If
            If onGenCity <> gsCity.Text Or onGenCounty <> gsCounty.Text Then GetGenTaxRate()
        Catch
            DoError(Err, Me)
        End Try
    End Sub

    Private Sub gsCopy_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles gsCopy.Click
        CopyShipAddress()
    End Sub
    Public Sub CopyShipAddress()
        gsCustId.Text = tCustId.Text
        DVGen(0)("ord_gen_ship_cust_id") = gsCustId.Text
        gsName.Text() = tSold_Name.Text()
        DVGen(0)("ord_gen_ship_name") = gsName.Text
        gsCompany.Text() = tsold_company.Text()
        DVGen(0)("ord_gen_ship_company") = gsCompany.Text
        gsCountry.Text() = tCountry.Text()
        DVGen(0)("ord_gen_ship_country") = gsCountry.Text
        UpdateGenShipCountry()
        gsAddr1.Text() = tsold_addr1.Text()
        DVGen(0)("ord_gen_ship_addr1") = gsAddr1.Text
        gsAddr2.Text() = tsold_addr2.Text()
        DVGen(0)("ord_gen_ship_addr2") = gsAddr2.Text
        gsAddr3.Text() = tsold_addr3.Text()
        DVGen(0)("ord_gen_ship_addr3") = gsAddr3.Text

        gsZip.Text() = tsold_zip.Text()
        DVGen(0)("ord_gen_ship_zip") = gsZip.Text
        LoadDD(gsCity, dsZip, "zip_file", "zip_city", "zip_city", "zip_city,zip_state,zip_county_name", "zip_code='" + gsZip.Text + "' and zip_start<='" + CStr(Today) + "' and zip_end>='" + CStr(Today) + "'")

        gsCity.Text() = tSold_City.Text()
        DVGen(0)("ord_gen_ship_city") = gsCity.Text
        gsState.Text() = tsold_state.Text()
        DVGen(0)("ord_gen_ship_state") = gsState.Text
        gsProvince.Text() = tProvince.Text()
        DVGen(0)("ord_gen_ship_province") = gsProvince.Text
        gsPhone1.Text() = tsold_phone1.Text()
        DVGen(0)("ord_gen_ship_phone1") = gsPhone1.Text
        gsPhone2.Text() = tsold_phone2.Text()
        DVGen(0)("ord_gen_ship_phone2") = gsPhone2.Text
        gsCell.Text() = tsold_cell.Text()
        DVGen(0)("ord_gen_ship_cell") = gsCell.Text
        gsFax.Text() = tsold_fax.Text()
        DVGen(0)("ord_gen_ship_fax") = gsFax.Text
        gsEmail.Text() = tsold_email.Text()
        DVGen(0)("ord_gen_ship_email") = gsEmail.Text
        gsCounty.Text = tSoldCounty.Text
        DVGen(0)("ord_gen_ship_county") = gsCounty.Text
        GetGenTaxRate()
    End Sub
    Private Sub Grid1_AfterCardsScroll(ByVal sender As Object, ByVal e As Infragistics.Win.UltraWinGrid.AfterCardsScrollEventArgs) Handles Grid1.AfterCardsScroll

    End Sub

    Private Sub TabControl_Paint(ByVal sender As System.Object, ByVal e As System.Windows.Forms.PaintEventArgs) Handles TabControl.Paint

    End Sub

    Private Sub bUpsellUncheck_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bUpsellUncheck.Click
        Dim nd, ndGroup, ndChild As Infragistics.Win.UltraWinTree.UltraTreeNode

        For Each nd In UpTree.Nodes
            For Each ndGroup In nd.Nodes
                For Each ndChild In ndGroup.Nodes
                    If Split(ndChild.Tag, "|")(0) = "Group" Then
                        ndChild.CheckedState = CheckState.Unchecked
                    End If
                Next
            Next
        Next
    End Sub

    Private Sub tAltShipState_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tAltShipState.ValueChanged

    End Sub

    Private Sub tAltShipState_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tAltShipState.Leave
        gsCheckExemptNo()
        BindingContext(DVAltShip).EndCurrentEdit()
        DoTotal()
    End Sub

    Private Sub tStainAdd_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles tStainAdd.GotFocus
        tStainAdd.SelectAll()
    End Sub

    Private Sub tLacqAdd_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tLacqAdd.ValueChanged

    End Sub

    Private Sub tLacqAdd_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles tLacqAdd.GotFocus
        tLacqAdd.SelectAll()
    End Sub


    Private Sub gsTaxExempt_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles gsTaxExempt.CheckedChanged
        If Me.ActiveControl Is gsTaxExempt Then
            DVGen(0)("ord_gen_tax_exempt") = gsTaxExempt.Checked
            GetGenTaxRate()
            If gsTaxExempt.CheckState = CheckState.Checked Then
                gsCheckExemptNo()
            Else
                gsExemptAddr.Text = ""
                DVGen(0)("ord_gen_tax_exempt_addr") = gsExemptAddr.Text
                gsExemptNo.Text = ""
                DVGen(0)("ord_gen_tax_exempt_no") = gsExemptNo.Text
            End If
        End If
    End Sub

    Private Sub gsState_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles gsState.ValueChanged

    End Sub

    Private Sub gsState_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles gsState.Enter
        onGenState = gsState.Text
    End Sub

    Private Sub gsCountry_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles gsCountry.InitializeLayout

    End Sub

    Private Sub gsCountry_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles gsCountry.Enter
        onGenCountry = gsCountry.Text
    End Sub

    Private Sub gsState_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles gsState.Leave
        DVGen(0)("ord_gen_ship_state") = gsState.Text
        gsCheckExemptNo()
        If onGenState <> gsState.Text Then GetGenTaxRate()
    End Sub

    Private Sub tSource_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles tSource.InitializeLayout

    End Sub

    Private Sub tSource_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tSource.Leave
        If tSource.Value <> onSource And tSource.Value = "MARKETING" Then
            If User <> "erinc" And User <> "ericah" And User <> "kristid" And UserGroup <> "Admins" Then
                MsgBox("This source code is only available to Marketing", MsgBoxStyle.Information, "Marketing?")
                tSource.Value = ""
                tSource.Focus()
            End If
        End If
    End Sub

    Private Sub tSource_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles tSource.Enter
        onSource = tSource.Value
    End Sub

    Private Sub gsExemptNo_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles gsExemptNo.ValueChanged

    End Sub

    Private Sub gsPhone1_MaskChanged(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinMaskedEdit.MaskChangedEventArgs) Handles gsPhone1.MaskChanged

    End Sub

    Private Sub gsPhone1_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles gsPhone1.Leave
        DVGen(0)("ord_gen_ship_phone1") = gsPhone1.Text

    End Sub

    Private Sub gsCustId_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles gsCustId.InitializeLayout

    End Sub

    Private Sub gsName_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles gsName.ValueChanged

    End Sub

    Private Sub gsName_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles gsName.Leave
        DVGen(0)("ord_gen_ship_name") = gsName.Text
    End Sub

    Private Sub gsCompany_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles gsCompany.ValueChanged

    End Sub

    Private Sub gsCompany_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles gsCompany.Leave
        DVGen(0)("ord_gen_ship_company") = gsCompany.Text
    End Sub

    Private Sub gsAddr1_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles gsAddr1.ValueChanged

    End Sub

    Private Sub gsAddr1_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles gsAddr1.Leave
        DVGen(0)("ord_gen_ship_addr1") = gsAddr1.Text
    End Sub

    Private Sub gsAddr2_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles gsAddr2.Leave
        DVGen(0)("ord_gen_ship_addr2") = gsAddr2.Text
    End Sub

    Private Sub gsAddr3_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles gsAddr3.ValueChanged

    End Sub

    Private Sub gsAddr3_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles gsAddr3.Leave
        DVGen(0)("ord_gen_ship_addr3") = gsAddr3.Text
    End Sub

    Private Sub gsCounty_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles gsCounty.Enter
        onGenCounty = gsCounty.Text
    End Sub

    Private Sub gsCounty_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles gsCounty.ValueChanged

    End Sub

    Private Sub gsCounty_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles gsCounty.Leave
        DVGen(0)("ord_gen_ship_county") = gsCounty.Text
        If onGenCounty <> gsCounty.Text Then
            GetGenTaxRate()
        End If
    End Sub

    Private Sub gsProvince_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles gsProvince.ValueChanged

    End Sub

    Private Sub gsProvince_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles gsProvince.Leave
        DVGen(0)("ord_gen_ship_province") = gsProvince.Text
    End Sub

    Private Sub gsPhone2_MaskChanged(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinMaskedEdit.MaskChangedEventArgs) Handles gsPhone2.MaskChanged

    End Sub

    Private Sub gsPhone2_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles gsPhone2.Leave
        DVGen(0)("ord_gen_ship_phone2") = gsPhone2.Text
    End Sub

    Private Sub gsFax_MaskChanged(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinMaskedEdit.MaskChangedEventArgs) Handles gsFax.MaskChanged

    End Sub

    Private Sub gsFax_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles gsFax.Leave
        DVGen(0)("ord_gen_ship_fax") = gsFax.Text
    End Sub

    Private Sub gsCell_MaskChanged(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinMaskedEdit.MaskChangedEventArgs) Handles gsCell.MaskChanged

    End Sub

    Private Sub gsCell_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles gsCell.Leave
        DVGen(0)("ord_gen_ship_cell") = gsCell.Text
    End Sub

    Private Sub gsEmail_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles gsEmail.ValueChanged

    End Sub

    Private Sub gsEmail_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles gsEmail.Leave
        DVGen(0)("ord_gen_ship_email") = gsEmail.Text
    End Sub

    Private Sub gsEmailSend_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles gsEmailSend.Click
        Dim ol As New Outlook.Application
        Dim mess As Outlook.MailItem
        mess = ol.CreateItem(Outlook.OlItemType.olMailItem)

        mess.To = gsEmail.Text
        mess.Display()

    End Sub

    Private Sub gsShipHold_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles gsShipHold.CheckedChanged
        If Me.ActiveControl Is gsShipHold Then
            DVGen(0)("ord_gen_ship_hold") = gsShipHold.Checked
            CheckShipHold()
        End If
    End Sub
    Private Sub CheckShipHold()
        If Mid(Tab1.ActiveTab.Key, 1, 1) = "C" Then Exit Sub
        If gsShipHold.Checked Then
            lShipHold.Text = "See an administrator or " + UCase(tCreateBy.Text) + " to ship this order."
            pShipHold.Visible = True
            pShipping.Visible = False
            pAltShip.Visible = False
            If TabItems.ActiveTab.Key = "Shipping" Or TabItems.ActiveTab.Key = "Ship" Then
                pShipHold.Parent = TabItems.ActiveTab.TabPage
            End If
        Else
            pShipHold.Visible = False
            pShipping.Visible = True
            pAltShip.Visible = True
        End If
        If EditMode <> "" Then
            If ((UserGroup = "Admins" Or User = tCreateBy.Text) And EditMode <> "") Or gsShipHold.Checked = False Then
                gsShipHold.Enabled = True
            Else
                gsShipHold.Enabled = False
            End If

            Try
                If DVGen(0)("ord_gen_total") <> 0 And DVGen(0)("ord_gen_balance") <> DVGen(0)("ord_gen_total") And Mid(Tab1.ActiveTab.Key, 1, 1) = "O" Then
                    gsTaxExempt.Enabled = False
                    gsCity.Enabled = False
                    gsState.Enabled = False
                    gsZip.Enabled = False
                    gsCountry.Enabled = False
                    gsCounty.Enabled = False
                    gsCopy.Enabled = False
                End If
            Catch
                gsTaxExempt.Enabled = True
                gsCity.Enabled = True
                gsState.Enabled = True
                gsZip.Enabled = True
                gsCountry.Enabled = True
                gsCounty.Enabled = True
                gsCopy.Enabled = True
            End Try
            tPO.Enabled = True
            pRR1.Enabled = True
            Me.rrAddRepReq.Enabled = True
            tStatus2.Enabled = True
        End If
    End Sub

    Private Sub cbFactoryInstallReq_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cbFactoryInstallReq.CheckedChanged
        If Me.ActiveControl Is cbFactoryInstallReq Then DVGen(0).Item("ord_gen_co_factoryinstall_req") = cbFactoryInstallReq.Checked
    End Sub

    Private Sub tOrd_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tOrd.Leave
        If onOrd <> tOrd.Text Then
            KeyValue1 = tOrd.Text
            UpdateModeLog("View")
            LoadPage()
        End If
    End Sub

    Private Sub tOrd_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles tOrd.Enter
        onOrd = tOrd.Text
        tOrd.SelectAll()
    End Sub

    Private Sub bWizard_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bWizard.Click
        If Grid1.ActiveRow Is Nothing Then Exit Sub
        If Mid(Tab1.ActiveTab.Key, 1, 1) <> "Q" Then
            MsgBox("Must be on a Quote", MsgBoxStyle.Information, "Quote?")
            Exit Sub
        End If
        If nz(Grid1.ActiveRow.Cells("ord_itm_item_code").Value) <> "INSTALL" Then
            MsgBox("You must be on an INSTALL line item", MsgBoxStyle.Information, "Install?")
            Exit Sub
        End If
        Dim fm As New fmWizard
        fm.Wizard = "Install"
        fm.Serial = nz(Grid1.ActiveRow.Cells("ord_itm_wizard_serial").Value, 0)
        fm.onForm = Me
        fm.ShowDialog()
    End Sub

    Private Sub tForecastPerc_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tForecastPerc.ValueChanged

    End Sub

    Private Sub tForecastPerc_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tForecastPerc.Leave
        If tForecastPerc.Text <> "" Then
            If Not IsNumeric(tForecastPerc.Text) Then
                MsgBox("Forecast Percent must be a number", MsgBoxStyle.Information, "Number?")
                tForecastPerc.Focus()
            Else
                tForecastPerc.Text = CStr(CInt(tForecastPerc.Text))
            End If
        End If
    End Sub

    Private Sub Grid1_BeforeCellUpdate(ByVal sender As Object, ByVal e As Infragistics.Win.UltraWinGrid.BeforeCellUpdateEventArgs) Handles Grid1.BeforeCellUpdate
        'If e.Cell.Column.Header.Caption = "Item Code" Then
        '    Dim cmd As New SqlCommand("select itm_serial from itm_file where itm_code='" + Grid1.ActiveRow.Cells("ord_itm_item_code").Text + "'", cnn)
        '    cnn.Open()
        '    If cmd.ExecuteScalar Is Nothing Then
        '        MsgBox("Part Not Found.", MsgBoxStyle.Exclamation, "Not Found")
        '        e.Cell.Value = ""
        '        e.Cell.Selected = True
        '        e.Cancel = True
        '    End If
        '    cnn.Close()
        'End If
    End Sub

    Private Sub bShipPromoAdd_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bShipPromoAdd.Click
        Dim fm As New fmCodes
        fm.SQLx = "select * from ship_promo"
        fm.Height = Me.Height * 0.95
        fm.Width = Me.Width * 0.8
        fm.ShowDialog()
        LoadDD2(tShipPromo, "ship_promo", "ship_promo_serial", "ship_promo")

    End Sub

    Private Sub tSalesCat_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles tSalesCat.InitializeLayout

    End Sub

    Private Sub tShipUnit_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tShipUnit.ValueChanged

    End Sub

    Private Sub MenuItem4_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem4.Click
        If Mid(Tab1.ActiveTab.Key, 1, 1) = "Q" Then
            DisplayReport("quote landscape", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_gen.ord_gen_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='Q'", True, 1, True)
        Else
            MsgBox("This option is for quotes only", MsgBoxStyle.Information, "Quotes")
        End If
    End Sub

    Private Sub gContacts_AfterRowActivate(ByVal sender As Object, ByVal e As System.EventArgs) Handles gContacts.AfterRowActivate
        If gContacts.ActiveRow.Cells("cont_type").Value = "Referral" Then
            pContact.Visible = False
        Else
            pContact.Visible = True
        End If
    End Sub
    Private Sub AddContact(ByVal Serial As Long)
        Dim rw As DataRow
        Dim cmd As New SqlCommand("select * from cont_file where cont_serial=" + CStr(Serial), cnn)
        Dim dr As SqlDataReader
        Dim cl As DataColumn
        Dim x As Integer

        For Each rw In dsCont.Tables(0).Rows
            If nz(rw("ord_cont_cont_serial"), 0) = Serial Then
                MsgBox("This contact is already on this order", MsgBoxStyle.Information, "Contact?")
                Exit Sub
            End If
        Next

        rw = dsCont.Tables(0).NewRow
        rw("ord_cont_cont_serial") = Serial
        rw("ord_cont_payee") = False
        rw("ord_cont_note") = ""

        cnn.Open()
        dr = cmd.ExecuteReader
        If dr.HasRows Then
            dr.Read()
            For x = 1 To dr.FieldCount - 1
                rw(dr.GetName(x)) = dr(x)
            Next
        End If
        dr.Close()
        cnn.Close()
        dsCont.Tables(0).Rows.Add(rw)
        Grid1.DataBind()

    End Sub
    Private Sub bAddArch_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bAddArch.Click
        FindContact("Architect")
    End Sub
    Private Sub bAddBuilder_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bAddBuilder.Click
        FindContact("Builder")
    End Sub
    Private Sub bAddInst_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bAddInst.Click
        FindContact("Installer")
    End Sub
    Private Sub bAddHVAC_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bAddHVAC.Click
        FindContact("HVAC")
    End Sub
    Private Sub bAddOther_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bAddOther.Click
        FindContact("Other")
    End Sub

    Private Sub CommitContactData(ByVal ct As Infragistics.Win.UltraWinEditors.UltraTextEditor, ByVal fld As String)
        If ct.IsInEditMode Then
            Dim rw As DataRow
            Dim cnt As Integer = 0
            For Each rw In dsCont.Tables(0).Rows
                If (nz(rw("cont_type")) = tContType.Text) And (nz(rw("cont_name")) = tContName.Text) Then Exit For
                cnt += 1
            Next
            dsCont.Tables(0).Rows(cnt).Item(fld) = ct.Text
        End If
    End Sub

    Private Sub tContPayee_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tContPayee.CheckedChanged
        If Me.ActiveControl Is tContPayee Then
            Try
                If tContPayee.Enabled Then
                    Dim rw As DataRow
                    Dim cnt As Integer = 0
                    For Each rw In dsCont.Tables(0).Rows
                        If (nz(rw("cont_type")) = tContType.Text) And (nz(rw("cont_name")) = tContName.Text) Then Exit For
                        cnt += 1
                    Next
                    If cnt < dsCont.Tables(0).Rows.Count Then dsCont.Tables(0).Rows(cnt).Item("ord_cont_payee") = tContPayee.Checked
                End If
                If Not gContacts.ActiveRow Is Nothing Then
                    If tContPayee.Checked And gContacts.ActiveRow.Cells("cont_type").Value <> "Referral" Then
                        gContacts.ActiveRow.Appearance.BackColor = Color.LightGreen
                    Else
                        gContacts.ActiveRow.Appearance.BackColor = Color.White
                    End If
                End If
            Catch
                DoError(Err, Me)
            End Try
        End If
    End Sub
    Private Sub tContNote_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tContNote.ValueChanged
        CommitContactData(tContNote, "ord_cont_note")
    End Sub

    Private Sub bContFind_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bContFind.Click
        FindContact("")
    End Sub
    Private Sub FindContact(ByVal Type As String)
        Dim fm As New fmContactFind
        fm.tType.Text = Type
        fm.ShowDialog()
        If fm.ContactSerial <> 0 Then
            AddContact(fm.ContactSerial)
        End If
        fm.Close()
    End Sub

    Private Sub gContacts_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles gContacts.InitializeLayout

    End Sub

    Private Sub Button2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        MainForm.StatusBar1.Text = "ALERT: Call Bob at 555-1111"
        MainForm.StatusBar1.BackColor = Color.Red
        MainForm.sMain.Text = "ALERT: Call home at 555-2222"
    End Sub

    Private Sub bUpSave_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bUpSave.Click
        SaveUpsell()
    End Sub

    Private Sub UpTree_AfterCheck(ByVal sender As Object, ByVal e As Infragistics.Win.UltraWinTree.NodeEventArgs) Handles UpTree.AfterCheck
        UpSellCheckboxesDirty = True
    End Sub

    Private Sub tAltShipPhone1_MaskChanged(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinMaskedEdit.MaskChangedEventArgs) Handles tAltShipPhone1.MaskChanged

    End Sub

    'Private Sub cbSignOff_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cbSignOff.CheckedChanged
    '    If Me.ActiveControl Is cbSignOff Then
    '        DVGen(0).Item("ord_gen_signoff") = cbSignOff.Checked
    '        If cbSignOff.Checked = True Then
    '            DVGen(0).Item("ord_gen_signoff_user") = User
    '            DVGen(0).Item("ord_gen_signoff_date") = Now
    '            tSignOffUser.Text = User
    '            tSignOffDate.Text = Now
    '        Else
    '            If cbAllClear.Checked Then
    '                MsgBox("Can not uncheck Write Up when All Clear is checked", MsgBoxStyle.Information, "Sign Off?")
    '                cbSignOff.Checked = True
    '                DVGen(0).Item("ord_gen_signoff") = True
    '            End If
    '        End If
    '    End If
    'End Sub

    'Private Sub cbWriteUp_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cbWriteUp.CheckedChanged
    '    If Me.ActiveControl Is cbWriteUp Then
    '        DVGen(0).Item("ord_gen_writeup") = cbWriteUp.Checked
    '        If cbWriteUp.Checked = True Then
    '            DVGen(0).Item("ord_gen_WriteUp_user") = User
    '            DVGen(0).Item("ord_gen_WriteUp_date") = Now
    '            tWriteUpUser.Text = User
    '            tWriteUpDate.Text = Now
    '        End If
    '    End If
    'End Sub

    'Private Sub cbAllClear_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cbAllClear.CheckedChanged
    '    If Me.ActiveControl Is cbAllClear Then
    '        DVGen(0).Item("ord_gen_allclear") = cbAllClear.Checked
    '        If cbAllClear.Checked = True Then
    '            DVGen(0).Item("ord_gen_AllClear_user") = User
    '            DVGen(0).Item("ord_gen_AllClear_date") = Now
    '            tAllClearUser.Text = User
    '            tAllClearDate.Text = Now
    '        Else
    '            If cbWriteUp.Checked Then
    '                MsgBox("Can not uncheck All Clear when Write Up is checked", MsgBoxStyle.Information, "Write Up?")
    '                cbAllClear.Checked = True
    '                DVGen(0).Item("ord_gen_allclear") = True
    '            End If
    '        End If
    '    End If
    'End Sub

    Private Sub cbAddon_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cbAddon.CheckedChanged
        If Me.ActiveControl Is cbAddon Then DVGen(0).Item("ord_gen_addon") = cbAddon.Checked
        Me.CheckActiveTabIcon()
    End Sub

    Private Sub tOrd_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles tOrd.KeyUp
        'If e.KeyChar = Chr(13) Then
        If e.KeyCode = Keys.Enter Then
            KeyValue1 = tOrd.Text
            onOrd = tOrd.Text
            UpdateModeLog("View")
            Application.DoEvents()
            LoadPage()
        End If
    End Sub

    Private Sub Button2_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs)
        gbOrder.Enabled = True
    End Sub

    Private Sub oShipToType_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles oShipToType.ValueChanged
        If Me.ActiveControl Is oShipToType Then
            DVGen(0)("ord_gen_shiptotype") = oShipToType.Value
        End If
    End Sub

    Private Sub tRefSpecialNote_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tRefSpecialNote.ValueChanged
        Try
            If tRefSpecialNote.Enabled Then
                Dim rw As DataRow
                Dim cnt As Integer = 0
                For Each rw In dsCont.Tables(0).Rows
                    If (nz(rw("cont_type")) = tContType.Text) And (nz(rw("cont_name")) = tContName.Text) Then Exit For
                    cnt += 1
                Next
                If cnt < dsCont.Tables(0).Rows.Count Then dsCont.Tables(0).Rows(cnt).Item("ord_cont_note") = tContNote.Text
            End If
        Catch
            DoError(Err, Me)
        End Try

    End Sub

    Private Sub cbThirdParty_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cbThirdParty.CheckedChanged
        If Me.ActiveControl Is cbThirdParty Then
            If cbThirdParty.Checked Then
                DVGen(0).Item("ord_gen_ship_thirdparty") = True
                'tSkids.Focus()
                'tSkids.SelectAll()
            Else
                DVGen(0).Item("ord_gen_ship_thirdparty") = False
                'tSkids.Text = "0"
                'DVGen(0).Item("ord_gen_bottles") = 0
            End If
            DoTotal()
        End If

    End Sub

    Private Sub tUpSellSqFt_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tUpSellSqFt.ValueChanged
        If Me.ActiveControl Is tUpSellSqFt Then
            DVGen(0).Item("ord_gen_upsell_sqft") = tUpSellSqFt.Value
        End If
    End Sub

    Private Sub tSalesCat_LocationChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles tSalesCat.LocationChanged

    End Sub

    Private Sub gsShipNotify_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles gsShipNotify.CheckedChanged
        If Me.ActiveControl Is gsShipNotify Then
            DVGen(0)("ord_gen_ship_notify") = gsShipNotify.Checked
        End If

    End Sub

    Private Sub fmEstOrd2_MouseUp(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles MyBase.MouseUp
        'Try
        '    If Not Me.GetChildAtPoint(New Point(e.X, e.Y)) Is Nothing Then
        '        KeyLog("[" + Me.GetChildAtPoint(New Point(e.X, e.Y)).Name + "]")
        '    End If
        'Catch
        '    DoError(Err, Me, "KeyLog Mouse Up")
        'End Try
    End Sub

    Private Sub Grid1_BeforeCellActivate(ByVal sender As Object, ByVal e As Infragistics.Win.UltraWinGrid.CancelableCellEventArgs) Handles Grid1.BeforeCellActivate
        'keylog("[Grid1:" + CStr(e.Cell.Row.Index) + ":" + e.Cell.Column.Header.Caption + "]")
    End Sub

    Private Sub bDocDDP_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bDocDDP.Click
        Dim fls As String = ""
        Dim itm As Object
        Dim onPath As String = tOrd.Text + " (" + tord_for.Text + ")\" + tOrd.Text + "-" + Mid(Me.Tab1.ActiveTab.Key, 2) + " (" + tord_for.Text + ") "

        bDocDDP.Enabled = False
        For Each itm In ListPDF.SelectedItems
            If InStr(UCase(itm), ".PDF") = 0 Then
                MsgBox("All items selected must be PDFs", MsgBoxStyle.Information, "PDF?")
                bDocDDP.Enabled = True
                Exit Sub
            End If
        Next

        For Each itm In ListPDF.SelectedItems
            If InStr(UCase(itm), UCase(onPath) + "QUOTE ") > 0 And InStr(UCase(itm), UCase(onPath) + "QUOTE - UPGRADE OPTIONS") = 0 Then fls += PDFPath + itm + "|"
        Next

        For Each itm In ListPDF.SelectedItems
            If InStr(UCase(itm), UCase(onPath) + "PLAN ") > 0 Then fls += PDFPath + itm + "|"
        Next
        For Each itm In ListPDF.SelectedItems
            If InStr(UCase(itm), UCase(onPath) + "ELE ") > 0 Then fls += PDFPath + itm + "|"
        Next
        For Each itm In ListPDF.SelectedItems
            If InStr(UCase(itm), UCase(onPath) + "3D COLOR") > 0 Then fls += PDFPath + itm + "|"
        Next
        For Each itm In ListPDF.SelectedItems
            If InStr(UCase(itm), UCase(onPath) + "KEY ") > 0 Then fls += PDFPath + itm + "|"
        Next
        For Each itm In ListPDF.SelectedItems
            If InStr(UCase(itm), UCase(onPath) + "NOTE ") > 0 Then fls += PDFPath + itm + "|"
        Next
        For Each itm In ListPDF.SelectedItems
            If InStr(UCase(itm), UCase(onPath) + "QUOTE - UPGRADE OPTIONS") + InStr(UCase(itm), UCase(onPath) + "QUOTE ") + InStr(UCase(itm), UCase(onPath) + "PLAN ") + InStr(UCase(itm), UCase(onPath) + "ELE ") + InStr(UCase(itm), UCase(onPath) + "KEY ") + InStr(UCase(itm), UCase(onPath) + "NOTE ") = 0 Then fls += PDFPath + itm + "|"
        Next
        For Each itm In ListPDF.SelectedItems
            If InStr(UCase(itm), UCase(onPath) + "QUOTE - UPGRADE OPTIONS") > 0 Then fls += PDFPath + itm + "|"
        Next

        If fls <> "" Then
            fls = "pdfcombiner.exe " + PDFPath + onPath + "DDP.pdf|" + Mid(fls, 1, Len(fls) - 1)
            Shell(fls, AppWinStyle.Hide, True, 120000)
            bDocDDP.Enabled = True
            LoadDocuments()
            If MsgBox("Combine-O-Mater is complete.  Would you like to open the file?", MsgBoxStyle.YesNo, "Open?") = MsgBoxResult.Yes Then
                Try
                    Dim hwnd As Long
                    Dim myProc As New Process
                    myProc.StartInfo.FileName = PDFPath + onPath + "DDP.pdf"
                    myProc.StartInfo.WindowStyle = ProcessWindowStyle.Normal
                    myProc.Start()
                Catch
                    MsgBox(Err.Description)
                End Try
            End If
        Else
            MsgBox("You must first pick the files to combine", MsgBoxStyle.Information, "Files?")
        End If
    End Sub

    Private Sub bCopyItems_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bCopyItems.Click
        Dim fm As New fmOrdCopyItems
        Dim tb As Infragistics.Win.UltraWinTabControl.UltraTab
        Dim alTB As New ArrayList
        Dim stTB As String

        fm.tOrd.Text = tOrd.Text
        For Each tb In Me.Tab1.Tabs
            If tb.Text <> "Contact" Then alTB.Add(Format(tb.VisibleIndex, "000") + "=" + tb.Text)
        Next

        alTB.Sort()

        For Each stTB In alTB
            fm.ListBox1.Items.Add(Split(stTB, "=")(1))
        Next

        fm.ShowDialog()

        If fm.tOrd.Text = "" Then Exit Sub

        Dim dr, dr2 As DataRow
        Dim tbl As New DataTable
        Dim col, col2 As DataColumn
        Dim onRev As Integer = 0
        Dim onType As String = Mid(Split(fm.ListBox1.SelectedItem, " ")(0), 1, 1)
        Dim rws As Infragistics.Win.UltraWinGrid.UltraGridRow
        Dim x As Integer
        Dim StainSerials As New ArrayList
        Dim StainSerial As Long

        If onType = "Q" Then
            onRev = CInt(Split(fm.ListBox1.SelectedItem, " ")(1))
        End If
        If onType = "O" Or onType = "R" Then
            onRev = CInt(Split(Split(fm.ListBox1.SelectedItem, " ")(1), "-")(1))
        End If

        For Each col In dsItems.Tables("ord_itm").Columns
            col2 = New DataColumn(col.ColumnName, col.DataType)
            tbl.Columns.Add(col2)
        Next

        For Each rws In Grid1.Rows
            If rws.Selected = True Or Grid1.Selected.Rows.Count = 0 Then
                rws.Cells("ord_itm_group_do").Value = True
            Else
                rws.Cells("ord_itm_group_do").Value = False
            End If
        Next

        'cnn.Open()
        For x = 0 To DVItems.Count - 1
            dr = DVItems(x).Row
            If dr("ord_itm_group_do") = True Then
                dr2 = tbl.NewRow
                dr2.ItemArray = dr.ItemArray
                dr2("ord_itm_rev") = onRev
                dr2("ord_itm_type") = onType
                dr2("ord_itm_group") = dr("ord_itm_group")
                dr2("ord_itm_bom_import") = False
                tbl.Rows.Add(dr2)

                If dr2("ord_itm_stain_serial") > 0 Then
                    If StainSerials.Contains(dr2("ord_itm_stain_serial")) = False Then StainSerials.Add(dr2("ord_itm_stain_serial"))
                End If
            End If
        Next
        'cnn.Close()

        For Each dr In tbl.Rows
            dr2 = dsItems.Tables("ord_itm").NewRow
            dr2.ItemArray = dr.ItemArray
            dsItems.Tables("ord_itm").Rows.Add(dr2)
        Next

        Tab1.Tabs(onType + CStr(onRev)).Selected = True

        For Each StainSerial In StainSerials
            Me.CheckStainLines(StainSerial)
        Next
        Me.CheckLacquerLines()
    End Sub

    Private Sub MenuItem5_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem5.Click
        If Mid(Tab1.ActiveTab.Key, 1, 1) = "Q" Then
            Dim fm As New fmOrdPrintRetailBase

            fm.fm = Me
            fm.Show()
            Application.DoEvents()
            fm.DoIt()
        Else
            MsgBox("This option is for quotes only", MsgBoxStyle.Information, "Quotes")
        End If

    End Sub

    'Private Sub bEditSignoff_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bEditSignoff.Click
    '    Try
    '        Select Case bEditSignoff.Text
    '            Case "Edit Signoff"
    '                cbSignOff.Enabled = True
    '                cbWriteUp.Enabled = True
    '                cbAllClear.Enabled = True
    '                tSignOffDate.Enabled = True
    '                tSignOffNote.Enabled = True
    '                bEditSignoff.Text = "Save Signoff"
    '            Case "Save Signoff"
    '                cbSignOff.Enabled = False
    '                cbWriteUp.Enabled = False
    '                cbAllClear.Enabled = False
    '                tSignOffDate.Enabled = False
    '                tSignOffNote.Enabled = False
    '                bEditSignoff.Text = "Edit Signoff"

    '                Dim cmd As New SqlCommand("", cnn)
    '                cmd.CommandText = "update ord_gen set ord_gen_signoff=" + IIf(cbSignOff.Checked, "1", "0") + ",ord_gen_signoff_user='" + tSignOffUser.Text + "'"
    '                If IsDate(tSignOffDate.Text) Then cmd.CommandText += ",ord_gen_signoff_date='" + CStr(tSignOffDate.Value) + "'"
    '                cmd.CommandText += ",ord_gen_writeup=" + IIf(cbWriteUp.Checked, "1", "0")
    '                cmd.CommandText += ",ord_gen_writeup_user='" + tWriteUpUser.Text + "'"
    '                If IsDate(tWriteUpDate.Text) Then cmd.CommandText += ",ord_gen_writeup_date='" + tWriteUpDate.Text + "'"
    '                cmd.CommandText += ",ord_gen_allclear=" + IIf(cbAllClear.Checked, "1", "0")
    '                cmd.CommandText += ",ord_gen_allclear_user='" + tAllClearUser.Text + "'"
    '                If IsDate(tAllClearDate.Text) Then cmd.CommandText += ",ord_gen_allclear_date='" + tAllClearDate.Text + "'"
    '                cmd.CommandText += ",ord_gen_signoff_note='" + Replace(tSignOffNote.Text, "'", "''") + "'"
    '                cmd.CommandText += " where ord_gen_ord_serial=" + tOrd.Text + " and ord_gen_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " and ord_gen_type='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "'"
    '                cnn.Open()
    '                cmd.ExecuteNonQuery()
    '                cnn.Close()
    '        End Select
    '    Catch
    '        DoError(Err, Me)
    '    End Try

    'End Sub

    Private Sub bAddOrdMod_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bAddOrdMod.Click
        Try
            If bAddOrdMod.Text = "Add Order Modification" Then
                If EditMode <> "" Then
                    MsgBox("You may not be in edit mode when adding a note.", MsgBoxStyle.Information, "Edit Mode")
                    Exit Sub
                End If
                bAddOrdMod.Text = "Save"
                tNote.Visible = True
                bAddNote.Visible = False
            Else
                Dim cmd As New SqlCommand("insert into ord_note (ord_note_ord_gen_serial,ord_note,ord_note_user,ord_note_date,ord_note_type) values (" + CStr(DVGen(0).Item("ord_gen_serial")) + ",'" + Replace(tNote.Text, "'", "''") + "','" + User + "','" + CStr(Now()) + "','OrdMod')", cnn)
                cnn.Open()
                cmd.ExecuteNonQuery()
                cnn.Close()
                tNote.Visible = False
                bAddNote.Visible = True
                bAddOrdMod.Text = "Add Order Modification"
                LoadNotes()
                Tab1.ActiveTab.Appearance.ForeColor = Color.IndianRed
                Tab1.ActiveTab.Appearance.FontData.Bold = Infragistics.Win.DefaultableBoolean.True
                Tab1.ActiveTab.Appearance.BackColor = Color.Yellow

                Dim Order As String = CStr(DVGen(0).Item("ord_gen_ord_serial")) + "-" + CStr(DVGen(0).Item("ord_gen_from_rev")) + "-" + CStr(DVGen(0).Item("ord_gen_rev"))
                Jcom.AddToDo("OrdMod", "trishas", "(" + tord_for.Text + ") " + tNote.Text, CStr(DVGen(0).Item("ord_gen_ord_serial")), CStr(DVGen(0).Item("ord_gen_rev")), "O", , Order, "Order", , , True)
                'Jcom.AddToDo("OrdMod", "melissab", "(" + tord_for.Text + ") " + tNote.Text, CStr(DVGen(0).Item("ord_gen_ord_serial")), CStr(DVGen(0).Item("ord_gen_rev")), "O", , Order, "Order", , , True)

                tNote.Text = ""
            End If
        Catch
            DoError(Err, Me)
        End Try

    End Sub

    Private Sub bShipNotify_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bShipNotify.Click
        If EditMode <> "" Then
            MsgBox("You may not be in edit mode when adding a shipping notification.", MsgBoxStyle.Information, "Edit Mode")
            Exit Sub
        End If
        Dim fm As New fmOrdShippingNotification
        'Dim cmd As New SqlCommand("select top 1 * from ord_note where ord_note_ord_gen_serial=" + CStr(DVGen(0).Item("ord_gen_serial")) + " and ord_note_type='ShipNo' order by ord_note_serial desc", cnn)
        'Dim dr As SqlDataReader

        'cnn.Open()
        'dr = cmd.ExecuteReader
        'If dr.HasRows Then
        '    dr.Read()
        '    fm.tNote.Text = nz(dr("ord_note"))
        '    fm.cbShippingRelease.Checked = dr("ord_note_ship_release")
        '    fm.cbShippingAddrChange.Checked = dr("ord_note_ship_change")
        '    fm.tPayMethod.Text = nz(dr("ord_note_pay_method"))
        '    fm.cbShippingHold.Checked = dr("ord_note_ship_hold")
        '    fm.tAdminNotes.Text = nz(dr("ord_note_admin"))
        'End If
        'dr.Close()
        'cnn.Close()

        fm.fmEstOrd = Me
        fm.ShowDialog()
    End Sub

    Private Sub cbAddOnNoEmail_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cbAddOnNoEmail.CheckedChanged
        If Me.ActiveControl Is cbAddOnNoEmail Then DVGen(0).Item("ord_gen_addon_noemail") = cbAddOnNoEmail.Checked
    End Sub

    Private Sub ddDesignStatus_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddDesignStatus.Enter
        onControl = "ddDesignStatus"
        onDesStatus = ddDesignStatus.Text
    End Sub

    Private Sub ddDesignStatus_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles ddDesignStatus.InitializeLayout

    End Sub

    Private Sub GridNotes_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs)

    End Sub

    Private Sub GridNotes_ClickCellButton(ByVal sender As Object, ByVal e As Infragistics.Win.UltraWinGrid.CellEventArgs)
        If EditMode <> "" Then
            MsgBox("You may not be in edit mode when adding a shipping notification.", MsgBoxStyle.Information, "Edit Mode")
            Exit Sub
        End If
        Dim fm As New fmOrdShippingNotification
        Dim cmd As New SqlCommand("select * from ord_note where ord_note_serial=" + CStr(GridNotes.ActiveRow.Cells("ord_note_serial").Value), cnn)
        Dim dr As SqlDataReader

        cnn.Open()
        dr = cmd.ExecuteReader
        If dr.HasRows Then
            dr.Read()
            fm.tNote.Text = nz(dr("ord_note"))
            fm.cbShippingRelease.Checked = dr("ord_note_ship_release")
            fm.cbShippingAddrChange.Checked = dr("ord_note_ship_change")
            fm.tPayMethod.Text = nz(dr("ord_note_pay_method"))
            fm.cbShippingHold.Checked = dr("ord_note_ship_hold")
            fm.tAdminNotes.Text = nz(dr("ord_note_admin"))
        End If
        dr.Close()
        cnn.Close()

        fm.fmEstOrd = Me
        fm.tNote.Enabled = False
        fm.tAdminNotes.Enabled = True
        fm.OrdNoteSerial = GridNotes.ActiveRow.Cells("ord_note_serial").Value
        fm.ShowDialog()
        LoadNotes()
    End Sub

    Private Sub MenuItem7_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem7.Click
        If Mid(Tab1.ActiveTab.Key, 1, 1) = "Q" Then
            Dim fm As New fmOrdPrintRetailBase

            fm.fm = Me
            fm.Show()
            Application.DoEvents()
            fm.DoIWA()
            TabItems.Tabs("Drawings").Selected = True
        Else
            MsgBox("This option is for quotes only", MsgBoxStyle.Information, "Quotes")
        End If
    End Sub

    Private Sub MenuItem12_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem12.Click
        If UserGroup <> "Admins" Then
            MsgBox("Only Admins have access to this function", MsgBoxStyle.Information, "Amdin?")
            Exit Sub
        End If
        If Mid(Me.Tab1.ActiveTab.Key, 1, 1) <> "O" Then
            MsgBox("You must first be on an Order to use this function.", MsgBoxStyle.Information, "Order?")
            Exit Sub
        End If
        If Me.EditMode = "Edit" Or Me.EditMode = "Add" Then
            MsgBox("You must not be in edit mode to use this function.", MsgBoxStyle.Information, "Edit?")
            Exit Sub
        End If
        Dim fm As New fmOrdUpdateInstaller
        fm.OrdGenSerial = DVGen(0).Item("ord_gen_serial")
        fm.tInstaller.Value = tInstaller.Value
        fm.tInstallerDate.Text = tInstallerDate.Text
        fm.tNotes.Text = Me.tInstallNotes.Text
        fm.ShowDialog()
        Dim key As String = Tab1.ActiveTab.Key
        QuietMode = True
        Cancel()
        QuietMode = False
        Tab1.Tabs(key).Selected = True
    End Sub

    Private Sub ddThirdPartyFill_BeforeDropDown(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles ddThirdPartyFill.BeforeDropDown
        LoadDD2(ddThirdPartyFill, "cust_ship", "cust_ship_name", "cust_ship_name", "cust_ship_name,cust_ship_via,cust_ship_acct,cust_ship_default", "cust_ship_cust_serial=" + CStr(tCustId.Value))
    End Sub


    Private Sub ddThirdPartyFill_ValueChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddThirdPartyFill.ValueChanged
        If Me.ActiveControl.Parent Is ddThirdPartyFill Then
            If Not Me.ddThirdPartyFill.SelectedRow Is Nothing Then
                Me.tThirdPartyName.Text = Me.ddThirdPartyFill.SelectedRow.Cells("cust_ship_name").Text
                Me.tThirdPartyShipVia.Value = Me.ddThirdPartyFill.SelectedRow.Cells("cust_ship_via").Text
                Me.tThirdPartyAcct.Text = Me.ddThirdPartyFill.SelectedRow.Cells("cust_ship_acct").Text
                Me.tThirdPartyName.Focus()
                Me.ddThirdPartyFill.Value = DBNull.Value
            End If
        End If
    End Sub

    Private Sub rrAddRepReq_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles rrAddRepReq.LinkClicked
        Dim drNew As DataRow
        'Dim onSerial As Long

        If pRepReq.Controls.Count = 0 Then
            onRepReq = 1
        Else
            onRepReq = (CLng(pRepReq.Controls(pRepReq.Controls.Count - 1).Text) + 1)
        End If

        drNew = dsRepReq.Tables("ord_rep_req").NewRow

        drNew("ord_rep_req_serial") = onRepReq * -1
        drNew("ord_rep_ord_rev") = CInt(Mid(Tab1.ActiveTab.Key, 2))
        drNew("ord_rep_req_rev") = onRepReq
        drNew("ord_rep_req_name") = Me.gsName.Text
        drNew("ord_rep_req_company") = Me.gsCompany.Text
        drNew("ord_rep_req_country") = Me.gsCountry.Text
        drNew("ord_rep_req_addr1") = Me.gsAddr1.Text
        drNew("ord_rep_req_addr2") = Me.gsAddr2.Text
        drNew("ord_rep_req_addr3") = Me.gsAddr3.Text
        drNew("ord_rep_req_city") = Me.gsCity.Text
        drNew("ord_rep_req_state") = Me.gsState.Text
        drNew("ord_rep_req_zip") = Me.gsZip.Text
        drNew("ord_rep_req_county") = Me.gsCounty.Text
        drNew("ord_rep_req_province") = Me.gsProvince.Text
        drNew("ord_rep_req_phone2") = Me.gsPhone2.Text
        drNew("ord_rep_req_fax") = Me.gsFax.Text
        drNew("ord_rep_req_email") = Me.gsEmail.Text

        dsRepReq.Tables("ord_rep_req").Rows.Add(drNew)

        'onRepReq = onSerial * -1
        LoadRepReq()
    End Sub

    Private Sub rrPhone2_MaskChanged(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinMaskedEdit.MaskChangedEventArgs) Handles rrPhone2.MaskChanged

    End Sub

    Private Sub bEmailInstallNote_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bEmailInstallNote.Click
        Dim ol As New Outlook.Application
        Dim mess As Outlook.MailItem
        Dim cmd As New SqlCommand("", cnn)
        Dim emailTo As String

        mess = ol.CreateItem(Outlook.OlItemType.olMailItem)

        cnn.Open()
        cmd.CommandText = "select rep_email from rep_file where rep_code='" + Me.tInside.Value + "'"
        emailTo = nz(cmd.ExecuteScalar)
        If emailTo <> "" Then
            mess.Recipients.Add(emailTo)
        End If
        cmd.CommandText = "select rep_email from rep_file where rep_code='" + Me.tOutside.Value + "'"
        emailTo = nz(cmd.ExecuteScalar)
        If emailTo <> "" Then
            mess.Recipients.Add(emailTo)
        End If
        cnn.Close()

        mess.Subject = "Install notes for " + tOrd.Text + Mid(Tab1.ActiveTab.Text, 7) + " " + tord_for.Text
        mess.Body = Me.tInstallNotes.Text
        mess.Display()

    End Sub

    Private Sub tpMustShip_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tpMustShip.Leave
        Dim rw As DataRow = DVOrdProd(0).Row
        If rw.HasVersion(DataRowVersion.Original) Then
            If nz(rw("ord_prod_must_ship", DataRowVersion.Original), CDate("1/1/1900")) <> nz(tpMustShip.Value, CDate("1/1/1900")) Then
                tpMustship_By.Text = User
                DVOrdProd(0).Item("ord_prod_must_ship_by") = User
            End If
        Else
            If tpMustShip.Value > CDate("1/1/1900") Then
                tpMustship_By.Text = User
                DVOrdProd(0).Item("ord_prod_must_ship_by") = User
            End If
        End If
    End Sub

    Private Sub tpMustShip_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tpMustShip.ValueChanged
        'If Me.ActiveControl Is tpMustShip Then DVOrdProd(0).Item("ord_prod_must_ship") = tpMustShip.Value
    End Sub

    Private Sub tInstallerDate_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)

    End Sub

    Private Sub tpMustShipNote_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tpMustShipNote.ValueChanged
        'If Me.ActiveControl Is tpMustShipNote Then
        '    DVOrdProd(0)("ord_prod_must_ship_note") = tpMustShipNote.Text
        'End If
    End Sub

    Private Sub MenuItem15_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem15.Click
        Me.ShowCustDiscounts()
    End Sub

    Private Sub tpSignStain_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tpSignStain.SelectedIndexChanged
        If Me.ActiveControl Is tpSignStain Then
            DVOrdProd(0)("ord_prod_sign_stain") = tpSignStain.Text
        End If
    End Sub

    Private Sub bCopyInstall_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bCopyInstall.Click
        Dim fm As New fmOrdCopyInstall
        Dim cb As CheckBox
        Dim tb As Infragistics.Win.UltraWinTabControl.UltraTab
        Dim x As Integer = 0
        Dim dr As DataRow

        For Each tb In Tab1.Tabs
            If Mid(tb.Key, 1, 1) = "O" Then
                If Mid(tb.Key, 2) <> Mid(Tab1.ActiveTab.Key, 2) Then
                    cb = New CheckBox
                    cb.Name = "cb" + Mid(tb.Key, 2)
                    cb.Text = "Rev " + Mid(tb.Key, 2) + " (" + tb.ToolTipText + ")"
                    cb.Top = 14 * x
                    cb.Left = 10
                    cb.Width = 200
                    cb.Checked = True
                    fm.Panel1.Controls.Add(cb)
                    x += 1
                End If
            End If
        Next
        If x = 0 Then
            MsgBox("No other orders exist.", MsgBoxStyle.Information, "Orders?")
        Else
            fm.ShowDialog()
        End If

        x = 0
        For Each cb In fm.Panel1.Controls
            If cb.Checked Then
                For Each dr In dsGen.Tables(0).Rows
                    If dr("ord_gen_rev") = CInt(Mid(cb.Name, 3)) And dr("ord_gen_type") = "O" Then
                        dr("ord_gen_install_dt") = Me.tInstallerDate.Text
                        dr("ord_gen_installer") = Me.tInstaller.Value
                        dr("ord_gen_install_note") = Me.tInstallNotes.Text
                        x += 1
                    End If
                Next
            End If
        Next
        If x > 0 Then MsgBox("Copied to " + CStr(x) + " Revs.", MsgBoxStyle.Information, "Complete")
        fm = Nothing
    End Sub
    Private Sub tShipPromo_ValueChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles tShipPromo.ValueChanged
        If Me.ActiveControl Is Nothing Then Exit Sub
        If Me.ActiveControl.Parent Is Nothing Then Exit Sub
        If Me.ActiveControl.Parent Is tShipPromo Then
            DVGen(0).Item("ord_gen_ship_promo_serial") = Me.tShipPromo.Value
        End If
    End Sub

    Private Sub UltraButton7_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles UltraButton7.Click
        If UltraButton7.Text = "V" Then
            tpEstCompNote.Multiline = True
            tpEstCompNote.BringToFront()
            tpEstCompNote.Height = 500
            UltraButton7.Text = "^"
        Else
            tpEstCompNote.Multiline = False
            tpEstCompNote.Height = 20
            UltraButton7.Text = "V"
        End If
    End Sub

    Private Sub UltraButton10_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles UltraButton10.Click
        If UltraButton10.Text = "V" Then
            tpArtNote.Multiline = True
            tpArtNote.BringToFront()
            tpArtNote.Height = 500
            UltraButton10.Text = "^"
        Else
            tpArtNote.Multiline = False
            tpArtNote.Height = 20
            UltraButton10.Text = "V"
        End If
    End Sub

    Private Sub UltraButton11_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles UltraButton11.Click
        If UltraButton11.Text = "V" Then
            tpCommittedNote.Multiline = True
            tpCommittedNote.BringToFront()
            tpCommittedNote.Height = 500
            UltraButton11.Text = "^"
        Else
            tpCommittedNote.Multiline = False
            tpCommittedNote.Height = 20
            UltraButton11.Text = "V"
        End If
    End Sub

    Private Sub UltraButton12_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles UltraButton12.Click
        If UltraButton12.Text = "V" Then
            tpMustShipNote.Multiline = True
            tpMustShipNote.BringToFront()
            tpMustShipNote.Height = 500
            UltraButton12.Text = "^"
        Else
            tpMustShipNote.Multiline = False
            tpMustShipNote.Height = 20
            UltraButton12.Text = "V"
        End If
    End Sub

    Private Sub tDefFinish_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles tDefFinish.Enter
        onFinish = tDefFinish.Value
    End Sub

    Private Sub tDefFinish_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles tDefFinish.InitializeLayout

    End Sub

    Private Sub tDefFinish_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tDefFinish.Leave
        If onFinish <> tDefFinish.Value And DVItems.Count > 0 Then
            If Grid1.Rows.Count = 0 Then Exit Sub
            Dim rw As Infragistics.Win.UltraWinGrid.UltraGridRow

            For Each rw In Grid1.Rows
                If rw.Selected = True Or Grid1.Selected.Rows.Count <= 1 Then
                    If rw.Cells("ord_itm_stain_bottles").Value + nz(rw.Cells("ord_itm_stain_bottles_add").Value, 0) > 0 Then
                        rw.Cells("ord_itm_finish_serial").Value = tDefFinish.Value
                    End If
                End If
            Next

            BindingContext(DVItems).EndCurrentEdit()
            UltraCalcManager1.DirtyAllFormulas()
            Grid1.DataBind()
            CheckFinishLines(tDefFinish.Value)
        End If
    End Sub

    Private Sub MenuItem18_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem18.Click
        Select Case Mid(Tab1.ActiveTab.Key, 1, 1)
            Case "Q", "O", "R"
                DisplayReport("quote landscape weights and dims", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_itm.ord_itm_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "'", True, 1, True)
            Case Else
                MsgBox("Please select a Quote, Order or Replacement first", MsgBoxStyle.Information, "Pick One")
        End Select

    End Sub

    Private Sub UltraButton13_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles UltraButton13.Click
        Dim gr As Infragistics.Win.UltraWinGrid.UltraGridRow
        Dim track As String
        Dim data As String
        Dim rt As String
        Dim ErrMsg As String = ""
        Dim fStatus, fDate, fTime, fSign As String
        Dim cmd As New SqlCommand("", cnn)

        Try
            UltraButton13.Enabled = False
            cnn.Open()
            For Each gr In ShipGrid.Rows
                If gr.Cells("ship_via").Value = "FEDEX2DY" Or gr.Cells("ship_via").Value = "FEDEX3" Or gr.Cells("ship_via").Value = "FEDEXFRT" Or gr.Cells("ship_via").Value = "FEDEXGRND" Or gr.Cells("ship_via").Value = "FEDEXH" Or gr.Cells("ship_via").Value = "FEDEXHOME" Or gr.Cells("ship_via").Value = "FEDEXPO" Or gr.Cells("ship_via").Value = "FEDEXSO" Then
                    'data = "0," + QT + "403" + QT + "498," + QT + "261146" + QT

                    track = gr.Cells("ship_track").Value
                    If track <> "" Then

                        Dim request As WineCellar.TrackingServiceWebReference.TrackRequest = CreateTrackRequest(track)
                        '
                        Dim service As WineCellar.TrackingServiceWebReference.TrackService = New WineCellar.TrackingServiceWebReference.TrackService() ' Initialize the service
                        '
                        Try
                            ' Call the web service passing in a TrackRequest and returning a TrackReply
                            Dim reply As WineCellar.TrackingServiceWebReference.TrackReply = service.track(request)
                            If ((Not reply.HighestSeverity = WineCellar.TrackingServiceWebReference.NotificationSeverityType.ERROR) And (Not reply.HighestSeverity = WineCellar.TrackingServiceWebReference.NotificationSeverityType.FAILURE)) Then 'check if the call was successful
                                If reply.TrackDetails.Count > 0 Then
                                    cmd.CommandText = "update ship_file set ship_status='" + Mid(nz(reply.TrackDetails(0).StatusDescription), 1, 50) + "',ship_status_date='" + CStr(reply.TrackDetails(0).ActualDeliveryTimestamp) + "',ship_status_signature='" + Mid(nz(reply.TrackDetails(0).DeliverySignatureName, "(Not Signed)"), 1, 50) + "' where ship_serial=" + CStr(gr.Cells("ship_serial").Value)
                                    cmd.ExecuteNonQuery()
                                End If
                                'ShowReply(reply)
                            Else
                                For Each notification As WineCellar.TrackingServiceWebReference.Notification In reply.Notifications
                                    MsgBox(notification.Message)
                                Next
                            End If
                        Catch
                            MsgBox(Err.Description)
                        End Try




                        'data += "1537," + QT + track + QT + "99," + QT + QT
                        'rt = ShipFedEx(data)

                        'Dim fe As New FedExData(rt)

                        'If fe.GetData("3") <> "" Then
                        '    ErrMsg += "FedEx Error: " + fe.GetData("3")
                        '    'Exit Sub
                        'Else
                        '    fStatus = Mid(fe.GetData("1159-1-1"), 1, 50)
                        '    fDate = fe.GetData("1162-1-1")
                        '    fTime = fe.GetData("1163-1-1")
                        '    fSign = Mid(fe.GetData("1706-1"), 1, 50)

                        '    fDate = Mid(fDate, 5, 2) + "/" + Mid(fDate, 7, 2) + "/" + Mid(fDate, 1, 4)
                        '    fTime = Mid(fTime, 1, 2) + ":" + Mid(fTime, 3, 2)

                        '    If IsDate(fDate + " " + fTime) Then
                        '        cmd.CommandText = "update ship_file set ship_status='" + fStatus + "',ship_status_date='" + fDate + " " + fTime + "',ship_status_signature='" + fSign + "' where ship_serial=" + CStr(gr.Cells("ship_serial").Value)
                        '        cmd.ExecuteNonQuery()

                        '        gr.Cells("ship_status").Value = fStatus
                        '        gr.Cells("ship_status_date").Value = CDate(fDate + " " + fTime)
                        '        gr.Cells("ship_status_signature").Value = fSign
                        '        ShipGrid.Refresh()
                        '    End If
                        'End If
                    End If
                End If
            Next
            cnn.Close()
            If ErrMsg <> "" Then MsgBox(ErrMsg, MsgBoxStyle.Information, "Errors")
        Catch
            DoError(Err, Me)
        End Try
        Me.LoadShipments()
        UltraButton13.Enabled = True
    End Sub

    Private Sub tPropStage_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tPropStage.ValueChanged

    End Sub

    Private Sub tPropStage_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tPropStage.Leave
        If tPropStage.Text = "" Or IsDate(tPropStage.Text) Then Exit Sub
        MsgBox("Proposed Stage Date must be a Date", MsgBoxStyle.Information, "Date?")
        tPropStage.Focus()
    End Sub

    Private Sub bImportBOMLookup_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bImportBOMLookup.Click
        Try
            Dim br As New OpenFileDialog

            br.Multiselect = True
            br.InitialDirectory = GetSetting("Jcom", "Settings", "ImportBrowse", "C:\")
            If br.ShowDialog = DialogResult.OK Then
                SaveSetting("Jcom", "Settings", "ImportBrowse", IO.Path.GetDirectoryName(br.FileName))
                bImportBOMLookup.Enabled = False
                ImportBOM(br.FileNames)
            End If
        Catch
            DoError(Err, Me)
        Finally
            bImportBOMLookup.Enabled = True
            UpdatingLacq = False
        End Try

    End Sub

    Private Sub tCustId_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles tCustId.KeyPress
        tCustId.PerformAction(Infragistics.Win.UltraWinGrid.UltraComboAction.Dropdown)
    End Sub

    Private Sub fmEstOrd2_Resize(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Resize
        'Tab1.Width = Me.Size.Width - 18
        'Tab1.Height = Me.Size.Height - 101
        'Me.Refresh()
    End Sub

    Private Sub MenuItem19_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem19.Click
        Dim fm As New fmOrdWeb

        fm.fmOrd = Me
        fm.ShowDialog()
    End Sub

    Private Sub gEmails_AfterRowActivate(ByVal sender As Object, ByVal e As System.EventArgs) Handles gEmails.AfterRowActivate
        'Dim cmd As New SqlCommand("select es_email from emails_sent where es_serial=" + CStr(gEmails.ActiveRow.Cells(0).Value), cnn)
        'cnn.Open()
        'tEmailBody.Text = cmd.ExecuteScalar
        'cnn.Close()

        tEmailBody.DocumentText = gEmails.ActiveRow.Cells("es_email").Value
        bResendEmail.Visible = True

    End Sub

    Private Sub gEmails_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles gEmails.InitializeLayout

    End Sub

    Private Sub tabNotes_SelectedTabChanged(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinTabControl.SelectedTabChangedEventArgs) Handles tabNotes.SelectedTabChanged
        If tabNotes.ActiveTab.Key = "Emails" Then
            LoadEmailsSent()
        End If
    End Sub
    Private Sub LoadEmailsSent()
        Dim cmd As New SqlCommand("", cnn)
        Dim dt As New DataTable
        Dim da As New SqlDataAdapter(cmd)

        cmd.CommandText = "select * from emails_sent where es_ord_serial=" + tOrd.Text + " and es_ord_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " and es_ord_type='O' order by es_date desc"
        da.Fill(dt)

        gEmails.DataSource = dt
        gEmails.DataBind()

        If dt.Rows.Count = 0 Then
            bResendEmail.Visible = False
            tEmailBody.DocumentText = ""
        End If

    End Sub

    Private Sub bResendEmail_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bResendEmail.Click
        Dim ol As New Outlook.Application
        Dim mess As Outlook.MailItem
        mess = ol.CreateItem(Outlook.OlItemType.olMailItem)

        mess.To = gEmails.ActiveRow.Cells("es_to").Value
        mess.Subject = ""
        mess.HTMLBody = gEmails.ActiveRow.Cells("es_email").Value
        mess.Display()

        ol = Nothing
    End Sub

    Private Sub Label3_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Label3.Click
        Dim cmd As New SqlCommand("select cust_special_notes from cust_file where cust_id='" + tSoldCustId.Text + "'", cnn)

        cnn.Open()
        If tSpecialNotes.Text <> "" Then
            tSpecialNotes.Text += vbCrLf
        End If
        tSpecialNotes.Text += nz(cmd.ExecuteScalar, "")
        cnn.Close()
    End Sub

    Private Sub Button2_Click_2(ByVal sender As System.Object, ByVal e As System.EventArgs)
        DoTotal()
    End Sub



    Private Sub tpEstComp_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tpEstComp.Leave
        If CheckEstCompDate(tpEstComp.Value) Then
            Dim rw As DataRow = DVOrdProd(0).Row
            Dim DoIt As Boolean = False
            If rw.HasVersion(DataRowVersion.Original) Then
                If nz(rw("ord_prod_est_comp", DataRowVersion.Original), CDate("1/1/1900")) <> tpEstComp.Value Then
                    DoIt = True
                End If
            Else
                If tpEstComp.Value > CDate("1/1/1900") Then
                    DoIt = True
                End If
            End If

            If Mid(Tab1.ActiveTab.Key, 1, 1) = "O" Then
                Dim cmd As New SqlCommand("", cnn)
                Dim da As New SqlDataAdapter(cmd)
                cnn.Open()
                cmd.CommandText = "Select ord_prod_est_comp from ord_prod where ord_prod_ord_serial =" + tOrd.Value.ToString + " and ord_prod_rev = " + Mid(Tab1.ActiveTab.Key, 2).ToString + " and ord_prod_type='O'"
                Dim x = nz(cmd.ExecuteScalar, CDate("1/1/1900"))
                If CDate(tpEstComp.Value) <> x And CDate(tpEstComp.Value) >= Today Then
                    cmd.CommandText = "update ord_prod set ord_prod_estship_emailsent_complete=0 where ord_prod_ord_serial =" + tOrd.Value.ToString + " and ord_prod_rev = " + Mid(Tab1.ActiveTab.Key, 2).ToString + " and ord_prod_type='O'"
                    cmd.ExecuteNonQuery()
                End If
                cnn.Close()
            End If



            If DoIt Then
                tpEstComp_By.Text = User
                DVOrdProd(0).Item("ord_prod_est_comp_by") = User

                Dim x As Integer
                Dim HasKit As Boolean = False
                Dim HasCust As Boolean = False
                For x = 0 To DVItems.Count - 1
                    If DVItems(x).Item("ord_itm_prod_type") = "KIT" Or DVItems(x).Item("ord_itm_prod_type") = "DESKIT" Then HasKit = True
                    If DVItems(x).Item("ord_itm_prod_type") = "TOP" Or DVItems(x).Item("ord_itm_prod_type") = "BUD" Or DVItems(x).Item("ord_itm_prod_type") = "GOLD" Then HasCust = True
                Next

                If HasKit And HasCust Then
                    Dim onNote As String = DVOrdProd(0).Item("ord_prod_est_comp_note")
                    Dim onDate As Date = DateAdd(DateInterval.Day, 2, tpEstComp.Value)

                    If Weekday(onDate) = 6 Or Weekday(onDate) = 7 Or Weekday(onDate) = 1 Then onDate = DateAdd(DateInterval.Day, 3, onDate)

                    If InStr(onNote, "May not ship until ") > 0 Then
                        onNote = Split(onNote, "May not ship until ")(0) + Mid(Split(onNote, "May not ship until ")(1), InStr(Split(onNote, "May not ship until ")(1) + " ", " ") + 1)
                    End If
                    onNote = "May not ship until " + CStr(onDate) + ". " + onNote
                    tpEstCompNote.Text = onNote
                    DVOrdProd(0).Item("ord_prod_est_comp_note") = onNote
                End If
            End If
        End If
    End Sub
    Private Function CheckEstCompDate(ByVal CheckDate As Date) As Boolean
        Dim gr As Infragistics.Win.UltraWinGrid.UltraGridRow
        Dim HasCustom As Boolean = False

        CheckEstCompDate = True
        For Each gr In Grid1.Rows
            If gr.Cells("ord_itm_prod_type").Value = "TOP" Or gr.Cells("ord_itm_prod_type").Value = "BUD" Or gr.Cells("ord_itm_prod_type").Value = "GOLD" Or gr.Cells("ord_itm_prod_type").Value = "ARCH" Then
                HasCustom = True
                Exit For
            End If
        Next
        If HasCustom = False Then Exit Function

        Dim rw As DataRow = DVOrdProd(0).Row
        If rw.HasVersion(DataRowVersion.Original) Then
            If nz(rw("ord_prod_est_comp", DataRowVersion.Original), CDate("1/1/1900")) = CheckDate Then Exit Function
        End If
        If Weekday(CheckDate) = 7 Then
            MsgBox("This date can not be on a Saturday", MsgBoxStyle.Information, "Date?")
            tpEstComp.Focus()
            CheckEstCompDate = False
            Exit Function
        End If
        If Weekday(CheckDate) = 1 Then
            MsgBox("This date can not be on a Sunday", MsgBoxStyle.Information, "Date?")
            tpEstComp.Focus()
            CheckEstCompDate = False
            Exit Function
        End If

        Dim onDate As Date = DateAdd(DateInterval.Day, 6 - Weekday(CheckDate), CheckDate)
        Dim cmd As New SqlCommand("select prod_lock_checked from prod_lock where prod_lock_date='" + CStr(onDate) + "'", cnn)
        cnn.Open()
        If nz(cmd.ExecuteScalar, False) = True Then
            MsgBox("This date is in a Locked Week.  Please select a different date or have a Production Supervisor open this week.", MsgBoxStyle.Information, "Date?")
            tpEstComp.Focus()
            CheckEstCompDate = False
        End If
        cnn.Close()
    End Function

    Private Sub tpSignOffSent_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tpSignOffSent.CheckedChanged
        If Me.ActiveControl Is Nothing Then Exit Sub
        If Me.ActiveControl IsNot tpSignOffSent Then Exit Sub
        tpSignOffSent_By.Text = User
        tpSignOffSent_Date.Value = Now
        UpdateProductionStatus()
    End Sub

    Private Sub tpCellarComp_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tpCellarComp.CheckedChanged
        If Me.ActiveControl Is Nothing Then Exit Sub
        If Me.ActiveControl IsNot tpCellarComp Then Exit Sub
        tpCellarComp_by.Text = User
        tpCellarComp_date.Value = Now
        UpdateProductionStatus()
    End Sub

    Private Sub bProdUserPast_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bProdUserPast.Click
        If EditMode = "Edit" Or EditMode = "Add" Then
            MsgBox("Can Not be in edit mode to use this function", MsgBoxStyle.Information, "Edit Mode?")
            Exit Sub
        End If
        Dim onSerial As Long
        Dim cmd As New SqlCommand("", cnn)
        If lProdUser.Tag = "0" Then
            cmd.CommandText = "select top 1 ord_prod_serial from ord_prod_hist where ord_prod_ord_serial=" + tOrd.Text + " and ord_prod_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " and ord_prod_type='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "' order by ord_prod_serial desc"
        Else
            cmd.CommandText = "select top 1 ord_prod_serial from ord_prod_hist where ord_prod_serial < " + lProdUser.Tag + " and ord_prod_ord_serial=" + tOrd.Text + " and ord_prod_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " and ord_prod_type='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "' order by ord_prod_serial desc"
        End If
        cnn.Open()
        onSerial = nz(cmd.ExecuteScalar, 0)
        cnn.Close()
        If onSerial > 0 Then
            LoadProduction(onSerial)
        Else
            Beep()
            'MsgBox("No More History", MsgBoxStyle.Information, "History?")
        End If
    End Sub

    Private Sub bProdUserFuture_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bProdUserFuture.Click
        If EditMode = "Edit" Or EditMode = "Add" Then
            MsgBox("Can Not be in edit mode to use this function", MsgBoxStyle.Information, "Edit Mode?")
            Exit Sub
        End If
        Dim onSerial As Long
        Dim cmd As New SqlCommand("", cnn)
        cmd.CommandText = "select top 1 ord_prod_serial from ord_prod_hist where ord_prod_serial > " + lProdUser.Tag + " and ord_prod_ord_serial=" + tOrd.Text + " and ord_prod_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " and ord_prod_type='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "' order by ord_prod_serial"
        cnn.Open()
        onSerial = nz(cmd.ExecuteScalar, 0)
        cnn.Close()
        If onSerial > 0 Then
            LoadProduction(onSerial)
        Else
            LoadProduction()
        End If

    End Sub

    Private Sub tpRoomNotReady_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tpRoomNotReady.CheckedChanged
        If Me.ActiveControl Is Nothing Then Exit Sub
        If Me.ActiveControl IsNot tpRoomNotReady Then Exit Sub
        tpRoomNotReady_By.Text = User
        tpRoomNotReady_Date.Value = Now
        UpdateProductionStatus()
    End Sub

    Private Sub tpRoomRevision_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tpRoomRevision.CheckedChanged
        If Me.ActiveControl Is Nothing Then Exit Sub
        If Me.ActiveControl IsNot tpRoomRevision Then Exit Sub
        tpRoomRevision_By.Text = User
        tpRoomRevision_Date.Value = Now
        UpdateProductionStatus()
    End Sub

    Private Sub tpWaitingSignoff_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tpWaitingSignoff.CheckedChanged
        If Me.ActiveControl Is Nothing Then Exit Sub
        If Me.ActiveControl IsNot tpWaitingSignoff Then Exit Sub
        tpWaitingSignoff_By.Text = User
        tpWaitingSignoff_Date.Value = Now
        UpdateProductionStatus()
    End Sub

    Private Sub tpSignoffRec_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tpSignoffRec.CheckedChanged
        If Me.ActiveControl Is Nothing Then Exit Sub
        If Me.ActiveControl IsNot tpSignoffRec Then Exit Sub
        tpSignoffRec_By.Text = User
        tpSignoffRec_Date.Value = Now
        UpdateProductionStatus()
    End Sub

    Private Sub tpAllClear_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tpAllClear.CheckedChanged
        If Me.ActiveControl Is Nothing Then Exit Sub
        If Me.ActiveControl IsNot tpAllClear Then Exit Sub
        tpAllClear_By.Text = User
        tpAllClear_Date.Value = Now
        UpdateProductionStatus()
    End Sub

    Private Sub tpDesignStart_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tpDesignStart.CheckedChanged
        If Me.ActiveControl Is Nothing Then Exit Sub
        If Me.ActiveControl IsNot tpDesignStart Then Exit Sub
        tpDesignStart_By.Text = User
        tpDesignStart_Date.Value = Now
        UpdateProductionStatus()
    End Sub

    Private Sub tpDesignComplete_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tpDesignComplete.CheckedChanged
        If Me.ActiveControl Is Nothing Then Exit Sub
        If Me.ActiveControl IsNot tpDesignComplete Then Exit Sub
        tpDesignComplete_By.Text = User
        tpDesignComplete_Date.Value = Now
        UpdateProductionStatus()
    End Sub

    Private Sub tpToFactory_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tpToFactory.CheckedChanged
        If Me.ActiveControl Is Nothing Then Exit Sub
        If Me.ActiveControl IsNot tpToFactory Then Exit Sub
        tpToFactory_By.Text = User
        tpToFactory_Date.Value = Now
        UpdateProductionStatus()
    End Sub
    Private Sub UpdateProductionStatus()
        If tpToFactory.Checked Then
            tpStatus.Text = "To Factory"
        ElseIf tpDesignComplete.Checked Then
            tpStatus.Text = "Rack Design Complete"
        ElseIf tpDesignStart.Checked Then
            tpStatus.Text = "Rack Design Started"
        ElseIf tpAllClear.Checked Then
            tpStatus.Text = "All Clear"
        ElseIf tpSignoffRec.Checked Then
            tpStatus.Text = "Signoff Received"
        ElseIf tpWaitingSignoff.Checked Then
            tpStatus.Text = "Waiting on Signoff"
        ElseIf tpRoomRevision.Checked Then
            tpStatus.Text = "Room in Revision"
        ElseIf tpRoomNotReady.Checked Then
            tpStatus.Text = "Room Not Ready"
        ElseIf tpSignOffSent.Checked Then
            tpStatus.Text = "Signoff Sent"
        Else
            tpStatus.Text = ""
        End If
    End Sub

    Private Sub pcDays_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles pcDays.Enter
        onControl = "pcDays"
    End Sub

    Private Sub pcDays_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles pcDays.Leave
        If IsNumeric(pcDays.Text) = False Then
            MsgBox("This must be a number", MsgBoxStyle.Information, "Number?")
            pcDays.Focus()
        End If

        DVGen(0).Item("ord_gen_pc_days") = CInt(pcDays.Text)
        If CInt(pcDays.Text) <> 0 Then
            Dim onDate As Date = AddProductionDays(Today, CInt(pcDays.Text))
            DVGen(0).Item("ord_gen_pc_date") = onDate
            pcDate.Value = onDate
        End If
    End Sub

    Private Sub pcDate_BeforeDropDown(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles pcDate.BeforeDropDown

    End Sub

    Private Sub pcDate_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles pcDate.Enter
        onControl = "pcDate"
    End Sub

    Private Sub pcDate_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles pcDate.Leave
        onControl = ""
    End Sub

    Private Sub pcDate_ValueChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles pcDate.ValueChanged
        If onControl = "pcDate" Then
            DVGen(0).Item("ord_gen_pc_date") = pcDate.Value
            DVGen(0).Item("ord_gen_pc_days") = DateDiff(DateInterval.Day, Today, pcDate.Value)
            DVGen(0).Item("ord_gen_pc_report") = True
            pcDays.Text = DateDiff(DateInterval.Day, Today, pcDate.Value)
            pcReport.Checked = True
        End If
    End Sub

    Private Sub tEstCompleteCalc_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tEstCompleteCalc.Leave
        If IsNumeric(tEstCompleteCalc.Text) Then
            tpEstComp.Value = DateAdd(DateInterval.Day, CInt(tEstCompleteCalc.Text), Today)
            If Weekday(tpEstComp.Value) = 6 Then tpEstComp.Value = DateAdd(DateInterval.Day, 3, tpEstComp.Value)
            If Weekday(tpEstComp.Value) = 7 Then tpEstComp.Value = DateAdd(DateInterval.Day, 2, tpEstComp.Value)
            If Weekday(tpEstComp.Value) = 1 Then tpEstComp.Value = DateAdd(DateInterval.Day, 1, tpEstComp.Value)
        End If
        tpEstComp.Focus()
        tpEstComp.SelectAll()
        tEstCompleteCalc.Text = ""
    End Sub

    Private Sub tpArt_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tpArt.Leave
        Dim rw As DataRow = DVOrdProd(0).Row
        If rw.HasVersion(DataRowVersion.Original) Then
            If nz(rw("ord_prod_art", DataRowVersion.Original), CDate("1/1/1900")) <> tpArt.Value Then
                tpArt_By.Text = User
                DVOrdProd(0).Item("ord_prod_art_by") = User
            End If
        Else
            If tpArt.Value > CDate("1/1/1900") Then
                tpArt_By.Text = User
                DVOrdProd(0).Item("ord_prod_art_by") = User
            End If
        End If
    End Sub

    Private Sub tpArt_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tpArt.ValueChanged

    End Sub

    Private Sub tpCommitted_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tpCommitted.Leave
        Dim rw As DataRow = DVOrdProd(0).Row
        If rw.HasVersion(DataRowVersion.Original) Then
            If nz(rw("ord_prod_committed", DataRowVersion.Original), CDate("1/1/1900")) <> tpCommitted.Value Then
                tpCommitted_By.Text = User
                DVOrdProd(0).Item("ord_prod_committed_by") = User
            End If
        Else
            If tpCommitted.Value > CDate("1/1/1900") Then
                tpCommitted_By.Text = User
                DVOrdProd(0).Item("ord_prod_committed_by") = User
            End If
        End If
    End Sub

    Private Sub tpCommitted_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tpCommitted.ValueChanged

    End Sub

    Private Sub tpSignStainDt_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles tpSignStainDt.Leave
        Dim rw As DataRow = DVOrdProd(0).Row
        If rw.HasVersion(DataRowVersion.Original) Then
            If nz(rw("ord_prod_sign_stain_dt", DataRowVersion.Original), CDate("1/1/1900")) <> tpSignStainDt.Value Then
                tpSignedStain_By.Text = User
                DVOrdProd(0).Item("ord_prod_sign_stain_by") = User
            End If
        Else
            If tpSignStainDt.Value > CDate("1/1/1900") Then
                tpSignedStain_By.Text = User
                DVOrdProd(0).Item("ord_prod_sign_stain_by") = User
            End If
        End If
    End Sub

    Private Sub tpOKBillEarly_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tpOKBillEarly.CheckedChanged
        If Me.ActiveControl Is tpOKBillEarly Then DVGen(0).Item("ord_gen_ok_to_bill_early") = tpOKBillEarly.Checked
    End Sub

    Private Sub cbPCASignOffSent_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cbPCASignOffSent.CheckedChanged
        If Me.ActiveControl Is cbPCASignOffSent Then
            DVGen(0).Item("ord_gen_pca_signoffsent") = cbPCASignOffSent.Checked
            If cbPCASignOffSent.Checked Then
                tPCASignOffSentBy.Text = User
                tPCASignOffSentDate.Text = Now
                DVGen(0).Item("ord_gen_pca_signoffsent_by") = User
                DVGen(0).Item("ord_gen_pca_signoffsent_date") = Now
            End If
        End If
    End Sub

    Private Sub cbPCAsignOffRec_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cbPCAsignOffRec.CheckedChanged
        If Me.ActiveControl Is cbPCAsignOffRec Then
            DVGen(0).Item("ord_gen_pca_signoffrec") = cbPCAsignOffRec.Checked
            If cbPCAsignOffRec.Checked Then
                tPCASignOffRecBy.Text = User
                tPCASignOffRecDate.Text = Now
                DVGen(0).Item("ord_gen_pca_signoffrec_by") = User
                DVGen(0).Item("ord_gen_pca_signoffrec_date") = Now
            End If
        End If
    End Sub

    Private Sub pcReport_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles pcReport.CheckedChanged
        If Me.ActiveControl Is pcReport Then DVGen(0).Item("ord_gen_pc_report") = pcReport.Checked
    End Sub

    Private Sub tDiagRec_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tDiagRec.CheckedChanged
        If Not Me.ActiveControl Is tDiagRec Then Exit Sub
        If tDiagRec.Checked Then
            tDiagRecBy.Text = User
            tDiagRecDate.Text = Now
            DVDiag(0).Item("diag_rec_by") = User
            DVDiag(0).Item("diag_rec_date") = Now
            DVDiag(0).Item("diag_status") = "RECEIVED"
        Else
            If nz(DVDiag(0).Item("diag_sent_date"), CDate("1/1/1900")) = CDate("1/1/1900") Then
                DVDiag(0).Item("diag_status") = "NOTSENT"
            Else
                DVDiag(0).Item("diag_status") = "SENT"
            End If
            tDiagAcc.Checked = False
            tDiagDen.Checked = False
            DVDiag(0).Item("diag_acc") = False
            DVDiag(0).Item("diag_den") = False
        End If
        DVDiag(0).Item("diag_rec") = tDiagRec.Checked
    End Sub

    Private Sub tDiagAcc_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tDiagAcc.CheckedChanged
        If Not Me.ActiveControl Is tDiagAcc Then Exit Sub
        If tDiagAcc.Checked Then
            tDiagAccBy.Text = User
            tDiagAccDate.Text = Now
            DVDiag(0).Item("diag_acc_by") = User
            DVDiag(0).Item("diag_acc_date") = Now
            DVDiag(0).Item("diag_status") = "ACCEPTED"
            tDiagDen.Checked = False
            DVDiag(0).Item("diag_den") = False
        Else
            If DVDiag(0).Item("diag_rec") = True Then
                DVDiag(0).Item("diag_status") = "RECEIVED"
            Else
                If nz(DVDiag(0).Item("diag_sent_date"), CDate("1/1/1900")) = CDate("1/1/1900") Then
                    DVDiag(0).Item("diag_status") = "NOTSENT"
                Else
                    DVDiag(0).Item("diag_status") = "SENT"
                End If
            End If
        End If
        DVDiag(0).Item("diag_acc") = tDiagAcc.Checked
    End Sub

    Private Sub tDiagDen_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tDiagDen.CheckedChanged
        If Not Me.ActiveControl Is tDiagDen Then Exit Sub
        If tDiagDen.Checked Then
            tDiagDenBy.Text = User
            tDiagDenDate.Text = Now
            DVDiag(0).Item("diag_den_by") = User
            DVDiag(0).Item("diag_den_date") = Now
            DVDiag(0).Item("diag_status") = "DENIED"
            tDiagAcc.Checked = False
            DVDiag(0).Item("diag_acc") = False
        Else
            If DVDiag(0).Item("diag_rec") = True Then
                DVDiag(0).Item("diag_status") = "RECEIVED"
            Else
                If nz(DVDiag(0).Item("diag_sent_date"), CDate("1/1/1900")) = CDate("1/1/1900") Then
                    DVDiag(0).Item("diag_status") = "NOTSENT"
                Else
                    DVDiag(0).Item("diag_status") = "SENT"
                End If
            End If
        End If
        DVDiag(0).Item("diag_den") = tDiagDen.Checked
    End Sub

    Private Sub tDiagEmail_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles tDiagEmail.TextChanged
        DVDiag(0).Item("diag_email") = tDiagEmail.Text
    End Sub
    Private Sub tDiagNextSend_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles tDiagNextSend.TextChanged
        If IsDate(tDiagNextSend.Text) Then DVDiag(0).Item("diag_next_send") = CDate(tDiagNextSend.Text)
    End Sub
    Private Sub tDiagAccNote_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles tDiagAccNote.TextChanged
        DVDiag(0).Item("diag_acc_note") = Replace(tDiagAccNote.Text, "'", "''")
    End Sub
    Private Sub tDiagDenNote_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles tDiagDenNote.TextChanged
        DVDiag(0).Item("diag_den_note") = Replace(tDiagDenNote.Text, "'", "''")
    End Sub

    Private Sub tDiagESoldTo_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tDiagESoldTo.CheckedChanged
        If Not Me.ActiveControl Is tDiagESoldTo Then Exit Sub
        DVDiag(0).Item("diag_email_soldto") = tDiagESoldTo.Checked
    End Sub

    Private Sub tDiagEShipTo_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tDiagEShipTo.CheckedChanged
        If Not Me.ActiveControl Is tDiagEShipTo Then Exit Sub
        DVDiag(0).Item("diag_email_shipto") = tDiagEShipTo.Checked
    End Sub

    Private Sub tDiagEOSR_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tDiagEOSR.CheckedChanged
        If Not Me.ActiveControl Is tDiagEOSR Then Exit Sub
        DVDiag(0).Item("diag_email_osr") = tDiagEOSR.Checked
    End Sub
    Private Sub tDiagEISR_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tDiagEISR.CheckedChanged
        If Not Me.ActiveControl Is tDiagEISR Then Exit Sub
        DVDiag(0).Item("diag_email_isr") = tDiagEISR.Checked
    End Sub

    Private Sub tSold_Name_BeforeDropDown(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles tSold_Name.BeforeDropDown
        If tSoldCustId.Text <> "" Then
            LoadDD(tSold_Name, dsContacts, "cust_cont", "cust_cont_name", "cust_cont_name", "cust_cont_name,cust_cont_type,cust_cont_email,cust_cont_alt_sold_to", "cust_cont_cust_serial=" + CStr(tCustId.Value))
        End If
    End Sub

    Private Sub tSold_Name_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles tSold_Name.Enter
        onControl = "tSold_Name"
    End Sub
    Private Sub tSold_Name_ValueChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles tSold_Name.ValueChanged
        If onControl = "tSold_Name" Then
            If Not tSold_Name.ActiveRow Is Nothing Then
                If nz(tSold_Name.ActiveRow.Cells("cust_cont_email").Text) <> "" Then tsold_email.Text = tSold_Name.ActiveRow.Cells("cust_cont_email").Text
                If nz(tSold_Name.ActiveRow.Cells("cust_cont_alt_sold_to").Text) <> "" Then tsold_company.Text = tSold_Name.ActiveRow.Cells("cust_cont_alt_sold_to").Text
            End If
        End If
    End Sub

    Private Sub ddDesignStatus_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddDesignStatus.Leave
        onControl = ""
    End Sub

    Private Sub ddDesignStatus_ValueChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddDesignStatus.ValueChanged
        If onControl = "ddDesignStatus" Then
            If ddDesignStatus.Text = "DESIGN COMPLETE" And onDesStatus <> "DESIGN COMPLETE" Then
                MsgBox("You may not change the status to DESIGN COMPLETE", MsgBoxStyle.Information, "Status?")
                ddDesignStatus.Text = onDesStatus
                ddDesignStatus.Focus()
            End If
            If onDesStatus = "CHECKING STARTED" And ddDesignStatus.Text = "START CHECKING" Then
                'DVGen(0).Item("ord_gen_start_checking") = CDate("1/1/1900")
            End If
        End If
    End Sub

    Private Sub ShowDiagNote(ByVal sender As Object, ByVal e As EventArgs)
        Dim tb As Infragistics.Win.UltraWinEditors.UltraTextEditor = sender
        MsgBox(tb.Text, MsgBoxStyle.OkOnly, "Note")
    End Sub

    Private Sub pContacts_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles pContacts.Click
        ShowContacts()
    End Sub

    Private Sub tDefLacq_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles tDefLacq.InitializeLayout

    End Sub

    Private Sub tDefLacq_ValueChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles tDefLacq.ValueChanged
        If Me.ActiveControl Is Nothing Then Exit Sub
        If Me.ActiveControl.Name Is "tDefLacq" Then
            DVGen(0).Item("ord_gen_def_lacq3") = tDefLacq.Value

            If Grid1.Rows.Count = 0 Then Exit Sub
            Dim rw As Infragistics.Win.UltraWinGrid.UltraGridRow

            For Each rw In Grid1.Rows
                If rw.Selected = True Or Grid1.Selected.Rows.Count <= 1 Then
                    If rw.Cells("ord_itm_lacq_bottles").Value + rw.Cells("ord_itm_lacq_bottles_add").Value > 0 Then
                        rw.Cells("ord_itm_lacq3").Value = tDefLacq.Value
                    End If
                End If
            Next

            BindingContext(DVItems).EndCurrentEdit()
            UltraCalcManager1.DirtyAllFormulas()
            Grid1.DataBind()
            CheckLacquerLines()
            DoTotal()
        End If

    End Sub

    Private Sub tSold_Name_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles tSold_Name.InitializeLayout

    End Sub

    Private Sub tOrdContSerial_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tOrdContSerial.ValueChanged
        If tOrdContSerial.Text = "0" Or tOrdContSerial.Text = "" Then
            pContacts.Image = System.Drawing.Image.FromFile("\\10.0.0.245\jcom$\Icons\contacts-bw.png")
            pContRefresh.Image = System.Drawing.Image.FromFile("\\10.0.0.245\jcom$\Icons\refresh-bw.png")
            pContJump.Image = System.Drawing.Image.FromFile("\\10.0.0.245\jcom$\Icons\jump-bw.png")
        Else
            pContacts.Image = System.Drawing.Image.FromFile("\\10.0.0.245\jcom$\Icons\contacts.png")
            pContRefresh.Image = System.Drawing.Image.FromFile("\\10.0.0.245\jcom$\Icons\refresh.png")
            pContJump.Image = System.Drawing.Image.FromFile("\\10.0.0.245\jcom$\Icons\jump.png")

        End If
    End Sub

    Private Sub pContRefresh_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles pContRefresh.Click
        LoadContact()
    End Sub

    Private Sub pContJump_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles pContJump.Click
        If tOrdContSerial.Text = "" Or tOrdContSerial.Text = "0" Then Exit Sub

        Dim fm As fmContacts
        fm = LoadForm("Contacts")
        fm.KeyValue1 = tOrdContSerial.Text
        LoadFields(fm)
        fm.LoadNotes()
        fm.LoadSourceCodes()
        EditButtons("Idle")
    End Sub

    Private Sub tpKitDown_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tpKitDown.CheckedChanged
        If Me.ActiveControl Is Nothing Then Exit Sub
        If Me.ActiveControl IsNot tpKitDown Then Exit Sub
        tpKitDown_by.Text = User
        tpKitDown_date.Value = Now
    End Sub

    Private Sub tpFactComp_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tpFactComp.CheckedChanged
        If Me.ActiveControl Is Nothing Then Exit Sub
        If Me.ActiveControl IsNot tpFactComp Then Exit Sub
        tpFactComp_By.Text = User
        tpFactComp_Date.Value = Now
    End Sub

    'Private Sub tpCDRDown_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tpCDRDown.CheckedChanged
    '    If Me.ActiveControl Is Nothing Then Exit Sub
    '    If Me.ActiveControl IsNot tpCDRDown Then Exit Sub
    '    tpCDRDown_by.Text = User
    '    tpCDRDown_date.Value = Now
    'End Sub

    Private Sub MenuItem20_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem20.Click
        If SecLevel < jEdit Then
            MsgBox("You do not have EDIT permision on this screen.", MsgBoxStyle.Critical, "Permission?")
            Exit Sub
        End If
        If Mid(Tab1.ActiveTab.Key, 1, 1) = "C" Then
            MsgBox("You must be on a Quote or Order to edit the Source Code", MsgBoxStyle.Information, "Quote/Order?")
            Exit Sub
        End If
        If Not IsNumeric(tOrd.Text) Then
            MsgBox("You must establish a quote number before you can use this function.", MsgBoxStyle.Information, "Quote Number?")
            Exit Sub
        End If
        If EditMode <> "" Then
            MsgBox("You can not be editing this quote to use this function.", MsgBoxStyle.Information, "Edit mode?")
            Exit Sub
        End If
        Dim fm As New fmEstOrdUpdateSourceCode
        fm.onOrd = CLng(tOrd.Text)
        fm.onRev = CInt(Mid(Tab1.ActiveTab.Key, 2))
        fm.onType = Mid(Tab1.ActiveTab.Key, 1, 1)
        fm.onSrcCode = tSource.Value
        fm.ShowDialog()
        LoadPage()
    End Sub

    Private Sub MenuItem21_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem21.Click
        Select Case Mid(Tab1.ActiveTab.Key, 1, 1)
            Case "Q", "O", "R"
                DisplayReport("Quote Landscape-Avail Margin", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_itm.ord_itm_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "'", True, 1, True)
            Case Else
                MsgBox("Please select a Quote, Order or Replacement first", MsgBoxStyle.Information, "Pick One")
        End Select

    End Sub




    Private Sub MenuItem22_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem22.Click
        Dim output = ""
        If TabItems.Tabs("UP").Visible Then
            If SaveUpsell() Then
                Dim cmd As New SqlCommand("select count(*) from ord_upsell where ord_upsell_ord_serial=" + tOrd.Text + " and ord_upsell_ord_rev=" + Mid(Tab1.ActiveTab.Key, 2) + " and ord_upsell_ord_type='Q'", cnn)
                Dim doit As Boolean

                cnn.Open()
                doit = nz(cmd.ExecuteScalar, 0) > 0
                cnn.Close()

                'DisplayReport("quote landscape with options", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_gen.ord_gen_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='Q'", True, 1, True, , False, False, , , Output)
                If doit Then
                    If output.Length > 4 Then output = PDFPath + tOrd.Text + " (" + tord_for.Text + ")\" + tOrd.Text + "-" + Mid(Tab1.ActiveTab.Key, 2) + " (" + tord_for.Text + ") QUOTE - UPGRADE OPTIONS.pdf"
                    If DVItems.Count > 0 Then DisplayReport("quote upsells", "{ord_upsell.ord_upsell_ord_serial} = " + tOrd.Text + " and {ord_upsell.ord_upsell_ord_type} = 'Q' and {ord_upsell.ord_upsell_ord_rev} = " + Mid(Tab1.ActiveTab.Key, 2), True, 1, , , , , , , output)
                End If
            End If
        End If
    End Sub


    Private Sub Button2_Click_3(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button2.Click
        If tDiagStatus.Text = "ACCEPTED" Or tDiagStatus.Text = "ACCEPTED" Then
            MsgBox("Cannot change an ACCEPTED or DENIED diagnostic", MsgBoxStyle.Exclamation)
            Exit Sub
        End If
        If MsgBox("Are you sure you want to Cancel this Diagnostic?", MsgBoxStyle.YesNo) = MsgBoxResult.Yes Then
            tDiagStatus.Text = "CANCELLED"
            DVDiag(0).Item("diag_status") = "CANCELLED"
        End If
    End Sub


    Private Sub MenuItem23_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem23.Click
        Select Case Mid(Tab1.ActiveTab.Key, 1, 1)
            Case "Q", "O", "R"
                DisplayReport("quote landscape no price packing list", "{ord_file.ord_serial} = " + tOrd.Text + " and {ord_itm.ord_itm_rev} = " + Mid(Tab1.ActiveTab.Key, 2) + " and {ord_gen.ord_gen_type}='" + Mid(Tab1.ActiveTab.Key, 1, 1) + "'", True, 1, False)
            Case Else
                MsgBox("Please select a Quote, Order or Replacement first", MsgBoxStyle.Information, "Pick One")
        End Select
    End Sub

    Private Sub tpCellarComp_Date_BeforeDropDown(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles tpCellarComp_date.BeforeDropDown
        If tpCellarComp_date.Value = CDate("1/1/1900") Then tpCellarComp_date.Value = Today
    End Sub

    Private Sub tpSignOffSent_Date_BeforeDropDown(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles tpSignOffSent_Date.BeforeDropDown
        If tpSignOffSent_Date.Value = CDate("1/1/1900") Then tpSignOffSent_Date.Value = Today
    End Sub

    Private Sub tpRoomNotReady_Date_BeforeDropDown(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles tpRoomNotReady_Date.BeforeDropDown
        If tpRoomNotReady_Date.Value = CDate("1/1/1900") Then tpRoomNotReady_Date.Value = Today
    End Sub

    Private Sub tpRoomRevision_Date_BeforeDropDown(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles tpRoomRevision_Date.BeforeDropDown
        If tpRoomRevision_Date.Value = CDate("1/1/1900") Then tpRoomRevision_Date.Value = Today
    End Sub

    Private Sub tpWaitingSignoff_Date_BeforeDropDown(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles tpWaitingSignoff_Date.BeforeDropDown
        If tpWaitingSignoff_Date.Value = CDate("1/1/1900") Then tpWaitingSignoff_Date.Value = Today
    End Sub

    Private Sub tpSignoffRec_Date_BeforeDropDown(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles tpSignoffRec_Date.BeforeDropDown
        If tpSignoffRec_Date.Value = CDate("1/1/1900") Then tpSignoffRec_Date.Value = Today
    End Sub

    Private Sub tpAllClear_Date_BeforeDropDown(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles tpAllClear_Date.BeforeDropDown
        If tpAllClear_Date.Value = CDate("1/1/1900") Then tpAllClear_Date.Value = Today
    End Sub

    Private Sub tpDesignStart_Date_BeforeDropDown(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles tpDesignStart_Date.BeforeDropDown
        If tpDesignStart_Date.Value = CDate("1/1/1900") Then tpDesignStart_Date.Value = Today
    End Sub

    Private Sub tpDesignComplete_Date_BeforeDropDown(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles tpDesignComplete_Date.BeforeDropDown
        If tpDesignComplete_Date.Value = CDate("1/1/1900") Then tpDesignComplete_Date.Value = Today
    End Sub

    Private Sub tpToFactory_Date_BeforeDropDown(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles tpToFactory_Date.BeforeDropDown
        If tpToFactory_Date.Value = CDate("1/1/1900") Then tpToFactory_Date.Value = Today
    End Sub

    Private Sub tpKitDown_date_BeforeDropDown(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles tpKitDown_date.BeforeDropDown
        If tpKitDown_date.Value = CDate("1/1/1900") Then tpKitDown_date.Value = Today
    End Sub

    Private Sub tpCDRDown_date_BeforeDropDown(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles tpCDRDown_date.BeforeDropDown
        If tpCDRDown_date.Value = CDate("1/1/1900") Then tpCDRDown_date.Value = Today
    End Sub

    Private Sub tpEstComp_BeforeDropDown(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles tpEstComp.BeforeDropDown
        If tpEstComp.Value = CDate("1/1/1900") Then tpEstComp.Value = Today
    End Sub

    Private Sub tpArt_BeforeDropDown(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles tpArt.BeforeDropDown
        If tpArt.Value = CDate("1/1/1900") Then tpArt.Value = Today
    End Sub

    Private Sub tpCommitted_BeforeDropDown(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles tpCommitted.BeforeDropDown
        If tpCommitted.Value = CDate("1/1/1900") Then tpCommitted.Value = Today
    End Sub

    Private Sub tpMustShip_BeforeDropDown(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles tpMustShip.BeforeDropDown
        If tpMustShip.Value = CDate("1/1/1900") Then tpMustShip.Value = Today
    End Sub

    Private Sub tInstallerDate_BeforeDropDown(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles tInstallerDate.BeforeDropDown
        If tInstallerDate.Value = CDate("1/1/1900") Then tInstallerDate.Value = Today
    End Sub

    Private Sub tpFactComp_Date_BeforeDropDown(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles tpFactComp_Date.BeforeDropDown
        If tpFactComp_Date.Value = CDate("1/1/1900") Then tpFactComp_Date.Value = Today
    End Sub

    Private Sub tpSignStainDt_BeforeDropDown(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles tpSignStainDt.BeforeDropDown
        If tpSignStainDt.Value = CDate("1/1/1900") Then tpSignStainDt.Value = Today
    End Sub

    Private Sub tFieldConsultant_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles tFieldConsultant.InitializeLayout
        e.Layout.Bands(0).Columns(0).Hidden = True
        e.Layout.Bands(0).Columns(1).Header.Caption = "Consultant"
        e.Layout.Bands(0).Columns(1).Width = 150
    End Sub

    Private Sub MenuItem24_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem24.Click
        Try
            Dim cmd As New SqlClient.SqlCommand("", cnn)
            Dim da As New SqlDataAdapter(cmd)
            Dim dt As New DataTable
            If tOrd.Text = "" Then
                MsgBox("Need to load an open order.")
                Exit Sub
            End If

            If MsgBox("This will create an Email of all OPEN Orders with a balance due." + vbCrLf + "Do you want to continue?", MsgBoxStyle.YesNo) = MsgBoxResult.No Then Exit Sub


            cmd.CommandText = "select * from ord_gen where ord_gen_ord_serial=@order and ord_gen_type=@type and ord_gen_balance<>0 and ord_gen_status<>'canceled'"
            cmd.Parameters.Clear()
            cmd.Parameters.Add(New SqlParameter("@order", tOrd.Text))
            cmd.Parameters.Add(New SqlParameter("@type", "O"))
            cnn.Open()
            da.Fill(dt)
            If dt.Rows.Count = 0 Then
                MsgBox("There are no open orders with a balance due on this order.")
                Exit Sub
            End If

            Dim existingrecords As String = ""

            cmd.CommandText = "select cc_pay_serial from ord_cc_portal_payment where cc_pay_ord_serial=@order and cc_pay_processed=0"
            cmd.Parameters.Clear()
            cmd.Parameters.Add(New SqlParameter("@order", tOrd.Text))
            dt.Clear()
            da.Fill(dt)
            If dt.Rows.Count > 0 Then
                existingrecords = "Payment "
            End If

            cmd.CommandText = "select cc_serial_shipto from ord_cc_portal_shipto where cc_ord_serial=@order and cc_ship_processed=0"
            cmd.Parameters.Clear()
            cmd.Parameters.Add(New SqlParameter("@order", tOrd.Text))
            dt.Clear()
            da.Fill(dt)
            If dt.Rows.Count > 0 Then
                existingrecords += "Ship "
            End If

            cmd.CommandText = "select cc_serial_soldto from ord_cc_portal_soldto where cc_ord_serial=@order and cc_processed=0"
            cmd.Parameters.Clear()
            cmd.Parameters.Add(New SqlParameter("@order", tOrd.Text))
            dt.Clear()
            da.Fill(dt)
            If dt.Rows.Count > 0 Then
                existingrecords += "Sold"
            End If
            cnn.Close()

            If existingrecords <> "" Then
                If MsgBox("There are submitted records for this Order that have not been processed yet. Do you want to continue?", MsgBoxStyle.YesNo) = MsgBoxResult.No Then Exit Sub
            End If

            cnn.Open()
            If tsold_email.Text = "" Then
                MsgBox("Need to fill in Sold To email")
                Exit Sub
            End If
            Dim RandomClass As New Random()
            Dim RandomNumber As Integer

            Dim go = False
            'Dim oMailMsg As MailMessage
            'Dim avHTMLBody As AlternateView
            'Dim oSMtPClient As SmtpClient
            Dim sHTMLBody As String = ""
            Dim mailx As Outlook.MailItem
            Dim app As New Outlook.Application
            dt.Clear()


            cmd.CommandText = "Select ord_gen_serial,dbo.ord_gen.ord_gen_ord_serial, dbo.ord_gen.ord_gen_rev, dbo.ord_gen.ord_gen_from_rev, dbo.ord_gen.ord_gen_balance, dbo.ord_gen.ord_gen_status " + _
                             "FROM ord_gen INNER JOIN " + _
                             "dbo.ord_file ON dbo.ord_gen.ord_gen_ord_serial = dbo.ord_file.ord_serial " + _
                             "WHERE (dbo.ord_gen.ord_gen_balance <> 0) AND (dbo.ord_gen.ord_gen_status <> 'CLOSED') AND (dbo.ord_gen.ord_gen_status <> 'Canceled') AND " + _
                             "(dbo.ord_gen.ord_gen_type = 'O') and ord_gen_ord_serial=" + tOrd.Text
            da.Fill(dt)
            Dim rw As DataRow
            Dim str As String
            Dim str2 As String = ""
            Dim cc As Integer = 0
            For Each rw In dt.Rows
                str += "<b>" + rw("ord_gen_ord_serial").ToString + "-" + rw("ord_gen_from_rev").ToString + "-" + rw("ord_gen_rev").ToString + "</b><br>"
                str2 += rw("ord_gen_ord_serial").ToString + "-" + rw("ord_gen_from_rev").ToString + "-" + rw("ord_gen_rev").ToString + ","
                cc += 1
                Try
                    cmd.CommandText = "insert into ord_note (ord_note_ord_gen_serial,ord_note,ord_note_user,ord_note_date,ord_note_type) values (" + rw("ord_gen_serial").ToString + ",'Credit Card Portal - email link created.','Admin','" + CStr(Now()) + "','Note')"
                    cmd.ExecuteNonQuery()
                Catch
                    DoError(Err, Me)
                End Try
            Next
            If EditMode <> "" Then
                'MsgBox("You may not be in edit mode when adding a note.", MsgBoxStyle.Information, "Edit Mode")
                'Exit Sub
            Else
                LoadNotes()
            End If
            str2 = Mid(str2, 1, str2.Length - 1)
            Try
                cmd.CommandText = "Select ord_cc_random from ord_file where ord_serial=" + tOrd.Text
                RandomNumber = nz2(cmd.ExecuteScalar, 0)
                If RandomNumber = 0 Then
                    Do Until go = True
                        RandomNumber = RandomClass.Next(1, 50000)
                        cmd.CommandText = "Select ord_cc_random from ord_file where ord_cc_random =" + RandomNumber.ToString
                        Dim rr = nz2(cmd.ExecuteScalar, 0)
                        If rr = 0 Then
                            cmd.CommandText = "update ord_file set ord_cc_random=" + RandomNumber.ToString + ", ord_cc_open_orders='" + str2 + "' where ord_serial=" + tOrd.Text
                            cmd.ExecuteNonQuery()
                            go = True
                        End If
                    Loop
                Else
                    cmd.CommandText = "update ord_file set ord_cc_open_orders='" + str2 + "' where ord_serial=" + tOrd.Text
                    cmd.ExecuteNonQuery()
                End If
            Catch
                MsgBox(Err.Description)
                Exit Sub
            Finally
                cnn.Close()
            End Try

            Try
                mailx = app.CreateItem(Outlook.OlItemType.olMailItem)
                mailx.To = tsold_email.Text
                'mailx.BCC = "dwitsken@zoomtown.com"
                mailx.Subject = "Wine Cellar Innovations - Order Processing Portal - #" + tOrd.Text
                mailx.BodyFormat = Outlook.OlBodyFormat.olFormatHTML
                sHTMLBody = ""
                'http://localhost:50344/fmMain.aspx  http://remote.winecellarinnovations.com/orderreview/
                sHTMLBody = "<body style='font-family: Arial, Helvetica, sans-serif; font-size: 10pt' topmargin=0 leftmargin=0>"
                sHTMLBody += "<img src='http://remote.winecellarinnovations.com/portal/images/header3.bmp'><br><br>"
                sHTMLBody += "The below link will take you to the WCI Order Payment Processing/Address Verification portal. <br>"
                Dim rn As String = HttpUtility.UrlEncode(JEncrypt(RandomNumber).ToString)

                sHTMLBody += "<a href=""http://remote.winecellarinnovations.com/orderconfirm/Default.aspx?autoNum=" & rn & """>Click here</a><br><br>"
                sHTMLBody += "Copy and paste the below Order number to access your Order information<br><b>" + tOrd.Text + "</b>"
                If cc > 1 Then
                    sHTMLBody += "<br><br>Below are your Open Orders.<br>"
                    sHTMLBody += str
                End If
                sHTMLBody += "<br><br><br>"


                sHTMLBody += "<P>Wine Cellar Innovations<BR>4575 Eastern Avenue<BR>Cincinnati, OH 45226<BR>800.229.9813<BR>513.321.3733</P><DIV>Visit us online : <A href='http://www.winecellarinnovations.com'>http://www.winecellarinnovations.com</A><br>"
                sHTMLBody += "</body>"
                mailx.HTMLBody = sHTMLBody
                mailx.Display()

                'If ListPDF.Items.Count > 0 Then
                '    Dim cl As String = "C:\Program Files\Internet Explorer\IEXPLORE.EXE " + IO.Path.GetDirectoryName(PDFPath + ListPDF.Items.Item(0))
                '    Shell(cl, AppWinStyle.NormalFocus)
                'Else
                CheckPrimaryDirectory()
                Dim cl As String = "C:\Program Files\Internet Explorer\IEXPLORE.EXE " + PDFPath + tOrd.Text + " (" + tord_for.Text + ")"
                Shell(cl, AppWinStyle.NormalFocus)
                'End If


            Catch
                MsgBox("Unable to create email. You must have Outlook installed.")
            End Try
        Catch
            MsgBox(Err.Description)
        Finally
            cnn.Close()
        End Try


    End Sub

    Public Shared Function JEncrypt(ByVal plainText As String, Optional ByVal saltValue As String = "Jcom39201") As String
        Try
            Dim passPhrase As String = "wineCellar5"
            Dim hashAlgorithm As String = "MD5"
            Dim passwordIterations As Integer = 2
            Dim initVector As String = "jaS9#jif0wqczloS"
            Dim keySize As Integer = 256


            ' Convert strings into byte arrays.
            ' Let us assume that strings only contain ASCII codes.
            ' If strings include Unicode characters, use Unicode, UTF7, or UTF8 
            ' encoding.
            Dim initVectorBytes As Byte()
            initVectorBytes = Encoding.ASCII.GetBytes(initVector)

            Dim saltValueBytes As Byte()
            saltValueBytes = Encoding.ASCII.GetBytes(saltValue)

            ' Convert our plaintext into a byte array.
            ' Let us assume that plaintext contains UTF8-encoded characters.
            Dim plainTextBytes As Byte()
            plainTextBytes = Encoding.UTF8.GetBytes(plainText)

            ' First, we must create a password, from which the key will be derived.
            ' This password will be generated from the specified passphrase and 
            ' salt value. The password will be created using the specified hash 
            ' algorithm. Password creation can be done in several iterations.
            Dim password As PasswordDeriveBytes
            password = New PasswordDeriveBytes(passPhrase, _
                                               saltValueBytes, _
                                               hashAlgorithm, _
                                               passwordIterations)

            ' Use the password to generate pseudo-random bytes for the encryption
            ' key. Specify the size of the key in bytes (instead of bits).
            Dim keyBytes As Byte()
            keyBytes = password.GetBytes(keySize / 8)

            ' Create uninitialized Rijndael encryption object.
            Dim symmetricKey As RijndaelManaged
            symmetricKey = New RijndaelManaged()

            ' It is reasonable to set encryption mode to Cipher Block Chaining
            ' (CBC). Use default options for other symmetric key parameters.
            symmetricKey.Mode = CipherMode.CBC

            ' Generate encryptor from the existing key bytes and initialization 
            ' vector. Key size will be defined based on the number of the key 
            ' bytes.
            Dim encryptor As ICryptoTransform
            encryptor = symmetricKey.CreateEncryptor(keyBytes, initVectorBytes)

            ' Define memory stream which will be used to hold encrypted data.
            Dim memoryStream As IO.MemoryStream
            memoryStream = New IO.MemoryStream()

            ' Define cryptographic stream (always use Write mode for encryption).
            Dim cryptoStream As CryptoStream
            cryptoStream = New CryptoStream(memoryStream, _
                                            encryptor, _
                                            CryptoStreamMode.Write)
            ' Start encrypting.
            cryptoStream.Write(plainTextBytes, 0, plainTextBytes.Length)

            ' Finish encrypting.
            cryptoStream.FlushFinalBlock()

            ' Convert our encrypted data from a memory stream into a byte array.
            Dim cipherTextBytes As Byte()
            cipherTextBytes = memoryStream.ToArray()

            ' Close both streams.
            memoryStream.Close()
            cryptoStream.Close()

            ' Convert encrypted data into a base64-encoded string.
            Dim cipherText As String
            cipherText = Convert.ToBase64String(cipherTextBytes)

            ' Return encrypted string.
            JEncrypt = cipherText
        Catch
            JEncrypt = ""
        End Try
    End Function



    Private Sub Button3_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button3.Click
        Dim fm As New fmDesignerCheckoff
        Dim tt = Tab1.ActiveTab.Text
        tt = Trim(Replace(tt, "Quote", ""))
        fm.tQuote.Text = tOrd.Text + "-" + tt
        fm.ComboBox1.Text = Me.Label8.Text
        fm.ShowDialog()

    End Sub

    Private Sub tFloating_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tFloating.ValueChanged
        If Me.ActiveControl Is tFloating Then
            DVGen.Item(0)("ord_gen_floating") = tFloating.Value
        End If
        '   DVGen.Item(0)("ord_gen_floating") = tFloating.Value
        '  BindingContext(DVGen).EndCurrentEdit()
    End Sub


    Private Sub tOutside_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tOutside.ValueChanged
        If Me.ActiveControl Is tOutside Then
            DVGen.Item(0)("ord_gen_outside") = tOutside.Value
        End If
        '    DVGen.Item(0)("ord_gen_outside") = tOutside.Value
        '    BindingContext(DVGen).EndCurrentEdit()
    End Sub

    Private Sub tInside_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tInside.ValueChanged
        If Me.ActiveControl Is tInside Then
            DVGen.Item(0)("ord_gen_inside") = tInside.Value
        End If
        '    DVGen.Item(0)("ord_gen_inside") = tInside.Value
        '    BindingContext(DVGen).EndCurrentEdit()
    End Sub

    Private Sub tGenMaterial_InitializeLayout(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs) Handles tGenMaterial.InitializeLayout

    End Sub


End Class
